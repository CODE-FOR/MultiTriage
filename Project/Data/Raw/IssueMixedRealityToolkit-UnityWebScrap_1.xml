<Issues>
  <Issue>
    <IssueID>8587</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>8587</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Oculus Package integration tool does not initialize prefabs properly and doesn't give helpful log messages</Title>
    <CreatedDate>17/09/2020</CreatedDate>
    <ClosedDate>21/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8587</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>8587</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When configuring the MRTK for the Oculus Quest, the Oculus Package integration tool does not initialize prefabs properly and doesn't give helpful log messages. This causes anything the MRTK built for the Oculus Quest to have a stationary viewpoint on the device.

## To reproduce

Steps to reproduce the behavior:

1. Follow the steps on the [Configure MRTK for Oculus Quest]( page to add the Oculus Quest to the project.
2. Build and deploy any MRTK example scene.
3. Attempt to look around the example scene.


## Expected behavior

When the Oculus Package integration tool fails, it should generate helpful log messages to notify the user of the issue.


## Your setup (please complete the following information)

- MRTK Version 2.5.0-20200912.1

## Target platform (please complete the following information)

- Oculus Quest
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>8578</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MaxWang-MS</FixedById>
        <IssueID>8578</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK Example Hub - " On Focus"Tooltip not appearing at correct scale</Title>
    <CreatedDate>16/09/2020</CreatedDate>
    <ClosedDate>25/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8578</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
The Examples Hub Tooltip scene tooltip that appears in the Show on Focus example is too small and not legible.

![image](


## To reproduce

1. Import MRTK 2.5
2. Import MRTExampleHub package
3. Open the MRTKExamplesHub Scene
4. Run the Tooltip Scene in the editor
5. Focus on the green polygon

## Expected behavior

Tooltip should appear and be legible when green polygon is in focus


## Your setup (please complete the following information)

- Unity Version 2019.4.10.f1
- MRTK Version 2.5

</Description>
  </Issue>
  <Issue>
    <IssueID>8574</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MaxWang-MS</FixedById>
        <IssueID>8574</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Need to ensure asmdefs are correctly set up for 2019 before packing for UPM</Title>
    <CreatedDate>16/09/2020</CreatedDate>
    <ClosedDate>28/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8574</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Package Management - UPM</Name>
        <IssueID>8574</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>8574</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

If the asmdefs aren't correctly set up for Unity 2019 before packing for UPM, the auto-config-checkers attempt to edit immutable assets and fail:

``

This prevents references and asmdef-specific compilation defines from being set, preventing certain code from properly running.

## To reproduce

Steps to reproduce the behavior:

1. [Import MRTK via UPM](
2. Watch the console

## Tracking

- [x] XRSDK (#8591)
- [x] WMR XRSDK (#8591)
- [x] Oculus (#8655)
- [x] Leap (#8697)
- [x] UnityAR (#8667)</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>8574</IssueID>
        <PullRequestID>8591</PullRequestID>
        <Title>Update some asmdefs to Unity 2019 version for UPM packaging</Title>
        <Description>## Overview
Currently amdefs are checked in at Unity 2018 version. This creates problems for UPM packaging because those packages are consumed in Unity 2019, which will lead to some automated asmdef configurator to try to modify certain content (i.e. ver. 2018 asmefs) of the supposedly immutable the package. To solve the problem, we are now checking in ver. 2019 asmdefs. Those files are backward compatible until Unity 2018.4.13f1, beyond which the user must manually perform a few straight forward steps to make them compatible. Documentations will be added in this PR to show the change. Some automatic configurator are therefore removed.

Note: Users on Unity versions earlier than 2018.4.13f1 must revert the changes made to asmdefs when upgrading to Unity 2019, which will also be mentioned in the docs.

## Changes
- Fixes: #8574.</Description>
        <CreatedDate>17/09/2020</CreatedDate>
        <ClosedDate>22/09/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>BREAKING CHANGE</Name>
            <IssueID>8574</IssueID>
            <PullRequestID>8591</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Bug</Name>
            <IssueID>8574</IssueID>
            <PullRequestID>8591</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>8574</IssueID>
        <PullRequestID>8667</PullRequestID>
        <Title>Update UnityAR asmdef</Title>
        <Description>## Overview

Updates the UnityAR asmdef for Unity 2019, so the configuration checker doesn't have to edit an immutable file.

## Changes
- Part of #8574, follow-up to #8591 and #8655
</Description>
        <CreatedDate>24/09/2020</CreatedDate>
        <ClosedDate>24/09/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>AR Foundation</Name>
            <IssueID>8574</IssueID>
            <PullRequestID>8667</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Package Management - UPM</Name>
            <IssueID>8574</IssueID>
            <PullRequestID>8667</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Unity 2019</Name>
            <IssueID>8574</IssueID>
            <PullRequestID>8667</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>8667</PullRequestID>
            <IssueID>8574</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>8568</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MaxWang-MS</FixedById>
        <IssueID>8568</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>"Failed to Create Boundary Bounds" Warning when playing in editor using default MRTK Profile</Title>
    <CreatedDate>15/09/2020</CreatedDate>
    <ClosedDate>17/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8568</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>8568</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
MRTK was unable to set Tracking Space to RoomScaleUnityEngine.Debug:LogWarning(Object)
Microsoft.MixedReality.Toolkit.Boundary.MixedRealityBoundarySystem:SetTrackingSpace() (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/Services/BoundarySystem/XR2018/MixedRealityBoundarySystem.cs:98)
Microsoft.MixedReality.Toolkit.Boundary.BaseBoundarySystem:Initialize() (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/Core/Services/BaseBoundarySystem.cs:67)


and


Failed to calculate boundary bounds.
UnityEngine.Debug:LogWarning(Object)
Microsoft.MixedReality.Toolkit.Boundary.BaseBoundarySystem:CalculateBoundaryBounds() (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/Core/Services/BaseBoundarySystem.cs:929)
Microsoft.MixedReality.Toolkit.Boundary.BaseBoundarySystem:Initialize() (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/Core/Services/BaseBoundarySystem.cs
`</Code>
    <Description>## Describe the bug

See title.

## To reproduce

1. Create a new Scene
2. MRTK -&gt; Add to scene and configure
3. Hit play
4. See warnings:

``
## Expected behavior

No warnings when playing an empty scene with default MRTK profile

## Your setup (please complete the following information)

- Unity Version 2019.4.10f1
- MRTK Version 2.5

## Target platform (please complete the following information)
Tested in editor on Mac, with following player config, but should repro on windows, with other vr configs as well:

![image](



</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>8568</IssueID>
        <PullRequestID>8255</PullRequestID>
        <Title>Split boundary system fixes from #8050</Title>
        <Description>This change separates the boundary system fixes from the change profile PR (#8050). The issue that is being fixed is unrelated and was originally included there to allow a profile change test case to run correctly.

The changes made are:

* Add a ReadProfile method to BaseBoundarySystem.cs
  * Check for a null profile in ReadProfile
  * Call ReadProfile at the top of Initialize to ensure that the profile is always read before any decisions are made (THIS was the bug that broke the profile change test)
* Ensure that the base.Initialize() method is always called in MixedRealityBoundarySystem.cs (this was a contributing factor the the bug)</Description>
        <CreatedDate>04/08/2020</CreatedDate>
        <ClosedDate>05/08/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Boundaries</Name>
            <IssueID>8568</IssueID>
            <PullRequestID>8255</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>davidkline-ms</FixedById>
            <PullRequestID>8255</PullRequestID>
            <IssueID>8568</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>8567</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hand Interaction Examples displays generic message above the piano keys</Title>
    <CreatedDate>15/09/2020</CreatedDate>
    <ClosedDate>28/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8567</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Example/Test Scene</Name>
        <IssueID>8567</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When you load into the Hand Interaction Examples scene, the piano initializes with a generic message. The message says 'Debug Message'. Once you press a piano key, that message goes away and the expected messaging is displayed.

## To reproduce

Steps to reproduce the behavior:

1. Import all MRTK UPM packages
2. Import TMP Essentials
3. Open Hand Interaction Examples scene and build for HoloLens 2
4. Deploy to HoloLens 2
4. Look at the piano keys

## Expected behavior

The messaging in the scene should be meaningful and not generic.

## Screenshots


![Debug message](


## Your setup (please complete the following information)

- Unity Version 2019.4.10f1
- MRTK Version 2.5.0-preview.20200910.3

## Target platform (please complete the following information)

- Unity in-editor player
- HoloLens 2
- UWP
- Visual Studio 2019
   - Master
   - ARM64
   - Remote machine


</Description>
  </Issue>
  <Issue>
    <IssueID>8564</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Input simulation key info overlay improvement</Title>
    <CreatedDate>15/09/2020</CreatedDate>
    <ClosedDate>15/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8564</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Input simulation key info has been occupying too much screen space on regular DPI monitors and smaller window sizes.

## To reproduce
Open HandInteractionExample scene.
Press CTRL+H key to bring up key info

![2020-09-15 08_46_34-Unity 2018 4 26f1 Personal -  PREVIEW PACKAGES IN USE  - HandInteractionExamples](
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>8563</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Slate PanZoom example is panning vertically with horizontal hand movement</Title>
    <CreatedDate>15/09/2020</CreatedDate>
    <ClosedDate>15/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8563</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

On HandInteractionExampleScene, the pan-zoom slate pans vertically even if interaction is only by horizontal hand click and drag. This is a regression from 2.4

## Screenshots

![SlatePan](


## Your setup (please complete the following information)

- Unity Version [2019.3]
- MRTK Version 2.5 - .unitypackages

## Target platform (please complete the following information)

- Editor or XR Emulator

</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>8562</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add -development flag to StartCommandLineBuild</Title>
    <CreatedDate>15/09/2020</CreatedDate>
    <ClosedDate>23/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>8562</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

We use `StartCommandLineBuild` for automated builds on our server. We like to have non-release builds to run with the `development` mode flag on so that we can rely on pre-processors for a few switches. I doesn't look like there is an argument that can be passed in to set this build option.

## Describe the solution you'd like

I'd like to add a `-development` flag to the build command.

## Describe alternatives you've considered

I've looked into what sort of per-processors are available that might differentiate between `release` and `master` builds. We've used search &amp; replace tasks in our automated builds for some switches that we'd like between the two types of builds.

</Description>
  </Issue>
  <Issue>
    <IssueID>8560</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>8560</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Warning in HandInteractionExample scene: BoxColliders does not support negative scale or size</Title>
    <CreatedDate>15/09/2020</CreatedDate>
    <ClosedDate>15/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8560</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
"A 'BoxColliders does not support negative scale or size' warning is issued when playing the scene with the in-editor player. There are 7 warnings generated when the scene is started for "SceneContent/BoundingBoxExample/HoloLens1 Style/Platonic/rigRoot/corner_0/visualsScale/visuals" with the '../corner_0/..' incrementing by one up to '../corner_7/..' in the Unity console. You are still able to interact with the scene as expected."

Warning was discovered in the bounds control migration PR  

## To reproduce

Open Hand Interaction scene and observe platonic hololens 1 gameobject emiting warning once at the start of the scene.


## Expected behavior

example scenes shouldn't emit any warnings.
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>8555</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>8555</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Some rotation handles do not work in HandInteractionExamples</Title>
    <CreatedDate>15/09/2020</CreatedDate>
    <ClosedDate>23/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8555</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>8555</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Some rotation handles on certain GameObjects (i.e. the HL2 Platonic and coffee cup in the bounding box section) in the HandInteractionExamples scene are not working. When trying to use the horizontal rotation handle to rotate the GameObject around the x axis, the GameObject refuses to rotate around that axis. Further inspection showed that the rotation axis constraint script is causing this behavior.

Also related: different behaviors are observed when constraint on rotation is set to Nothing and None. Behavior of the horizontal rotation handle is correct when Nothing is used but wrong when None is used. Unity allows setting both None and x axis at the same time for the constraint, which could be a problem as well.

## To reproduce

1. Open HandInteractionExamples.unity
2. Press play
3. Try rotating the coffee cup in the bounding box section around x axis by moving the horizontal rotation handle
4. See error

## Expected behavior

The GameObject should be able to rotate around the x axis or the corresponding handles should not be shown.

## Your setup

- Unity Version 2019.4.8f1
- Latest MRTK UPM package</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>8555</IssueID>
        <PullRequestID>8190</PullRequestID>
        <Title>Add None to AxisFlags</Title>
        <Description>## Overview
Previously the AxisFlags Enum does not have a "None" member, but 0 is used as a "None" member in some part of the MRTK. While this does not seem to create problems when running relevant code in the Editor, @fast-slow-still reported that this may be a problem on Android builds.

## Changes
- Fixes: #7463.</Description>
        <CreatedDate>20/07/2020</CreatedDate>
        <ClosedDate>21/07/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Bug</Name>
            <IssueID>8555</IssueID>
            <PullRequestID>8190</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>MaxWang-MS</FixedById>
            <PullRequestID>8190</PullRequestID>
            <IssueID>8555</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>8553</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MaxWang-MS</FixedById>
        <IssueID>8553</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Unexpected behaviors of a TitleBar in the HandInteractionExamples scene</Title>
    <CreatedDate>15/09/2020</CreatedDate>
    <ClosedDate>24/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8553</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The "Grab to manipulate the entire scene" TitleBar has the following unexpected behaviors:
1. When clicking on the close button nothing happens (in editor, remoting and HL2)
2. When trying far and near interactions nothing happens (in remoting and HL2)

Note: When trying 1 or 2 on HL2 the frame rate dropped to around 40 fps.

## To reproduce

1. Open HandInteractionExamples.unity
2. Press play
3. Try clicking the close button on the bar
4. See error
5. Try far and near interactions with the bar
6. See error

## Expected behavior

The close button and far/near interactions with the title bar should work.

## Your setup

- Unity Version 2019.4.8f1
- Latest MRTK UPM package</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>8553</IssueID>
        <PullRequestID>8657</PullRequestID>
        <Title>Fix the titlebar in the HandInteractionExamples scene</Title>
        <Description>## Overview
This PR removes a non-working close button from the "Grab to manipulate the entire scene" TitleBar. Further more the world anchor is removed from SceneContent to enable grab titlebar manipulation in remoting mode and on HL2 device.

## Changes
- Fixes: #8553.</Description>
        <CreatedDate>23/09/2020</CreatedDate>
        <ClosedDate>24/09/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Bug</Name>
            <IssueID>8553</IssueID>
            <PullRequestID>8657</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>8550</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Bounding box in HandInteractionExamples shows warnings about negative scale or size.</Title>
    <CreatedDate>14/09/2020</CreatedDate>
    <ClosedDate>15/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8550</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

SceneContent/BoundingBoxExample/HoloLens1 Style/Platonic in the HandInteractionExamples scene causes 7 warnings when the scene is played. The warnings look like the following:

BoxColliders does not support negative scale or size.
The effective box size has been forced positive and is likely to give unexpected collision geometry.
If you absolutely need to use negative scaling you can use the convex MeshCollider. Scene hierarchy path "SceneContent/BoundingBoxExample/HoloLens1 Style/Platonic/rigRoot/corner_[X]/visualsScale/visuals"

[X] ranges from 0 to 6.

This issue looks identical to #6582.

## To reproduce

1. Open HandInteractionExamples.unity
2. Press play
3. See warnings

## Your setup

- Unity Version 2019.4.8f1
- Latest MRTK UPM package</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>8549</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>8549</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Cursor visual gets into a bad state in editor</Title>
    <CreatedDate>14/09/2020</CreatedDate>
    <ClosedDate>22/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8549</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The cursor visual can get in a bad state when transitioning between using simulated hands/gaze and when moving from a scale manipulator to a position manipulator


## To reproduce

see the attached .gif for an example scenario where the bug occurs
![weirdcheese2](

</Description>
  </Issue>
  <Issue>
    <IssueID>8548</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>8548</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Device Manager prefabs not initialized for Quest</Title>
    <CreatedDate>14/09/2020</CreatedDate>
    <ClosedDate>15/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8548</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>8548</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When using the foundations package, a pair of prefabs are listed as missing due to import errors, resulting in an improper configuration for Quest. Need to make sure these prefabs are linked correctly when using the "Integrate Oculus Integration for Unity Modules" dropdown option.</Description>
  </Issue>
  <Issue>
    <IssueID>8544</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>8544</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK Examples UPM Packages does not include Sample Scenes</Title>
    <CreatedDate>14/09/2020</CreatedDate>
    <ClosedDate>14/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8544</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>8544</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Package Management - UPM</Name>
        <IssueID>8544</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>8544</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The example scenes are the most valuable assets in the MRTK examples packges, yet they don't seem to exist in the UPM packages.

Actual folders available in the MRTK examples package:
![image](

Folders I expect to see (these are available when you import the .unitypackage):
![image](


## To reproduce

Steps to reproduce the behavior:

1. Add the following package dependencies in Packages\manifest.json:

``
2. After packages have imported, try to open the HandInteractionExamples scene, that should exist under the MRTK examples folder under packages.
3. Observe that the HandInteractionExamples scene does not exist

## Expected behavior

I would expect that the example scenes are published as part of the MRTK examples UPM package.

## Screenshots
See above.

## Your setup (please complete the following information)

- Unity Version 2019.4.10f1
- MRTK Version 2.5 UPM 2.5.0-preview.20200910.3

## Target platform (please complete the following information)
This was tested in Unity Editor, on Mac.
</Description>
  </Issue>
  <Issue>
    <IssueID>8543</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>8543</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>"Max Hover Light Count (2)" Exceeded Warning when playing Scene with Default HL2 profile</Title>
    <CreatedDate>14/09/2020</CreatedDate>
    <ClosedDate>19/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8543</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>8543</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Max hover light count (2) exceeded.
UnityEngine.Debug:LogWarningFormat(String, Object[])
Microsoft.MixedReality.Toolkit.Utilities.HoverLight:AddHoverLight(HoverLight) (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/Core/Utilities/StandardShader/HoverLight.cs:103)
Microsoft.MixedReality.Toolkit.Utilities.HoverLight:OnEnable() (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/Core/Utilities/StandardShader/HoverLight.cs:55)
UnityEngine.Object:Instantiate(GameObject, Transform)
Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer:SetCursor(GameObject) (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/SDK/Features/UX/Scripts/Pointers/BaseControllerPointer.cs:84)
Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer:OnEnable() (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/SDK/Features/UX/Scripts/Pointers/BaseControllerPointer.cs:150)
Microsoft.MixedReality.Toolkit.Input.LinePointer:OnEnable() (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/SDK/Features/UX/Scripts/Pointers/LinePointer.cs:93)
Microsoft.MixedReality.Toolkit.Teleport.TeleportPointer:OnEnable() (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/SDK/Features/UX/Scripts/Pointers/TeleportPointer.cs:136)
Microsoft.MixedReality.Toolkit.Teleport.ParabolicTeleportPointer:OnEnable() (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/SDK/Features/UX/Scripts/Pointers/ParabolicTeleportPointer.cs:33)
UnityEngine.Object:Instantiate(GameObject)
Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager:CreatePointer(PointerOption&amp;) (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/Core/Providers/BaseInputDeviceManager.cs:303)
Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager:RequestPointers(SupportedControllerType, Handedness) (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/Core/Providers/BaseInputDeviceManager.cs:223)
Microsoft.MixedReality.Toolkit.Input.BaseInputSimulationService:GetOrAddControllerDevice(Handedness, ControllerSimulationMode) (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/Core/Providers/InputSimulation/BaseInputSimulationService.cs:139)
Microsoft.MixedReality.Toolkit.Input.BaseInputSimulationService:UpdateControllerDevice(ControllerSimulationMode, Handedness, Object) (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/Core/Providers/InputSimulation/BaseInputSimulationService.cs:78)
Microsoft.MixedReality.Toolkit.Input.InputSimulationService:LateUpdate() (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/Core/Providers/InputSimulation/InputSimulationService.cs:385)
Microsoft.MixedReality.Toolkit.BaseDataProviderAccessCoreSystem:LateUpdate() (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/Core/Services/BaseDataProviderAccessCoreSystem.cs:67)
Microsoft.MixedReality.Toolkit.&lt;&gt;c:&lt;LateUpdateAllServices&gt;b__69_0(IMixedRealityService) (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/Core/Services/MixedRealityToolkit.cs:1035)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:ExecuteOnAllServicesInOrder(Action`1) (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/Core/Services/MixedRealityToolkit.cs:1109)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:LateUpdateAllServices() (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/Core/Services/MixedRealityToolkit.cs:1035)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:LateUpdate() (at Library/PackageCache/com.microsoft.mixedreality.toolkit.foundation@2.5.0-preview.20200910.3/Core/Services/MixedRealityToolkit.cs:700)

`</Code>
    <Description>## Describe the bug
Steps to reproduce the behavior:

1. Import MRTK 2.5
2. Configure blank scene with MRTK Default HoloLens 2 profile
3. Hit play
4. Bring up hand

Observer following warning in console window:

``

## Expected behavior

No warnings should appear when playing empty scene configured with MRTK.

## Your setup (please complete the following information)

- Unity 2019.4.10f1 Personal
- MRTK Version 2.5 UPM

## Target platform (please complete the following information)
- Run in Unity Editor, target platform was set to Standalone
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>8543</IssueID>
        <PullRequestID>8596</PullRequestID>
        <Title>Adding Scalable HoverLight Support</Title>
        <Description>## Overview

This pull request primarily addresses a recent warning about 3 hover lights present (#8543), but it also addresses a portion of a request for more lights (#5888).

To keep existing performance characteristics the same I've added two new multi compile shader keywords that get enabled/disabled as more lights are added and removed. This means by default the MRTK/Standard shader only calculates up to two HoverLights but will begin to calculate more in tiers (4 and 10) as more are added. Users should profiler their applications to see if their scenario can handle up to 4 or 10 dynamic lights.

I've also create a new HoverLight example scene showing off this functionality and updated the docs.

![Screenshot_2020-09-18_02-31-32-PM_e96cabf254658da4d8fbbacf8fc51566](

![Lights](

Note, this change does introduce more shader permutations in the final build. But, the delta is modest.

## Changes
- Fixes: #8543, #5888 

## Verification
Please take not of performance delta in existing scenes or longer than expected build times.

&gt;
&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>18/09/2020</CreatedDate>
        <ClosedDate>19/09/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Release Blocker</Name>
            <IssueID>8543</IssueID>
            <PullRequestID>8596</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Shaders / Materials</Name>
            <IssueID>8543</IssueID>
            <PullRequestID>8596</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>8540</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>vaoliva</FixedById>
        <IssueID>8540</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Migration Tool doc missing toc entry</Title>
    <CreatedDate>14/09/2020</CreatedDate>
    <ClosedDate>15/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>8540</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the issue
Migration Tool can only be found through MRTK github.io search bar. No entry for Migration Window / Tool found in docs toc.
</Description>
  </Issue>
  <Issue>
    <IssueID>8539</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HL2 MRTK SlateUGUI Content not Constrained to Slate</Title>
    <CreatedDate>14/09/2020</CreatedDate>
    <ClosedDate>22/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8539</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The MRTK SlateUGUI prefab renders correctly in the Unity Player with all fields working as expected and the page scrolls as expected with text or controls confined to the view port area. On HL2 the text and controls are not confined to the view port and are in view at all times. However any control visible outside the view port is "inactive" to input. Also scrolling input actions only are detected while in the view port, even though text and controls are visible outside the view port they are not responsive as if hidden.

## To reproduce

Use the MRTK Example Hub and select the Hand Interaction example. Observe the UI Examples.

## Expected behavior

I would expect the TextMesh Pro and Unity controls to be visible only in the view port area and that input would only be possible in the view port.

## Screenshots
Content in Unity Player is constrained to the view port.
![PlayerView](

Content in HL2 is visible at all times outside the view port.
![HL2-Slate](
The button controls above the view port are inactive as is scroll input outside the view port (as expected). Input only occurs inside the view port as it should.

## Your setup (please complete the following information)

- Unity Version [e.g. 2019.10f1]
- MRTK Version [e.g. v2.4.0]

## Target platform (please complete the following information)
- HoloLens 2


## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>8538</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Azure Spatial Anchors crashing with Unity XR</Title>
    <CreatedDate>14/09/2020</CreatedDate>
    <ClosedDate>24/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8538</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When trying to create an Azure Spatial Anchor through  the app crashes to UnityEngine.XR.WSA.WorldAnchor::GetNativeSpatialAnchorPtr() inside UnityEngine.VRModule.cpp

## To reproduce

Steps to reproduce the behavior:

1. Create the basic demo scene following the tutorial from the web
2. Switch to the new XR Plug-in system
3.  Use a XRSDKConfiguration profile
4. Press Start Azure Session
5. Press Create Azure Anchor

## Expected behavior

It should create a spatial anchor where the cube is placed

## Your setup (please complete the following information)

- Unity 2019.4.4f1
- MRTK Version 2.4.0

## Target platform (please complete the following information)

- HoloLens 2</Description>
  </Issue>
  <Issue>
    <IssueID>8523</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Object Manipulator - Smoothing Near is off by default</Title>
    <CreatedDate>10/09/2020</CreatedDate>
    <ClosedDate>23/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8523</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - ObjectManipulator</Name>
        <IssueID>8523</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
In ManipulationHandler, Smoothing was on by default.
In Object Manipulator - **Smoothing Far** is on but **Smoothing Near** is off by default. Different default behavior affects all existing example scenes and creates confusion. - Why far interaction is smooth while near interaction is jittery?
![2020-09-10 11_53_11-Unity 2018 4 26f1 Personal -  PREVIEW PACKAGES IN USE  - HandInteractionExamples](
## To reproduce
Open HandInteractionExamples scene.
Directly grab and move any objects - coffee cup, cheese, etc...
Grab and move with hand ray.

## Expected behavior
Both near and far interaction shows smooth behavior.

![2020-09-10 11_52_32-Unity 2018 4 26f1 Personal -  PREVIEW PACKAGES IN USE  - HandInteractionExamples](

![2020-09-10 11_52_39-Unity 2018 4 26f1 Personal -  PREVIEW PACKAGES IN USE  - HandInteractionExamples](

</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>8517</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MaxWang-MS</FixedById>
        <IssueID>8517</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>InteractableToggleCollection Touch input sometimes ignored</Title>
    <CreatedDate>10/09/2020</CreatedDate>
    <ClosedDate>12/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8517</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Far interaction input for the InteractableToggleCollection is reliable but near interaction input is sometimes ignored when the toggle is pressed more than once.


![ToggleCollectionBug](

## To reproduce

Steps to reproduce the behavior:

1. Add the RadialSet prefab to your scene
2. Press each toggle once via near interaction 
3. Try to press the toggles again and they are sometimes unresponsive 

</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>8517</IssueID>
        <PullRequestID>8533</PullRequestID>
        <Title>Fix unresponsive radial button</Title>
        <Description>## Overview
This PR fixes the problem of radial buttons in the radial set prefab are sometimes unresponsive. Investigation of the matter showed that in the pressable button script (Press distance - release distance delta) must be larger than start push distance or the button will not work properly.

## Changes
- Fixes: #8517.

## Verification
1. Add the RadialSet prefab to your scene
2. Press each toggle once via near interaction
3. Try to press the toggles again and notice they still respond properly

Also validated on a HoloLens 2 device.</Description>
        <CreatedDate>11/09/2020</CreatedDate>
        <ClosedDate>12/09/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Bug</Name>
            <IssueID>8517</IssueID>
            <PullRequestID>8533</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>MaxWang-MS</FixedById>
            <PullRequestID>8533</PullRequestID>
            <IssueID>8517</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>8511</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>8511</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Having too long of a path can cause 'file not found' for example scenes (MAX_PATH)</Title>
    <CreatedDate>09/09/2020</CreatedDate>
    <ClosedDate>24/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>8511</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Package Management - UPM</Name>
        <IssueID>8511</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>8511</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the issue
When you import the UPM packages into a project that has a long path (i.e. D:\unity\upmbugbash\packagemanagerrepro), the Unity console will generate a 'file not found' exception similar to the one pictured below.

![bf4381b6-7d62-4c4a-9fa9-ce547d52ed92](


## Feature area
MAX_PATH


## Additional context
This issue should be included on the Release notes.
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>8511</IssueID>
        <PullRequestID>8658</PullRequestID>
        <Title>Update release notes and profile required warning</Title>
        <Description>Adds release notes for sssues #8511 and #8623.

This change also updates the profile required warning in the Extensions inspector.

Fixes: #8511</Description>
        <CreatedDate>24/09/2020</CreatedDate>
        <ClosedDate>24/09/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Documentation</Name>
            <IssueID>8511</IssueID>
            <PullRequestID>8658</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>davidkline-ms</FixedById>
            <PullRequestID>8658</PullRequestID>
            <IssueID>8511</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>8506</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>8506</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Allow TouchableCollider in Near Interaction Touchable Volume to be set </Title>
    <CreatedDate>09/09/2020</CreatedDate>
    <ClosedDate>09/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>8506</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

The `TouchableCollider` property is currently read only and is set to the game object's collider.  

Add the ability to set this property. </Description>
  </Issue>
  <Issue>
    <IssueID>8502</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Description panel's title text wrapping issue</Title>
    <CreatedDate>09/09/2020</CreatedDate>
    <ClosedDate>14/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8502</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
The description panel's title text sometimes overflows and covers the content text area. 
(Reported by Max Wang)

![MicrosoftTeams-image](

</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>8501</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>8501</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>XRSubsystemHelpers issue with 2019.2.21f1</Title>
    <CreatedDate>09/09/2020</CreatedDate>
    <ClosedDate>14/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8501</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>XR SDK</Name>
        <IssueID>8501</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

In 2019.2.21f1 with the latest mrtk_develop branch I receive the following error:

&gt; Assets\MRTK\Core\Utilities\XRSubsystemHelpers.cs(28,23): error CS0246: The type or namespace name 'XRInputSubsystem' could not be found (are you missing a using directive or an assembly reference?)

When opening in Visual Studio, it wants me to resolve the namespace as UnityEngine.XR

![image](

However, the conditional compile statement in the code ([link]( says:

``

I do not believe that UNITY_2019_3_OR_NEWER is the right selector for this.

Changing it to `#if UNITY_2019_2_OR_NEWER` resolves the `XRInputSubsystem` issue but causes problems for other types.

Changing the `#else` block above to include `using UnityEngine.XR;` does completely resolve the issue for 2.21f1, but probably opens a whole new set of issues for older versions.

## Your setup (please complete the following information)

- Unity Version: 2019.2.21f1
- MRTK Version: mrtk_development as of 9/8/2020

## Target platform (please complete the following information)

- HoloLens 2</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>8499</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MaxWang-MS</FixedById>
        <IssueID>8499</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Input Playback Service is missing in RecordArticulatedHandPoseInputSystemProfile</Title>
    <CreatedDate>09/09/2020</CreatedDate>
    <ClosedDate>09/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8499</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The RecordArticulatedHandPoseInputSystemProfile used by the HandInteractionRecordArticulatedHandPose scene does not include the Input Playback Service, which causes errors when one tries to record/playback input.

## To reproduce

Steps to reproduce the behavior:

1. Go to the HandInteractionRecordArticulatedHandPose scene
2. Open the input simulation window from Mixed Reality Toolkit &gt; Utilities &gt; Input Simulation
3. Run the scene in editor play mode
4. Bring up a simulated hand by pressing t
5. Start recording
6. Move the hand around by holding left shift
7. End recording
8. See error

## Expected behavior

Error should not appear.

## Your setup (please complete the following information)
Unity 2019.4.8f1
MRTK v2.4</Description>
  </Issue>
  <Issue>
    <IssueID>8482</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>polar-kev</FixedById>
        <IssueID>8482</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Please LINK to the project for download!</Title>
    <CreatedDate>08/09/2020</CreatedDate>
    <ClosedDate>24/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>8482</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Why can't you link to the project?

## Feature area
The link to the project.

## Existing doc link
missing

## Additional context
Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>8480</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>support web XR</Title>
    <CreatedDate>07/09/2020</CreatedDate>
    <ClosedDate>08/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>8480</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

now MRTK can work with android ,ios and wearable devices but it still have a bit inconvenient because we need to install the app to device so we really need the web XR feature

## Describe the solution you'd like
i have tried demo  by @Rufus31415 in  - including MRTK integration. It's great if this target officially supported in MRTK

## Describe alternatives you've considered



## Additional context

Existing Repo: 
Demo site: </Description>
  </Issue>
  <Issue>
    <IssueID>8476</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MaxWang-MS</FixedById>
        <IssueID>8476</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Following instructions does not produce desired result in InputActionsExample</Title>
    <CreatedDate>04/09/2020</CreatedDate>
    <ClosedDate>08/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8476</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

In the InputActionsExample scene, the panels mention the input simulation is set to gesture and instruct users to try the scene based on that assumption. However, the mode is currently set to articulated hands in InputActions.MixedRealityInputSimulationProfile causing unexpected behavior when a user tries the scene following the instructions.

## To reproduce

Steps to reproduce the behavior:

1. Open the InputActionsExample scene
2. Enter play mode
3. Perform the 'Hold' gesture by pressing the left mouse button while keeping the space bar pressed.
4. Notice the cube does not rotate. Also the hand shown is articulated hand instead of gesture hand. Note directly put the cursor on the cube and left click produces the desired result.

## Expected behavior

Following the instructions should make the cube rotate.

## Your setup (please complete the following information)

- Unity Version 2019.4.8f1
- MRTK Version v2.4

## Target platform (please complete the following information)

- Unity Editor</Description>
  </Issue>
  <Issue>
    <IssueID>8474</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Version 2.4.0 is not on nuget.org</Title>
    <CreatedDate>04/09/2020</CreatedDate>
    <ClosedDate>08/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8474</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Version 2.4.0 is not on nuget.org. The latest version there is 2.3.0

## To reproduce

Steps to reproduce the behavior:

1. Go to nuget.org
2. Search for Microsoft.MixedReality.Toolkit

## Expected behavior

Latest package version is 2.4.0

## Screenshots

![image](</Description>
  </Issue>
  <Issue>
    <IssueID>8468</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MaxWang-MS</FixedById>
        <IssueID>8468</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>PlayModeTestUtilities.PopHandSimulationProfile does not restore hand simulation state</Title>
    <CreatedDate>03/09/2020</CreatedDate>
    <ClosedDate>04/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8468</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

[PlayModeTestUtilities.PopHandSimulationProfile]( is supposed to restore the input simulation service state to the state it was in before PlayModeTestUtilities.PushHandSimulationProfile was called. It does this by setting the input simulation service's InputSimulationProfile property. However, once the simulation service is initialized, the service does not look at the profile to determine its mode.

Therefore, the settings for the restored profile will not actually be used by the service.
</Description>
  </Issue>
  <Issue>
    <IssueID>8466</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Duplicate Service GameObjects Appear in Hierarchy</Title>
    <CreatedDate>03/09/2020</CreatedDate>
    <ClosedDate>03/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8466</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Upon loading a scene, duplicate service GameObjects appear in the hierarchy.

## To reproduce

Steps to reproduce the behavior:

1. Create a new scene and setup MRTK with "Add to Scene and Configure..."
2. Save and reload the scene
3. Expand the "MixedRealityToolkit" GameObject in the hierarchy
4. See duplicate service GameObjects

## Expected behavior

Have only one GameObject per service.

## Screenshots

![image](

## Your setup (please complete the following information)

- Unity Version 2019.4.5f1
- MRTK Version v2.4.0

## Target platform (please complete the following information)

- HoloLens 2

## Additional context

Duplicate service GameObjects disappear upon entering play mode, and stay gone when leaving play mode. However, reloading the scene causes them to come back again.

I also created an empty Project, imported MRTK 2.4.0, and saw it happen when adding MRTK to the SampleScene, saving and reloading the scene.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>8465</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>UX controls don't work when rigid body is attached to parent object</Title>
    <CreatedDate>03/09/2020</CreatedDate>
    <ClosedDate>10/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8465</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Bug description

I use UX controls (buttons in this case) to controll something in my menu hierarchy. A rigid body is attached to the top game object of the menu to trigger OnTriggerEnter events. 

It seems that buttons and other UX controls won't work if there's a rigid body attached to any of their parent objects.

Is there any solotion for this problem?

Kind regards.

## To reproduce

Steps to reproduce the behavior:

1. Add a game object to the scene and apply a rigid body to it.
2. Attach a button as a child of the game object with this rigid body.
3. Try to click the button in play mode with the hand simulation.
4. OnClick event won't be fired.

## Expected behavior

Button should be clickable although there's a rigid body attached to a parent object.

## My setup

- Unity Version: 2019.3.0f6]
- MRTK Version 2.4

## Target platform 

- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>8463</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Clipping Primitive Instances Materials In Editor</Title>
    <CreatedDate>03/09/2020</CreatedDate>
    <ClosedDate>03/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8463</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
When using the Clipping Primitive in editor, it adds a MaterialInstance component to each renderer and instantiates the material. This means you start the application with already instanced materials which throw a warning when they try to instantiate them a second time

## To reproduce
1. Create a ScrollingObjectCollection.
2. Add a few items with renderers
3. Click Update Collection
4. Run the application
5. Click Update Collection

## Expected behavior

Materials shouldn't be instanced in editor

## Your setup (please complete the following information)

- Unity Version 2019.4.6f1
- MRTK Version = 2.4.0

## Target platform (please complete the following information)
- HoloLens 2</Description>
  </Issue>
  <Issue>
    <IssueID>8462</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>8462</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Teleport exit sound effect for teleport pointer</Title>
    <CreatedDate>03/09/2020</CreatedDate>
    <ClosedDate>15/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>8462</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>tracking lingering feature of  where we need a sound effect for when the user pops in after a teleport.</Description>
  </Issue>
  <Issue>
    <IssueID>8460</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>8460</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>8460</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>8460</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>A Native Collection has not been disposed, resulting in a memory leak</Title>
    <CreatedDate>03/09/2020</CreatedDate>
    <ClosedDate>15/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8460</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When using the in-editor player to play any scene after switching to the XR SDK and installing the Oculus XR Plugin, the Unity console reports a memory leak and a few other Errors. No supported devices were connected to the computer. When you remove the Oculus XR package and attempt to load the scene again, you get a slightly different set of errors, but you still get the memory leak error. The Unity console output section has the stack traces for each error as well as a picture showing the Unity console. 

The new scene does not need to have anything in it, other than the MRTK for this issue to occur. The Oculus XR package does not need to be installed for this issue to occur. 
## To reproduce

Steps to reproduce the behavior:

1. Create a new project or open clone from this repository and open it in Unity.
2. Import all of the MRTK packages.
3. Use the default Unity created scene, or create a new scene and add MRTK to the scene through the drop down menu.
4. Open Project Settings and then go to XR Plug-in Management and install the XR Plug-in Manager.
5. After the XR Plug-in Manager is installed, install the 'Oculus' and 'Windows Mixed Reality' Plug-in Providers.
6. Click the Play button to start the in-editor player.
7. Check the Unity console.

Note: Sometimes you need to load the scene multiple times before this issue occurs.

## Expected behavior

Memory leaks do not occur when playing a new scene in the editor.

## Your setup (please complete the following information)

- **Unity Version** 2019.4.9f1
- **MRTK Version** 2.4 | PR#8386

## Target platform (please complete the following information)

- Standalone

## Unity console output

**Playing a scene:**
![playscene](

**Unable to start Oculus XR Plugin**
&gt; Unable to start Oculus XR Plugin.
0x00007FF7DE63840C (Unity) StackWalker::GetCurrentCallstack
0x00007FF7DE63C3C1 (Unity) StackWalker::ShowCallstack
0x00007FF7DCD187A5 (Unity) GetStacktrace
0x00007FF7DF2B826E (Unity) DebugStringToFile
0x00007FF7DE6977A5 (Unity) DebugLogHandler_CUSTOM_Internal_Log
0x00000238BF1E668B (Mono JIT Code) (wrapper managed-to-native) UnityEngine.DebugLogHandler:Internal_Log (UnityEngine.LogType,UnityEngine.LogOption,string,UnityEngine.Object)
0x00000238BF1E652B (Mono JIT Code) UnityEngine.DebugLogHandler:LogFormat (UnityEngine.LogType,UnityEngine.Object,string,object[])
0x00000238BF1E5A4E (Mono JIT Code) UnityEngine.Logger:Log (UnityEngine.LogType,object)
0x00000238BF1E569A (Mono JIT Code) UnityEngine.Debug:LogError (object)
0x00000238BF1E26AB (Mono JIT Code) [OculusLoader.cs:113] Unity.XR.Oculus.OculusLoader:Initialize () 
0x00000238BF1E140B (Mono JIT Code) [XRManagerSettings.cs:169] UnityEngine.XR.Management.XRManagerSettings:InitializeLoaderSync () 
0x00000238BF1E0DCB (Mono JIT Code) [XRGeneralSettings.cs:175] UnityEngine.XR.Management.XRGeneralSettings:InitXRSDK () 
0x00000238BF1E081B (Mono JIT Code) [XRGeneralSettings.cs:148] UnityEngine.XR.Management.XRGeneralSettings:AttemptInitializeXRSDKOnLoad () 
0x0000023911A56025 (Mono JIT Code) (wrapper runtime-invoke) object:runtime_invoke_void (object,intptr,intptr,intptr)
0x00007FF8DD10D690 (mono-2.0-bdwgc) [mini-runtime.c:2809] mono_jit_runtime_invoke 
0x00007FF8DD092912 (mono-2.0-bdwgc) [object.c:2921] do_runtime_invoke 
0x00007FF8DD09B96F (mono-2.0-bdwgc) [object.c:2968] mono_runtime_invoke 
0x00007FF7DE5AAB2E (Unity) scripting_method_invoke
0x00007FF7DE5A486D (Unity) ScriptingInvocation::Invoke
0x00007FF7DE024DAF (Unity) RuntimeInitializeOnLoadManager::ExecuteInitializeOnLoad
0x00007FF7DE02A40B (Unity) RuntimeInitializeOnSceneLoadedBeforeAwake
0x00007FF7DC951052 (Unity) CallbackArray3&lt;int const ,AwakeFromLoadQueue &amp; __ptr64,enum SceneLoadingMode&gt;::Invoke
0x00007FF7DE06947F (Unity) LoadSceneOperation::CompleteAwakeSequence
0x00007FF7DE069803 (Unity) LoadSceneOperation::CompletePreloadManagerLoadSceneEditor
0x00007FF7DE06A4B9 (Unity) LoadSceneOperation::IntegrateMainThread
0x00007FF7DE06DE09 (Unity) PreloadManager::UpdatePreloadingSingleStep
0x00007FF7DE06E65F (Unity) PreloadManager::WaitForAllAsyncOperationsToComplete
0x00007FF7DC956038 (Unity) EditorSceneManager::RestoreSceneBackups
0x00007FF7DC3B7544 (Unity) PlayerLoopController::EnterPlayMode
0x00007FF7DC3C9CB5 (Unity) PlayerLoopController::SetIsPlaying
0x00007FF7DC3CC992 (Unity) Application::TickTimer
0x00007FF7DCD3E1C0 (Unity) MainMessageLoop
0x00007FF7DCD48398 (Unity) WinMain
0x00007FF7DFD56542 (Unity) __scrt_common_main_seh
0x00007FF9503D6FD4 (KERNEL32) BaseThreadInitThunk
0x00007FF951ABCEC1 (ntdll) RtlUserThreadStart 


**Failed to load display subsystem**

&gt; Failed to load display subsystem.
0x00007FF7DE63840C (Unity) StackWalker::GetCurrentCallstack
0x00007FF7DE63C3C1 (Unity) StackWalker::ShowCallstack
0x00007FF7DCD187A5 (Unity) GetStacktrace
0x00007FF7DF2B826E (Unity) DebugStringToFile
0x00007FF7DE6977A5 (Unity) DebugLogHandler_CUSTOM_Internal_Log
0x0000023911C22FBB (Mono JIT Code) (wrapper managed-to-native) UnityEngine.DebugLogHandler:Internal_Log (UnityEngine.LogType,UnityEngine.LogOption,string,UnityEngine.Object)
0x0000023911C22E5B (Mono JIT Code) UnityEngine.DebugLogHandler:LogFormat (UnityEngine.LogType,UnityEngine.Object,string,object[])
0x0000023911C2237E (Mono JIT Code) UnityEngine.Logger:Log (UnityEngine.LogType,object)
0x0000023911C21FCA (Mono JIT Code) UnityEngine.Debug:LogError (object)
0x0000023911C0E693 (Mono JIT Code) [OculusLoader.cs:118] Unity.XR.Oculus.OculusLoader:Initialize () 
0x0000023911C1F6EB (Mono JIT Code) [XRManagerSettings.cs:169] UnityEngine.XR.Management.XRManagerSettings:InitializeLoaderSync () 
0x0000023911C1F0AB (Mono JIT Code) [XRGeneralSettings.cs:175] UnityEngine.XR.Management.XRGeneralSettings:InitXRSDK () 
0x0000023911C1EAFB (Mono JIT Code) [XRGeneralSettings.cs:148] UnityEngine.XR.Management.XRGeneralSettings:AttemptInitializeXRSDKOnLoad () 
0x000002390C868925 (Mono JIT Code) (wrapper runtime-invoke) object:runtime_invoke_void (object,intptr,intptr,intptr)
0x00007FF8DD10D690 (mono-2.0-bdwgc) [mini-runtime.c:2809] mono_jit_runtime_invoke 
0x00007FF8DD092912 (mono-2.0-bdwgc) [object.c:2921] do_runtime_invoke 
0x00007FF8DD09B96F (mono-2.0-bdwgc) [object.c:2968] mono_runtime_invoke 
0x00007FF7DE5AAB2E (Unity) scripting_method_invoke
0x00007FF7DE5A486D (Unity) ScriptingInvocation::Invoke
0x00007FF7DE024DAF (Unity) RuntimeInitializeOnLoadManager::ExecuteInitializeOnLoad
0x00007FF7DE02A40B (Unity) RuntimeInitializeOnSceneLoadedBeforeAwake
0x00007FF7DC951052 (Unity) CallbackArray3&lt;int const ,AwakeFromLoadQueue &amp; __ptr64,enum SceneLoadingMode&gt;::Invoke
0x00007FF7DE06947F (Unity) LoadSceneOperation::CompleteAwakeSequence
0x00007FF7DE069803 (Unity) LoadSceneOperation::CompletePreloadManagerLoadSceneEditor
0x00007FF7DE06A4B9 (Unity) LoadSceneOperation::IntegrateMainThread
0x00007FF7DE06DE09 (Unity) PreloadManager::UpdatePreloadingSingleStep
0x00007FF7DE06E65F (Unity) PreloadManager::WaitForAllAsyncOperationsToComplete
0x00007FF7DC956038 (Unity) EditorSceneManager::RestoreSceneBackups
0x00007FF7DC3B7544 (Unity) PlayerLoopController::EnterPlayMode
0x00007FF7DC3C9CB5 (Unity) PlayerLoopController::SetIsPlaying
0x00007FF7DC3CC992 (Unity) Application::TickTimer
0x00007FF7DCD3E1C0 (Unity) MainMessageLoop
0x00007FF7DCD48398 (Unity) WinMain
0x00007FF7DFD56542 (Unity) __scrt_common_main_seh
0x00007FF9503D6FD4 (KERNEL32) BaseThreadInitThunk
0x00007FF951ABCEC1 (ntdll) RtlUserThreadStart 

**Failed to load input subsystem**
&gt; Failed to load input subsystem.
0x00007FF7DE63840C (Unity) StackWalker::GetCurrentCallstack
0x00007FF7DE63C3C1 (Unity) StackWalker::ShowCallstack
0x00007FF7DCD187A5 (Unity) GetStacktrace
0x00007FF7DF2B826E (Unity) DebugStringToFile
0x00007FF7DE6977A5 (Unity) DebugLogHandler_CUSTOM_Internal_Log
0x0000023911C22FBB (Mono JIT Code) (wrapper managed-to-native) UnityEngine.DebugLogHandler:Internal_Log (UnityEngine.LogType,UnityEngine.LogOption,string,UnityEngine.Object)
0x0000023911C22E5B (Mono JIT Code) UnityEngine.DebugLogHandler:LogFormat (UnityEngine.LogType,UnityEngine.Object,string,object[])
0x0000023911C2237E (Mono JIT Code) UnityEngine.Logger:Log (UnityEngine.LogType,object)
0x0000023911C21FCA (Mono JIT Code) UnityEngine.Debug:LogError (object)
0x0000023911C0E77B (Mono JIT Code) [OculusLoader.cs:123] Unity.XR.Oculus.OculusLoader:Initialize () 
0x0000023911C1F6EB (Mono JIT Code) [XRManagerSettings.cs:169] UnityEngine.XR.Management.XRManagerSettings:InitializeLoaderSync () 
0x0000023911C1F0AB (Mono JIT Code) [XRGeneralSettings.cs:175] UnityEngine.XR.Management.XRGeneralSettings:InitXRSDK () 
0x0000023911C1EAFB (Mono JIT Code) [XRGeneralSettings.cs:148] UnityEngine.XR.Management.XRGeneralSettings:AttemptInitializeXRSDKOnLoad () 
0x000002390C868925 (Mono JIT Code) (wrapper runtime-invoke) object:runtime_invoke_void (object,intptr,intptr,intptr)
0x00007FF8DD10D690 (mono-2.0-bdwgc) [mini-runtime.c:2809] mono_jit_runtime_invoke 
0x00007FF8DD092912 (mono-2.0-bdwgc) [object.c:2921] do_runtime_invoke 
0x00007FF8DD09B96F (mono-2.0-bdwgc) [object.c:2968] mono_runtime_invoke 
0x00007FF7DE5AAB2E (Unity) scripting_method_invoke
0x00007FF7DE5A486D (Unity) ScriptingInvocation::Invoke
0x00007FF7DE024DAF (Unity) RuntimeInitializeOnLoadManager::ExecuteInitializeOnLoad
0x00007FF7DE02A40B (Unity) RuntimeInitializeOnSceneLoadedBeforeAwake
0x00007FF7DC951052 (Unity) CallbackArray3&lt;int const ,AwakeFromLoadQueue &amp; __ptr64,enum SceneLoadingMode&gt;::Invoke
0x00007FF7DE06947F (Unity) LoadSceneOperation::CompleteAwakeSequence
0x00007FF7DE069803 (Unity) LoadSceneOperation::CompletePreloadManagerLoadSceneEditor
0x00007FF7DE06A4B9 (Unity) LoadSceneOperation::IntegrateMainThread
0x00007FF7DE06DE09 (Unity) PreloadManager::UpdatePreloadingSingleStep
0x00007FF7DE06E65F (Unity) PreloadManager::WaitForAllAsyncOperationsToComplete
0x00007FF7DC956038 (Unity) EditorSceneManager::RestoreSceneBackups
0x00007FF7DC3B7544 (Unity) PlayerLoopController::EnterPlayMode
0x00007FF7DC3C9CB5 (Unity) PlayerLoopController::SetIsPlaying
0x00007FF7DC3CC992 (Unity) Application::TickTimer
0x00007FF7DCD3E1C0 (Unity) MainMessageLoop
0x00007FF7DCD48398 (Unity) WinMain
0x00007FF7DFD56542 (Unity) __scrt_common_main_seh
0x00007FF9503D6FD4 (KERNEL32) BaseThreadInitThunk
0x00007FF951ABCEC1 (ntdll) RtlUserThreadStart





**Removing the Oculus XR package and playing a scene:**
![removeoculusxrpackage](

**Error converting build target group names .**
&gt; Error converting build target group names .
Must specify valid information for parsing in the string.
0x00007FF7DE63840C (Unity) StackWalker::GetCurrentCallstack
0x00007FF7DE63C3C1 (Unity) StackWalker::ShowCallstack
0x00007FF7DCD187A5 (Unity) GetStacktrace
0x00007FF7DF2B826E (Unity) DebugStringToFile
0x00007FF7DE6977A5 (Unity) DebugLogHandler_CUSTOM_Internal_Log
0x0000023911C22FBB (Mono JIT Code) (wrapper managed-to-native) UnityEngine.DebugLogHandler:Internal_Log (UnityEngine.LogType,UnityEngine.LogOption,string,UnityEngine.Object)
0x0000023911C22E5B (Mono JIT Code) UnityEngine.DebugLogHandler:LogFormat (UnityEngine.LogType,UnityEngine.Object,string,object[])
0x0000023911C2237E (Mono JIT Code) UnityEngine.Logger:Log (UnityEngine.LogType,object)
0x0000023911C21FCA (Mono JIT Code) UnityEngine.Debug:LogError (object)
0x00000239128AA933 (Mono JIT Code) UnityEditor.XR.VRDeviceTransition:EnableVRSettings ()
0x00000239126680F3 (Mono JIT Code) UnityEditor.XR.VRDeviceTransition:HandleVRDeviceTransition ()
0x00000239128AA12B (Mono JIT Code) UnityEditor.XR.VRDeviceTransition:SubsystemReloadCompleted ()
0x00000239128AA01E (Mono JIT Code) UnityEngine.SubsystemManager:Internal_ReloadSubsystemsCompleted ()
0x0000023911AF8405 (Mono JIT Code) (wrapper runtime-invoke) object:runtime_invoke_void (object,intptr,intptr,intptr)
0x00007FF8DD10D690 (mono-2.0-bdwgc) [mini-runtime.c:2809] mono_jit_runtime_invoke 
0x00007FF8DD092912 (mono-2.0-bdwgc) [object.c:2921] do_runtime_invoke 
0x00007FF8DD09B96F (mono-2.0-bdwgc) [object.c:2968] mono_runtime_invoke 
0x00007FF7DE5AAB2E (Unity) scripting_method_invoke
0x00007FF7DE5A486D (Unity) ScriptingInvocation::Invoke
0x00007FF7DE59E855 (Unity) ScriptingInvocation::Invoke&lt;void&gt;
0x00007FF7DB8B0B1B (Unity) Scripting::UnityEngine::SubsystemManagerProxy::Internal_ReloadSubsystemsCompleted
0x00007FF7DBC7E8E5 (Unity) SubsystemManager::DiscoverAllSubsystems
0x00007FF7DBC821C5 (Unity) SubsystemManager::ResolvePackages
0x00007FF7DD122518 (Unity) PackageManager::PackageAssets::RegisterPackages
0x00007FF7DD123320 (Unity) PackageManager::PackageAssets::ResolvePackages
0x00007FF7DD0FD983 (Unity) PackageManager::Project::Refresh
0x00007FF7DBCF6699 (Unity) CallbackArray::Invoke
0x00007FF7DCE95296 (Unity) RefreshInternalV2
0x00007FF7DCE99596 (Unity) StopAssetImportingV2
0x00007FF7DCE97146 (Unity) RefreshV2
0x00007FF7DCDB9801 (Unity) AssetDatabase::Refresh
0x00007FF7DBCF66A1 (Unity) CallbackArray::Invoke
0x00007FF7DC3CC1AE (Unity) Application::TickTimer
0x00007FF7DCD3E1C0 (Unity) MainMessageLoop
0x00007FF7DCD48398 (Unity) WinMain
0x00007FF7DFD56542 (Unity) __scrt_common_main_seh
0x00007FF9503D6FD4 (KERNEL32) BaseThreadInitThunk
0x00007FF951ABCEC1 (ntdll) RtlUserThreadStart




**No XR SDK Provider detected in project**
&gt; No XR SDK Provider detected in project. Re-enabling VR Device settings for Standalone
0x00007FF7DE63840C (Unity) StackWalker::GetCurrentCallstack
0x00007FF7DE63C3C1 (Unity) StackWalker::ShowCallstack
0x00007FF7DCD187A5 (Unity) GetStacktrace
0x00007FF7DF2B826E (Unity) DebugStringToFile
0x00007FF7DE6977A5 (Unity) DebugLogHandler_CUSTOM_Internal_Log
0x0000023911C22FBB (Mono JIT Code) (wrapper managed-to-native) UnityEngine.DebugLogHandler:Internal_Log (UnityEngine.LogType,UnityEngine.LogOption,string,UnityEngine.Object)
0x0000023911C22E5B (Mono JIT Code) UnityEngine.DebugLogHandler:LogFormat (UnityEngine.LogType,UnityEngine.Object,string,object[])
0x00000239128ABDAC (Mono JIT Code) UnityEngine.Logger:LogFormat (UnityEngine.LogType,string,object[])
0x00000239128ABBBE (Mono JIT Code) UnityEngine.Debug:LogFormat (string,object[])
0x00000239128AAA9B (Mono JIT Code) UnityEditor.XR.VRDeviceTransition:EnableVRSettings ()
0x00000239126680F3 (Mono JIT Code) UnityEditor.XR.VRDeviceTransition:HandleVRDeviceTransition ()
0x00000239128AA12B (Mono JIT Code) UnityEditor.XR.VRDeviceTransition:SubsystemReloadCompleted ()
0x00000239128AA01E (Mono JIT Code) UnityEngine.SubsystemManager:Internal_ReloadSubsystemsCompleted ()
0x0000023911AF8405 (Mono JIT Code) (wrapper runtime-invoke) object:runtime_invoke_void (object,intptr,intptr,intptr)
0x00007FF8DD10D690 (mono-2.0-bdwgc) [mini-runtime.c:2809] mono_jit_runtime_invoke 
0x00007FF8DD092912 (mono-2.0-bdwgc) [object.c:2921] do_runtime_invoke 
0x00007FF8DD09B96F (mono-2.0-bdwgc) [object.c:2968] mono_runtime_invoke 
0x00007FF7DE5AAB2E (Unity) scripting_method_invoke
0x00007FF7DE5A486D (Unity) ScriptingInvocation::Invoke
0x00007FF7DE59E855 (Unity) ScriptingInvocation::Invoke&lt;void&gt;
0x00007FF7DB8B0B1B (Unity) Scripting::UnityEngine::SubsystemManagerProxy::Internal_ReloadSubsystemsCompleted
0x00007FF7DBC7E8E5 (Unity) SubsystemManager::DiscoverAllSubsystems
0x00007FF7DBC821C5 (Unity) SubsystemManager::ResolvePackages
0x00007FF7DD122518 (Unity) PackageManager::PackageAssets::RegisterPackages
0x00007FF7DD123320 (Unity) PackageManager::PackageAssets::ResolvePackages
0x00007FF7DD0FD983 (Unity) PackageManager::Project::Refresh
0x00007FF7DBCF6699 (Unity) CallbackArray::Invoke
0x00007FF7DCE95296 (Unity) RefreshInternalV2
0x00007FF7DCE99596 (Unity) StopAssetImportingV2
0x00007FF7DCE97146 (Unity) RefreshV2
0x00007FF7DCDB9801 (Unity) AssetDatabase::Refresh
0x00007FF7DBCF66A1 (Unity) CallbackArray::Invoke
0x00007FF7DC3CC1AE (Unity) Application::TickTimer
0x00007FF7DCD3E1C0 (Unity) MainMessageLoop
0x00007FF7DCD48398 (Unity) WinMain
0x00007FF7DFD56542 (Unity) __scrt_common_main_seh
0x00007FF9503D6FD4 (KERNEL32) BaseThreadInitThunk
0x00007FF951ABCEC1 (ntdll) RtlUserThreadStart 






**XR SDK Provider detected in project**
&gt; XR SDK Provider detected in project. Disabling VR Device settings for Standalone
0x00007FF7DE63840C (Unity) StackWalker::GetCurrentCallstack
0x00007FF7DE63C3C1 (Unity) StackWalker::ShowCallstack
0x00007FF7DCD187A5 (Unity) GetStacktrace
0x00007FF7DF2B826E (Unity) DebugStringToFile
0x00007FF7DE6977A5 (Unity) DebugLogHandler_CUSTOM_Internal_Log
0x0000023911B7E4FB (Mono JIT Code) (wrapper managed-to-native) UnityEngine.DebugLogHandler:Internal_Log (UnityEngine.LogType,UnityEngine.LogOption,string,UnityEngine.Object)
0x0000023911B7E35B (Mono JIT Code) UnityEngine.DebugLogHandler:LogFormat (UnityEngine.LogType,UnityEngine.Object,string,object[])
0x0000023911B7DC1C (Mono JIT Code) UnityEngine.Logger:LogFormat (UnityEngine.LogType,string,object[])
0x0000023911B7D91E (Mono JIT Code) UnityEngine.Debug:LogFormat (string,object[])
0x0000023911B7C543 (Mono JIT Code) UnityEditor.XR.VRDeviceTransition:DisableVRSettings ()
0x0000023911B79CDB (Mono JIT Code) UnityEditor.XR.VRDeviceTransition:HandleVRDeviceTransition ()
0x0000023911B79B6B (Mono JIT Code) UnityEditor.XR.VRDeviceTransition/AssetCallbacks:OnProjectChanged ()
0x0000023911AC10C7 (Mono JIT Code) (wrapper delegate-invoke) &lt;Module&gt;:invoke_void ()
0x0000023911B776C6 (Mono JIT Code) UnityEditor.EditorApplication:Internal_CallProjectHasChanged ()
0x000002391289DBF5 (Mono JIT Code) (wrapper runtime-invoke) object:runtime_invoke_void (object,intptr,intptr,intptr)
0x00007FF8DD10D690 (mono-2.0-bdwgc) [mini-runtime.c:2809] mono_jit_runtime_invoke 
0x00007FF8DD092912 (mono-2.0-bdwgc) [object.c:2921] do_runtime_invoke 
0x00007FF8DD09B96F (mono-2.0-bdwgc) [object.c:2968] mono_runtime_invoke 
0x00007FF7DE5A1386 (Unity) CallStaticMonoMethod
0x00007FF7DE5A0FC9 (Unity) CallStaticMonoMethod
0x00007FF7DE5A0D51 (Unity) CallStaticMonoMethod
0x00007FF7DC2398F8 (Unity) SceneTracker::ProjectHasChanged
0x00007FF7DCE8E784 (Unity) HotreloadV2
0x00007FF7DCE96F50 (Unity) RefreshInternalV2
0x00007FF7DCE99596 (Unity) StopAssetImportingV2
0x00007FF7DCE97146 (Unity) RefreshV2
0x00007FF7DCDB9801 (Unity) AssetDatabase::Refresh
0x00007FF7DBCF66A1 (Unity) CallbackArray::Invoke
0x00007FF7DC3CC1AE (Unity) Application::TickTimer
0x00007FF7DCD3E1C0 (Unity) MainMessageLoop
0x00007FF7DCD48398 (Unity) WinMain
0x00007FF7DFD56542 (Unity) __scrt_common_main_seh
0x00007FF9503D6FD4 (KERNEL32) BaseThreadInitThunk
0x00007FF951ABCEC1 (ntdll) RtlUserThreadStart</Description>
  </Issue>
  <Issue>
    <IssueID>8417</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Wrong Reported Camera FOV</Title>
    <CreatedDate>30/08/2020</CreatedDate>
    <ClosedDate>01/09/2020</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Unity "Camera" component reports too large of FOV for for HL2, causing any logic dependent on FOV to fail.

## Expected behavior
Something appropriate, close to 30 degrees.

## Actual behavior
Camera vertical FOV locked to 135 degrees (if change to "Horizontal") then reports 150 degrees

## Steps to reproduce
Run MRTK Hand Tracking demo while remoting to HL2.

## Unity editor version
2019.4.8f1, Windows XR Plugin 2.3 (previous XR Plugin version 2.2 caused the device's  Horizontal FOV to be reported as the vertical FOV)

## Mixed Reality Toolkit release version
2.4

![HL2 Bad FOV](</Description>
  </Issue>
  <Issue>
    <IssueID>8415</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Custom Transform for Leap Motion Controller</Title>
    <CreatedDate>29/08/2020</CreatedDate>
    <ClosedDate>29/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>8415</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Current Leap Motion Device Manager in MRTK provides two Leap Controller Orientation Modes: Headset and Desk.
While we can control the position offset of Leap Controller in the 'Desk' mode, we cannot control the offset in 'Headset' mode.
Since there can be various ways to attach leap motion controller to the headset (e.g. front-facing, looking down), it would be much better if there was a feature to adjust the offset of the Leap Controller.

## Describe the solution you'd like

It would be better if we provide device offset in 'Headset' mode in three ways: 
'Default' offset, 'Manual Head Offset', and 'Transform' offset (like LeapXRServiceProvider.cs in Leap Motion plugin)
- Default: no offset, like the default 'Headset' mode
- Manual Head Offset: set position offset for Y &amp; Z axis, and set rotation offset for X axis
- Transform: set manual transform for the Leap Controller.
</Description>
  </Issue>
  <Issue>
    <IssueID>8396</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>8396</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>spatial mesh should not reset the mesh material on updated event</Title>
    <CreatedDate>26/08/2020</CreatedDate>
    <ClosedDate>28/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8396</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>8396</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>in the scenario where a developer customizes the material on a mesh after receiving the mesh added event, mrtk should not reset it to the default visible mesh on mesh updated.

the observer should, instead, read the material from the existing mesh and use it on the new one before raising updated

there is an edge case where we would fail to set the material correctly if the developer toggles between display mode visible and occlusion (#8397)</Description>
  </Issue>
  <Issue>
    <IssueID>8394</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>8394</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>spatial mesh observer should always set the materials even if display option is set to none</Title>
    <CreatedDate>26/08/2020</CreatedDate>
    <ClosedDate>28/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8394</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>8394</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>since display option controls whether or not the render is enabled, we should still be setting the material</Description>
  </Issue>
  <Issue>
    <IssueID>8377</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hand Menu Does Not work in XRSDK</Title>
    <CreatedDate>25/08/2020</CreatedDate>
    <ClosedDate>25/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8377</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Attempting to use the hand menu whilst using the XRSDK does not work. The hand menu does not appear when the palm is seen.

## To reproduce

Steps to reproduce the behavior:

1. Create Unity Project with MRTK 2.4 in Unity 2019.4.2f1
2. Ensure XR Plugin Management, Windows XR Plugin, and XR Legacy Input Helpers are installed from the Package Manager.
3. Open the "HandMenuExamples" scene from the MRTK 2.4 Examples unity package.
4. Switch the Configuration Profile to default XRSDK configuration profile.
5. Build and deploy to HoloLens 2 with Master Solution Configuration and ARM64 as the Solution Platform.
6. Open app and attempt to use hand menus.

## Expected behavior

Menus should appear above / next to the user's hands when the palms are seen.

## Screenshots

The following error messages are thrown (depending on which hand the user attempts to use):

"HandConstraintPalmUp requires a palm joint, but none was provided by ArticulatedHand Controller Left."
"HandConstraintPalmUp requires a palm joint, but none was provided by ArticulatedHand Controller Right."

## Your setup (please complete the following information)

- Unity 2019.4.2f1
- Visual Studio 2019 v16.5.4
- MRTK 2.4
- XR SDK
- ARM64

## Target platform (please complete the following information)

- HoloLens 2

## Additional context

Upon my own investigation through the MRTK documentation, I believe the error might lie in the XRSDK Windows Mixed Reality Device Manager input provider, as according to the documentation, the Windows Mixed Reality Device Manager is what is supposed to provide WMR Articulated Hand control and according to the error message, that is what is failing.
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>8377</IssueID>
        <PullRequestID>8328</PullRequestID>
        <Title>Add HandJointService to XR SDK profile</Title>
        <Description>## Overview

[On Slack]( it was pointed out that our hand menu samples depend on the hand joint service being registered in the input providers. This PR adds the service to the XR SDK profile so hand menus work again!</Description>
        <CreatedDate>19/08/2020</CreatedDate>
        <ClosedDate>19/08/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Hand Tracking</Name>
            <IssueID>8377</IssueID>
            <PullRequestID>8328</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>XR SDK</Name>
            <IssueID>8377</IssueID>
            <PullRequestID>8328</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>8328</PullRequestID>
            <IssueID>8377</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>8368</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>8368</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Null reference exception when showing controller popup window bricks Unity 2020.1.2f1 project</Title>
    <CreatedDate>24/08/2020</CreatedDate>
    <ClosedDate>17/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8368</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The Mixed Reality Toolkit controller mapping profile inspector throws a null reference exception when a user attempts to edit a controller mapping. If the user's project is on Unity 2020.1, the editor will get bricked and the user will get a "Failed to load window layout" boot loop, making it impossible to open the editor.

To recover the project, revert the project to Unity 2019.3 and then upgrade again to Unity 2020.1
- Note: you will lose your custom layout settings

## To reproduce

Steps to reproduce the behavior:

1. Open Unity without ever loading an MRTK instance 
   - This means you need to start unity with a scene that doesn't have MRTK in it
   - The null reference exception occurs on both Unity 2019.3 and 2020.1, but only 2020.1 gets bricked
2. Attempt to edit a controller mapping profile (e.g. click on "GGV Left Hand Controller" though any of them should work)
3. See error
4. If on Unity 2020.1, close and reopen the project to view the boot loop

## Expected behavior

No null reference exception occurs, and the project is able to be closed and reopened as needed.

## Temporary fix

I found that adding this snippet of code right before `ControllerPopupWindow.Show(controllerMapping, interactionsProperty, handedness);` in `MixedRealityControllerMappingProfileInspector` prevents the editor from bricking itself (exception message doesn't matter)
``

Alternatively, loading a scene with the `MixedRealityToolkit` script attached to a game object before editing the controller mapping profile keeps it working for the rest of the Unity session

## Screenshots

![image](
![image](

## Your setup

- Unity Version: 2020.1.2, 2019.3.2
- MRTK Version: 2.4

## Target platform

- PC, Mac, &amp; Linux Standalone (though it should reproduce on other platforms as well)

## Additional context

Stack trace
&lt;details&gt;
NullReferenceException: Object reference not set to an instance of an object
Microsoft.MixedReality.Toolkit.Editor.ControllerPopupWindow.OnFocus () (at Assets/MRTK/Core/Inspectors/ControllerPopupWindow.cs:99)
UnityEditor.HostView.RegisterSelectedPane (System.Boolean sendEvents) (at &lt;d1bec46880064709a5e713ad543e6d96&gt;:0)
UnityEditor.HostView.SetActualViewInternal (UnityEditor.EditorWindow value, System.Boolean sendEvents) (at &lt;d1bec46880064709a5e713ad543e6d96&gt;:0)
UnityEditor.HostView.set_actualView (UnityEditor.EditorWindow value) (at &lt;d1bec46880064709a5e713ad543e6d96&gt;:0)
UnityEditor.EditorWindow.ShowWithMode (UnityEditor.ShowMode mode) (at &lt;d1bec46880064709a5e713ad543e6d96&gt;:0)
UnityEditor.EditorWindow.ShowUtility () (at &lt;d1bec46880064709a5e713ad543e6d96&gt;:0)
Microsoft.MixedReality.Toolkit.Editor.ControllerPopupWindow.Show (Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerMapping controllerMapping, UnityEditor.SerializedProperty interactionsList, Microsoft.MixedReality.Toolkit.Utilities.Handedness handedness) (at Assets/MRTK/Core/Inspectors/ControllerPopupWindow.cs:244)
Microsoft.MixedReality.Toolkit.Input.Editor.MixedRealityControllerMappingProfileInspector.RenderControllerList (UnityEditor.SerializedProperty controllerList) (at Assets/MRTK/Core/Inspectors/Profiles/MixedRealityControllerMappingProfileInspector.cs:305)
Microsoft.MixedReality.Toolkit.Input.Editor.MixedRealityControllerMappingProfileInspector.OnInspectorGUI () (at Assets/MRTK/Core/Inspectors/Profiles/MixedRealityControllerMappingProfileInspector.cs:68)
UnityEditor.UIElements.InspectorElement+&lt;&gt;c__DisplayClass58_0.&lt;CreateIMGUIInspectorFromEditor&gt;b__0 () (at &lt;d1bec46880064709a5e713ad543e6d96&gt;:0)
UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr, Boolean&amp;)
&lt;/details&gt;
</Description>
  </Issue>
  <Issue>
    <IssueID>8366</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK Toolbox UI - Either no longer exists or is a planned feature?</Title>
    <CreatedDate>24/08/2020</CreatedDate>
    <ClosedDate>25/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>8366</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the issue
This does not seem to [exist](

## Feature area
What's incorrect? What's missing? The Toobox UI.

## Existing doc link
If this is about something in an existing document, please provide link


## Additional context
Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>8360</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tooltip - PrefabSpawner bug</Title>
    <CreatedDate>22/08/2020</CreatedDate>
    <ClosedDate>23/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8360</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Tooltip</Name>
        <IssueID>8360</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
In the TooltipExamples.unity scene, '**Show on Press**' example object generates an error message on press (gaze+air-tap or hand-ray tap) 
'Show on Focus' works fine. Shows the same error message when changed **TooltipSpawner's** option to 'Appear On Tap' 

![2020-08-23 08_17_47-Unity 2018 4 26f1 Personal - TooltipExamples unity - MRTK-Public - Universal Win](


### Generates error message with 'Appear on Tap' option:
![2020-08-23 08_20_32-Unity 2018 4 26f1 Personal - TooltipExamples unity - MRTK-Public - Universal Win](

### No error message:
![2020-08-23 08_20_39-Unity 2018 4 26f1 Personal - TooltipExamples unity - MRTK-Public - Universal Win](

## Error message (PrefabSpawner.cs)
NullReferenceException: Object reference not set to an instance of an object
Microsoft.MixedReality.Toolkit.UI.PrefabSpawner+&lt;UpdateSpawnable&gt;d__17.MoveNext () (at Assets/MRTK/SDK/Features/UX/Scripts/Utilities/PrefabSpawner.cs:103)
--- End of stack trace from previous location where exception was thrown ---
System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () (at &lt;e1319b7195c343e79b385cd3aa43f5dc&gt;:0)
System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) (at &lt;e1319b7195c343e79b385cd3aa43f5dc&gt;:0)
System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) (at &lt;e1319b7195c343e79b385cd3aa43f5dc&gt;:0)
System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) (at &lt;e1319b7195c343e79b385cd3aa43f5dc&gt;:0)
System.Runtime.CompilerServices.TaskAwaiter.GetResult () (at &lt;e1319b7195c343e79b385cd3aa43f5dc&gt;:0)
Microsoft.MixedReality.Toolkit.UI.PrefabSpawner+&lt;ShowSpawnable&gt;d__16.MoveNext () (at Assets/MRTK/SDK/Features/UX/Scripts/Utilities/PrefabSpawner.cs:76)
--- End of stack trace from previous location where exception was thrown ---
System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () (at &lt;e1319b7195c343e79b385cd3aa43f5dc&gt;:0)
System.Runtime.CompilerServices.AsyncMethodBuilderCore+&lt;&gt;c.&lt;ThrowAsync&gt;b__6_0 (System.Object state) (at &lt;e1319b7195c343e79b385cd3aa43f5dc&gt;:0)
UnityEngine.UnitySynchronizationContext+WorkRequest.Invoke () (at C:/buildslave/unity/build/Runtime/Export/UnitySynchronizationContext.cs:155)
UnityEngine.UnitySynchronizationContext:ExecuteTasks() (at C:/buildslave/unity/build/Runtime/Export/UnitySynchronizationContext.cs:105)


## To reproduce

Steps to reproduce the behavior:

1. Open TooltipExamples.unity scene
2. Play
3. Click 'Show on Press' object with gaze + tap
4. See console for the error message.

## Your setup (please complete the following information)

- Unity Version 2018.4.26f1
- MRTK Version development branch

</Description>
  </Issue>
  <Issue>
    <IssueID>8358</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>8358</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>8358</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>WindowsMixedRealitySpatialMeshObserver Error: 'PhysicMaterial' is a type, which is not valid in the given context	</Title>
    <CreatedDate>22/08/2020</CreatedDate>
    <ClosedDate>22/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8358</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
After recent pull (8/22) I am getting this error message:
Error	CS0119	**'PhysicMaterial' is a type, which is not valid in the given context**	Microsoft.MixedReality.Toolkit.Providers.WindowsMixedReality	
\MRTK\Providers\WindowsMixedReality\XR2018\WindowsMixedRealitySpatialMeshObserver.cs	667	

It seems like this is typo:
667:                    meshObject.Collider.material = **PhysicMaterial**;

Maybe it should be Physic**s**Material or physic**s**Material

From - 

Using Unity 2018.4.26f1</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>8355</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>8355</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Change default desk orientation offset for Leap Motion Hands</Title>
    <CreatedDate>21/08/2020</CreatedDate>
    <ClosedDate>03/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Leap Motion</Name>
        <IssueID>8355</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Increase the default controller offset values to (0, -0.2, 0.35) so the hands are fully in frame initially in the desk orientation. 

![image](

</Description>
  </Issue>
  <Issue>
    <IssueID>8345</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>UPM registry link invalid / down?</Title>
    <CreatedDate>20/08/2020</CreatedDate>
    <ClosedDate>20/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>8345</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the issue
I'm currently trying to add MRTK to a new Unity3D 2019.4 project, following the [tutorial]( I added the relevant registry entry &amp; dependencies to the manifest but UPM fails to find the packages (2.5.0 as in the tutorial). Could the [registry]( be down, since also I don't get any response opening the link in the Browser?

## Feature area
Is the link incorrect or is the registry down?

## Existing doc link
[Tutorial](
[Registry Link](

## Additional context
Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>8337</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add support for the Leap Motion Unity Modules version 4.5.1</Title>
    <CreatedDate>19/08/2020</CreatedDate>
    <ClosedDate>20/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Leap Motion</Name>
        <IssueID>8337</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Add support for the new release of the Leap Motion Unity Modules version 4.5.1

</Description>
  </Issue>
  <Issue>
    <IssueID>8333</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>8333</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Leap Motion On First Hand Detected just triggers once</Title>
    <CreatedDate>19/08/2020</CreatedDate>
    <ClosedDate>21/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8333</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Leap Motion</Name>
        <IssueID>8333</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

On HandMenuExamples scene the menu is shown just the first time a hand is visible either right or left. When the hand is lost, next time hand is visible events are not triggered (OnFirstHandDetected). 

## To reproduce

Steps to reproduce the behavior:

I made a video to reproduce the behavior :  

## Expected behavior

I expect that the menu is visible every time a PalmUp happens and that the OnFirstHandDetected will reset when a hand is not visible.

## Screenshots

 

## Your setup (please complete the following information)

- Unity Version 2019.4.7f1
- MRTK Version 2.4.0

## Target platform (please complete the following information)

- OpenVR with LeapMotion

## Additional context

I am just running the example from MRTK2
</Description>
  </Issue>
  <Issue>
    <IssueID>8331</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>8331</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>ReflectionTypeLoadException: Exception of type 'System.Reflection.ReflectionTypeLoadException' was thrown.</Title>
    <CreatedDate>19/08/2020</CreatedDate>
    <ClosedDate>21/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8331</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

I wan't to build an App for robot programming for HoloLens 2. To load my robot model, I have to add RosBridgeClient to my Unity3D Scene.

After adding Rossharp I get the following error message:

ReflectionTypeLoadException: Exception of type 'System.Reflection.ReflectionTypeLoadException' was thrown.
System.Reflection.Assembly.GetTypes () (at &lt;567df3e0919241ba98db88bec4c6696f&gt;:0)
Microsoft.MixedReality.Toolkit.Editor.SceneInfoUtils.RefreshCachedTypes () (at Assets/MRTK/Core/Inspectors/PropertyDrawers/SceneInfoUtils.cs:249)
Microsoft.MixedReality.Toolkit.Editor.SceneInfoUtils.InitializeOnLoad () (at Assets/MRTK/Core/Inspectors/PropertyDrawers/SceneInfoUtils.cs:229)

## To reproduce

Steps to reproduce the behavior:

1. Create a new Unity3D Projekt
2. Add the MRTK
3. Clone  and copy rossharp (ros-sharp/Unity3D/Assets/) into your projects assets 
4. See error

## Expected behavior

No ReflectionTypeLoadException: Exception of type 'System.Reflection.ReflectionTypeLoadException' error.

## Screenshots

![SystemReflectionError](

## Your setup (please complete the following information)

- Unity Version 2019.2.15f1
- MRTK Version v2.4.0

## Target platform (please complete the following information)

- HoloLens 2

## Additional context

</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>8326</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Update the MRTK configurator to turn off "Graphics Jobs" by default in Unity 2019</Title>
    <CreatedDate>18/08/2020</CreatedDate>
    <ClosedDate>21/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>8326</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>There's a relatively bad and crippling Unity bug which will crash the app when the "Graphics Jobs" setting is enabled in Unity and the app is deployed to HL2:



The workaround is just to turn off Graphics Jobs until Unity has that fixed, as the effect is quite painful.
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>8325</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Update the MRTK configurator to turn off "Graphics Jobs</Title>
    <CreatedDate>18/08/2020</CreatedDate>
    <ClosedDate>18/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>8325</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]

## Describe the solution you'd like

A clear and concise description of what you want to happen.

## Describe alternatives you've considered

A clear and concise description of any alternative solutions or features you've considered.

## Additional context

Add any other context or screenshots about the feature request here.
</Description>
  </Issue>
  <Issue>
    <IssueID>8318</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Mouse cursor is too big</Title>
    <CreatedDate>18/08/2020</CreatedDate>
    <ClosedDate>18/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8318</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Two mouse pointer cursor related issues:
- Mouse pointer cursor does not move on the device. Sometimes randomly jumps but not properly move. Moves well in the Unity editor.
- Mouse cursor size is too big
![2020-08-18 15_53_51-Unity 2018 4 21f1 -  PREVIEW PACKAGES IN USE  - HandInteractionExamples unity - ](

## To reproduce
Add MouseDeviceManager.
Run HandInteractionExamples scene in the Unity editor and verify that mouse works well.
Build and deploy to HoloLens 2 device.
Pair Bluetooth mouse with HoloLens 2. Verify mouse on the shell (start menu, etc...)
Run the app.
Try to move the mouse. The cursor randomly appears. Click seems working.

![2020-08-18 16_48_53-Unity 2018 4 21f1 -  PREVIEW PACKAGES IN USE  - HandInteractionExamples unity - ](

## Expected behavior
Mouse moves and clicks just like the shell.</Description>
  </Issue>
  <Issue>
    <IssueID>8312</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ARCore is 64-bit instead of 32-bit</Title>
    <CreatedDate>17/08/2020</CreatedDate>
    <ClosedDate>08/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8312</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
2020.08.17 19:43:34.844 15972 16001 Info native arpresto_api.cc:133 ArPresto::ArPresto_setCameraTextureName
2020.08.17 19:43:34.844 15972 16001 Info native arpresto_api.cc:121 ArPresto::ArPresto_setConfiguration
2020.08.17 19:43:34.844 15972 16001 Info native arpresto_api.cc:145 ArPresto::ArPresto_setEnabled
2020.08.17 19:43:34.940 15972 16001 Info native arpresto_api.cc:121 ArPresto::ArPresto_setConfiguration
2020.08.17 19:43:35.070 15972 16001 Info third_party/arcore/ar/core/android/sdk/session_create.cc Entering ArSession_createWithFeatures
2020.08.17 19:43:35.073 15972 16001 Info third_party/arcore/ar/core/android/sdk/session_create.cc ARCore Version: APK version code: 202100503
2020.08.17 19:43:35.074 15972 16001 Info third_party/arcore/ar/core/android/sdk/session_create.cc ARCore Version: SDK build name: 1.9
2020.08.17 19:43:35.245 15972 16001 Info third_party/arcore/ar/core/android/sdk/session_create.cc Dynamite load ok.
2020.08.17 19:43:35.245 15972 16001 Info third_party/arcore/java/com/google/vr/dynamite/client/native/dynamite_client.cc Attempting to load native library arcore_c from package com.google.ar.core
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient Failed to load native library [packageName=com.google.ar.core,libraryName=arcore_c] from remote package:
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient   
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient java.lang.UnsatisfiedLinkError: dlopen failed: "/data/app/com.google.ar.core-Eb8LuRhUs4Bug9_O8JlGiA==/split_config.arm64_v8a.apk!/lib/arm64-v8a/libarcore_c.so" is 64-bit instead of 32-bit
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient 	at java.lang.Runtime.loadLibrary0(Runtime.java:1071)
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient 	at java.lang.Runtime.loadLibrary0(Runtime.java:1007)
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient 	at java.lang.System.loadLibrary(System.java:1667)
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient 	at com.google.vr.dynamite.NativeLibraryLoader.a(PG:32)
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient 	at com.google.vr.dynamite.NativeLibraryLoader.initializeAndLoadNativeLibrary(PG:14)
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient 	at fqd.a(PG:7)
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient 	at afi.onTransact(PG:5)
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient 	at android.os.Binder.transact(Binder.java:914)
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient 	at com.google.a.a.b.a(BaseProxy.java:10)
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient 	at com.google.vr.dynamite.client.b.initializeAndLoadNativeLibrary(INativeLibraryLoader.java:5)
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient 	at com.google.vr.dynamite.client.DynamiteClient.loadNativeRemoteLibrary(DynamiteClient.java:37)
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient 	at com.unity3d.player.UnityPlayer.nativeRender(Native Method)
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient 	at com.unity3d.player.UnityPlayer.access$300(Unknown Source:0)
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient 	at com.unity3d.player.UnityPlayer$e$1.handleMessage(Unknown Source:95)
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient 	at android.os.Handler.dispatchMessage(Handler.java:103)
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient 	at android.os.Looper.loop(Looper.java:237)
2020.08.17 19:43:35.251 15972 16001 Error DynamiteClient 	at com.unity3d.player.UnityPlayer$e.run(Unknown Source:20)
2020.08.17 19:43:35.251 15972 16001 Info third_party/arcore/java/com/google/vr/dynamite/client/native/dynamite_client.cc Dynamite::LoadNativeRemoteLibrary handle=-428404580
2020.08.17 19:43:35.251 15972 16001 Error third_party/arcore/ar/core/android/sdk/session_create.cc LoadDynamite returning AR_ERROR_FATAL.
2020.08.17 19:43:35.251 15972 16001 Error native session_manager.cc:48 ArPresto::ArCore session creation failed.
`</Code>
    <Description>## Describe the bug

The Android build closes immediately after launch with error in log
`java.lang.UnsatisfiedLinkError: dlopen failed: "/data/app/com.google.ar.core- Eb8LuRhUs4Bug9_O8JlGiA==/split_config.arm64_v8a.apk!/lib/arm64-v8a/libarcore_c.so" is 64-bit instead of 32-bit`

ARCore used from plugins, so i cant find any setting to change from 64 to 32 bit.

## To reproduce

1. Create a new app.
2. Add the MRTK Foundation.
3. Add plugins and configure the scene according to 
4. Build and run on your phone

## Expected behavior

An empty scene with a camera image in the background

## Your setup (please complete the following information)

- Unity Version 2019.4.3
- MRTK Version v2.4

## Target platform (please complete the following information)

- Android

## Additional context

Logs:
``
</Description>
  </Issue>
  <Issue>
    <IssueID>8311</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Multi-user capabilities got a "NotImplementedException"</Title>
    <CreatedDate>17/08/2020</CreatedDate>
    <ClosedDate>14/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8311</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
NotImplementedException: The method or operation is not implemented.
MRTK.Tutorials.MultiUserCapabilities.OwnershipHandler.OnInputUp (Microsoft.MixedReality.Toolkit.Input.InputEventData eventData) (at Assets/MRTK.Tutorials.MultiUserCapabilities/Scripts/OwnershipHandler.cs:19)
Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystem+&lt;&gt;c.&lt;.cctor&gt;b__240_18 (Microsoft.MixedReality.Toolkit.Input.IMixedRealityBaseInputHandler handler, UnityEngine.EventSystems.BaseEventData eventData) (at Assets/MRTK/Services/InputSystem/MixedRealityInputSystem.cs:1318)
UnityEngine.EventSystems.ExecuteEvents.Execute[T] (UnityEngine.GameObject target, UnityEngine.EventSystems.BaseEventData eventData, UnityEngine.EventSystems.ExecuteEvents+EventFunction`1[T1] functor) (at D:/all_softwares/unity-editors/2019.3.15f1/Editor/Data/Resources/PackageManager/BuiltInPackages/com.unity.ugui/Runtime/EventSystem/ExecuteEvents.cs:261)
UnityEngine.EventSystems.ExecuteEvents:ExecuteHierarchy(GameObject, BaseEventData, EventFunction`1)
Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystem:DispatchEventToObjectFocusedByPointer(IMixedRealityPointer, BaseInputEventData, Boolean, EventFunction`1) (at Assets/MRTK/Services/InputSystem/MixedRealityInputSystem.cs:653)
Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystem:HandleEvent(BaseEventData, EventFunction`1) (at Assets/MRTK/Services/InputSystem/MixedRealityInputSystem.cs:421)
Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystem:RaiseOnInputUp(IMixedRealityInputSource, Handedness, MixedRealityInputAction) (at Assets/MRTK/Services/InputSystem/MixedRealityInputSystem.cs:1347)
Microsoft.MixedReality.Toolkit.Input.SimulatedArticulatedHand:UpdateInteractions(SimulatedHandData) (at Assets/MRTK/Services/InputSimulation/SimulatedArticulatedHand.cs:114)
Microsoft.MixedReality.Toolkit.Input.SimulatedHand:UpdateState(SimulatedHandData) (at Assets/MRTK/Services/InputSimulation/SimulatedHand.cs:107)
Microsoft.MixedReality.Toolkit.Input.BaseInputSimulationService:UpdateHandDevice(HandSimulationMode, Handedness, SimulatedHandData) (at Assets/MRTK/Services/InputSimulation/BaseInputSimulationService.cs:75)
Microsoft.MixedReality.Toolkit.Input.InputSimulationService:LateUpdate() (at Assets/MRTK/Services/InputSimulation/InputSimulationService.cs:340)
Microsoft.MixedReality.Toolkit.BaseDataProviderAccessCoreSystem:LateUpdate() (at Assets/MRTK/Core/Services/BaseDataProviderAccessCoreSystem.cs:71)
Microsoft.MixedReality.Toolkit.&lt;&gt;c:&lt;LateUpdateAllServices&gt;b__66_0(IMixedRealityService) (at Assets/MRTK/Core/Services/MixedRealityToolkit.cs:963)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:ExecuteOnAllServicesInOrder(Action`1) (at Assets/MRTK/Core/Services/MixedRealityToolkit.cs:1034)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:LateUpdateAllServices() (at Assets/MRTK/Core/Services/MixedRealityToolkit.cs:963)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:LateUpdate() (at Assets/MRTK/Core/Services/MixedRealityToolkit.cs:638)
`</Code>
    <Description>## Description

From the ASA [multi-user capabilities tutorial]( 
Both OnInputUp(), OnOwnershipTransfered() and OnTriggerExit() throw a new NotImplementedException() as ... well, as written in the code. 
It then fire a console error inside the HL2 because of the NotImplementedException() when releasing a select input (for example when grabing and the releasing the rover's body).

## To reproduce

Just follow the ASA [multi-user capabilities tutorial]( from start to bottom.

## Error

``


## Versions

- Unity 2019.3.15f1
- MRTK 2.4.0
- All recommended dependencies versions (ARFoundation, ARCore, Input Helpers).

## Target platform

- HoloLens 2
- Android 

## Additional context

I might be missing an obvious point here : I lack a proper "background" regarding programming so many things/concepts are still "blurry" so pardon me if there is an obvious awnser to this error. The way I see it, it is intended but, why ? 
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>8304</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>8304</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add Constraint Manager to Bounds Control</Title>
    <CreatedDate>14/08/2020</CreatedDate>
    <ClosedDate>18/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>8304</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>8304</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Currently Bounds Control has a min max scale constraint hardcoded.
It would be great to have full constraint manager support for bounds control to allow the same flexibility than object manipulator.

part of #5340 </Description>
  </Issue>
  <Issue>
    <IssueID>8301</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>8301</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>BoundsControl migration shouldn't create config files</Title>
    <CreatedDate>14/08/2020</CreatedDate>
    <ClosedDate>17/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>8301</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>8301</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

now that we have a new solution to store configs for bounds control inline as well, migration should be simplified to lower the barrier for users to use the tool

- change migration code
- remove test migration handler
- remove obsolte config files from existing examples</Description>
  </Issue>
  <Issue>
    <IssueID>8299</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Assembly Definition References instead of regular Assembly Definifions</Title>
    <CreatedDate>14/08/2020</CreatedDate>
    <ClosedDate>14/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>8299</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Currently, just the MRTK uses 55 ASMDEF files. This adds to the time Visual Studio spends on assembly reloads. With Assembly definition references (ASMREFs), taken to the extreme, this could be reduced to just 2.

## Describe the solution you'd like

Using ASMREFs to merge both regular and editor code into their respective Assemblies as much as possible</Description>
  </Issue>
  <Issue>
    <IssueID>8226</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>There is no way to get audio clip for current dictation session</Title>
    <CreatedDate>29/07/2020</CreatedDate>
    <ClosedDate>31/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8226</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
When performing a dictation session, it would be nice to access the audio clip to provide visualization of dictation volume, so that developer could provide feedback that the current user is speaking.</Description>
  </Issue>
  <Issue>
    <IssueID>8224</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Eye tracking examples - 2.5 Updates</Title>
    <CreatedDate>29/07/2020</CreatedDate>
    <ClosedDate>30/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8224</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Following on #7365, this issue tracks revisions and improvements to eye tracking examples that are happening in the 2.5 timeframe.
</Description>
  </Issue>
  <Issue>
    <IssueID>8221</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Input Animation Recording is not working with Leap Motion</Title>
    <CreatedDate>29/07/2020</CreatedDate>
    <ClosedDate>01/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8221</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Leap Motion</Name>
        <IssueID>8221</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
When recording hand input using Input Simulation tools with Leap Motion, hand animation is not recorded at all. (Input recording works perfectly with HoloLens 2)
Only head movement is recorded.

## To reproduce
1. [Configure Leap Motion]( for hand tracking
2. Open the Input Simulation Tools window (_Mixed Reality Toolkit &gt; Utilities &gt; Input SImulation_)
3. _Record_ the hand input
4. _Playback_ shows only the head movement, not hand animation.

## My setup
- Tested in Unity version 2018.4.16f1, 2019.3.7f1, 2019.4.4f1
- MRTK Version v2.4.0
- Leap Motion mounted OpenVR headset

## Target platform
- OpenVR</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>8221</IssueID>
        <PullRequestID>8354</PullRequestID>
        <Title>Add the Leap Motion hand controller to RaiseSourceLost </Title>
        <Description>## Overview

Added the leap controller to RaiseSourceLost in the LeapMotionDeviceManager.

Before this change RaiseSourceLost only took the input source into account but not the specific leap controller.  Because the specific controller was not taken into account, a source lost on the leap hand was not registered.

This change fixes an issue where the hand menu did not get displayed in the correct location after a leap hand was taken out of tracking space and put back in. 

| Before the fix | After the fix|
|---|---|
| ![LeapOnSourceLostBefore]( | ![LeapOnSourceLostAfter](  

## Changes
- Fixes: #8333 


## Verification
&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>21/08/2020</CreatedDate>
        <ClosedDate>21/08/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Leap Motion</Name>
            <IssueID>8221</IssueID>
            <PullRequestID>8354</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>CDiaz-MS</FixedById>
            <PullRequestID>8354</PullRequestID>
            <IssueID>8221</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>8220</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Before jumping into this, could you please answer 1 question?</Title>
    <CreatedDate>28/07/2020</CreatedDate>
    <ClosedDate>04/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>8220</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>How hard would be to jump into a AR HMD not listed as supported?
The HMD already has Unity Support and has the following , 6DoF and Hand Tracking.
is it possible to use this SDK or should i should request an integration to it?

Thanks
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>8220</IssueID>
        <PullRequestID>7639</PullRequestID>
        <Title>Leap Motion Data Provider </Title>
        <Description>## Overview
A [Leap Motion Controller]( is required to use this data provider.

The Leap Motion Data Provider enables articulated hand tracking for VR and could be useful for rapid prototyping in the editor.  The data provider can be configured to use the leap motion controller mounted on a headset or placed on a desk face up.

 `LeapControllerOrientation`: Headset (Default) |  `LeapControllerOrientation`: Desk 
   | :-------------------------:|:-------------------------: |
 ![LeapHeadsetOrientationExampleMetacarpals]( | ![LeapDeskOrientationExampleMetacarpals](
![LeapDevManagerHeadset]( |    ![LeapDevManagerDesk](

### Testing
- Read Verification section below

## Changes
- Fixes: #6076 
- Added initial provider, MRTK/Providers/LeapMotion
- Added new example scene,  MRTK/Examples/Demos/HandTracking/LeapMotionHandTrackingExample
- Added initial documentation 

## TODO
~~- Add menu item to force Leap and MRTK integration for Unity 2018~~
  ~~- Unity 2018 and 2019 behave differently on Leap Motion Core Asset import~~ 
- Add configuration tests

## Verification
Read the documentation on how to test this branch.  There are different steps required to test the data provider if the MRTK source is from the repo instead of a unity package.  The MRTK repo treats warnings as errors but the unity packages do not.  The Leap Motion Core Assets were last released in June 2018 and they contains obsolete warnings.  Our repo then converts the obsolete warnings to errors and halts configuration, this will not be the case once the unity packages are generated.

BEFORE importing the Leap Core assets into the project, **Mixed Reality Toolkit &gt; Utilities &gt; Leap Motion &gt; Configure CSC File for Leap Motion**. Updating the csc file filters out the obsolete warnings produced by the Leap Motion Core Assets.  Unity 2019.3 is recommended for testing.


</Description>
        <CreatedDate>10/04/2020</CreatedDate>
        <ClosedDate>20/04/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Cross Platform</Name>
            <IssueID>8220</IssueID>
            <PullRequestID>7639</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Leap Motion</Name>
            <IssueID>8220</IssueID>
            <PullRequestID>7639</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>8220</IssueID>
        <PullRequestID>8088</PullRequestID>
        <Title>Oculus XRSDK support</Title>
        <Description>## Overview
Adds support for Oculus Touch Controllers using the new XRSDK.

## Addresses
Feature Request: #7272

## Verification
Tested in Unity 2019.4</Description>
        <CreatedDate>22/06/2020</CreatedDate>
        <ClosedDate>02/07/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Feature Branch</Name>
            <IssueID>8220</IssueID>
            <PullRequestID>8088</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Unity 2019</Name>
            <IssueID>8220</IssueID>
            <PullRequestID>8088</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>XR SDK</Name>
            <IssueID>8220</IssueID>
            <PullRequestID>8088</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>RogPodge</FixedById>
            <PullRequestID>8088</PullRequestID>
            <IssueID>8220</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>8219</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>8219</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Solver - broken unexpected behavior on device when built with ARM64</Title>
    <CreatedDate>28/07/2020</CreatedDate>
    <ClosedDate>28/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8219</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Objects using any Solver (RaidialView, HandConstraint, etc) shows unexpected behavior on the device (object squashed, flying, disappeared, etc) when built with ARM64.

- Works fine when built with ARM.
- Works fine in the Unity editor.
</Description>
  </Issue>
  <Issue>
    <IssueID>8208</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>vaoliva</FixedById>
        <IssueID>8208</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Scroll Object Collection inspector should draw the interaction planes </Title>
    <CreatedDate>24/07/2020</CreatedDate>
    <ClosedDate>30/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>8208</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Collections</Name>
        <IssueID>8208</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Scroll Object Collection inspector should draw interaction planes for touch and release around the scroll view. This can help developers on debugging the scroll interaction in the editor.</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>8208</IssueID>
        <PullRequestID>8209</PullRequestID>
        <Title>Scroll View Graduation - Part 3</Title>
        <Description>## Overview
This PR is part of Scroll View graduation and handles the following issues:


 **1. Allow Scroll view to be manipulated / scaled / rotated.**
- Updating the scroll collection when scroll object has scale different than Vector.one gives wrong bounds dimension to the clipping box.
- Adjusted clipping box local scale calculation to account for parents scale. Tests added.

_Clipping box after parent scale is doubled:_
![Screenshot (48)](

**2. Make sure pagination works as expected.** 

- Moving scroll by Tiers or by page gives weird results, causing the scroll container to get stuck or move only a limited amount of tiers when using left-right scroll view. 


_Before change:_
![scroll_pagination_before](

_After change:_
![scroll_pagination_after](

**3. Scroll Object Collection inspector should draw the interaction planes.**

_After change:_
![Screenshot (45)](

## Changes
- Fixes: #7451
- Fixes: #7450
- Fixes: #8208
</Description>
        <CreatedDate>24/07/2020</CreatedDate>
        <ClosedDate>30/07/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Bug</Name>
            <IssueID>8208</IssueID>
            <PullRequestID>8209</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>UX Controls - Collections</Name>
            <IssueID>8208</IssueID>
            <PullRequestID>8209</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>vaoliva</FixedById>
            <PullRequestID>8209</PullRequestID>
            <IssueID>8208</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>8201</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spatial Observer on Hololens 1 when using XR SDK</Title>
    <CreatedDate>22/07/2020</CreatedDate>
    <ClosedDate>24/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8201</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>XR SDK</Name>
        <IssueID>8201</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Bug Description

When using MRTK 2.4.0 with the Unity XR SDK to develop for Hololens 1, the Spatial Observer Mesh is offset dramatically from reality.

## Issue Reproduction

- Create a new project, import MRTK 2.4.0 (Foundation, Tools and Extensions)
- Switch Platform to UWP (Device: Hololens, Architecture: x86)
- Add the XR Plugin Management package using Unity's Package Manager
- Use MRTK Utilities to apply project Settings and configure the scene
- Configure MRTK to use the XR SDK Profile
- Activate the Spatial Observer with visible Mesh
- Export to Hololens and enjoy the offset environment mapping

## Expected behavior

Same as without using XR SDK.

## Screenshots

Not noticable in screenshots, because it's a depth offset.

## Your setup (please complete the following information)

- Unity Version 2019.4.4f1
- MRTK Version 2.4.0

## Target platform (please complete the following information)

- HoloLens 1 using XR SDK

## Additional context

- Clean project, no overhead stuff running, tried different Spatial Observers other than "XR SDK Windows Mixed Reality Spatial Mesh Observer", which should be the right one.
</Description>
  </Issue>
  <Issue>
    <IssueID>8193</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hand Menu - 2.5 Updates</Title>
    <CreatedDate>20/07/2020</CreatedDate>
    <ClosedDate>23/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8193</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Following on #7365, this issue tracks revisions and improvements to the hand menu that are happening in the 2.5 timeframe.

</Description>
  </Issue>
  <Issue>
    <IssueID>8187</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Zee2</FixedById>
        <IssueID>8187</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Two-handed near manipulation is broken with `ObjectManipulator` and `ManipulationHandler`</Title>
    <CreatedDate>18/07/2020</CreatedDate>
    <ClosedDate>21/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8187</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Near Interaction</Name>
        <IssueID>8187</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Interactions</Name>
        <IssueID>8187</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Two-hand near manipulation does not produce the intended manipulation when the hands are rotated slightly while performing the interaction. Instead of moving the object smoothly, the manipulation point wiggles around and wobbles unpredictably, preventing the user from precisely manipulating the object with two hands.

&lt;img src=" width=450px&gt;

## To reproduce

Steps to reproduce the behavior:

1. Load the hand interaction example scene.
2. Grab one of the objects with two hands.
3. While holding on to the object with two hands, rotate your hands inwards and outwards slowly.
4. Observe the erratic behavior.

## Expected behavior
The object should be smoothly manipulated with no discontinuities, wobbles, or wiggles! A GIF is attached of the correct behavior. 

&lt;img src=" width=450px&gt;

## Your setup (please complete the following information)

- Unity 2018.4.23f1
- MRTK v2.4

## Target platform (please complete the following information)

- HoloLens 2

## Additional context

I am currently in the process of submitting a PR for this fix.
</Description>
  </Issue>
  <Issue>
    <IssueID>8185</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoloLens 2 Unity 2019.4 build works only in Debug mode</Title>
    <CreatedDate>17/07/2020</CreatedDate>
    <ClosedDate>21/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8185</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

I'm currently creating  an HoloLens 2 application and i m facing a weird issue. I'm used to placing some sprites, 3D models and  interact with a Hand menu. If i m building for the device I'm choosing to set in ARM64 Release the deploying.
Then no sprites appear, no hand menu works but the 3D Models are fine.
When I try it in Debug ARM64 everything works fine but with FPS dropping specific to debug mode.

## To reproduce

Steps to reproduce the behavior:

1. Create Unity 2019.4 project
2. Import MRTK 2.4
3. Set a simple scene with : sprites, 3D Models and Hand menu (Hand Constraint Palm Up)
4. Build it : x64, Release
5. On Visual Studio, deploy : ARM64 Release

## Expected behavior

Everything should work in any case whether it's in Master, Release or Debug.

## Your setup (please complete the following information)

- Unity Version 2019.4.0f1
- MRTK Version 2.4

## Target platform (please complete the following information)

- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>8176</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>8176</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>SR_Triangles shader is missing from MRTK SDK</Title>
    <CreatedDate>15/07/2020</CreatedDate>
    <ClosedDate>09/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8176</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

`MRTK/SDK/Experimental/PulseShader/Materials/MRTK_SurfaceReconstruction.mat` is missing a shader in the Foundation package. 

The shader its missing seems to be `SR_Triangles` which is in the `MRTK/Extensions` package `MRTK/Extensions/LostTrackingService/Assets/SR_Triangles.shader`.

## To reproduce

Steps to reproduce the behavior:

Find
`MRTK/SDK/Experimental/PulseShader/Materials/MRTK_SurfaceReconstruction.mat` after importing just the `MRTK Foundation` package in a new project. Observe that it has a missing shader.

## Expected behavior

The missing shader should be included in the foundation package.

## Screenshots

![image](


## Your setup (please complete the following information)

- Unity Version [e.g. 2019.4.1f1]
- MRTK Version [e.g. v2.4] (Foundation Package Only)

## Target platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>8163</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>8163</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>GazeProvider ignores override if stabilizer is used</Title>
    <CreatedDate>10/07/2020</CreatedDate>
    <ClosedDate>20/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8163</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Gaze</Name>
        <IssueID>8163</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

If the gaze stabilizer is used (which, currently due to the way it's serialized, it's impossible to _not_ use), then the `newGaze*` values are overwritten 100% of the time with the `gazeTransform` values instead.



This blocks any gaze overrides, like the existing implementation to pass `SpatialPointerPose.Head` on WMR devices.

## Additional context


</Description>
  </Issue>
  <Issue>
    <IssueID>8161</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>8161</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>The Dependency Window does not consider files within packages.</Title>
    <CreatedDate>10/07/2020</CreatedDate>
    <ClosedDate>10/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8161</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Files that exist within the unity Packages folder do not get tracked by the Dependency Window. This could be especially bad if the MRTK is a package within a project.

## To reproduce

Steps to reproduce the behavior:

1. Open the Dependency Window.
2. Click on a file that lives within a package.
3. See warning:
![image](

## Expected behavior

Files in packages are considered when dependency checking.

## Your setup (please complete the following information)

- Unity Version 2018.4.20f1
- MRTK Version 2.5

## Target platform (please complete the following information)

- Editor
</Description>
  </Issue>
  <Issue>
    <IssueID>8153</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HandPhysicsService NullReferenceException when PalmKinematicBodyPrefab is set</Title>
    <CreatedDate>07/07/2020</CreatedDate>
    <ClosedDate>07/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8153</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When the PalmKinematicBodyPrefab is set in HandPhysicsMixedRealityRegisteredServiceProdersProfile, a Null reference exception will be thrown on start. This then prevents you from doing anything in the scene.

## To reproduce

Steps to reproduce the behavior:

- Open the HandPhysicsServiceExample in MRTK/Extensions/HandPhsyicsService/Examples
- Open Extensions in the MixedRealityToolkit
- Press "Copy &amp; Customize" then press "Clone" on the pop up
- Press "Clone" on the HandPhysicsMixedRealityRegisteredServiceProvider then press "Clone" on the pop up
- Assign any game object to Palm Kinematic Body Prefab
- Run the scene

## Expected behavior

Should run as normal and allow physics interaction with the palm.

## Screenshots

![mrtkExtensions](
![nullError](

## Your setup

- Unity Version 2019.3.4f1
- MRTK Version 2.4.0

## Target platform

- HoloLens 2

## Additional context

Seems like it happens as the set method for both PalmKinematicBodyPrefab and FingerTipKinematicBodyPrefab calls CreateKinematicBodies and is ran before the Enable method which initialises HandPhysicsServiceRoot. This problem doesn't come up when only FingerTipKinematicBodyPrefab is assigned as there is check for the prefab being null before HandPhysicsServiceRoot is used. The prefab is then assigned and the same method gets called by PalmKinematicBodyPrefab where the null check for finger prefab passes fine. </Description>
  </Issue>
  <Issue>
    <IssueID>8148</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>vaoliva</FixedById>
        <IssueID>8148</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Scroll Object collection should only engage if touch comes from front of scroll slate</Title>
    <CreatedDate>06/07/2020</CreatedDate>
    <ClosedDate>09/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8148</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>
Scroll Object collection should only engage in a drag if touch comes from the front of scroll slate. At the moment if user moves hand from the back or sides of scroll background the scroll engage will also be triggered. This does not match Shell behavior.

![scroll_touch_from_back](

</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>8148</IssueID>
        <PullRequestID>8154</PullRequestID>
        <Title>scroll view graduation part 2</Title>
        <Description>## Overview
This PR is part of Scroll View graduation and addresses the following issues / fixes:

 #8148 
- **Issue:** Scroll Object collection should only engage if touch comes from front of scroll slate but currently the user is able to trigger scroll even when hand comes from behind, top, bottom or sides of the scroll slate
- **Fix:** Checking for previous position of poke pointer when touch started is handled
![scroll_touch_from_back](


 #8064 
- **Issue:** Currently there is no safe way of deleting child items from scroll collection. Destroying an object throw errors on console.
- **Fix:** Added methods for safely for adding and deleting items.
![image](

MissingReferenceException: The object of type 'BoxCollider' has been destroyed but you are still trying to access it.
Your script should either check if it is null or you should not destroy the object.
Microsoft.MixedReality.Toolkit.Experimental.UI.ScrollingObjectCollection.HideItems () (at Assets/MRTK/SDK/Experimental/ScrollingObjectCollection/ScrollingObjectCollection.cs:1664)
Microsoft.MixedReality.Toolkit.Experimental.UI.ScrollingObjectCollection.LateUpdate () (at Assets/MRTK/SDK/Experimental/ScrollingObjectCollection/ScrollingObjectCollection.cs:1038

#7449 . 
- **Issue:** scroll view should allow for near interaction area buffer in front, back, top, bottom and sides of scroll slate boundary o match shell behaviour. Currently only front buffer exists. 
- **Fix:** Exposing near interaction releaseThreshoulds for different axis / sides
![scroll_buffer](


This PR is based on the Event Propagation feature branch.

- Fixes #8148
- Fixes #7449  
- Fixes #8064 
</Description>
        <CreatedDate>08/07/2020</CreatedDate>
        <ClosedDate>09/07/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Bug</Name>
            <IssueID>8148</IssueID>
            <PullRequestID>8154</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>UX Controls - Collections</Name>
            <IssueID>8148</IssueID>
            <PullRequestID>8154</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>vaoliva</FixedById>
            <PullRequestID>8154</PullRequestID>
            <IssueID>8148</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>8141</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MixedRealityKeyboard trigger exception when opening the first time</Title>
    <CreatedDate>02/07/2020</CreatedDate>
    <ClosedDate>15/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8141</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
For an application at the HL1 I am building a form and want to use the expirmental MixedRealityKeyboard for an tmp inputfield, when I am tapping at the inputfield for the first time the MixedRealityKeyboard triggers an exception in UnityEngine.CoreModule1.cpp while debugging. If I try it without debugging the keyboard opens, close directly and opens again.

## Expected behavior
If I tap the first time on a TMP_Inputfield the MixedRealityKeyboard opens with no exception

## Actual behavior
In debug mode gives the MixedRealityKeyboard if he opens the first time an exception in UnityEngine.CoreModule1.cpp.
Without debugging the keyboard opens, close directly and opens again.

## Steps to reproduce
1. Create a Canvas with CanvasUtility and NearInteractionTouchableUnit components.
2. Create InputField (TMP)
3. Add TMP_KeyboardInput
4. Build and deploy at HL1

## Unity editor version
Unity 2019.2.20f1

## Mixed Reality Toolkit release version
MRTK 2.4

![image](
![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>8140</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>vaoliva</FixedById>
        <IssueID>8140</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Eye tracking gaze hidding</Title>
    <CreatedDate>02/07/2020</CreatedDate>
    <ClosedDate>12/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8140</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Customer Feedback</Name>
        <IssueID>8140</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>8140</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The eye tracking gaze cursor is hidden if I create a PokePointer in Input Setttings of MRTK. In the MRTK 2.3, I can show both, but un 2.4 is not possible. I follow the migration instrunction for eye tracking, and when I delete the PokePointer, the eyetracking pointer is showing

## To reproduce

The eye tracking works until a PokePointer or DefaultControllerPointer enter in the field of view. After that, the system is not restore the eyetracking cursor even if my hands are not in the field of view. In the MRTK 2.3, all system can be exist, now it would seem that no.

## Expected behavior

Both cursors showed

## Screenshots

## Your setup (please complete the following information)

- Unity Version 2018.4.23f1
- MRTK Version 2.4

## Target platform (please complete the following information)

- HoloLens 2

## Additional context
</Description>
  </Issue>
  <Issue>
    <IssueID>8138</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>8138</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>EyeTrackingTarget can raise multiple pointer clicked events</Title>
    <CreatedDate>02/07/2020</CreatedDate>
    <ClosedDate>09/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8138</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Multiple pointers such as grab and hand ray pointer can cause EyeTrackingTarget to fire OnClicked several times in a row when a hand pinches.</Description>
  </Issue>
  <Issue>
    <IssueID>8132</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>No hand tracking on Unity 2019.4 Holographic Remoting</Title>
    <CreatedDate>01/07/2020</CreatedDate>
    <ClosedDate>02/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8132</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Like said on the title, the hand tracking doesn't work on the Unity Holographic Remoting. I only got the line and the pointer of my hands for far interactions.

## To reproduce

Steps to reproduce the behavior:

1. Create Scene with MRTK ("Add to scene...")
2. Launch Holographic Remoting 
3. Place Hands face to the device and see

## Expected behavior

Using Holographic Remoting should show and use the hands for near interaction, hand menu, etc.

## Your setup (please complete the following information)

- Unity Version 2019.4/.1 - VR legacy (no XR SDK)
- MRTK Version 2.4

## Target platform (please complete the following information)

- HoloLens 2


## Additional context
I'm using the Holographic remoting with usb connection (wifi disable).
</Description>
  </Issue>
  <Issue>
    <IssueID>8131</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>8131</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Documentation shouldn't start on the development version</Title>
    <CreatedDate>01/07/2020</CreatedDate>
    <ClosedDate>24/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>8131</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the issue

By default, the documentation web site start on the mrtk_development branch. Most users are using the release versions for their productions, searching in the documentation could be dangerous if the information are not the same.

Example : A Coworker of mine was searching for a specific function, he found it on the doc but this was only available on the develpment branch, he didn't see the difference and was wondering why he can't find it his script.

## Feature area

I think it should be better if we start by default on the latest release documentation.
</Description>
  </Issue>
  <Issue>
    <IssueID>8130</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HL2 iris recognition</Title>
    <CreatedDate>01/07/2020</CreatedDate>
    <ClosedDate>14/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>8130</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi sir,  I'm looking for the iris recognition solution and hitting this topic by chance. May I know what Windows APIs we can use for the HL2 iris recognition and where I can find them?  I've looked into the HL2 documentation but unluckily no relevant stuff found.
Thanks so much in advance.</Description>
  </Issue>
  <Issue>
    <IssueID>8126</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>8126</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>In the HandInteractionExamples scene, the Cube2 object has two ObjectManipulator scripts attached to it. </Title>
    <CreatedDate>30/06/2020</CreatedDate>
    <ClosedDate>16/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8126</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

In the HandInteractionExamples scene, the ManipulationExamples/Cube2 object has two ObjectManipulator scripts attached to it. I don't think this causes a problem, but should probably be fixed so people who edit it don't get confused.

## To reproduce

1. Download MRTK Examples.2.4.0.unitypackage and add to new project
2. Look in the HandInteractionExamples  at the "Cube2" object
3. See two ObjectManipulator scripts

## Expected behavior

I think it should just have one of those scripts, like the other manipulable objects. People who edit this object might be confused, especially if they change the ObjectManipulator settings and they get overwritten by the ghost duplicate.

## Your setup (please complete the following information)

- Unity Version 2018.4.21f1
- MRTK Version 2.4.0

</Description>
  </Issue>
  <Issue>
    <IssueID>8113</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SharingService Schema Version </Title>
    <CreatedDate>29/06/2020</CreatedDate>
    <ClosedDate>29/06/2020</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When I imported all the packages and set my scene up correctly and I try to join my SharingService server I get the error of having an invalid schema version.

## Expected behavior

![expected](



## Actual behavior
![Error](


## Steps to reproduce
I set up my project just to have a simple object that tries to connect to the server so that I can eliminate other factors.

I created a new project
Imported HoloToolkit
Arranged all objects and configured all settings (projects and inspectors)
And finally the tricky part I think:
I create these folders External/HoloToolki/Sharing/Server, with the SharingService.exe inside that I got from Microsoft "MR Sharing 240: Multiple HoloLens devices". 

It seems I don't have the right / latest version of the SharingService.exe, is that correct?
But every time I'm looking for a GitHub link for the latest version, I come up against a 404 page.

![SharingS404](

## Unity editor version
2018.4.23f1

## Mixed Reality Toolkit release version
HoloToolkit-Unity-2017.4.1.0</Description>
  </Issue>
  <Issue>
    <IssueID>8104</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>The static class 'Rest' collides with Microsoft.Rest.ClientRuntime</Title>
    <CreatedDate>25/06/2020</CreatedDate>
    <ClosedDate>26/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8104</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Several Azure SDK nuget packages that are part of the cognitive services (Custom Vision, Bot Framework, etc.) family have a dependency to the package **Microsoft.Rest.ClientRuntime** which collides with the helper static class [Rest](

This makes using those otherwise compatible packages impossible and forces to write your own custom client to those Azure services.

## To reproduce

Steps to reproduce the behavior:

- Download one of the Microsoft.Azure.CognitiveServices packages from nuget.org
- Download the dependent Microsoft.Rest.ClientRuntime package from nuget.org
- Unpack the nuget packages and place the .Net Standard based .dll files into your Unity Plugins folder
- MRTK classes that uses the Rest helper class will complain that it can't associate Rest anymore to a namespace.

## Workaround

Rename the Rest helper class to something else, but this breaks upgrading to future MRTK versions.

## Additional context

Solution: Rename [Rest]( to something like **RestHelper**.</Description>
  </Issue>
  <Issue>
    <IssueID>8098</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>8098</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>NonNativeKeyboard is missing several events</Title>
    <CreatedDate>24/06/2020</CreatedDate>
    <ClosedDate>03/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8098</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
The class is missing several events which could be useful:

1. Event fired when char key on keyboard is pressed.
2. Event fired when function key on keyboard is pressed.
</Description>
  </Issue>
  <Issue>
    <IssueID>8092</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>8092</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Implement flexible code preservation for UPM packages</Title>
    <CreatedDate>23/06/2020</CreatedDate>
    <ClosedDate>02/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Package Management - UPM</Name>
        <IssueID>8092</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Unity's linker does byte code stripping to reduce the size of packages. This can impact MRTK as services and data providers are referenced in scriptable objects and not in code.

The plan is to do the following:

* As part of MRTK &gt; Add to scene and configure

Look in Assets for a link.xml file. If not present, add one. Then add options to preserve the minimum amount of code to enable all services and providers.

* [Stretch goal] add MRTK &gt; Configure MRTK code preservation

Read the link.xml file (create if not present) and display the currently configured MRTK component that are preserved. Allow customers to easily opt in / out of specific code.

Customers could then customize further as desired. 

Documentation on what MRTK adds and why will also be part of this change.</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>8092</IssueID>
        <PullRequestID>8058</PullRequestID>
        <Title>Lay the foundation for supporting UPM packaging of MRTK</Title>
        <Description>This change updates the MixedRealityToolkitFiles class to support MRTK residing either the Assets (direct import) or Packages (UPM import) folders. Tests have been added for the new file path processing functionality.

One additional change is to shorten the length of the Wndows Mixed Reality Configuration Checker assembly name as it causes issues due to an increased path length when imported via UPM.

NOTE: This change does not create UPM packages. That change will follow at a later time.</Description>
        <CreatedDate>15/06/2020</CreatedDate>
        <ClosedDate>25/06/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Package Management - UPM</Name>
            <IssueID>8092</IssueID>
            <PullRequestID>8058</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>davidkline-ms</FixedById>
            <PullRequestID>8058</PullRequestID>
            <IssueID>8092</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>8089</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>8089</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>BoundsExtensions GetColliderBoundsPoints cannot compute relative to another transform</Title>
    <CreatedDate>23/06/2020</CreatedDate>
    <ClosedDate>23/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8089</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
BoundsExtensions.GetColliderBoundsPoints only computes the bounds of a collider in world space, it would be nice to be able to get these points relative to another transform.
</Description>
  </Issue>
  <Issue>
    <IssueID>8087</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Blank build and multiple duplicate providers after build</Title>
    <CreatedDate>22/06/2020</CreatedDate>
    <ClosedDate>22/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8087</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Brand new project setup and built yesterday using MRTK 2.3 and 2.4 successfully to HoloLens 2, same project with minor changes (game object names etc.) shows multiple duplicate providers under MixedRealityToolkit object and the application on device opens without any content (including missing hand rays or any other functionality).

Additional side note. When this happens, it sometimes messes with HoloLens 2 system menu, i.e. System Menu appears offset from hand position. This issue sometimes persists after the app is closed until device restart.

## To reproduce

Steps to reproduce the behavior:

1. Build a HoloLens 2 app using MRTK 2.3 or 2.4 with DefaultHoloLens2ConfigurationProfile and Unity 2019.2.6f1
2. Deploy to HoloLens 2 using VS 2019 (remote machine). Run the app on HoloLens 2 and confirm that it works properly.
3. Restart unity project. Change something minor such as a scene object name. Build project into a different folder. Uninstal previous build from device. Deploy new build the same way.
4. Run the app on HoloLens. Observe blank application. Observe Unity project now has multiple duplicate providers.

## Expected behavior

Build should show content properly

## Screenshots

If applicable, add screenshots to help explain your problem.
![image](


## Your setup (please complete the following information)

- Unity 2019.2.6f1
- Target SDK Version 10.0.19041.0
- Minimum Platform Version 10.0.10240.0
- Same issue with MRTK v2.3 and v2.4

## Target platform (please complete the following information)

- HoloLens 2


## Additional context

This issue occurred on existing project, so we created a new project from scratch. Same issue with the new project. What worked fine yesterday is failing today.

Old build works fine after uninstalling new build from device and re-installing the old one.
</Description>
  </Issue>
  <Issue>
    <IssueID>8080</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MaxWang-MS</FixedById>
        <IssueID>8080</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>TapToPlace.StartPlacement Ignored if Called Before Start</Title>
    <CreatedDate>19/06/2020</CreatedDate>
    <ClosedDate>16/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8080</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Help Wanted</Name>
        <IssueID>8080</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>8080</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

If **StartPlacement** is called on **TapToPlace** before the **TapToPlace** component has started, the request will never be fulfilled and no error is generated.

This is due to an `If` condition in the `Start` method of **TapToPlace**. The condition checks to see if `AutoStart` is **false**. If `AutoStart` is **false**, `SolverHandler.UpdateSolvers` is also set to **false**.

## Expected behavior

In Unity it's not very easy to control the starting order of behaviors. Therefore, a behavior that references and uses **TapToPlace** may get started before **TapToPlace** itself. If the controlling behavior calls **StartPlacement** before **TapToPlace** has started, I would expect **TapToPlace** to begin working once it has started.

One may ask "Why not just set `TapToPlace.AutoStart` to true?" The problem is that the controlling behavior may decide whether to start in Placing mode or Creating mode based on previously saved data. Therefore whether or not TapToPlace should start is up to the calling component. If the calling component just sets `AutoStart = true` in this case, that may not work either if TapToPlace was actually started first.

## Your setup (please complete the following information)

- Unity Version 2019.2.21f1
- MRTK Version 2.4

## Target platform (please complete the following information)

- HoloLens 2</Description>
  </Issue>
  <Issue>
    <IssueID>8078</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can I get raw point clouds?</Title>
    <CreatedDate>19/06/2020</CreatedDate>
    <ClosedDate>22/06/2020</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I want to know how to get not mesh data but raw point clouds data.
Does such a method exist?</Description>
  </Issue>
  <Issue>
    <IssueID>8069</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Is there a way to force webcam to stop when in use?</Title>
    <CreatedDate>18/06/2020</CreatedDate>
    <ClosedDate>18/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>8069</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem
During the webrtc streaming it happens that the webcam component freezes if sudden disconnections occur. Unfortunately, it becomes impossible to stop it, so the hololens continues to record (red icon on the top left). I wanted to know if there was a way to force the camera to stop using some mrtk logic.

## Describe the solution you'd like
A command to force the use of the webcam to stop
</Description>
  </Issue>
  <Issue>
    <IssueID>8068</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>vaoliva</FixedById>
        <IssueID>8068</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Scroll View should allow for engage with empty background areas</Title>
    <CreatedDate>17/06/2020</CreatedDate>
    <ClosedDate>29/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8068</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
This issue is part of Scroll View graduation. 
Engaging with empty spaces on scroll view corners or in between scroll view children is currently not supported. This feature should be implemented in order to achieve shell parity of the UX component behavior.

![scroll_empty_before](
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>8068</IssueID>
        <PullRequestID>8091</PullRequestID>
        <Title>Scroll Graduation </Title>
        <Description>## Overview
This PR is part of Scroll View graduation and addresses the following issues / fixes:

 #7444, #7445, #7447 .
- **Issue:** When user engage in a scroll drag, pointer, touch, and input event data have eventData.used set to true on Scroll Object Collection. MixedRealityInputSystem halts event dispatch if event data is used by global listener, so children buttons cannot proper receive OnTouchCompleted events. 
- **Fix:** using propagation event routing, events dispatch is not stopped when eventdata.used == true. Tests added.
![scroll_reset_before](

 #7446 .
- **Issue:** Scroll engage should trigger children interaction reset
- **Fix:** Instead of directly accessing children code, focus on children is unlocked and moved to a scroll background collider setup on runtime. Tests added.

 #8068 .
- **Issue:** Scroll View should allow for engage with empty background areas
- **Fix:** the scroll view now has a near touchable setup during runtime to receive focus and enable catch of events from empty areas without the need for global event subscription. Tests added.
 ![scroll_empty_before]( 

#7448 .
- **Issue:** Sometimes Scroll position jumps when interacting with children.
- **Fix:** Removed timed check for detection of drag and zeroed hand delta when drag scroll starts. Tests added.
![scroll_jump_before](

## Other changes

- **Pointer event handler workaround** - 
ScrollObjectCollection was subscribing as a global listener for pointer events. During pointer event handling a check for event target in the list of scroll children was also required. To improve performance a proposed workaround makes global registration only temporary in between a pointer down and a pointer up. Other solution ideas are welcome.

- Deleted input handler implementation as no need to talk directly with interactable.cs children
- pointer handler interface only receives propagation events, but register for global when drag starts
- Changed velocityMultiplier and handDeltaMagThreshould to incorporate magic numbers
- Changed velocityMultiplier and handDeltaMagThreshould default values on demo scenes and prefabs
- Exposed ScrollObjectCollection isEngaged for tests

This PR is based on the Event Propagation feature branch.

- Fixes #7444
- Fixes #7445 
- Fixes #7446 
- Fixes #8068 
- Fixes #7447
- Fixes #7448 
  
</Description>
        <CreatedDate>23/06/2020</CreatedDate>
        <ClosedDate>29/06/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Bug</Name>
            <IssueID>8068</IssueID>
            <PullRequestID>8091</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>UX Controls - Collections</Name>
            <IssueID>8068</IssueID>
            <PullRequestID>8091</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>vaoliva</FixedById>
            <PullRequestID>8091</PullRequestID>
            <IssueID>8068</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>8065</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MaxWang-MS</FixedById>
        <IssueID>8065</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>LogError shows when hide/reload DockExample objects. </Title>
    <CreatedDate>16/06/2020</CreatedDate>
    <ClosedDate>15/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8065</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Help Wanted</Name>
        <IssueID>8065</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## LogError shows when hide/reload DockExample objects. 

The dock feature still working when the error shows in console panel. However, when it runs on mobile device like Quest, the docking speed seems much slower than on PC. 
The LogError is "AssertionException: Assertion failure. Value was Null
Expected: Value was not Null
When a dockable is docked, its dockedPosition must be valid.
UnityEngine.Assertions.Assert.Fail (System.String message, System.String userMessage) (at &lt;23a7799da2e941b88c6db790c607d655&gt;:0)
UnityEngine.Assertions.Assert.IsNotNull (UnityEngine.Object value, System.String message) (at &lt;23a7799da2e941b88c6db790c607d655&gt;:0)
UnityEngine.Assertions.Assert.IsNotNull[T] (T value, System.String message) (at &lt;23a7799da2e941b88c6db790c607d655&gt;:0)
Microsoft.MixedReality.Toolkit.Experimental.UI.Dockable.Update () (at Assets/MRTK/SDK/Experimental/Dock/Dockable.cs:133)"

## To reproduce

Steps to reproduce the behavior:

1. Add two buttons in MRTK example scene.
Button one: Hide the DockExample object group in Hierarchy panel with "GameObject.SetActive" value=off.
Button two: Show the DockExample object group in Hierarchy panel with "GameObject.SetActive" value=on.

2. Click button one to hide the DockExample object group, then click button two to show the group, then the debug.LogError will keep coming.

## Expected behavior

The debug.LogError will keep coming in Console panel.

## Screenshots

&lt;img width="693" alt="ErrorCapture" src="


## Your setup (please complete the following information)

- Unity Version [e.g. 2019.3.14f1]
- MRTK Version [e.g. v2.4.0]

## Target platform (please complete the following information)

- Oculus Quest
- Oculus Rift


</Description>
  </Issue>
  <Issue>
    <IssueID>8064</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>vaoliva</FixedById>
        <IssueID>8064</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>What is a right way to delete object from Scrolling Object Collection?</Title>
    <CreatedDate>16/06/2020</CreatedDate>
    <ClosedDate>09/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>8064</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I want to add and remove objects inside Scrolling Object Collection.
Adding is not a problem, but when i am trying to remove object using this code:
`Destroy(ScrollBar.Find("Container").Find("test3")?.gameObject);
ScrollBar.GetComponent&lt;ScrollingObjectCollection&gt;().UpdateCollection()`
I get this:
![image](
and also exceptions:

&gt; MissingReferenceException: The object of type 'BoxCollider' has been destroyed but you are still trying to access it.
Your script should either check if it is null or you should not destroy the object.
Microsoft.MixedReality.Toolkit.Experimental.UI.ScrollingObjectCollection.HideItems () (at Assets/MRTK/SDK/Experimental/ScrollingObjectCollection/ScrollingObjectCollection.cs:1664)
Microsoft.MixedReality.Toolkit.Experimental.UI.ScrollingObjectCollection.LateUpdate () (at Assets/MRTK/SDK/Experimental/ScrollingObjectCollection/ScrollingObjectCollection.cs:1038

Is there a better way to remove object?

Specs: Unity 2018.4, MRTK 2.4.0, Hololens 1st gen</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>8064</IssueID>
        <PullRequestID>8154</PullRequestID>
        <Title>scroll view graduation part 2</Title>
        <Description>## Overview
This PR is part of Scroll View graduation and addresses the following issues / fixes:

 #8148 
- **Issue:** Scroll Object collection should only engage if touch comes from front of scroll slate but currently the user is able to trigger scroll even when hand comes from behind, top, bottom or sides of the scroll slate
- **Fix:** Checking for previous position of poke pointer when touch started is handled
![scroll_touch_from_back](


 #8064 
- **Issue:** Currently there is no safe way of deleting child items from scroll collection. Destroying an object throw errors on console.
- **Fix:** Added methods for safely for adding and deleting items.
![image](

MissingReferenceException: The object of type 'BoxCollider' has been destroyed but you are still trying to access it.
Your script should either check if it is null or you should not destroy the object.
Microsoft.MixedReality.Toolkit.Experimental.UI.ScrollingObjectCollection.HideItems () (at Assets/MRTK/SDK/Experimental/ScrollingObjectCollection/ScrollingObjectCollection.cs:1664)
Microsoft.MixedReality.Toolkit.Experimental.UI.ScrollingObjectCollection.LateUpdate () (at Assets/MRTK/SDK/Experimental/ScrollingObjectCollection/ScrollingObjectCollection.cs:1038

#7449 . 
- **Issue:** scroll view should allow for near interaction area buffer in front, back, top, bottom and sides of scroll slate boundary o match shell behaviour. Currently only front buffer exists. 
- **Fix:** Exposing near interaction releaseThreshoulds for different axis / sides
![scroll_buffer](


This PR is based on the Event Propagation feature branch.

- Fixes #8148
- Fixes #7449  
- Fixes #8064 
</Description>
        <CreatedDate>08/07/2020</CreatedDate>
        <ClosedDate>09/07/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Bug</Name>
            <IssueID>8064</IssueID>
            <PullRequestID>8154</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>UX Controls - Collections</Name>
            <IssueID>8064</IssueID>
            <PullRequestID>8154</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>vaoliva</FixedById>
            <PullRequestID>8154</PullRequestID>
            <IssueID>8064</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>8063</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Solver can not effect in unity2019.3</Title>
    <CreatedDate>16/06/2020</CreatedDate>
    <ClosedDate>16/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8063</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

in hololens2,When I use unity2018.4, the solver may be used, but the cups in unity2019.3 solver case are missing, why?

## To reproduce

Steps to reproduce the behavior:

1. Go to '...'
2. Click on '....'
3. Scroll down to '....'
4. See error

## Expected behavior

A clear and concise description of what you expected to happen.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>8062</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Only one lens is displaying when using holographic remoting</Title>
    <CreatedDate>16/06/2020</CreatedDate>
    <ClosedDate>16/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8062</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Only the left lens is displaying when using holograohic remoting and there is no error thrown or whatsoever

## To reproduce

Steps to reproduce the behavior:

I basically followed the procedure here : 

The bug happens at least with Unity 2019.2.21f1 and Unity 2019.3.7.f1, maybe with other versions (not tested)

## Expected behavior

The holographic rendering should be displayed on the 2 lenses 

## Your setup (please complete the following information)

- Unity 2019.2.21f1 or Unity 2019.3.7.f1
- MRTK Version 2.3.0

## Target platform (please complete the following information)

- HoloLens 2


</Description>
  </Issue>
  <Issue>
    <IssueID>8057</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MixedRealityCanvasInspector editor script Screen Space - Camera error</Title>
    <CreatedDate>15/06/2020</CreatedDate>
    <ClosedDate>15/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8057</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When dragging a camera into a Screen Space - Camera canvas in the inspector the MixedRealityCanvasInspector throws an error.

## To reproduce

Steps to reproduce the behavior:

1. Create a Canvas
2. Set Render Mode to Screen Space - Camera
3. Drag camera into Render Camera
4. MixedRealityCanvasInspector throw an error

"TargetParameterCountException: Number of parameters specified does not match the expected number."

## Expected behavior

The camera can be dragged into the Render Camera field without any errors.

## Your setup (please complete the following information)

- Unity Version 2019.4.0f1
- MRTK Version 2.3.0

## Target platform

- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>8056</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>the slover in unity editor can work,but in hololens2 ,the obejct is not show</Title>
    <CreatedDate>15/06/2020</CreatedDate>
    <ClosedDate>15/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8056</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

A clear and concise description of what the bug is.

## To reproduce

Steps to reproduce the behavior:

1. Go to '...'
2. Click on '....'
3. Scroll down to '....'
4. See error

## Expected behavior

A clear and concise description of what you expected to happen.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>8055</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SolverExamples can not use</Title>
    <CreatedDate>15/06/2020</CreatedDate>
    <ClosedDate>15/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8055</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

A clear and concise description of what the bug is.

## To reproduce

Steps to reproduce the behavior:

1. Go to '...'
2. Click on '....'
3. Scroll down to '....'
4. See error

## Expected behavior

A clear and concise description of what you expected to happen.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>8053</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>8053</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>TapToPlace Overwrites Surface Normal Offset</Title>
    <CreatedDate>14/06/2020</CreatedDate>
    <ClosedDate>18/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8053</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>8053</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

No matter what value is specified in the inspector, when **Start** is called in **TapToPlace.cs**, this value is overwritten with the bounds size. 

## To reproduce

Steps to reproduce the behavior:

1. Add a **BoxCollider** to an object. Set the **Size** to 0.3, 0.2, 0.3.
2. Add **SolverHandler** and **TapToPlace** to the same object.
3. In the inspector for **TapToPlace**, set **Surface Normal Offset** to **0.001**.
4. Run the app and notice that the **Surface Normal Offset** has been replaced with **0.1500001**

## Expected behavior

I could understand possibly overwriting this value if none had been specified. But if if the user specifies a value, I don't think it should be overwritten.

## Your setup (please complete the following information)

- Unity Version 2019.2.21f1
- MRTK Version v2.4

## Target platform (please complete the following information)

- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>8051</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Forces Optional for ObjectManipulator on RigidBody</Title>
    <CreatedDate>14/06/2020</CreatedDate>
    <ClosedDate>31/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>8051</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

When **ObjectManipulator** is used on an object which also has a **RigidBody**, significant lag will be perceived when using near manipulations. The object will trail behind the hand, even if **Smoothing** is **Off** and **Physics Release Behavior** is set to **Nothing**.

## Describe the solution you'd like

The root cause of this issue can be found in the **ApplyTargetTransform** method of **ObjectManipulator.cs**. 

When the **GameObject** has a **RigidBody**, **ApplyTargetTransform** uses forces (**RigidBody.velocity** and **RigidBody.angularVelocity**) to update the transform. However, when the user is attempting to grab the object with their hand, this approach makes the object feel laggy and not properly connected to the hand.

When being manipulated through a near interaction, I would like **ObjectManipulator** to use **RigidBody.MovePostion** and **RigidBody.MoveRotation** instead of using forces. This approach still updates **RigidBody** physics, but allows the object to move almost instantly and match the hand.

It's worth noting that, in my opinion, this approach should only be used for _near_ interactions. When performing far interactions through a tether, the original implementation using forces feels correct. In many cases the tether should stretch rather than allowing the object to "plow through" another object. This is especially true if the object being manipulated has less mass.

Therefore, I would like forces to be optional for near interactions and I would like them to default to _off_.

Finally, I've found that when using **MovePosition** and **MoveRotation** it's best to temporarily disable gravity. Really, gravity doesn't need to be on while manipulating object anyway, even if the manipulation is a far interaction. I recommend gravity be paused during manipulation.

## Describe alternatives you've considered

I tried changing many configuration options within **ObjectManipulator** and **RigidBody**, but I could not reduce the lag without making the proposed code changes.

## Additional context

I have completed an implementation of my proposed solution, which I will submit as a pull request shortly.</Description>
  </Issue>
  <Issue>
    <IssueID>8043</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>calibration of rgb cameras and the Holo Coordinate System</Title>
    <CreatedDate>11/06/2020</CreatedDate>
    <ClosedDate>11/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>8043</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hello,

I have a task: the rgb cameras capture object, eg. Checkerboard, then Hololens can process the pictures and produce the space information, eg. R and T, of the object. So I can place a virtual object at the same location of the Holographic System.

My question is: is there any APIs in MRTK can achieve this? Or If I achieve the calibration through OpenCV to get the R and T, but the R and T are based on RGB cameras, how to associate RGB cameras and Holographic System (e.g. the 3D coordinate of RGB cameras in Holographic System)?

Thanks very much for any tips!
</Description>
  </Issue>
  <Issue>
    <IssueID>8040</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>8040</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Remove TargetTransform from TransformConstraint </Title>
    <CreatedDate>10/06/2020</CreatedDate>
    <ClosedDate>27/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8040</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

TargetTransform is not working and the way it's currently used will only cause problems in future. 
The transform the constraint operates on is passed from the manager, so we shouldn't define anything in the base constraint component. 

Noticed this while porting over to MRTK unreal and already removed there. </Description>
  </Issue>
  <Issue>
    <IssueID>8039</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>App crash with left display going white and right display hanging</Title>
    <CreatedDate>10/06/2020</CreatedDate>
    <ClosedDate>10/06/2020</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I have recently deployed my new scene built in Unity to hololens. When the app is started, the app crashes with the left eye display showing just white screen and right eye display flickering with menu trails. Display is not working but I am able to hear the background sound from video I have inside app. The app works fine when I deploy examples scenes from Mixedrealitytoolkit. Crashing only when I include my own scene
## Expected behavior
App running smoothly with all functionalities
## Actual behavior
App getting hanged with left display going full white and right display with flickering screen
## Steps to reproduce
_(Links to sample github project preferred)_

## Unity editor version
2019.1.10f1

## Mixed Reality Toolkit release version
MRTK 2.1.0

#Hololens version
17763.316

#hololens Images
[left Eye Image](

[Right Eye Image](

#VisualStudioLog
[VisualStudioLog](</Description>
  </Issue>
  <Issue>
    <IssueID>8038</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>8038</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Movement in playmode very slow</Title>
    <CreatedDate>10/06/2020</CreatedDate>
    <ClosedDate>10/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8038</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Bug description
The movement (WASD) in playmode is very slow, like 1 meter in 10 seconds. This behaviour occurs if the _DefaultHoloLen**1**ConfigurationProfile_ is selected. With _DefaultHoloLen**2**ConfigurationProfile_, the movement is like 1 meter per second. 

Steps to reproduce the behavior:

1. open an example scene (HandInteractionExamples)   
2. select the _DefaultHoloLen**1**ConfigurationProfile_ in the MixedRealityToolkit script  
3. Start playmode, move around with WASD and observe the position of the MainCamera  
4. Stop playmode and change to _DefaultHoloLen**2**ConfigurationProfile_ in the MixedRealityToolkit script  
5.  Start playmode again and compare the speed of the movement with WASD.  

## Expected behavior

The WASD movement speed in _DefaultHoloLen1ConfigurationProfile_  and _DefaultHoloLen2ConfigurationProfile_  should be the same.

## My setup

- Unity Version 2018.4.22
- MRTK Version: 2.4 and latest development commit 

## Target platform

- Unity Editor (playmode)
</Description>
  </Issue>
  <Issue>
    <IssueID>8036</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Edit Object Manipulator constraints programmatically</Title>
    <CreatedDate>10/06/2020</CreatedDate>
    <ClosedDate>10/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>8036</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>It seems impossible to setup ObjectManipulator constraints programmatically since the ConstraintsManager is private. 

The need is to add ObjectManipulator at runtime on objects and set it up with some settings, including constraints on rotation (e.g. only local Y-axis).
</Description>
  </Issue>
  <Issue>
    <IssueID>8031</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>8031</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Consider moving "Enable MS Build for Unity" from the config dialog to the MRTK menu</Title>
    <CreatedDate>09/06/2020</CreatedDate>
    <ClosedDate>13/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Configuration</Name>
        <IssueID>8031</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>8031</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MSBuild</Name>
        <IssueID>8031</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The functionality of the configuration dialog is such that if an option is left unselected, the user is prompted on every project load unless they accept the option or click Ignore.

We have received feedback that this is intrusive and that the primary cause is the Enable MSBuild for Unity option.

I propose we move this option to the Mixed Reality Toolkit menu and update the documentation to point to the new location. It will add one additional step for users wishing to use the feature, while simplifying the flow for truly optional settings.

Long term, MSBuild for Unity will be removed from MRTK in favor of a new (likely UPM) dependency resolution system.

</Description>
  </Issue>
  <Issue>
    <IssueID>8030</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>In unity development, some shaders can only be displayed in one spectacle lens</Title>
    <CreatedDate>09/06/2020</CreatedDate>
    <ClosedDate>09/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8030</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

In unity development, some shader can only be displayed in one spectacle lens

## To reproduce

I used my object using the shader of TextMeshPro/sprite and found that the object appeared with only one eye.

## Expected behavior

Hope this problem can be solved

## Screenshots

 

## Your setup (please complete the following information)

- Unity Version [e.g. 2019.3.14f1]
- MRTK Version [e.g. v2.4.0]

## Target platform (please complete the following information)


- HoloLens 2
 
</Description>
  </Issue>
  <Issue>
    <IssueID>8028</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MaxWang-MS</FixedById>
        <IssueID>8028</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>FollowMeToggle trigger an error if AutoFollowAtDistance and the gameobject is disabled</Title>
    <CreatedDate>08/06/2020</CreatedDate>
    <ClosedDate>21/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8028</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>8028</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

FollowMeToggle  trigger the following callstack at startup when AutoFollowAtDistance  is enabled and the gameobject that host AutoFollowAtDistance  is disabled.
`Coroutine couldn't be started because the the game object 'Models menu' is inactive!
UnityEngine.MonoBehaviour:StartCoroutine(IEnumerator)
Microsoft.MixedReality.Toolkit.UI.FollowMeToggle:set_AutoFollowAtDistance(Boolean) (at Assets/MRTK/SDK/Features/UX/Scripts/Slate/FollowMeToggle.cs:59)
Microsoft.MixedReality.Toolkit.UI.FollowMeToggle:OnValidate() (at Assets/MRTK/SDK/Features/UX/Script`

## To reproduce

Add NearMenu2x4.prefab to a scene, check AutoFollowAtDistance in the the FollowMeToggle , disable the whole prefab and run the scene.

## Expected behavior

Nothing should happen.

## Target platform

- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>8023</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>8023</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>unable to find profiles when installed via UPM</Title>
    <CreatedDate>05/06/2020</CreatedDate>
    <ClosedDate>02/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8023</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>8023</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Package Management</Name>
        <IssueID>8023</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Package Management - UPM</Name>
        <IssueID>8023</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>While experimenting with UPM installs, it was discovered that the MRTK.Files lookup does not properly account for MRTK residing in the library folder.

![image](
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>8023</IssueID>
        <PullRequestID>8058</PullRequestID>
        <Title>Lay the foundation for supporting UPM packaging of MRTK</Title>
        <Description>This change updates the MixedRealityToolkitFiles class to support MRTK residing either the Assets (direct import) or Packages (UPM import) folders. Tests have been added for the new file path processing functionality.

One additional change is to shorten the length of the Wndows Mixed Reality Configuration Checker assembly name as it causes issues due to an increased path length when imported via UPM.

NOTE: This change does not create UPM packages. That change will follow at a later time.</Description>
        <CreatedDate>15/06/2020</CreatedDate>
        <ClosedDate>25/06/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Package Management - UPM</Name>
            <IssueID>8023</IssueID>
            <PullRequestID>8058</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>davidkline-ms</FixedById>
            <PullRequestID>8058</PullRequestID>
            <IssueID>8023</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>8021</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>LeapMotionConfigurationChecker throw an IndexOutOfBoundsException when using MRTK through NuGet packages</Title>
    <CreatedDate>05/06/2020</CreatedDate>
    <ClosedDate>05/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8021</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When consuming the MRTK through NuGet, the LeapMotionConfigurationChecker throw an IndexOutOfBoundException here:

System.IndexOutOfRangeException: Index was outside the bounds of the array.
  at Microsoft.MixedReality.Toolkit.LeapMotion.LeapMotionConfigurationChecker.ConfigureLeapMotion (System.Boolean isLeapInProject) [0x0000c] in F:\AOPBUILD03\_work\6\s\Assets\MRTK\Providers\LeapMotion\Editor\ConfigurationChecker\LeapMotionConfigurationChecker.cs:106 
  at Microsoft.MixedReality.Toolkit.LeapMotion.LeapMotionConfigurationChecker..cctor () [0x001d6] in F:\AOPBUILD03\_work\6\s\Assets\MRTK\Providers\LeapMotion\Editor\ConfigurationChecker\LeapMotionConfigurationChecker.cs:71 
UnityEditor.EditorAssemblies:ProcessInitializeOnLoadAttributes() (at C:/buildslave/unity/build/Editor/Mono/EditorAssemblies.cs:168)


This prevents our product from consuming new MRTK drops with the change that introduced this issue, as it causes errors to be emitted during build that fails our build pipeline.

## To reproduce

1. Install the MRTK in a Unity project via its NuGet packaged assemblies.
2. Open any scene using the MRTK in the Unity editor.

## Your setup (please complete the following information)

- Unity Version 2018.4.16f1
- MRTK Version 2.5.0-20200604.2
</Description>
  </Issue>
  <Issue>
    <IssueID>8007</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>IOException: Win32 IO returned 234. Path: C:\Program Files (x86)\Windows Kits\10\References\10.0.18362.0\Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingContract</Title>
    <CreatedDate>02/06/2020</CreatedDate>
    <ClosedDate>02/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8007</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
After I switch platform to UWP, and it appears IOException: Win32 IO returned 234. Path: C:\Program Files (x86)\Windows Kits\10\References\10.0.18362.0\Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingContract\2.0.0.0\Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingContract.winmd" error when I press "build" button. I want to know why this situation appeared and how to solve, could someone help me? Thanks very much.
First, I used Windows Mixed Reality Check to check if my computer to apply mixed reality, the result showed it can and the checked result as follows.
Windows Mixed Reality 电脑检查结果[20200602-110005]
Tool Version: 0.2.0.0
Spec Version: 74


Ok  操作系统    Windows 10 Fall Creators Update 或更高版本
Ok  图形卡     NVIDIA GeForce RTX 2070
Ok  图形驱动程序  25.21.14.1722 (WDDM 2.5)
Ok  CPU     Intel(R) Core(TM) i7-9700K CPU @ 3.60GHz
Ok  RAM     16 GB
Ok  磁盘空间    361 GB
Ok  USB     3.0+
Ok  蓝牙      4.0+


------------------------------
  以下数据仅供疑难解答使用，且仅使用英语（美国）呈现。
------------------------------


Bluetooth: Ok
  &gt; BluetoothVersion            : Ok  [Target: 6                                  ]  [Actual: 8                                  ]
  &gt; DalBluetooth                : Ok  [Target: true                               ]  [Actual: true                               ]
  &gt; DeviceDescription           : Ok  [Target: Qualcomm Atheros QCA61x4 Bluetooth ]  [Actual: Qualcomm Atheros QCA61x4 Bluetooth ]
  &gt; DriverVersion               : Ok  [Target: 10.0.0.714                         ]  [Actual: 10.0.0.714                         ]
  &gt; FirmwareVersion             : Ok  [Target: HCI 8.0 / LMP 8.602                ]  [Actual: HCI 8.0 / LMP 8.602                ]
  &gt; Manufacturer                : Ok  [Target: Qualcomm                           ]  [Actual: Qualcomm                           ]
  &gt; RadioPresent                : Ok  [Target: true                               ]  [Actual: true                               ]
  &gt; RadioPresentIsDisabled      : Ok  [Target: false                              ]  [Actual: false                              ]
  &gt; SupportsLE                  : Ok  [Target: true                               ]  [Actual: true                               ]
  &gt; SupportsRequiredStates      : Ok  [Target: true                               ]  [Actual: true                               ]
  &gt; SupportsSecureSimplePairing : Ok  [Target: true                               ]  [Actual: true                               ]

Cpu: Ok
  &gt; DalCpu                    : Ok  [Target: 0              ]  [Actual: 0                                                                   ]
  &gt; KnownCpu                  : Ok  [Target: NotFoundOnList ]  [Actual: Intel(R) Core(TM) i7-9700K CPU @ 3.60GHz,GenuineIntel,13,14,9,6,0,0 ]
  &gt; LogicalCores              : Ok  [Target: 4              ]  [Actual: 8                                                                   ]
  &gt; MinSpeedMhz               : Ok  [Target: 1600           ]  [Actual: 3600                                                                ]
  &gt; PhysicalCores             : Ok  [Target: 2              ]  [Actual: 8                                                                   ]
  &gt; SupportsAvxInstruction    : Ok  [Target: true           ]  [Actual: true                                                                ]
  &gt; SupportsPopcntInstruction : Ok  [Target: true           ]  [Actual: true                                                                ]

Disk: Ok
  &gt; DalDisk   : Ok  [Target: true        ]  [Actual: true         ]
  &gt; FreeSpace : Ok  [Target: 10485760000 ]  [Actual: 387659812864 ]

Gpu: Ok
  &gt; BestGpuDegradedByHybridPartner        : Ok  [Target: false          ]  [Actual: false                    ]
  &gt; BestGpuDriverEvaluation               : Ok  [Target: AnyValidDriver ]  [Actual: 25.21.14.1722 (WDDM 2.5) ]
  &gt; BestGpuHardwareEvaluation             : Ok  [Target: AnyValidGpu    ]  [Actual: NVIDIA GeForce RTX 2070  ]
  &gt; BestGpuOverallEvaluation              : Ok  [Target: AnyValidGpu    ]  [Actual: NVIDIA GeForce RTX 2070  ]
  &gt; BestGpuOverallHybridPartnerEvaluation : Ok  [Target: AnyValidGpu    ]  [Actual: NotFound                 ]
  &gt; DalGpu                                : Ok  [Target: true           ]  [Actual: true                     ]
  &gt; HmdAttachedGpuDriverEvaluation        : Ok  [Target: AnyValidDriver ]  [Actual: NotFound                 ]
  &gt; HmdAttachedGpuSufficient              : Ok  [Target: AnyValidGpu    ]  [Actual: NotFound                 ]
  &gt; HmdFoundCount                         : Ok  [Target: 0              ]  [Actual: 0                        ]
  &gt; IntegratedGpuHasDualChannelMemory     : Ok  [Target: 0              ]  [Actual: 0                        ]

Memory: Ok
  &gt; DalMemory : Ok  [Target: true       ]  [Actual: true        ]
  &gt; Quantity  : Ok  [Target: 8388608000 ]  [Actual: 17179869184 ]

Os: Ok
  &gt; DalOs          : Ok  [Target: true      ]  [Actual: true      ]
  &gt; IsVM           : Ok  [Target: false     ]  [Actual: false     ]
  &gt; OsSkuSupported : Ok  [Target: Supported ]  [Actual: Supported ]
  &gt; Version        : Ok  [Target: 16000     ]  [Actual: 17763     ]

SystemThermal: Ok
  &gt; DalCpu                   : Ok  [Target: 0                      ]  [Actual: 0                                                                                ]
  &gt; DalGpu                   : Ok  [Target: 0                      ]  [Actual: 0                                                                                ]
  &gt; DalSmbios                : Ok  [Target: 0                      ]  [Actual: 0                                                                                ]
  &gt; SystemOnThermalWhitelist : Ok  [Target: NotRequiredOnWhitelist ]  [Actual: Dell Inc.,XPS,XPS 8930,0859,Intel(R) Core(TM) i7-9700K CPU @ 3.60GHz,32902,16024 ]

Usb: Ok
  &gt; DalUsb                      : Ok  [Target: true  ]  [Actual: true      ]
  &gt; ErrorControllerCount        : Ok  [Target: 0     ]  [Actual: 0         ]
  &gt; FastestSpeedAvailable       : Ok  [Target: 3     ]  [Actual: 3         ]
  &gt; FoundHmd                    : Ok  [Target: false ]  [Actual: false     ]
  &gt; HmdPortIsSelfPowered        : Ok  [Target: false ]  [Actual: false     ]
  &gt; HmdPortSpeed                : Ok  [Target: 0     ]  [Actual: 0         ]
  &gt; NonBlockingControllerCount  : Ok  [Target: 1     ]  [Actual: 3         ]
  &gt; OkControllerCount           : Ok  [Target: 1     ]  [Actual: 3         ]


----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------


&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;MrrEvaluation ToolVersion="0.2.0.0" SpecVersion="74" TelemetryID="{63C4B554-B930-42C7-942E-9A0EFA3DE508}" Status="Ok"&gt;
  &lt;ComponentType Name="Bluetooth" Status="Ok"&gt;
    &lt;Attribute Name="BluetoothVersion" Status="Ok" ActualValue="8" TargetValue="6" /&gt;
    &lt;Attribute Name="DalBluetooth" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
    &lt;Attribute Name="DeviceDescription" Status="Ok" ActualValue="Qualcomm Atheros QCA61x4 Bluetooth" TargetValue="Qualcomm Atheros QCA61x4 Bluetooth" /&gt;
    &lt;Attribute Name="DriverVersion" Status="Ok" ActualValue="10.0.0.714" TargetValue="10.0.0.714" /&gt;
    &lt;Attribute Name="FirmwareVersion" Status="Ok" ActualValue="HCI 8.0 / LMP 8.602" TargetValue="HCI 8.0 / LMP 8.602" /&gt;
    &lt;Attribute Name="Manufacturer" Status="Ok" ActualValue="Qualcomm" TargetValue="Qualcomm" /&gt;
    &lt;Attribute Name="RadioPresent" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
    &lt;Attribute Name="RadioPresentIsDisabled" Status="Ok" ActualValue="false" TargetValue="false" /&gt;
    &lt;Attribute Name="SupportsLE" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
    &lt;Attribute Name="SupportsRequiredStates" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
    &lt;Attribute Name="SupportsSecureSimplePairing" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
  &lt;/ComponentType&gt;
  &lt;ComponentType Name="Cpu" Status="Ok"&gt;
    &lt;Attribute Name="BrandString" Status="Ok" ActualValue="Intel(R) Core(TM) i7-9700K CPU @ 3.60GHz" TargetValue="" /&gt;
    &lt;Attribute Name="DalCpu" Status="Ok" ActualValue="0" TargetValue="0" /&gt;
    &lt;Attribute Name="KnownCpu" Status="Ok" ActualValue="Intel(R) Core(TM) i7-9700K CPU @ 3.60GHz,GenuineIntel,13,14,9,6,0,0" TargetValue="NotFoundOnList" /&gt;
    &lt;Attribute Name="LogicalCores" Status="Ok" ActualValue="8" TargetValue="4" /&gt;
    &lt;Attribute Name="MinSpeedMhz" Status="Ok" ActualValue="3600" TargetValue="1600" /&gt;
    &lt;Attribute Name="PhysicalCores" Status="Ok" ActualValue="8" TargetValue="2" /&gt;
    &lt;Attribute Name="SupportsAvxInstruction" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
    &lt;Attribute Name="SupportsPopcntInstruction" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
  &lt;/ComponentType&gt;
  &lt;ComponentType Name="Disk" Status="Ok"&gt;
    &lt;Attribute Name="DalDisk" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
    &lt;Attribute Name="FreeSpace" Status="Ok" ActualValue="387659812864" TargetValue="10485760000" /&gt;
  &lt;/ComponentType&gt;
  &lt;ComponentType Name="Gpu" Status="Ok"&gt;
    &lt;Attribute Name="BestGpuDegradedByHybridPartner" Status="Ok" ActualValue="false" TargetValue="false" /&gt;
    &lt;Attribute Name="BestGpuDriverEvaluation" Status="Ok" ActualValue="25.21.14.1722 (WDDM 2.5)" TargetValue="AnyValidDriver" /&gt;
    &lt;Attribute Name="BestGpuHardwareEvaluation" Status="Ok" ActualValue="NVIDIA GeForce RTX 2070" TargetValue="AnyValidGpu" /&gt;
    &lt;Attribute Name="BestGpuOverallEvaluation" Status="Ok" ActualValue="NVIDIA GeForce RTX 2070" TargetValue="AnyValidGpu" /&gt;
    &lt;Attribute Name="BestGpuOverallHybridPartnerEvaluation" Status="Ok" ActualValue="NotFound" TargetValue="AnyValidGpu" /&gt;
    &lt;Attribute Name="DalGpu" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
    &lt;Attribute Name="HmdAttachedGpuDriverEvaluation" Status="Ok" ActualValue="NotFound" TargetValue="AnyValidDriver" /&gt;
    &lt;Attribute Name="HmdAttachedGpuSufficient" Status="Ok" ActualValue="NotFound" TargetValue="AnyValidGpu" /&gt;
    &lt;Attribute Name="HmdFoundCount" Status="Ok" ActualValue="0" TargetValue="0" /&gt;
    &lt;Attribute Name="IntegratedGpuHasDualChannelMemory" Status="Ok" ActualValue="0" TargetValue="0" /&gt;
    &lt;Component Name="Intel(R) UHD Graphics 630" Status="Ok"&gt;
      &lt;Attribute Name="BlacklistedDriver" Status="Ok" ActualValue="Intel(R) UHD Graphics 630,Intel Corporation,Intel Corporation,11/18/2018 00:00:00,2786148352/30703313,25.20.100.6374,6559974/1638420,2" TargetValue="NotFoundOnList" /&gt;
      &lt;Attribute Name="DedicatedVideoMemory" Status="Ok" ActualValue="134217728" TargetValue="134217728" /&gt;
      &lt;Attribute Name="HybridPartnerMeetsRequirements" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
      &lt;Attribute Name="IsRenderOnlyHardwareDevice" Status="Ok" ActualValue="false" TargetValue="false" /&gt;
      &lt;Attribute Name="IsSoftwareOnlyDevice" Status="Ok" ActualValue="false" TargetValue="false" /&gt;
      &lt;Attribute Name="KnownGpu" Status="Ok" ActualValue="PCI\VEN_8086&amp;amp;DEV_3E98&amp;amp;SUBSYS_08591028&amp;amp;REV_02" TargetValue="Whitelist" /&gt;
      &lt;Attribute Name="MeetsPcieLinkWidthRequirement" Status="Ok" ActualValue="0" TargetValue="0" /&gt;
      &lt;Attribute Name="MeetsPcieMaxLinkSpeedRequirement" Status="Ok" ActualValue="0" TargetValue="0" /&gt;
      &lt;Attribute Name="SupportsDX12" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
      &lt;Attribute Name="SupportsRealtimeCqp" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
      &lt;Attribute Name="UnsupportedCpuGpuCombo" Status="Ok" ActualValue="cpu/gpu combination satisfies conditions" TargetValue="i3 cpu cannot be paired with only Intel HD Graphics 620" /&gt;
      &lt;Attribute Name="WddmVersion" Status="Ok" ActualValue="2.5" TargetValue="2.2" /&gt;
    &lt;/Component&gt;
    &lt;Component Name="Microsoft Basic Render Driver" Status="Error"&gt;
      &lt;Attribute Name="BlacklistedDriver" Status="Ok" ActualValue="Microsoft 基本呈现驱动程序,Microsoft,Microsoft,06/21/2006 00:00:00,2743894016/29791429,10.0.17763.1,1164115969/655360,2" TargetValue="NotFoundOnList" /&gt;
      &lt;Attribute Name="DedicatedVideoMemory" Status="Ok" ActualValue="0" TargetValue="0" /&gt;
      &lt;Attribute Name="HybridPartnerMeetsRequirements" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
      &lt;Attribute Name="IsRenderOnlyHardwareDevice" Status="Ok" ActualValue="false" TargetValue="false" /&gt;
      &lt;Attribute Name="IsSoftwareOnlyDevice" Status="Error" ActualValue="true" TargetValue="false" /&gt;
      &lt;Attribute Name="KnownGpu" Status="Untested" ActualValue="PCI\VEN_1414&amp;amp;DEV_008C" TargetValue="NotFoundOnList" /&gt;
      &lt;Attribute Name="MeetsPcieLinkWidthRequirement" Status="Ok" ActualValue="0" TargetValue="0" /&gt;
      &lt;Attribute Name="MeetsPcieMaxLinkSpeedRequirement" Status="Ok" ActualValue="0" TargetValue="0" /&gt;
      &lt;Attribute Name="SupportsDX12" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
      &lt;Attribute Name="SupportsRealtimeCqp" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
      &lt;Attribute Name="UnsupportedCpuGpuCombo" Status="Ok" ActualValue="cpu/gpu combination satisfies conditions" TargetValue="i3 cpu cannot be paired with only Intel HD Graphics 620" /&gt;
      &lt;Attribute Name="WddmVersion" Status="Ok" ActualValue="2.5" TargetValue="2.2" /&gt;
    &lt;/Component&gt;
    &lt;Component Name="NVIDIA GeForce RTX 2070" Status="Ok"&gt;
      &lt;Attribute Name="BlacklistedDriver" Status="Ok" ActualValue="NVIDIA GeForce RTX 2070,NVIDIA,NVIDIA,11/29/2018 00:00:00,2023522304/30705526,25.21.14.1722,919226/1638421,2" TargetValue="NotFoundOnList" /&gt;
      &lt;Attribute Name="DedicatedVideoMemory" Status="Ok" ActualValue="8421113856" TargetValue="8421113856" /&gt;
      &lt;Attribute Name="HybridPartnerMeetsRequirements" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
      &lt;Attribute Name="IsRenderOnlyHardwareDevice" Status="Ok" ActualValue="false" TargetValue="false" /&gt;
      &lt;Attribute Name="IsSoftwareOnlyDevice" Status="Ok" ActualValue="false" TargetValue="false" /&gt;
      &lt;Attribute Name="KnownGpu" Status="Ok" ActualValue="PCI\VEN_10DE&amp;amp;DEV_1F02&amp;amp;SUBSYS_12FE1028&amp;amp;REV_A1" TargetValue="Whitelist" /&gt;
      &lt;Attribute Name="MeetsPcieLinkWidthRequirement" Status="Ok" ActualValue="16" TargetValue="0" /&gt;
      &lt;Attribute Name="MeetsPcieMaxLinkSpeedRequirement" Status="Ok" ActualValue="3" TargetValue="0" /&gt;
      &lt;Attribute Name="SupportsDX12" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
      &lt;Attribute Name="SupportsRealtimeCqp" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
      &lt;Attribute Name="UnsupportedCpuGpuCombo" Status="Ok" ActualValue="cpu/gpu combination satisfies conditions" TargetValue="i3 cpu cannot be paired with only Intel HD Graphics 620" /&gt;
      &lt;Attribute Name="WddmVersion" Status="Ok" ActualValue="2.5" TargetValue="2.2" /&gt;
    &lt;/Component&gt;
  &lt;/ComponentType&gt;
  &lt;ComponentType Name="Memory" Status="Ok"&gt;
    &lt;Attribute Name="DalMemory" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
    &lt;Attribute Name="Quantity" Status="Ok" ActualValue="17179869184" TargetValue="8388608000" /&gt;
  &lt;/ComponentType&gt;
  &lt;ComponentType Name="Os" Status="Ok"&gt;
    &lt;Attribute Name="DalOs" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
    &lt;Attribute Name="IsVM" Status="Ok" ActualValue="false" TargetValue="false" /&gt;
    &lt;Attribute Name="OsSkuSupported" Status="Ok" ActualValue="Supported" TargetValue="Supported" /&gt;
    &lt;Attribute Name="Version" Status="Ok" ActualValue="17763" TargetValue="16000" /&gt;
  &lt;/ComponentType&gt;
  &lt;ComponentType Name="SystemThermal" Status="Ok"&gt;
    &lt;Attribute Name="DalCpu" Status="Ok" ActualValue="0" TargetValue="0" /&gt;
    &lt;Attribute Name="DalGpu" Status="Ok" ActualValue="0" TargetValue="0" /&gt;
    &lt;Attribute Name="DalSmbios" Status="Ok" ActualValue="0" TargetValue="0" /&gt;
    &lt;Attribute Name="SystemOnThermalWhitelist" Status="Ok" ActualValue="Dell Inc.,XPS,XPS 8930,0859,Intel(R) Core(TM) i7-9700K CPU @ 3.60GHz,32902,16024" TargetValue="NotRequiredOnWhitelist" /&gt;
  &lt;/ComponentType&gt;
  &lt;ComponentType Name="Usb" Status="Ok"&gt;
    &lt;Attribute Name="DalUsb" Status="Ok" ActualValue="true" TargetValue="true" /&gt;
    &lt;Attribute Name="ErrorControllerCount" Status="Ok" ActualValue="0" TargetValue="0" /&gt;
    &lt;Attribute Name="FastestSpeedAvailable" Status="Ok" ActualValue="3" TargetValue="3" /&gt;
    &lt;Attribute Name="FoundHmd" Status="Ok" ActualValue="false" TargetValue="false" /&gt;
    &lt;Attribute Name="HmdPortControllerEvaluation" Status="Ok" ActualValue="Not found" TargetValue="" /&gt;
    &lt;Attribute Name="HmdPortIsSelfPowered" Status="Ok" ActualValue="false" TargetValue="false" /&gt;
    &lt;Attribute Name="HmdPortSpeed" Status="Ok" ActualValue="0" TargetValue="0" /&gt;
    &lt;Attribute Name="NonBlockingControllerCount" Status="Ok" ActualValue="3" TargetValue="1" /&gt;
    &lt;Attribute Name="OkControllerCount" Status="Ok" ActualValue="3" TargetValue="1" /&gt;
    &lt;Component Name="Intel(R) USB 3.0 可扩展主机控制器 - 1.0 (Microsoft)" Status="Ok"&gt;
      &lt;Attribute Name="Powered30PortCount" Status="Ok" ActualValue="10" TargetValue="1" /&gt;
      &lt;Attribute Name="UsbControllerDriverBlacklisted" Status="Ok" ActualValue="USBXHCI/10.0.17763.1075/02/20/2020 00:00:00" TargetValue="" /&gt;
      &lt;Attribute Name="UsbControllerHardwareBlacklisted" Status="Ok" ActualValue="41647/32902/0" TargetValue="" /&gt;
    &lt;/Component&gt;
    &lt;Component Name="NVIDIA USB 3.10 可扩展主机控制器 - 1.10 (Microsoft)" Status="Ok"&gt;
      &lt;Attribute Name="Powered30PortCount" Status="Ok" ActualValue="4" TargetValue="1" /&gt;
      &lt;Attribute Name="UsbControllerDriverBlacklisted" Status="Ok" ActualValue="USBXHCI/10.0.17763.1075/02/20/2020 00:00:00" TargetValue="" /&gt;
      &lt;Attribute Name="UsbControllerHardwareBlacklisted" Status="Ok" ActualValue="6874/4318/161" TargetValue="" /&gt;
    &lt;/Component&gt;
    &lt;Component Name="ASMedia USB 3.1 可扩展主机控制器 - 1.10 (Microsoft)" Status="Ok"&gt;
      &lt;Attribute Name="Powered30PortCount" Status="Ok" ActualValue="2" TargetValue="1" /&gt;
      &lt;Attribute Name="UsbControllerDriverBlacklisted" Status="Ok" ActualValue="USBXHCI/10.0.17763.1075/02/20/2020 00:00:00" TargetValue="" /&gt;
      &lt;Attribute Name="UsbControllerHardwareBlacklisted" Status="Ok" ActualValue="4674/6945/0" TargetValue="" /&gt;
    &lt;/Component&gt;
  &lt;/ComponentType&gt;
&lt;/MrrEvaluation&gt;



 
A clear and concise description of what the bug is.
IOException: Win32 IO returned 234. Path: C:\Program Files (x86)\Windows Kits\10\References\10.0.18362.0\Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingContract\2.0.0.0\Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingContract.winmd" or "Temp\StagingArea\Data\Managed\Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingContract.winmd
System.IO.File.Copy (System.String sourceFileName, System.String destFileName, System.Boolean overwrite) (at &lt;599589bf4ce248909b8a14cbe4a2034e&gt;:0)
PostProcessWinRT.CopyFrameworkAssemblies () (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/PostProcessWinRT.cs:1823)
PostProcessWinRT.Process () (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/PostProcessWinRT.cs:164)
UnityEditor.UWP.BuildPostprocessor.PostProcess (UnityEditor.Modules.BuildPostProcessArgs args) (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/ExtensionModule.cs:91)
Rethrow as BuildFailedException: Exception of type 'UnityEditor.Build.BuildFailedException' was thrown.
UnityEditor.UWP.BuildPostprocessor.PostProcess (UnityEditor.Modules.BuildPostProcessArgs args) (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/ExtensionModule.cs:95)
UnityEditor.Modules.DefaultBuildPostprocessor.PostProcess (UnityEditor.Modules.BuildPostProcessArgs args, UnityEditor.BuildProperties&amp; outProperties) (at D:/unity/Editor/Mono/Modules/DefaultBuildPostprocessor.cs:27)
UnityEditor.PostprocessBuildPlayer.Postprocess (UnityEditor.BuildTargetGroup targetGroup, UnityEditor.BuildTarget target, System.String installPath, System.String companyName, System.String productName, System.Int32 width, System.Int32 height, UnityEditor.BuildOptions options, UnityEditor.RuntimeClassRegistry usedClassRegistry, UnityEditor.Build.Reporting.BuildReport report) (at D:/unity/Editor/Mono/BuildPipeline/PostprocessBuildPlayer.cs:281)
UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr) (at D:/unity/Modules/IMGUI/GUIUtility.cs:179)


## To reproduce

Steps to reproduce the behavior:

1. Open 'unity'
2. Right click SampleScene, and selected GameObject, clicked 3D Object
1. Click on 'Switch Platform'
2. Click on 'build'
3. See error

## Expected behavior
build succeed
A clear and concise description of what you expected to happen.
build succeed
## Screenshots
![a](

If applicable, add screenshots to help explain your problem.

## Your setup (please complete the following information)

- Unity Version [2019.2.8f1]
- MRTK Version [2.4.0]

## Target platform (please complete the following information)

- HoloLens 2
## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>8003</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SurfaceMagnetismSpatialAwarenessExample MRTK 2.4 Hololens2</Title>
    <CreatedDate>01/06/2020</CreatedDate>
    <ClosedDate>11/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>8003</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

SurfaceMagnetismSpatialAwarenessExample not working on Hololens2. Working just fine for HoloLens 1. At runtime an error is shown at the bottom left corner saying: Physics: 'BV4 midphase only supported on Intel platforms'.

## To reproduce

Unity 2019.3.14.f1 - Load SurfaceMagnetismSpatialAwarenessExample from MRTK 2.4 and build for ARM64 @ HoloLens 2.

## Expected behavior

As described here: 

## Screenshots



## Your setup (please complete the following information)

- Unity Version 2019.3.14.f1
- MRTK Version  v2.4

## Target platform (please complete the following information)

- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>7874</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Zee2</FixedById>
        <IssueID>7874</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>NaN exception when scaling pressable button parent to zero</Title>
    <CreatedDate>13/05/2020</CreatedDate>
    <ClosedDate>03/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>7874</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7874</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>7874</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Filing on behalf of Matt Rubinstein whos will be making a github account soon.

We're using PressableButtonHololens2 and noticed that we get a NaN exception on transforms attached to MovingButtonVisuals/MovingButtonIconText/CompressableButtonVisuals when any parent up-chain of them has a 0 scale.
 

![image](
 
We use a Hydration/Dehydration effect to scale up/down our prefabs on intro/outro which has them at 0 scale for a frame or two during the lifecycle. As a workaround, I modified our hydration effect to not go to exactly zero, but we still see this issue when values get too close to 0 scale.


## To reproduce

1. Set the scale of any parent of PressableButtonHoloLens 2 to zero
2. Observe NaN exceptions

## Release
MRTK 2.3</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7874</IssueID>
        <PullRequestID>7920</PullRequestID>
        <Title>Resolved issue with NaN propagation from zero-scale PressableButtons</Title>
        <Description>## Overview
An issue was reported (#7874) that when a PressableButton was scaled to zero, NaN values were propagated to a `transform.position` assign attempt. I analyzed this issue, and saw that the particular way that `PressableButton` calculates the visible button content offset uses a local-to-world scaling that is susceptible to NaN propagation when object scale is zero.

Testing this bug is difficult. The original issue (#7874) reported that these NaN issues occurred whenever the object was scaled near zero; I attempted to reproduce this error, but the error only occurred on my machine when _exiting play mode_; when setting the scale to zero, it did not occur until I exited play mode. Therefore, the included test may not fully cover all reproduceable cases (but it should cover the case that was originally reported in #7874.) That is to say, the unit test covers the _runtime_ case, but I was only personally able to observe this bug when leaving play and returning to edit mode.

Therefore, this PR resolves #7874.

## Changes

Adds a clamping to `GetWorldPositionAlongPushDirection`. This prevents a NaN `LocalToWorldScale` value from breaking the `UpdateMovingVisualsPosition` method, which uses `GetWorldPositionAlongPushDirection` to adjust the `movingButtonVisuals`.


## Verification
Unit test was added to verify that zero-scaling the parent of a `PressableButton` does not throw exceptions.
</Description>
        <CreatedDate>20/05/2020</CreatedDate>
        <ClosedDate>21/05/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>UX Controls - Buttons</Name>
            <IssueID>7874</IssueID>
            <PullRequestID>7920</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>Zee2</FixedById>
            <PullRequestID>7920</PullRequestID>
            <IssueID>7874</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>7872</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>7872</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>7872</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>"Toggle MRTK Features" buttons are missing their toggle state visuals.</Title>
    <CreatedDate>13/05/2020</CreatedDate>
    <ClosedDate>19/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7872</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7872</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

A clear and concise description of what the bug is.

## To reproduce

1. Run HandInteractionExample scene
2. Click toggle buttons
3. The toggle background should show for toggle buttons that are in 'on' state. The background does not actually show up for buttons that should be 'on', and toggling them does not change their background.

## Screenshots
Expected behavior from mrtk 2.3 examples hub:
![bug-toggle_expected](

Actual behavior in mrtk 2.4
![bug-toggle-actual](


</Description>
  </Issue>
  <Issue>
    <IssueID>7871</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>7871</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>"Toggle hand mesh" button does not work in mrtk 2.4 on Hololens 2</Title>
    <CreatedDate>13/05/2020</CreatedDate>
    <ClosedDate>15/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7871</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7871</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The toggle hand mesh button turns off the mesh after a single press, but subsequent presses do not turn the mesh back on.

### To reproduce
1. Run MRTK Example scene on HoloLens 2 obtained from the 2.4 stabilization build.
2. Press the "hand mesh" button twice.
![image](

3. Notice that after the first press, the mesh disappears (expected). After the second press, the mesh does not re-appear. Subsequent presses seem to do nothing.

I noticed that after the second press, if you hide and remove your hand, or bring up the start menu, the mesh re-appears.</Description>
  </Issue>
  <Issue>
    <IssueID>7867</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>vaoliva</FixedById>
        <IssueID>7867</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Mixed Reality toolkit null reference when registering instance</Title>
    <CreatedDate>13/05/2020</CreatedDate>
    <ClosedDate>15/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7867</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

MixedRealityToolkit is throwing error message when using Migration Window from a scene without MixedRealityToolkit instance.
 
![Screenshot (30)](


## To reproduce

1. Open a new empty scene
2. Open Migration Window
3. Select "ObjectManipulatorMigrationHandler"  from dropdown list
4. Navigate to full project section
5. Click on "Add full project for migration"
6. An error message is displayed on the console

## Your setup (please complete the following information)

- Unity Version 2018.4.12f1
- MRTK Version 2.4

</Description>
  </Issue>
  <Issue>
    <IssueID>7864</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>7864</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK Debug menu entries in Unity GameObject menu</Title>
    <CreatedDate>13/05/2020</CreatedDate>
    <ClosedDate>18/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7864</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

There's two menu entries under GameObject &gt; MRTK in Unity after importing our foundation package that don't create a gameobject (even though putting an entry in this section would suggest a gameobject to be created).
After looking further into this I think this is just some debug functionality that sneaked in there by accident:
The menu options will log combined bounds of renderers or colliders of selected gameobjects.

## To reproduce

- Create a new project and scene
- Import the 2.4 foundation package
- Open the GameObject top menu in Unity and observe the MRTK section with debug entries

## Expected behavior

if we add a MRTK section into the GameObject menu I would expect that a GameObject with some MRTK component will be created. I would not expect an entry there that will give me a debug log output about some bounds calculation.

## Screenshots

![image](


## Your setup (please complete the following information)

- Unity Version 2018
- MRTK Version 2.4

## Target platform (please complete the following information)

- Editor

</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7864</IssueID>
        <PullRequestID>7584</PullRequestID>
        <Title>Add size utility calculator for editor</Title>
        <Description>## Overview
It can be quite annoying to know what the world-space size of an object is in Unity, especially with multiple hierarchy transforms applied. 

This PR adds a editor utility that allows one to get the Renderer or Collider world space bounds sizes for a selected GameObject. 

Right click gameobject &gt; MRTK &gt; Render/Collider Size =&gt; See output results in debug log console

![size-utility](

## Changes
- Fixes: # .

## Verification
&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>24/03/2020</CreatedDate>
        <ClosedDate>25/03/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Editor</Name>
            <IssueID>7864</IssueID>
            <PullRequestID>7584</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>Troy-Ferrell</FixedById>
            <PullRequestID>7584</PullRequestID>
            <IssueID>7864</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>7863</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>vaoliva</FixedById>
        <IssueID>7863</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Migration Window is not picking up all gameobjects when migrating scenes.</Title>
    <CreatedDate>13/05/2020</CreatedDate>
    <ClosedDate>14/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7863</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

I was migrating the HandInteractionExample and noticed that some gameobjects are still referring to ManipulationHandler. 
Migration works when using the button in the inspector of the ManipulationHandler component but the migration window will for some reason not pick the gameobject up for migration. 
This might be related to the gameobject or component being deactivated (one occurence had an app bar attached).

## To reproduce

- Open the migration tool and drag the HandInteractionExample into the scene section.
- Select ObjectManipulator migration from the dropdown and press migrate
- Observe that the gameobject node_id30 has not been upgraded.

## Expected behavior

All occurrences of ManipulationHandler should be upgraded to ObjectManipulator once we run the migration tool.


## Your setup (please complete the following information)

- Unity Version 2018
- MRTK Version 2.4

## Target platform (please complete the following information)

- Editor
</Description>
  </Issue>
  <Issue>
    <IssueID>7861</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Enabling 'Use palm kinematic body' in the hand physics service extension breaks hand tracking</Title>
    <CreatedDate>13/05/2020</CreatedDate>
    <ClosedDate>13/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7861</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>When you are using the hand physics service extension and enable the 'use palm kinetic body' option, hand tracking no longer works.

To reproduce:
Open the HandPhysicsServiceExample.
In the projects window, select the DefaultHandPhysicsServiceProfile.
Enable the 'use palm kinematic body option'.
Build the project and deploy on the HoloLens 2.
Notice hand tracking no longer works.

Unity Version: 2019.3.13f1
MRTK Version: 2.3
Target platform: HoloLens 2

I fixed the problems I found by making the following changes to HandPhysicsService.cs:

Line 39: public GameObject HandPhysicsServiceRoot { get; private set; } = new GameObject("Hand Physics Service");
After line 198: jointKinematicBodies.Clear(); (this seems to be the root of the problem)
After line 218: if (parent == null) return false;
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7861</IssueID>
        <PullRequestID>7787</PullRequestID>
        <Title>CreateKinematicBodies called after the prefab setters set to new value</Title>
        <Description>Added HandPhysicsServiceRoot null check

## Overview
Fixes the code issues descibed in #7786

## Changes
- Fixes: #7786 

## Verification
&gt; This optional section is a place where you can detail the specific type of verification 
&gt; you want from reviewers. For example, if you want reviewers to checkout the PR locally
&gt; and validate the functionality of specific scenarios, provide instructions
&gt; on the specific scenarios and what you want verified.
&gt;
&gt; If there are specific areas of concern or question feel free to highlight them here so
&gt; that reviewers can watch out for those issues.
&gt;
&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>05/05/2020</CreatedDate>
        <ClosedDate>06/05/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Extension</Name>
            <IssueID>7861</IssueID>
            <PullRequestID>7787</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>7858</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>7858</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Cannot deploy to HoloLens 2 device - Unity 2019.3</Title>
    <CreatedDate>12/05/2020</CreatedDate>
    <ClosedDate>15/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7858</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7858</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Unity 2019</Name>
        <IssueID>7858</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

If the user imports the foundation package to Unity 2019.3, switches to UWP and deploys from VS using ARM, the app will not render anything.

@keveleigh has pointed out that this is a known unity issue.

The issue is unity 2019.3 has Graphics Jobs enabled by default and this needs to be unchecked for the HL2 app to work.

This issue can be resolved with documentation in the Build and Deploy doc for people using 2019.3 and HL2.

![image](

## To reproduce

Steps to reproduce the behavior:

1. Import the latest foundation package 2.4
2. Switch to UWP
3. Build
4. Open VS solution 
5. Deploy to device  

## Your setup (please complete the following information)

- Unity Version 2019.3.12
- MRTK Version 2.4

## Target platform (please complete the following information)

- HoloLens
- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>7852</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTKExamplesHub not loading any scenes without Extension package</Title>
    <CreatedDate>12/05/2020</CreatedDate>
    <ClosedDate>12/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7852</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Example/Test Scene</Name>
        <IssueID>7852</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
MRTKExampleHub scene is not functional without extension package. 

## To reproduce

1. Create new Unity project
2. Import foundation package
3. Import examples package
4. Open and Play the MRTKExampleHub scene
5. Menu with example scenes does not open

The LoadContentScene script ( extensions package ) is missing.

![Screenshot (28)](

## Your setup 

- Unity Version 2018.4.12f1
- MRTK Version 2.4 / 2.3</Description>
  </Issue>
  <Issue>
    <IssueID>7851</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>UIEvents.IMGUIRenderOverlays</Title>
    <CreatedDate>12/05/2020</CreatedDate>
    <ClosedDate>14/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7851</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I use MRTK On Hololens1 .when I analyze performance By Unity Proflier .I found something strange. UIEvents.IMGUIRenderOverlays is to long.it is showing when I use OnGUI ?but I do not use OnGUI .then i found FrameDebugger also show something, there are many RenderEvent about GUI.Repaint.and i do not know what i Render ? EditorMode ,it is normal. this problem lead to  my frameCount so low .can you explain it for me?  what i do to solve it?
![C_YQS~JYQXE)MS~ZJT5CQB](
![F2E41R)41Y11VIEMNV118GH](


</Description>
  </Issue>
  <Issue>
    <IssueID>7850</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK Pointer Result Example Not Working on Hololens 1 Device</Title>
    <CreatedDate>12/05/2020</CreatedDate>
    <ClosedDate>12/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7850</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I have been trying to get my Hololens 1 to accept MRTK GGV pointers but it hasn't worked. Even the Pointer Result Example has not worked. The application does not accept air tap or any other gesture input and the pointer also does not change to the ring shape. **The examples work as intended in Unity Play simulator mode**.

## To reproduce

Run the MRTK 2.3 Pointer Result Example on Hololens 1 with Unity 2019.3.9f1.

## Expected behavior

Perform air tap to paste sticky notes on board

## Setup

- Unity Version [Unity 2019.3.9f1]
- MRTK Version [v2.3]

## Target platform
- HoloLens

## Additional context
I also had to add Tracked Pose Driver to the camera to get the camera movement working,
</Description>
  </Issue>
  <Issue>
    <IssueID>7849</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>7849</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[Documentation] Broken links </Title>
    <CreatedDate>12/05/2020</CreatedDate>
    <ClosedDate>12/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7849</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Only the first link at the bottom of the page is working, all the others are broken:



![image](</Description>
  </Issue>
  <Issue>
    <IssueID>7845</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>7845</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK 2.4: Release Notes missing known issues</Title>
    <CreatedDate>11/05/2020</CreatedDate>
    <ClosedDate>26/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7845</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The release notes need to contain known issues prior to shipping.</Description>
  </Issue>
  <Issue>
    <IssueID>7843</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>7843</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Investigate removing version.txt files</Title>
    <CreatedDate>11/05/2020</CreatedDate>
    <ClosedDate>01/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>7843</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Starting with MRTK v2.3, all assemblies now contain the product version number (via the AssemblyInfo.cs file).

The version.txt files that were previously used to give customers an indication of which MRTK was in use is no longer required. In fact, the assembly version is more reliable.

We should investigate the leaf issues (packaging?) related to removing these files for the next release. </Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>7841</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>7841</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>TransformConstraint should store initial transform instead of intial pose</Title>
    <CreatedDate>11/05/2020</CreatedDate>
    <ClosedDate>30/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7841</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - ObjectManipulator</Name>
        <IssueID>7841</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

I noticed that we're not storing the initial scale value which is limiting our ability to do scale constraints. I think this just accidentally slipped through when changing from transform to pose in the ApplyConstraint methods. 

## To reproduce

Open TransformConstraint and have a look at worldPoseOnManipulationStart - which is atm a MixedRealityPose but actually should be a MixedRealityTransform.

## Expected behavior

worldPoseOnManipulationStart should be a MixedRealityTransform, not a MixedRealityPose

## Your setup (please complete the following information)

- MRTK Version v2.4

## Additional context

noticed while working on some custom constraint (eg inverse scale constraint)
</Description>
  </Issue>
  <Issue>
    <IssueID>7838</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Button aliasing inside and outside the its outline</Title>
    <CreatedDate>11/05/2020</CreatedDate>
    <ClosedDate>12/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7838</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The MRTK PressableButtonHoloLens2 has aliasing artifacts on the inside of its outline, which is controller in the Shader via Border Light -&gt; Width %. It's not reacting to the aliasing settings

In the Image, you can see the edge of a cube in game view. Even though it's rotated a little, Anti-aliasing is good (2 times multi sampling). The inside however is still aliased and looks bad on devices other than Hololens.

For some reason, the quality of the button's outside anti-aliasing is still worse than the one from the cube.

## To reproduce

Steps to reproduce the behavior:

Putting cube and button next to each other and watching them while rotating slowly shows that the cube is smoother
When increasing the Round Corners margin this is getting worse or is in the state of ignoring anti-aliasing as well.

## Expected behavior

The out side and inside of the button are getting properly anti-aliased

## Screenshots

![image](

## Your setup (please complete the following information)

- Unity Version 2018.3.15f1
- MRTK Version mrtk_development

## Target platform (please complete the following information)

- Oculus Quest
</Description>
  </Issue>
  <Issue>
    <IssueID>7830</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>7830</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Hand joints invisible when using holographic remoting with Unity 2019</Title>
    <CreatedDate>07/05/2020</CreatedDate>
    <ClosedDate>10/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7830</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
hands are invisible when using holographic remoting, influencing things like recordings. Hand rays still show up and touch/pinch/grab events still work

## To reproduce

Use holographic remoting in 2019 and see no hands.

## Your setup (please complete the following information)

- Unity Version 2019.3.12
- MRTK Version 2.4
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>7824</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>7824</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>2.4 Release notes missing performance marker image</Title>
    <CreatedDate>07/05/2020</CreatedDate>
    <ClosedDate>07/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7824</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7824</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>

The performance markers section has a "image coming soon"

Either delete the coming soon or add the image.</Description>
  </Issue>
  <Issue>
    <IssueID>7821</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hololens Windows UWP App Icon specifications missing from  existing documentation</Title>
    <CreatedDate>07/05/2020</CreatedDate>
    <ClosedDate>07/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7821</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the issue
When adding the icons into the Player settings in Unity, it is not clear what size icons should be for the Hololens (1 or 2, doesn't matter). Considering that a Hololens app (for now) is rarely "cross platform", it doesn't seem to make sense that one would need all the icons in all the sizes requested. 

In addition to this, the region right below the "Icon" settings in Unity says the following: "Not applicable for this platform".

If a developer adds every possible icon shape and scale possible, it is also not clear that using a PNG with an alpha will result in the Windows blue color background being added as a default. It is also not clear if the developer should use white for the icon symbol as a default recommendation or if white is specifically reserved for Microsoft apps.

## Feature area
Current documentation in MRTK has no information about the Build/App icons whatsoever. The Unity Documentation has general UWP Windows App Icon information but lacks details specific to the Hololens devices. The Windows UWP App icons documentation seems to focus on Desktop apps and also lacks details for Hololens apps.

## Existing doc link
[Unity UWP App Icons](
[Windows UWP App Icons](

</Description>
  </Issue>
  <Issue>
    <IssueID>7816</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Pointer doesn’t collide on gameObject with mesh collider on HoloLens 2 device</Title>
    <CreatedDate>06/05/2020</CreatedDate>
    <ClosedDate>28/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7816</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>External</Name>
        <IssueID>7816</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
When there is a 3D object that holds a Mesh collider, the pointer does not collide with the mesh. I found that this only happens when the app is running in the HoloLens 2 (no matter the build type), but in HoloLens 1 or the Unity editor the pointer behaves correctly. 

This happens only with the Mesh colliders, if you use any collider based on a primitive (Box collider, Sphere collider, etc...) the behavior is correct. 

I need to retrieve the hit point in runtime of loaded meshes wiht complex shapes so, using primitive shape colliders doesn't work for me. 


## To reproduce

Steps to reproduce the behavior:

1. Create a 3D primitive (or add any 3D model)
2. Add a Mesh collider
3. Build the VS solution
4. Create an appx for ARM64 as Master build.
5. Run the app on the HoloLens 2 
6. Try to put the pointer over the 3D object. 

## Expected behavior

The pointer should impact over the 3D model that holds the mesh collider. 

## Screenshots

Wrong behavior:
![imagen](

Correct behavior:
![imagen](

A video showing the issue: 


## Your setup (please complete the following information)
- I'm using a Config profile that is a exact clone of the DefaultMixedRealityToolkitConfiguration profile with the profiler off and spatial mesh visualization off
- Unity Version: 2019.3.0f6
- MRTK Version 2.3.0
![thumbnail](

![CaptureCube](



## Target platform (please complete the following information)

- HoloLens 2 ARM64 Master build


## Additional context

This bug is only showed when the app is running in a Holo Lens 2 device, running in HoloLens 1 or the Unity editor, the pointer behaves as it should be. 
</Description>
  </Issue>
  <Issue>
    <IssueID>7811</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>7811</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>There is no way to disable new hands-free ggv input simulation</Title>
    <CreatedDate>06/05/2020</CreatedDate>
    <ClosedDate>08/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7811</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7811</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The hands-free GGV input simulation is very useful, but there are some cases / custom projects where the new simulation causes unexpected behavior. It would be great if we could have a checkbox in the input simulation profile to disable the hands-free ggv input simulation. Please also add this to the release notes and documentation, as well as a test to ensure the disable in the profile works. </Description>
  </Issue>
  <Issue>
    <IssueID>7810</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>7810</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>After upgrade to MRTK 2.4, all custom icons on buttons are reverted</Title>
    <CreatedDate>06/05/2020</CreatedDate>
    <ClosedDate>20/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7810</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7810</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
When upgrading a project from MRTK 2.3 to 2.4, all buttons created, modified from prefab "PressableButtonHoloLens2" get their icons reverted to the default icon.

![image](


## To reproduce

1. Create a project with MRTK 2.3 and create a scene with some buttons.
2. Customize the icons in your buttons.
3. Update to 2.4.
4. Notice that the button icons have changed back to the default icons.

## Expected behavior
The customized button icons should stay the same.

## Screenshots

Before update, in MRTK 2.3:
![image](

After update, MRTK 2.4:

![image](

</Description>
  </Issue>
  <Issue>
    <IssueID>7809</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>7809</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Release Notes is missing info about Button Config Helper</Title>
    <CreatedDate>06/05/2020</CreatedDate>
    <ClosedDate>08/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7809</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7809</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the issue
There is a new Button Config Helper coming in out MRTK 2.4, it would be great to have the release notes mention this nice feature.

![image](
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7809</IssueID>
        <PullRequestID>7827</PullRequestID>
        <Title>Add release note docs for the button config helper.</Title>
        <Description>## Overview
Adds release notes for the button config helper, which simplifies the process of customizing certain parts of the pressable button.

## Changes
- Fixes: #
</Description>
        <CreatedDate>07/05/2020</CreatedDate>
        <ClosedDate>08/05/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Documentation</Name>
            <IssueID>7809</IssueID>
            <PullRequestID>7827</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>7808</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>vaoliva</FixedById>
        <IssueID>7808</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Release Notes, Upgrade guide missing Eye Gaze API Changes</Title>
    <CreatedDate>06/05/2020</CreatedDate>
    <ClosedDate>12/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7808</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7808</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>csharp
GazeProvider gzProvider = FindObjectOfType&lt;GazeProvider&gt;();
gzProvider.UseEyeTracking = false;


Do this now...

csharp
GazeProvider gzProvider = FindObjectOfType&lt;GazeProvider&gt;();
((IMixedRealityEyeGazeProvider) gzProvider).IsEyeTrackingEnabled = true;
`</Code>
    <Description>## Describe the issue
Both the [Release Notes]( and [Updating guidance]( are missing info about how to upgrade old eye tracking api calls to new ones. It should include a section like this:

**Eye Gaze API Changes**

If you did this previously...

``
</Description>
  </Issue>
  <Issue>
    <IssueID>7807</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>7807</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>2.4.0 Add Known issues to release notes</Title>
    <CreatedDate>06/05/2020</CreatedDate>
    <ClosedDate>07/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7807</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Management</Name>
        <IssueID>7807</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Before shipping, the release notes should be updated to include known issues.</Description>
  </Issue>
  <Issue>
    <IssueID>7805</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>An issue of BoundingBox</Title>
    <CreatedDate>06/05/2020</CreatedDate>
    <ClosedDate>18/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7805</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When we add a BoundingBox to some GameObjects (about 100) by coding, and set all properties of it,  program will lag for a long time.

## To reproduce

Steps to reproduce the behavior:

1. use AddComponent to add a BoundingBox to a GameObject
2. set all the properties of this BoundingBox
3. do it 100 times
4. the program will lag , maybe more than 4~5 second.

## Expected behavior

Don't lag so long.

## Your setup (please complete the following information)

- Unity Version : 2019.2.21
- MRTK Version : 2.3

## Target platform (please complete the following information)

- All platform

## Additional context

We reviewed the code of BoundingBox.cs, and we found that the Set Function of all properties include "CreateRig" function. We think this is the problem. After we create BoundingBox, we must set all the properties, and it will call CreateRig many many times! 

We have solved this problem, by adding a bool variable to prevent "CreateRig". After we create BoundingBox by code, we set this bool to true, then set all the properties. After that, we set this bool to false, and call "CreateRig" manually at the end.
</Description>
  </Issue>
  <Issue>
    <IssueID>7804</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Getting started Tutorials don't result in working app</Title>
    <CreatedDate>06/05/2020</CreatedDate>
    <ClosedDate>18/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7804</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>External</Name>
        <IssueID>7804</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the issue
After following the "Getting started" Tutorials the UWP app instantly crashes when deployed on a HoloLens 2.

## Feature area
I had to disable the "Graphics Jobs" option in the player settings to get the app to work.

## Existing doc link
e.g. 

## Additional context
Steps to reproduce:
1. Create new Unity Project
2. Switch to UWP build target, enable and set up Windows Mixed Reality in Player Settings (following the documentation)
3. Build App -&gt; Works and shows the empty example scene
4. Add MixedRealityToolkit Foundation Package and apply the recommended settings
5. Set up the Scene (following the documentation)
6. Build App -&gt; App instantly crashes on HoloLens 2
7. Go to Player Settings and disable "Graphics Jobs"
8. Build App -&gt; Works as intended

I don't know if this is a bug in the MRTK, a missing detail in the documentation or an issue on my side but maybe it should be added to the documentation somewhere as I spent a very long time to figure out why my apps didn't work.

Note: I tested the v2.3.0 release with Unity 2019.2 and 2019.3 with the same result. The issue did not show on 2018.4.</Description>
  </Issue>
  <Issue>
    <IssueID>7799</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>7799</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK 2.4 Release Notes Missing ObjectManipulator and BoundsControl</Title>
    <CreatedDate>05/05/2020</CreatedDate>
    <ClosedDate>11/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7799</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7799</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the issue
Our 2.4 release notes are missing the awesome new ObjectManipulator graduation from @thalbern  and @MenelvagorMilsom. We should mention these as they are much cleaner than ManipulationHandler and BoundingBox.
</Description>
  </Issue>
  <Issue>
    <IssueID>7798</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>7798</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK 2.4 Release Notes Missing Leap Motion support</Title>
    <CreatedDate>05/05/2020</CreatedDate>
    <ClosedDate>13/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7798</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7798</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The [release notes for 2.4]( don't mention added support for Leap Motion, but this is one of the coolest new things we added this release! We should mention Leap Motion support in release notes.
</Description>
  </Issue>
  <Issue>
    <IssueID>7797</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>7797</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>2.4 Release Notes hard to find upgrade instructions</Title>
    <CreatedDate>05/05/2020</CreatedDate>
    <ClosedDate>08/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7797</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7797</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the issue
Our [2.4 release notes]( do not include instructions for updating from 2.3 to 2.4
</Description>
  </Issue>
  <Issue>
    <IssueID>7796</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>7796</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Errors in the on device console related to controllers, input and teleport system.</Title>
    <CreatedDate>05/05/2020</CreatedDate>
    <ClosedDate>13/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7796</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>7796</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7796</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>When running a VR application built using the following:

* Unity 2019.3.12f1
* Legacy XR pipeline: Windows Mixed Reality 4.2.1
* Default MRTK Configuration Profile
* BoundaryVisualization demo
* UWP build target

Two TeleportPointer messages are present in the headset's diagnostics panel. Teleportation works, though there is no cursor apparent in the world.

I have been able to reproduce releated(?) errors using Unity 2018.4 and the HandInteractionExamples demo.

I can NOT repro when using MRTK 2.3.0.</Description>
  </Issue>
  <Issue>
    <IssueID>7788</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Slate in HandInteractionExample is jumping in zoom levels when starting interaction with two hands.</Title>
    <CreatedDate>05/05/2020</CreatedDate>
    <ClosedDate>04/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7788</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

I started touching the slate with two hands and the zoom level keeps on jumping around even though there's barely any movement with my hands. 

## To reproduce

Deploy handinteractionexample on a hololens 2 and try to interact with the slate - slowly put both hands / index fingers into the slate at the same time and try to not move a lot.

## Expected behavior

slate does not jump in zoom levels and remains steady with hands barely moving

## Screenshots


![testing2 4-5-5_low](


## Your setup (please complete the following information)

- Unity Version 2018.4.17
- MRTK Version 2.4

## Target platform (please complete the following information)

- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>7786</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Wrong initialization order in HandPhysicsService</Title>
    <CreatedDate>05/05/2020</CreatedDate>
    <ClosedDate>06/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7786</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

CreateKinematicBodies is called before it's preconditions are met:
-Initialize (FingerTipKinematicBodyPrefab and PalmKinematicBodyPrefab setters), but HandPhysicsServiceRoot is not created yet
-FingerTipKinematicBodyPrefabsetter calls it before the value is set
-PalmKinematicBodyPrefab setter calls it before the value is set

This results in a NullReferenceException when both FingerTipKinematicBodyPrefab and PalmKinematicBodyPrefab were specified. Furthermore the setters create Kinematic bodies based on the previous prefab instead of the new value.

## Your setup (please complete the following information)
- Unity Version 2018.4.21f1
-MRTK Version 2.4.0.prerelease

First step towards Pull Request</Description>
  </Issue>
  <Issue>
    <IssueID>7785</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Organization of the MRTK menu with just the Foundation package</Title>
    <CreatedDate>04/05/2020</CreatedDate>
    <ClosedDate>27/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7785</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Not exactly a bug, but more for having a discussion. When you just pull in the Foundation package, the MRTK dropdown folder's organization looks a bit interesting:

![image](

Should Leap be first there, or do we want to have (or already have some other standard for how we choose to sort that?)</Description>
  </Issue>
  <Issue>
    <IssueID>7783</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>7783</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title> The volumetric UnityUI slate appears to be empty in the hand interaction examples</Title>
    <CreatedDate>04/05/2020</CreatedDate>
    <ClosedDate>20/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7783</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The volumetric UnityUI slate appears to be empty in the hand interaction examples:

![image](

This is because the scroll view content element is disabled:

![image](

## To reproduce

Steps to reproduce the behavior:

1. Open the HandInteractionExamples scene
1. Look to the right and see that the volumetric buttons don't appear on the UnityUI slate.

## Your setup (please complete the following information)

- Unity Version 2018.4.22f1
- MRTK Version 2.4.0.prerelease</Description>
  </Issue>
  <Issue>
    <IssueID>7782</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>7782</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Is not an installed spatializer - Project Configurator </Title>
    <CreatedDate>04/05/2020</CreatedDate>
    <ClosedDate>05/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7782</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7782</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Sound / Audio</Name>
        <IssueID>7782</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
 is not an installed spatializer.
UnityEngine.Debug:LogError(Object)
Microsoft.MixedReality.Toolkit.Utilities.Editor.SpatializerUtilities:SaveSettings(String) (at Assets/MRTK/Core/Utilities/Editor/SpatializerUtilities.cs:72)
Microsoft.MixedReality.Toolkit.Utilities.Editor.MixedRealityProjectConfigurator:SetAudioSpatializer() (at Assets/MRTK/Core/Utilities/Editor/Setup/MixedRealityProjectConfigurator.cs:318)
Microsoft.MixedReality.Toolkit.Utilities.Editor.MixedRealityProjectConfigurator:Configure(Configurations) (at Assets/MRTK/Core/Utilities/Editor/Setup/MixedRealityProjectConfigurator.cs:203)
Microsoft.MixedReality.Toolkit.Utilities.Editor.MixedRealityProjectConfigurator:ConfigureProject(HashSet`1) (at Assets/MRTK/Core/Utilities/Editor/Setup/MixedRealityProjectConfigurator.cs:242)
Microsoft.MixedReality.Toolkit.Utilities.Editor.MixedRealityProjectConfiguratorWindow:ApplyConfigurations() (at Assets/MRTK/Core/Inspectors/Setup/MixedRealityProjectConfiguratorWindow.cs:249)
Microsoft.MixedReality.Toolkit.Utilities.Editor.MixedRealityProjectConfiguratorWindow:RenderChoiceDialog() (at Assets/MRTK/Core/Inspectors/Setup/MixedRealityProjectConfiguratorWindow.cs:141)
Microsoft.MixedReality.Toolkit.Utilities.Editor.MixedRealityProjectConfiguratorWindow:OnGUI() (at Assets/MRTK/Core/Inspectors/Setup/MixedRealityProjectConfiguratorWindow.cs:105)
UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)

`</Code>
    <Description>## Describe the bug

On import of the latest foundation stabilization unity package into 2019.3.8, this error is logged after Apply is selected in the project configurator:

``

## To reproduce

Steps to reproduce the behavior:

1. Create new unity project in 2019.3.8
2. Import the latest stabilization foundation unity package
3. Hit Apply in the project configurator, error is logged

## Your setup 

- Unity Version 2019.3.8
- MRTK Version 2.4
</Description>
  </Issue>
  <Issue>
    <IssueID>7773</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>7773</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Hand simulation moves cursor on click</Title>
    <CreatedDate>02/05/2020</CreatedDate>
    <ClosedDate>06/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7773</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When using hand simulation in the Unity editor, clicking with LMB moves the cursor, and on release the cursor doesn't always point at the same location anymore, making precise selections difficult.

## To reproduce

![mrtk_handsim_unstable](

Note how the box starts to rotate, even though the mouse cursor doesn't move, only LMB is pressed. The hand simulation cursor however does appear to move up slightly on its own. Also when clicking on the upper part of the handle, the cursor doesn't anymore hovers the handle after releasing LMB.

## Expected behavior

Motion and click should be completely independent.

## Screenshots

See above.

## Your setup (please complete the following information)

- Unity Version 2018.4.15f1
- MRTK Version 2.3

## Target platform (please complete the following information)

- Unity Editor
</Description>
  </Issue>
  <Issue>
    <IssueID>7769</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ToolTipSpawner feature set extraction</Title>
    <CreatedDate>02/05/2020</CreatedDate>
    <ClosedDate>05/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>7769</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

ToolTipSpawner already has a lot of great logic for showing or hiding stuff, which it almost does on a GameObject basis, except for it's concrete component requirements (ToolTip and ToolTipConnector).
All of this could be factored out be used with any GameObject as well.

## Describe the solution you'd like

A base class that deals with GameObjects but has all the nice timings and ways of how to show it

## Describe alternatives you've considered

writing my own stuff
</Description>
  </Issue>
  <Issue>
    <IssueID>7764</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>7764</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add support for the new release of the Leap Motion Core Assets version 4.5.0</Title>
    <CreatedDate>01/05/2020</CreatedDate>
    <ClosedDate>01/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Leap Motion</Name>
        <IssueID>7764</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Add support for the newly realeased Leap Motion Core Assets found here: </Description>
  </Issue>
  <Issue>
    <IssueID>7761</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Copying Assembly failed Multiplayer HLAPI</Title>
    <CreatedDate>01/05/2020</CreatedDate>
    <ClosedDate>01/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7761</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Leap Motion</Name>
        <IssueID>7761</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

On import of the Leap Core assets into 2019.3, the following error is logged:

``

This issue occurs if the source of MRTK is cloned from the repo and not if the source is from the unity packages.

## To reproduce

Steps to reproduce the behavior:

1. Clone MRTK using `git clone 
2. Open the project in Unity 2019.3.
3. Import the Leap Core Assets: 
4. See the 'Copying Assembly' issue 

## Your setup 

- Unity Version: 2019.3.8
- MRTK Version: 2.4

## Target platform

- Leap Motion

## Issue Resolution

To resolve the issue, restart unity.
</Description>
  </Issue>
  <Issue>
    <IssueID>7760</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>7760</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Object Manipulator is not available in conceptual docs menu</Title>
    <CreatedDate>01/05/2020</CreatedDate>
    <ClosedDate>06/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7760</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the issue
there's still manipulationhandler - version 2.4 should point to Object Manipulator</Description>
  </Issue>
  <Issue>
    <IssueID>7747</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>IsPlatformSupported performed 3 times for Editor and Player seperately</Title>
    <CreatedDate>30/04/2020</CreatedDate>
    <ClosedDate>05/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7747</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

3 classes distinguish between Editor and Runtime for the way they check platform support.
It's easier and less error prone to move that into a merged check.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>7745</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>vaoliva</FixedById>
        <IssueID>7745</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Unity UGUI Dropdown visual glitch on HL1</Title>
    <CreatedDate>30/04/2020</CreatedDate>
    <ClosedDate>06/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7745</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Unity UI (UGUI)</Name>
        <IssueID>7745</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
After deploying hand interaction example scene from 2.4 Stabilization branch into a Hololens 1 device, the Unity UGUI Dropdown example displays a visual glitch. This is regression from release branch.

## To reproduce

1. Make a fresh clone of  mrtk's prerelease/2.4.0_stabilization branch
2. Change build platform settings to Universal Windows Platform
3. Import TMPro essencial resources
4. On player settings / XR settings, make sure Depth format is 24-bit-depth
5. Build and deploy to a HL1 device

## Expected behavior

Options on UGUI dropdow should appear clearly without visual glitches

## Screenshots

2.4 Stabilization version:
![2.4.0_stabilization](

2.3 Release version:
![2_4_HL1_3](

- Unity Version  2018.4.12f1
- MRTK prerelease/2.4.0_stabilization

## Target platform (please complete the following information)

- HoloLens1
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7745</IssueID>
        <PullRequestID>7759</PullRequestID>
        <Title>UGUI dropdown zfight visual glitch</Title>
        <Description>### Describe the bug
Unity UGUI Dropdown from Hand Interaction Example scene displays a visual zfight glitch. This is regression from release branch.

## To reproduce

1. Make a fresh clone of  mrtk's prerelease/2.4.0_stabilization branch
2. Change build platform settings to Universal Windows Platform
3. Import TMPro essencial resources
4. Issue can be seen in the editor , WMH or after building and deploying to a HL1 device

## Expected behavior

Options on UGUI dropdown should appear clearly without visual glitches

## Screenshots

2.4 Stabilization before fix:
![2.4.0_stabilization](

2.4 Stabilization after fix:
![2_4_fix](


- Unity Version  2018.4.12f1 and 2019.3.0f6
- MRTK prerelease/2.4.0_stabilization

## Target platform (please complete the following information)

- HoloLens1
- Unity editor 2018.4.12f1
- Unity editor 2019.3.0f6
- WMR headset

## Changed
Changed zwrite on Font material from seguisb SDF.asset used on text right above dropdown element.

Fixes #7745 </Description>
        <CreatedDate>01/05/2020</CreatedDate>
        <ClosedDate>06/05/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Bug</Name>
            <IssueID>7745</IssueID>
            <PullRequestID>7759</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>UX Controls - Unity UI (UGUI)</Name>
            <IssueID>7745</IssueID>
            <PullRequestID>7759</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>vaoliva</FixedById>
            <PullRequestID>7759</PullRequestID>
            <IssueID>7745</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>7742</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>7742</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Input simulation regression: When hand rays are turned off and articulated hands are on, the gaze cursor shows up</Title>
    <CreatedDate>29/04/2020</CreatedDate>
    <ClosedDate>04/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7742</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7742</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When hand rays are turned off and articulated hands are on, the gaze cursor shows up, it should not actually be showing up when simulated articulated hands are present. It should should only show up if the hands are not articulated.




## To reproduce

Steps to reproduce the behavior:

1. In MRTK, turn off hand rays. You can do this by opening the 
2. Bring up the simulated hand
3. See the gaze cursor, also visible in the picture below.

## Expected behavior
Since the simulated hand is an articulated hand, I expect to see no gaze cursor. 

## Screenshots
![image](


## Your setup (please complete the following information)

- Unity Version 2018.4.12f1
- MRTK Version 2.3.9

## Target platform (please complete the following information)

- Editor
</Description>
  </Issue>
  <Issue>
    <IssueID>7739</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>7739</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MixedRealityKeyboard does not unsubscribe from InputPane::Hiding and InputPane::Showing causing crash</Title>
    <CreatedDate>29/04/2020</CreatedDate>
    <ClosedDate>30/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7739</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

MRTK's MixedRealityKeyboard.cs isn't unsubscribing from InputPane::Hiding before GameAssembly.dll is unloaded (and it previously subscribed to InputPane::Hiding with an object from that DLL).

This doesn't immediately lead to a crash as we don't notice it right away. In this case we only notice it when something else unsubscribes from that event, but we would also notice it and crash if that InputPane;:Hiding event actually fired.

</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>7737</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity unresponsive after switching from Standalone to UWP</Title>
    <CreatedDate>29/04/2020</CreatedDate>
    <ClosedDate>11/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7737</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7737</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Unity 2019.3.8f1 does not respond after attempting to switch to UWP from Standalone.  

![image](

## To reproduce

Steps to reproduce the behavior:

1.  Import the latest stabilization unity foundation package
2. While still in Standalone
   - Mixed Reality Toolkit &gt; Add to Scene and configure
   - Add a prefrab that prompts the TMP essentials import, I just searched for "tooltip" and added the Bezier Tooltip prefab to the scene.  Adding the prefab prompts the TMP Essentials import, select import the essentials. 
 3. Switch to UWP and unity hangs

## Your setup

- Unity Version: 2019.3.8f1
- MRTK Version: stabilization 2.4

</Description>
  </Issue>
  <Issue>
    <IssueID>7734</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity 19.3.7f1 MRTK 2.4.0 can't connect HoloLens2 with Wi-Fi nor USB: NullReferenceException: DownloadHandler has already been destroyed</Title>
    <CreatedDate>27/04/2020</CreatedDate>
    <ClosedDate>08/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7734</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

I can connect HoloLens2 with Wi-Fi using Chrome by ip address:192.168.0.102, and the Windows Device Portal shows correctly. (I also installed the certificate to make a trust connection)
![image](

But when I tried to connect it in Unity, it didn't work:
![image](

## To reproduce

Steps to reproduce the behavior:

In Unity
1. Go to 'Mixed Reality Toolkit'
2. Go to 'Utilities'
3. Click on 'Bulid Window'
4. Click on 'Deploy Options'
5. Click on 'Target Type'

With Wi-Fi:
1. Scroll to 'Remote'
2. Type IpAddress, Username, Password
3. Clcik on 'Test Connection'
4. Unity Editor shows "NullReferenceException: DownloadHandler has already been destroyed"

With USB:
1. Scroll to 'Local'
2. Type Username, Password
3. Clcik on 'Test Connection'
4. Unity Editor shows "NullReferenceException: DownloadHandler has already been destroyed"

## Expected behavior

How can I fixed it? 

## My setup 

- Unity Version [v2019.3.7f1]
- MRTK Version [v2.4.0]
- win10 SDK[10.0.18362.1]

## Target platform 

- HoloLens 2

## Additional context

In HoloLens2, "Developer Mode" and "Enable Device Portal" options are turned on
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7734</IssueID>
        <PullRequestID>7823</PullRequestID>
        <Title>Fixing Build Window access of Response Data </Title>
        <Description>## Overview
This [PR]( has moved the access to DownloadHandler text and data to the Response object, adding an action that can be executed only when text from response is really needed (saving performance cost of unecessary DownloadHandler data conversion).

Most of methods inside DevicePortal.cs (used bu Build Window buttons ) use the text property from rest calls Response Data but most UnityWebRequests objects are initialized inside a using scope from Rest.cs. DevicePortal.cs methods cannot access delegated methods from download handler destroyed when out of the initialization using scope.

This regression Issue can be seen when trying to communicate with Hololens device through Build Window or when playing the Glb Loading Demo. 

![80339267-d77a3500-8890-11ea-83b6-404f3c72c402](

## Changes

The proposed solution, keeps Response constructor option with delegate methods, but adds a flag in case ResponseData will have its download handler text property used by the caller method.

- Fixes: #7734 .
</Description>
        <CreatedDate>07/05/2020</CreatedDate>
        <ClosedDate>08/05/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Bug</Name>
            <IssueID>7734</IssueID>
            <PullRequestID>7823</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Build Window</Name>
            <IssueID>7734</IssueID>
            <PullRequestID>7823</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>vaoliva</FixedById>
            <PullRequestID>7823</PullRequestID>
            <IssueID>7734</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>7727</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Forbidden MonoBehaviour instantiation through constructor</Title>
    <CreatedDate>24/04/2020</CreatedDate>
    <ClosedDate>25/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7727</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>External</Name>
        <IssueID>7727</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When building a poject using MRTK v2.3 I get a warning in the Unity console

&gt; You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
&gt;UnityEngine.MonoBehaviour:.ctor()
&gt;Microsoft.MixedReality.QR.Init:.ctor()
&gt;UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)

when looking into `Microsoft.MixedReality.QR.Init` which is `MonoBehaviour` you are using `[InitializeOnLoad]` combined with a `static Init()` constructor. This is not allowed and very unclean for Unity. dos this even need to be a `MonoBehaviour`?

In general I just want to point out that there is also [`[InitializeOnLoadMethod]`]( which you could/should use instead so no constructor is used but you can still execute a `private static void Initialize()` or something similar.

- Unity Version any
- MRTK Version v2.3

## Target platform

- HoloLens
- HoloLens 2</Description>
  </Issue>
  <Issue>
    <IssueID>7718</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>7718</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Documentation: Describe how to manage Reprojection Mode through Application</Title>
    <CreatedDate>23/04/2020</CreatedDate>
    <ClosedDate>04/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7718</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Really appreciate the work in #6731 to allow us to set the reprojection mode on Hololens devices using the Camera Profile. I'm looking to extend this feature by toggling the reprojection mode during runtime in one of the applications I'm building. 

So far my approach has been to directly change the `ReprojectionMode` on the instance of `WindowsMixedRealityReprojectionUpdater ` that is initialized on the MainCamera. We need an officially documented way to set the reprojection mode in apps during runtime.

## Describe the solution you'd like
A simple utility to set the mode and accompanying documentation on how to use it.

## Additional context
More context on reprojection: 

**Note:** The method for setting the reprojection mode in the above document is now outdated.
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7718</IssueID>
        <PullRequestID>6731</PullRequestID>
        <Title>Add option in Windows Mixed Reality camera settings for reprojection mode</Title>
        <Description>This change adds support for selecting between Depth and Auto-Planar reprojection modes when running on Microsoft HoloLens 2.

Prerequisites:
To use this feature, MSBuild for Unity must be installed into the project (#6729) adds the option to the MRTK Configuration dialog as well as the DotNetWinRT package must be imported (automatically performed with MSBuild for Unity is installed).

If the prerequisites exist, the value of HoloLens 2 Reprojection Method, in the Windows Mixed Reality Camera Settings profile will be honored.

![image](

If the prerequisites cannot be found, the default value (Depth Reprojection) will be used.

This change fixes #6531</Description>
        <CreatedDate>25/11/2019</CreatedDate>
        <ClosedDate>04/12/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>CameraSystem</Name>
            <IssueID>7718</IssueID>
            <PullRequestID>6731</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>HoloLens 2</Name>
            <IssueID>7718</IssueID>
            <PullRequestID>6731</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Release Blocker</Name>
            <IssueID>7718</IssueID>
            <PullRequestID>6731</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>davidkline-ms</FixedById>
            <PullRequestID>6731</PullRequestID>
            <IssueID>7718</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7718</IssueID>
        <PullRequestID>7775</PullRequestID>
        <Title>Update HL2 holographic reprojection docs</Title>
        <Description>## Overview

Adds sample code and more information on the HL2 holographic reprojection method setting and how to change it at runtime.

Also removed a reference to "depth reprojection" in the setting, where the setting could be planar reprojection or autoplanar reprojection as well.

## Changes
- Fixes: </Description>
        <CreatedDate>04/05/2020</CreatedDate>
        <ClosedDate>04/05/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Documentation</Name>
            <IssueID>7718</IssueID>
            <PullRequestID>7775</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>HoloLens 2</Name>
            <IssueID>7718</IssueID>
            <PullRequestID>7775</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>7775</PullRequestID>
            <IssueID>7718</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>7717</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>vaoliva</FixedById>
        <IssueID>7717</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Better user feedback for migration window</Title>
    <CreatedDate>23/04/2020</CreatedDate>
    <ClosedDate>06/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>7717</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Right now after performing any kind of upgrade the progress bar just disappears and the user won't have any information if the upgrade succeeded and which files got upgraded. (there is some message in the log, but not all users will have that open all the time)

## Describe the solution you'd like
Proposed changes:
1. Let user know that upgrade process is finished by showing a message (popup or notification) after the progress bar is finished.
2. Keep the list of items that were added for upgrading in the UI and show a green tick or a red X to indicate if the asset has been upgraded. Green tick ones can have a tooltip like: Asset has been upgraded sucessfully  - where red ones can show a truncated version of the error and on double click lead the user to the actual log message that gives the full information.

3. (Should we warn the user before starting upgrading process that this is a non - revertible process?  -&gt; once migration is performed the files can't be changed back (except by their own version control, but that's out of our hands)

## Describe alternatives you've considered

Open for any other suggestions on how we can improve user feedback for this :)


</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7717</IssueID>
        <PullRequestID>7735</PullRequestID>
        <Title>Migration Tool UX improve</Title>
        <Description>## Overview
Right now after performing any kind of upgrade the progress bar just disappears and the user won't have any information if the upgrade succeeded and which files got upgraded. (there is some message in the log, but not all users will have that open all the time)

Describe the solution you'd like
Proposed changes:

Let user know that upgrade process is finished by showing a message (popup or notification) after the progress bar is finished.

Keep the list of items that were added for upgrading in the UI and show a green tick or a red X to indicate if the asset has been upgraded. Green tick ones can have a tooltip like: Asset has been upgraded successfully - where red ones can show a truncated version of the error and on double click lead the user to the actual log message that gives the full information.

(Should we warn the user before starting upgrading process that this is a non - revertible process? -&gt; once migration is performed the files can't be changed back (except by their own version control, but that's out of our hands)

![Screenshot (21)](

## Changes
- Fixes: #7717
</Description>
        <CreatedDate>27/04/2020</CreatedDate>
        <ClosedDate>29/04/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Migration</Name>
            <IssueID>7717</IssueID>
            <PullRequestID>7735</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>vaoliva</FixedById>
            <PullRequestID>7735</PullRequestID>
            <IssueID>7717</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>7715</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>7715</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Gaze cursor shows up when using Holographic Remoting and hand is up</Title>
    <CreatedDate>23/04/2020</CreatedDate>
    <ClosedDate>30/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7715</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7715</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
When using the holographic remoting in unity editor, when the user brings her hand up to be facing her such as when using the hand menu demos, a gaze cursor appears in the center of the field of view, in the 'donut' state.

The head cursor should not show up in this case -- it should only show show up in the following cases:

1. In HoloLens 1, if no hands are present gaze cursor should be in dot. If one or more gesture hands are present, cursor should be a donut.
2. In HoloLens 2, on launch cursor should be dot, then when one hand come up cursor disappears. If user says 'select', then the cursor appears again, as a dot.

For input simulation, after #7631 the cursor appears as a donut when no simulated hands are present, for convenience. However, if running Holographic emulation and the hands are up (even when they are facing you), the cursor should not show up as a donut

![image](

Regression from 2.3, most likely introduced in #7631 as that change adds a hand to the scene, to be used by the head gaze cursor.

## To reproduce

Steps to reproduce the behavior:

1. Run HandMenuExamples scene with [Holographic Remoting]( enabled.
2. Bring up hand menu by making hand face you. Make sure other hand is not visible
3. You will see the donut cursor

## Expected behavior
When any articulated hands are present in the scene, the donut cursor should not show up.
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>7713</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>'Object at index 0 is null' error after hitting play, with custom MRTK pointer profiles</Title>
    <CreatedDate>23/04/2020</CreatedDate>
    <ClosedDate>29/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7713</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7713</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
ArgumentException: Object at index 0 is null
UnityEditor.SerializedObject..ctor (UnityEngine.Object[] objs, UnityEngine.Object context) (at C:/buildslave/unity/build/Editor/Mono/SerializedObject.bindings.cs:39)
UnityEditor.Editor.GetSerializedObjectInternal () (at C:/buildslave/unity/build/Editor/Mono/Inspector/Editor.cs:526)
UnityEditor.Editor.get_serializedObject () (at C:/buildslave/unity/build/Editor/Mono/Inspector/Editor.cs:433)
Microsoft.MixedReality.Toolkit.Input.Editor.MixedRealityPointerProfileInspector.OnEnable () (at Assets/MRTK/Core/Inspectors/Profiles/MixedRealityPointerProfileInspector.cs:40)
`</Code>
    <Description>## Describe the bug
I am getting the following errors in play mode in my Unity editor, after I have create custom MRTK pointer profile in my scene

``
A clear and concise description of what the bug is.

## To reproduce

Steps to reproduce the behavior:

1. Make custom MRTK pointer profile
2. Hit play
## Your setup (please complete the following information)

- Unity Version 2018.4.20f1
- MRTK Version 2.4 stabilization

## Target platform (please complete the following information)

- Editor
</Description>
  </Issue>
  <Issue>
    <IssueID>7706</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>7706</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Hand Menu in 2.4 Update moves forward/backward as I move head side to side</Title>
    <CreatedDate>22/04/2020</CreatedDate>
    <ClosedDate>27/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7706</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
The larger hand menus introduced in #7365 are quite large, which seems to exacerbate an issue with the hand menu placement algorithm. When the user moves his/her head from side to side, the menu moves considerably forward / backward relative to the user. See in the attached video the z-movement as the head (appearing as a frustrum) rotates.

![hand menu move camera move](

## To reproduce

1. Play the HandMenuExamples scene in editor over remoting, or on Hololens 2
2. Bring up the large menu 
3. Rotate head from side to side
4. See menu moving foward and backward


## Expected behavior

I would expect the menu to stay still, attached to the hand, as I move my head from side to side
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>7701</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>7701</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>HandInteractionExample scene bugs</Title>
    <CreatedDate>21/04/2020</CreatedDate>
    <ClosedDate>25/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7701</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

- Some broken debug messages
- Overlapping texts on slider values
- Toggle Features Panel button overlaps, the layout needs to be updated with new 'Gaze Source' button

![2020-04-21 09_59_13-Unity 2018 4 21f1 Personal -  PREVIEW PACKAGES IN USE  - HandInteractionExamples](
![2020-04-21 09_59_05-Unity 2018 4 21f1 Personal -  PREVIEW PACKAGES IN USE  - HandInteractionExamples](
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7701</IssueID>
        <PullRequestID>7703</PullRequestID>
        <Title>[2.4.0 stabilization] Several bug fix for the HandInteractionExample scene</Title>
        <Description>## Overview
Several bug fix for the HandInteractionExample scene
- Reverted change in ShowSliderValue.cs which was modified for temporary testing
- Updated broken Toggle Features Panel Layout to incorporate new 'Gaze Source' Button
- Assigned Debug Text message for the far interaction as well

### ToggleFeaturesPanel - Before &amp; After
![2020-04-21 09_59_05-Unity 2018 4 21f1 Personal -  PREVIEW PACKAGES IN USE  - HandInteractionExamples](
![2020-04-21 10_07_53-Unity 2018 4 21f1 Personal -  PREVIEW PACKAGES IN USE  - HandInteractionExamples](

### Piano debug message 
![2020-04-21 10_18_57-Unity 2018 4 21f1 Personal -  PREVIEW PACKAGES IN USE  - HandInteractionExamples](

### Slider value text fix - Before &amp; After
![2020-04-21 09_59_13-Unity 2018 4 21f1 Personal -  PREVIEW PACKAGES IN USE  - HandInteractionExamples](
![2020-04-21 10_36_49-Unity 2018 4 21f1 Personal -  PREVIEW PACKAGES IN USE  - HandInteractionExamples](


## Changes
- Fixes: #7701 
</Description>
        <CreatedDate>21/04/2020</CreatedDate>
        <ClosedDate>23/04/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Example/Test Scene</Name>
            <IssueID>7701</IssueID>
            <PullRequestID>7703</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>UX Controls</Name>
            <IssueID>7701</IssueID>
            <PullRequestID>7703</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>cre8ivepark</FixedById>
            <PullRequestID>7703</PullRequestID>
            <IssueID>7701</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>7699</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>7699</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add Microsoft.MixedReality.Toolkit namespace check for PR validation</Title>
    <CreatedDate>21/04/2020</CreatedDate>
    <ClosedDate>01/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>CI/Build</Name>
        <IssueID>7699</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Add a check for PR validation to make sure new files added to MRTK contain:

``

Checking for the `Microsoft.MixedReality.Toolkit..` namespace does not happen during PR validation, but it is checked during the Asset Retargeting step for mrtk_CI.</Description>
  </Issue>
  <Issue>
    <IssueID>7698</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>7698</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Exception Spam from Windows Mixed Reality Device Manager</Title>
    <CreatedDate>21/04/2020</CreatedDate>
    <ClosedDate>22/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7698</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Every frame, a null pointer exception is occurring:

&gt; NullReferenceException: Object reference not set to an instance of an object
&gt; Microsoft.Windows.Perception.Spatial.ISpatialCoordinateSystem.op_Implicit (Microsoft.Windows.Perception.Spatial.SpatialCoordinateSystem obj) (at &lt;ed1f6dedc2514473bacf0986f8922b29&gt;:0)
&gt; Microsoft.Windows.UI.Input.Spatial.SpatialPointerPose.TryGetAtTimestamp (Microsoft.Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem, Microsoft.Windows.Perception.PerceptionTimestamp timestamp) (at &lt;ed1f6dedc2514473bacf0986f8922b29&gt;:0)
&gt; Microsoft.MixedReality.Toolkit.WindowsMixedReality.Input.WindowsMixedRealityDeviceManager.Update () (at Assets/MRTK/Providers/WindowsMixedReality/XR2018/WindowsMixedRealityDeviceManager.cs:446)
&gt; Microsoft.MixedReality.Toolkit.BaseDataProviderAccessCoreSystem.Update () (at Assets/MRTK/Core/Services/BaseDataProviderAccessCoreSystem.cs:55)
&gt; Microsoft.MixedReality.Toolkit.MixedRealityToolkit+&lt;&gt;c.&lt;UpdateAllServices&gt;b__64_0 (Microsoft.MixedReality.Toolkit.IMixedRealityService service) (at Assets/MRTK/Core/Services/MixedRealityToolkit.cs:946)
&gt; Microsoft.MixedReality.Toolkit.MixedRealityToolkit.ExecuteOnAllServicesInOrder (System.Action`1[T] execute) (at Assets/MRTK/Core/Services/MixedRealityToolkit.cs:1034)
&gt; Microsoft.MixedReality.Toolkit.MixedRealityToolkit.UpdateAllServices () (at Assets/MRTK/Core/Services/MixedRealityToolkit.cs:946)
&gt; Microsoft.MixedReality.Toolkit.MixedRealityToolkit.Update () (at Assets/MRTK/Core/Services/MixedRealityToolkit.cs:630)

## To reproduce

Steps to reproduce the behavior:

- New Unity Project
- Bring in Assets/MRTK/ from fresh clone of mrtk_development @  (or I went back a few weeks to see if I could find a build that worked and for at least the last two weeks this issue was there.)
- Switch to UWP
- Ensure MS Build is enabled

## Expected behavior

No exception.

## Your setup (please complete the following information)

- Unity Version 2018.4.17f1
- MRTK Version v2.4 (dev)

## Target platform (please complete the following information)

- ~~HoloLens 2~~
- In Unity Editor

## Additional context

It's not clear what's causing this, but I somehow managed to get it to go away. Where usually `Microsoft.Windows.UI.Input.Spatial.SpatialPointerPose.TryGetAtTimestamp (Microsoft.Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem, Microsoft.Windows.Perception.PerceptionTimestamp timestamp)` ([here]( is totally fine with you passing in a null pointer for the `coordinateSystem` (as happens in the Editor), it seems that changing some settings in the project (maybe something related to WinRT, or MSBuild?), `TryGetAtTimestamp` starts throwing an exception when a null pointer is passed in.

This bug can be avoided by checking for null on the `coordinateSystem` before calling the method (and not calling the method if it's null), but I suspect this is the tip of the iceberg for some other set of problems.
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7698</IssueID>
        <PullRequestID>7710</PullRequestID>
        <Title>Add WindowsMixedRealityUtilities.SpatialCoordinateSystem null checks</Title>
        <Description>## Overview

Adds a `WindowsMixedRealityUtilities.SpatialCoordinateSystem != null` check before passing it into `SpatialPointerPose.TryGetAtTimestamp`. In certain scenarios, like running in the editor without a headset attached, the app won't launch into the full holographic view and we won't have a valid spatial coordinate system.

## Changes
- Fixes: #7698</Description>
        <CreatedDate>22/04/2020</CreatedDate>
        <ClosedDate>22/04/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Windows Mixed Reality</Name>
            <IssueID>7698</IssueID>
            <PullRequestID>7710</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>7710</PullRequestID>
            <IssueID>7698</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7698</IssueID>
        <PullRequestID>7711</PullRequestID>
        <Title>Prerelease/2.4.0 stabilization -&gt; dev</Title>
        <Description>## Overview
 Periodic merge of stabilization back to dev</Description>
        <CreatedDate>22/04/2020</CreatedDate>
        <ClosedDate>23/04/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Release Management</Name>
            <IssueID>7698</IssueID>
            <PullRequestID>7711</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>7711</PullRequestID>
            <IssueID>7698</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>7697</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hands misplaced when Playspace has non-identity transform</Title>
    <CreatedDate>21/04/2020</CreatedDate>
    <ClosedDate>22/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7697</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Articulated hands display incorrectly.

When the Playspace (or another transform ancestor of the camera further up the chain) has a non-identity transform, the articulated hands display incorrectly (HL2 only). 

The hand skeleton displays in the correct location, but the hands' shells are displaced away from the users hands.

## To reproduce

Simplest case to reproduce:

First, no error:
1. Create empty MRTK scene MyTest.
2. Add a sphere at (0,0,1).
3. Deploy and run.
4. On startup, sphere is directly in front of you.
5. Look at your hands, they display correctly.

Now error:
1. Go back to MyTest scene.
2. Change Playspace transform  position to (-1, 0, -1)
3. Build and deploy and run.
4. Note sphere is farther ahead and to your right, as expected.
5. Look at your hands. You only have the skeleton.
6. While holding your hands in front of you, look forward and right.
7. See the shell of your hands forward and right.

## Expected behavior

Shell of your hands should match your hand positions, like the skeletal display does.

## Screenshots

See screenshot. I've highlighted with arrows the incorrect shells in orange, and the correct skeleton with green arrows. Sorry about the clutter.

![InkedMisplacedHands_LI](

## Your setup (please complete the following information)

- Unity Version: 2019.3.3f1 (but using legacy XR).
- MRTK Version: mrtk_development branch as of April 21, 2020.

## Target platform (please complete the following information)
- HoloLens 2

## Additional context

Related to #7695 


</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7697</IssueID>
        <PullRequestID>7708</PullRequestID>
        <Title>Fold in Playspace transform into hand mesh display</Title>
        <Description>Fold in Playspace transform into hand mesh display to accommodate teleport.

## Overview

The transforms for the hand meshes are missing the Playspace transform. Therefore, after teleport the hand meshes will appear in the wrong place. This fixes that.

## Changes
Folds in a missing transform in WindowsMixedRealityArticulatedHandDefinition, following the pattern elsewhere in the code (e.g. WindowsMixedRealityArticulatedHand).

- Fixes: #7697.


## Verification
Note that the performance cost is negligible, resulting in only a transform concatenation per mesh. This addition appears to just correct an easy to miss oversight. No architectural or otherwise significant changes are needed.

Note that I don't have context to know if this fix relates to new XR SDK surface, or whether it should. I've only tested and validated on the legacy API. Would be great if someone knowledgeable there could confirm or deny.

&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>22/04/2020</CreatedDate>
        <ClosedDate>22/04/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Hand Tracking</Name>
            <IssueID>7697</IssueID>
            <PullRequestID>7708</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>7695</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>fast-slow-still</FixedById>
        <IssueID>7695</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Need tests for non-identity Playspace transform</Title>
    <CreatedDate>21/04/2020</CreatedDate>
    <ClosedDate>17/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7695</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7695</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Example/Test Scene</Name>
        <IssueID>7695</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Tests</Name>
        <IssueID>7695</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Description

When adding new features and/or refactoring old ones, it is easy to forget about the Playspace transform, which is the parent of the main camera. The Playspace takes on a non-identity transform in many interesting scenarios in real-world applications, including teleport.

Adding non-identity Playspace transforms to existing tests should either work already, or expose existing but unknown bugs. These would help catch problems before they happen.

Also, adding tests which flex the Playspace transform pattern specifically might help keep the Playspace mechanism robust in the future.

This is related to #6660.
</Description>
  </Issue>
  <Issue>
    <IssueID>7692</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>7692</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Camera control speed is uncomfortably fast and tied with frame rate.</Title>
    <CreatedDate>20/04/2020</CreatedDate>
    <ClosedDate>20/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7692</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Moving the camera within the hand interaction demo scene is uncomfortably fast with the in-editor input simulation and is dependent on framerate. For example, in standalone builds, the framerate is 2,000 fps, and the camera moves extremely fast.</Description>
  </Issue>
  <Issue>
    <IssueID>7690</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>vaoliva</FixedById>
        <IssueID>7690</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Only list files in migration tool project option that actually can be migrated</Title>
    <CreatedDate>20/04/2020</CreatedDate>
    <ClosedDate>27/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7690</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Cherry Pick</Name>
        <IssueID>7690</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Migration</Name>
        <IssueID>7690</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Atm we're listing all files of the project which is not a great user experience, as it's uncertain to the user if all their files will be affected by the upgrade. 
It would be better to just list the files that actually contain the components we're planning to upgrade. That would also make the list shorter, make it easier to filter files and give a better overview before pressing the migration button. 

## To reproduce

Try the migrate project option on the MRTK project - there's a long list of files shown but actually only one scene gets migrated.

## Expected behavior

Only show upgradeable files in that list.
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7690</IssueID>
        <PullRequestID>7688</PullRequestID>
        <Title>Graduated ObjectManipulator and MigrationWindow </Title>
        <Description>## Overview
This PR graduates ObjectManipulator and the MigrationWindow to allow users to smoothly migrate from ManipulationHandler to ObjectManipulator.

Detailed changes:
- Moved ObjectManipulator and MigrationWindow and all associated classes out of experimental namespace
- Removed experimental ref from ManipulationHandler
- Replaced all occurences of ManipulationHandler in all MRTK scenes and prefabs except ManipulationHandler specific ones with the new ObjectManipulator (done with migration tool migrate project option)
- while using migration window / tool to migrate I fixed the following bugs:
-- fixed query listing all files in current project (thanks @vaoliva )
-- fixed scrollbar being stuck in migrationwindow which will hide the migrate button in long file lists
-- fixed tool hanging when trying to migrate .fbx or other files that aren't a unity prefab file
-- made sure we're not upgrading any files that don't need migration
- replaced manipulationhandler with object manipulator in tests or comments that are not directly related to the old manipulationhandler
- Note: MigrationWindow test class is still in experimental folder as it will still be used for testing migration on experimental features (currently BoundsControl)

## Changes
- Fixes: #7357 


## Verification
run all tests and verified that hand interaction scene / slate / object manipulator scene works properly in editor - will need some more people testing this during stabilization</Description>
        <CreatedDate>20/04/2020</CreatedDate>
        <ClosedDate>22/04/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>UX Controls</Name>
            <IssueID>7690</IssueID>
            <PullRequestID>7688</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>UX Controls - ObjectManipulator</Name>
            <IssueID>7690</IssueID>
            <PullRequestID>7688</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>thalbern</FixedById>
            <PullRequestID>7688</PullRequestID>
            <IssueID>7690</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7690</IssueID>
        <PullRequestID>7707</PullRequestID>
        <Title>Migration Tool: Only list files in migration tool project option that actually can be migrated</Title>
        <Description>## Overview
On Migration Window, when trying to migrate entire project using the "Add Full Project for Migration" button, Migration tool lists all files of the project which is not a great user experience, as it's uncertain to the user if all their files will be affected by the upgrade.
It would be better to just list the files that actually contain the components we're planning to upgrade. That would also make the list shorter, make it easier to filter files and give a better overview before pressing the migration button.

This is part of Migration Tool graduation.

## Changes
Tool goes through object hierarchy checking if migration is supported on any of the hierarchy objects. Only show upgradeable files in that list.

Before:
![Screenshot (15)](

After:
![Screenshot (14)](


- Fixes: #7690 .

</Description>
        <CreatedDate>22/04/2020</CreatedDate>
        <ClosedDate>23/04/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Migration</Name>
            <IssueID>7690</IssueID>
            <PullRequestID>7707</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>vaoliva</FixedById>
            <PullRequestID>7707</PullRequestID>
            <IssueID>7690</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>7689</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>7689</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Leap Motion Improvements</Title>
    <CreatedDate>20/04/2020</CreatedDate>
    <ClosedDate>21/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Leap Motion</Name>
        <IssueID>7689</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>- [x] Add configurable pinch thresholds

- [x] ~~Add near interaction grab support, currently a grab is only recognized as a pinch~~
The configurable pinch thresholds are used to trigger the grab gesture

- [x] Update documentation with "Configure Pinch Thresholds" section and update screenshots</Description>
  </Issue>
  <Issue>
    <IssueID>7686</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>7686</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Use a cone instead of a sphere for grab interactions</Title>
    <CreatedDate>18/04/2020</CreatedDate>
    <ClosedDate>21/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7686</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>7686</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Break up of #6634  into sub issues

## Describe the bug
MRTK uses a sphere to detect if a grabbable is near the hand, which does not match shell parity. This means the hand can be in front of an object but still grab it.


![image](


Instead, create a ConePointer which uses a cone instead of a sphere when doing its cast check for grabbables.
![image](

The default pointer for near grab interactions should use this cone pointer instead of sphere pointer.
</Description>
  </Issue>
  <Issue>
    <IssueID>7685</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>7685</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add Documentation on how to set up a WMR headset for Standalone builds</Title>
    <CreatedDate>17/04/2020</CreatedDate>
    <ClosedDate>27/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7685</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

Add documentation outlining how to use and install the WMR SteamVR plugin for Standalone builds in MRTK.


</Description>
  </Issue>
  <Issue>
    <IssueID>7677</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>7677</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Improve eye tracking simulation and control in Unity Editor</Title>
    <CreatedDate>16/04/2020</CreatedDate>
    <ClosedDate>17/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>7677</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description> ## Describe the problem

Currently, when eye tracking feature is turned on, used the center of my view as the eye cursor. I am not able to simulate moving my eye while staring at the same viewpoint at all like on device.

## Describe the solution you'd like

If you have turned on eye tracking in your project, this feature will be enabled. I want to be able to hit a keyboard shortcut or mouse somehow to bring up an eye pointer, separately from my view, so I can freely move my eye cursor around independently of my view. This is very similar to my hand pointer controls but instead of the hand, use the eye icon instead. I have attached a mockup of how this can be...

![Eye_Pointer](


## Describe alternatives you've considered

A clear and concise description of any alternative solutions or features you've considered.

## Additional context

Add any other context or screenshots about the feature request here.
</Description>
  </Issue>
  <Issue>
    <IssueID>7675</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>7675</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>add input simulation overlay cheat sheet to show keyboard/mouse commands</Title>
    <CreatedDate>16/04/2020</CreatedDate>
    <ClosedDate>01/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>7675</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

There are [great controls]( for manipulating your simulated view, hands, and eye gaze while testing in the Unity editor. However, there's a *lot* there that isn't immediately intuitive if you take up bringing up, holding, tapping, moving, rotating both hands. I have observed that most people aren't aware of the full set of capabilities, forget how to do them, or don't take the effort to research this in documentation.

## Describe the solution you'd like

1. Ability to quickly toggle on and off an overlay on top of the game window with simple reference info about all the available controls and keys to trigger them. Try to take all the info from [Input Simulation Service]( and condense it down in the clearest way possible.
2. Discoverability for #1. For example, if there's a special key combo to bring up the overlay, how would a new person know to hit that key combo? I'm thinking that, on startup, an overlay message could say something like "Mixed Reality Input Simulation Service: press Ctrl+Shift+I to show quick reference".

Note: I think a key combo like this might be a good solution, but feel free to come up with something better.
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>7666</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>7666</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>GridObjectCollection object is offset from Anchor on Cell Height change</Title>
    <CreatedDate>15/04/2020</CreatedDate>
    <ClosedDate>17/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7666</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

If the Anchor on a GridObjectCollection is set to Upper Left, Upper Right or Upper Center and the Cell Height is changed, the top of the uppermost object will not remain in place. Similarly, when it is set to Bottom Left, Bottom Right or Bottom Center, the bottom object will change position on changing the Cell Height. 


## To reproduce

1. Create an Empty Game Object
2. Add a GridObjectCollection component
3. Add a Pressable Button prefab and duplicate it several times
4. Set the Cell Height to a small value such as 0.05
5. Set the Anchor value to Upper Left
6. Click Update Collection and note where the top of the topmost object is.
7. Change the Cell Height to a larger value such as 0.1 or more
8. Click Update Collection and note that the top of the object is now at a different height.

## Expected behaviour

The expected behaviour is that the top or bottom object will remain fixed in place while the spacing changes for the other objects. 

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your setup (please complete the following information)

- Unity Version 2019.3.4f1
- MRTK Version v2.3

## Target platform (please complete the following information)

- HoloLens 2

## Additional Notes

This is related to feature request in #4777 and merged in v2.2, but the slight offset from the anchor position makes it not as useful for the use case mentioned in #4777, that is, making a list of buttons "drop down" from a fixed position in a collection.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>7662</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Allow customization of configurator defaults</Title>
    <CreatedDate>15/04/2020</CreatedDate>
    <ClosedDate>17/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7662</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The MRTK configurator today provides sane defaults for most projects getting started - for more advanced projects, however, it can be useful to customize what those defaults should be.

For example, there have been some cases where some projects have seen that msbuild4unity's default behavior (in conjunction with their system) has led to very difficult to reconcile situations (i.e. conflicts with their own build tooling and configuration).

At the same time, having msb4u enabled by default (under WMR) is super helpful for HL2 scenarios (for remoting from Unity).

Given this, this issue tracks making it so that on a project by project basis, you can configure the defaults for the configurator (so that individual contributors to those projects don't blow away the values set manually with the defaults shown.</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7662</IssueID>
        <PullRequestID>6315</PullRequestID>
        <Title>Create serializable Project Preferences</Title>
        <Description>## Overview
Before this change any Mixed Reality preferences were saved per user for their entire development environment. This change introduces a class to handle Project Preferences for individual projects/teams that can be committed and shared via source control.

- Updated gitignore to not commit MRTK.Generated folder
- Fixed bug where there was no MRTK.Generated.Sentinel file so requesting the folder location of the generated folder always failed
- MRTKFiles now attempts to create Generated folder and track it (places where-ever the Core MRTK folder is found)
- Expanded tests to better cover MRTKFiles utility
- Updated MRPreferences (i.e lock profiles etc) to utilize ProjectPreferences instead of user editor preferences

![image](

## Changes
- Fixes: #6174 

## Verification
&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>17/10/2019</CreatedDate>
        <ClosedDate>13/11/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Editor</Name>
            <IssueID>7662</IssueID>
            <PullRequestID>6315</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>Troy-Ferrell</FixedById>
            <PullRequestID>6315</PullRequestID>
            <IssueID>7662</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7662</IssueID>
        <PullRequestID>7665</PullRequestID>
        <Title>Improve MRTK project settings text</Title>
        <Description>## Overview

After  all our MRTK settings are now on a per-project basis (some were previously global), serialized into a .asset file. Some of our settings descriptions still mentioned the previously global nature of things.
I also:

* updated some of the settings text, for example to explicitly call out the one that handles the project configurator
* updated some summary tags that were incorrect (copied and pasted from the first setting and not changed)
* added a note to the settings page about where these settings are serialized and how they can be shared
* Fixed some instances of incorrect Unity null propagation
    * `Instance?.` in `ProjectPreferences`, where `Instance` is a `UnityEngine.ScriptableObject`.
* Removed an unused key

![image](
</Description>
        <CreatedDate>15/04/2020</CreatedDate>
        <ClosedDate>15/04/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>MRTK usability</Name>
            <IssueID>7662</IssueID>
            <PullRequestID>7665</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>7665</PullRequestID>
            <IssueID>7662</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>7647</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>7647</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Consider: Filtering performance markers if object is not enabled</Title>
    <CreatedDate>13/04/2020</CreatedDate>
    <ClosedDate>13/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>7647</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Performance</Name>
        <IssueID>7647</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Some MRTK scripts have an IsEnabled check in many functions to suppress behaviors if the object has been disabled.

Currently, the input system instrumentation measures these methods regardless of the enabled status of the object. This results in an accurate accounting of how often the method is called. That accuracy comes at a cost of potentially making it harder to identify some issues (ex: too many references in the trace).

This proposal is to move the profiler markers after the enabled checks.</Description>
  </Issue>
  <Issue>
    <IssueID>7642</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>7642</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>The same field name is serialized multiple times in the class or its parent class. This is not supported: Base(SpherePointer) &lt;SceneQueryType&gt;k__BackingField</Title>
    <CreatedDate>10/04/2020</CreatedDate>
    <ClosedDate>10/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7642</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Near Interaction</Name>
        <IssueID>7642</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

I introduced an issue with #7637 by removing the backing field for the overriden `SceneQueryType` property.

![image](

## To reproduce

I'm not sure how to reproduce this. I didn't see it at all while working on that PR, and have only seen it once since. I tried to repro but couldn't, but I'll clean it up anyway.</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7642</IssueID>
        <PullRequestID>7637</PullRequestID>
        <Title>Fix grasp point on hands without joints in SpherePointer</Title>
        <Description>## Overview

When testing remoting without the DotNetWinRT adapter, I noticed that grab interactions weren't working, since I didn't have joints. Looking through the code, I realized we fall back to the pointer's position in all cases except if the controller is a hand.

With this change, we now try to get the hand joints if a controller is a hand, but, if that fails plus in all other cases, if the controller provides a position, we use that instead. Grab interactions now work even without hand joints, as long as a position is reported.

I also made updates to the profiler markers to fit the new `Auto()` style we've been using. Due to this, I recommend [hiding whitespace changes when reviewing](

I also updated some formatting and spacing.

## Validation

The main scenario this affects is holographic remoting from the Unity editor to a HoloLens 2 without the DotNetWinRT adapter imported or enabled.
Before this change, grab interactions will fail. The grab pointer is never activated because hand joints aren't found.
After this change, the grab pointer uses the hand's grip pose when joints aren't found.</Description>
        <CreatedDate>10/04/2020</CreatedDate>
        <ClosedDate>10/04/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Holographic Remoting</Name>
            <IssueID>7642</IssueID>
            <PullRequestID>7637</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Input System - Near Interaction</Name>
            <IssueID>7642</IssueID>
            <PullRequestID>7637</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>7637</PullRequestID>
            <IssueID>7642</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>7636</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ManualGazeControl arrow keys not working</Title>
    <CreatedDate>09/04/2020</CreatedDate>
    <ClosedDate>25/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7636</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>7636</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description> In inspector for camera -&gt; Manual Gaze Control -&gt; Keyboard,Supported is checked and enabled.

 I run more or less an empty  scene with a plane and one 3D object.
The mouse look works fine, but the arrow keys don't work

These are all initialized properly and are not null
        public AxisController KeyboardXYRotationAxisControl;
        public AxisController KeyboardXZRotationAxisControl;
        public AxisController KeyboardXYTranslationAxisControl;
        public AxisController KeyboardXZTranslationAxisControl;


</Description>
  </Issue>
  <Issue>
    <IssueID>7632</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Crash when hovering pointer over MeshCollider from asset bundle</Title>
    <CreatedDate>09/04/2020</CreatedDate>
    <ClosedDate>10/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7632</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Assertion failed on expression: 'chanType.dimension == 0'
UnityEngine.RaycastHit:CalculateRaycastTexCoord_Injected(Collider, Vector2&amp;, Vector3&amp;, UInt32, Int32, Vector2&amp;)
UnityEngine.RaycastHit:CalculateRaycastTexCoord(Collider, Vector2, Vector3, UInt32, Int32)
UnityEngine.RaycastHit:get_textureCoord()
Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit:.ctor(Boolean, RaycastHit) (at Assets\MixedRealityToolkit\Definitions\InputSystem\MixedRealityRaycastHit.cs:36)
Microsoft.MixedReality.Toolkit.Input.DefaultRaycastProvider:Raycast(RayStep, LayerMask[], Boolean, MixedRealityRaycastHit&amp;) (at Assets\MixedRealityToolkit.Services\InputSystem\DefaultRaycastProvider.cs:43)
Microsoft.MixedReality.Toolkit.Input.FocusProvider:QueryScene(IMixedRealityPointer, IMixedRealityRaycastProvider, LayerMask[], PointerHitResult, Int32, Boolean) (at Assets\MixedRealityToolkit.Services\InputSystem\FocusProvider.cs:1140)
Microsoft.MixedReality.Toolkit.Input.FocusProvider:UpdatePointer(PointerData) (at Assets\MixedRealityToolkit.Services\InputSystem\FocusProvider.cs:971)
Microsoft.MixedReality.Toolkit.Input.FocusProvider:UpdatePointers() (at Assets\MixedRealityToolkit.Services\InputSystem\FocusProvider.cs:897)
Microsoft.MixedReality.Toolkit.Input.FocusProvider:Update() (at Assets\MixedRealityToolkit.Services\InputSystem\FocusProvider.cs:540)
Microsoft.MixedReality.Toolkit.&lt;&gt;c:&lt;UpdateAllServices&gt;b__63_0(IMixedRealityService) (at Assets\MixedRealityToolkit\Services\MixedRealityToolkit.cs:941)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:ExecuteOnAllServicesInOrder(Action`1) (at Assets\MixedRealityToolkit\Services\MixedRealityToolkit.cs:1019)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:UpdateAllServices() (at Assets\MixedRealityToolkit\Services\MixedRealityToolkit.cs:941)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:Update() (at Assets\MixedRealityToolkit\Services\MixedRealityToolkit.cs:629)

[C:\buildslave\unity\build\Runtime/Graphics/Mesh/Mesh.h line 140] 
(Filename: Assets/MixedRealityToolkit/Definitions/InputSystem/MixedRealityRaycastHit.cs Line: 36)

Stacktrace:

  at &lt;unknown&gt; &lt;0xffffffff&gt;
  at (wrapper managed-to-native) UnityEngine.RaycastHit.CalculateRaycastTexCoord_Injected (UnityEngine.Collider,UnityEngine.Vector2&amp;,UnityEngine.Vector3&amp;,uint,int,UnityEngine.Vector2&amp;) [0x0000e] in &lt;18b38ade9b8549a5aff4b379f33eccec&gt;:0
  at UnityEngine.RaycastHit.CalculateRaycastTexCoord (UnityEngine.Collider,UnityEngine.Vector2,UnityEngine.Vector3,uint,int) [0x0000a] in &lt;18b38ade9b8549a5aff4b379f33eccec&gt;:0
  at UnityEngine.RaycastHit.get_textureCoord () [0x0001a] in &lt;18b38ade9b8549a5aff4b379f33eccec&gt;:0
  at Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit..ctor (bool,UnityEngine.RaycastHit) [0x00052] in D:\Projets\Unity\TestMRTK\Assets\MixedRealityToolkit\Definitions\InputSystem\MixedRealityRaycastHit.cs:36
  at Microsoft.MixedReality.Toolkit.Input.DefaultRaycastProvider.Raycast (Microsoft.MixedReality.Toolkit.Physics.RayStep,UnityEngine.LayerMask[],bool,Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit&amp;) [0x00013] in D:\Projets\Unity\TestMRTK\Assets\MixedRealityToolkit.Services\InputSystem\DefaultRaycastProvider.cs:43
  at Microsoft.MixedReality.Toolkit.Input.FocusProvider.QueryScene (Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.IMixedRealityRaycastProvider,UnityEngine.LayerMask[],Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult,int,bool) [0x00090] in D:\Projets\Unity\TestMRTK\Assets\MixedRealityToolkit.Services\InputSystem\FocusProvider.cs:1140
  at Microsoft.MixedReality.Toolkit.Input.FocusProvider.UpdatePointer (Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData) [0x000dd] in D:\Projets\Unity\TestMRTK\Assets\MixedRealityToolkit.Services\InputSystem\FocusProvider.cs:971
  at Microsoft.MixedReality.Toolkit.Input.FocusProvider.UpdatePointers () [0x00085] in D:\Projets\Unity\TestMRTK\Assets\MixedRealityToolkit.Services\InputSystem\FocusProvider.cs:897
  at Microsoft.MixedReality.Toolkit.Input.FocusProvider.Update () [0x00011] in D:\Projets\Unity\TestMRTK\Assets\MixedRealityToolkit.Services\InputSystem\FocusProvider.cs:540
  at Microsoft.MixedReality.Toolkit.MixedRealityToolkit/&lt;&gt;c.&lt;UpdateAllServices&gt;b__63_0 (Microsoft.MixedReality.Toolkit.IMixedRealityService) [0x00000] in D:\Projets\Unity\TestMRTK\Assets\MixedRealityToolkit\Services\MixedRealityToolkit.cs:941
  at Microsoft.MixedReality.Toolkit.MixedRealityToolkit.ExecuteOnAllServicesInOrder (System.Action`1&lt;Microsoft.MixedReality.Toolkit.IMixedRealityService&gt;) [0x00026] in D:\Projets\Unity\TestMRTK\Assets\MixedRealityToolkit\Services\MixedRealityToolkit.cs:1019
  at Microsoft.MixedReality.Toolkit.MixedRealityToolkit.UpdateAllServices () [0x00001] in D:\Projets\Unity\TestMRTK\Assets\MixedRealityToolkit\Services\MixedRealityToolkit.cs:941
  at Microsoft.MixedReality.Toolkit.MixedRealityToolkit.Update () [0x0000c] in D:\Projets\Unity\TestMRTK\Assets\MixedRealityToolkit\Services\MixedRealityToolkit.cs:629
  at (wrapper runtime-invoke) object.runtime_invoke_void__this__ (object,intptr,intptr,intptr) [0x00020] in &lt;437ba245d8404784b9fbab9b439ac908&gt;:0

=================================================================
Got a SIGSEGV while executing native code. This usually indicates
a fatal error in the mono runtime or one of the native libraries 
used by your application.
=================================================================
`</Code>
    <Description>## Describe the bug

Hovering the pointer over an object with a `MeshCollider` component instantiated from an asset bundle results in an editor crash.

## Additional context

I am trying to use the `OnPointerClicked` event from the `PointerHandler` component on an object that has a `MeshCollider` and a `NearInteractionTouchable` component, instantiated from an asset bundle. This works as expected if the same object is dragged into the scene or instantiated from a prefab.

## Log errors
&lt;details&gt;&lt;summary&gt;Click to display logs&lt;/summary&gt;

``

&lt;/details&gt;

Complete logs: 
[Editor.log](


## To reproduce

1. Download the project
[TestMRTK.zip](

2. Open the `Main` scene from the `Scenes` folder.
3. Enter play mode.
4. Press the spacebar to display the hand, hover over the astronaut on the right.

## Expected behavior

Hovering the pointer over an object with a `MeshCollider` instantiated from an asset bundle should not cause a crash.

## Screenshots

Demo gif:
![mrtk-meshcollider-assetbundle-crash](

## Setup

- Unity 2019.3.5f1
- MRTK 2.3.0

## Target platform

- HoloLens 2 (UWP ARM64)
</Description>
  </Issue>
  <Issue>
    <IssueID>7478</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Update blob / documentation links to point to release branch</Title>
    <CreatedDate>03/03/2020</CreatedDate>
    <ClosedDate>06/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7478</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Management</Name>
        <IssueID>7478</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>This is a task that needs to be one of the release management steps performed each time we branch for stabilization. These steps are to ensure that documentation remains consistent and does not lead customers to an incorrect version during navigation.

On branching for stabilization
- [ ] Replace "mrtk_development" with "prerelease/2.x.x_stabilization" in documentation references
- [ ] Replace "blob/mrtk_development" with "blob/prerelease/2.x.x_stabilization" in repository references

On release
- [ ] Replace "mrtk_development" with "releases/2.x.x" in documentation references
- [ ] Replace "blob/mrtk_development" with "blob/releases/2.x.x" in repository references

On merge of stabilization / release branch into mrtk_development
- [ ] Replace "prerelease/2.x.x_stabilization" / "releases/2.x.x"  with "mrtk_development" in documentation references
- [ ] Replace "blob/prerelease/2.x.x_stabilization" / "blob/releases/2.x.x" with "blob/mrtk_development" in repository references

</Description>
  </Issue>
  <Issue>
    <IssueID>7473</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Limit release notes to single version. Move upgrade steps to update guide.</Title>
    <CreatedDate>03/03/2020</CreatedDate>
    <ClosedDate>03/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7473</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Now that MRTK has shipped multiple releases, continuing to maintain the release notes as a historical document is resulting in an overly long file where most of the content is no longer relevant (we archive each release in a releases branch - ex: releases/2.3.0).

Additionally, the upgrade steps are replicated each release and, in fact, are better served residing at the top of the updating.md file.

Tasks
- [ ] Remove archived (2.0 -&gt; 2.3) release notes content
- [ ] Move the upgrade instructions to a new (top level) section of updating.md</Description>
  </Issue>
  <Issue>
    <IssueID>7472</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>CoreServices method does not contain the definition for GetInputSystemDataProvider</Title>
    <CreatedDate>03/03/2020</CreatedDate>
    <ClosedDate>03/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7472</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the issues
CoreServices method does not contain the definition for GetInputSystemDataProvider.

## Feature area
CoreServices  does not implement the method although I have imported all the necessary utilities. I'm using MRTK2.2.0

## Existing doc link


under the voice "Joint transform from hand joint service"
</Description>
  </Issue>
  <Issue>
    <IssueID>7467</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>7467</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK2.3.0 ToolTipSpawner Vanish delay value not considered from cs-code</Title>
    <CreatedDate>02/03/2020</CreatedDate>
    <ClosedDate>03/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7467</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Using ToolTipSpawner.cs has the possibility to set an "Appear delay" and a "Vanish delay" value. 
The "Vanish delay" value will never be considered in the source code and the tool tip will always disappear immediately when the focus is no longer on the object.

## To reproduce

Steps to reproduce the behavior:
1. attach ToolTipSpawner.cs to object
2. set "VanishOnFocusExit"
3. set "Vanish Delay" to 2sec

in ToolTipSpawner.cs:
Switch/Case statement
Lines 274-278
 
## Expected behavior
If the focus is no longer on object, toolTip should disappear after the set amount of time.


## Screenshots
![image](

![image](

## Your setup (please complete the following information)
- Unity Version [e.g. 2019.3.2f1]
- MRTK Version 2.3.0

## Target platform (please complete the following information)

- HoloLens

## Additional context

</Description>
  </Issue>
  <Issue>
    <IssueID>7465</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>7465</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Null Pointer Exception: Migrated manipulation handlers can persist components that expect manipulation handlers to exist, despite being removed.</Title>
    <CreatedDate>01/03/2020</CreatedDate>
    <ClosedDate>04/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7465</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - ObjectManipulator</Name>
        <IssueID>7465</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Migrated manipulation handlers can persist components that expect manipulation handlers to exist, despite being removed.

## To reproduce

When interacting with migrated manipulation handlers, there may be a crash.

## Expected behavior

No null pointer exception.

## Screenshots

![image](

CursorContextManipulationHandler - seems to depend on ManipulationHandler, but does not ensure the component is present.
![image](



## Your setup (please complete the following information)

- Unity Version 2018.4.17f1
- MRTK Version - latest dev branch

## Target platform (please complete the following information)

- Oculus Quest

</Description>
  </Issue>
  <Issue>
    <IssueID>7464</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Older version of HTK - Getting Started - outdated?</Title>
    <CreatedDate>01/03/2020</CreatedDate>
    <ClosedDate>31/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7464</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>7464</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>7464</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi,
I've been recently trying to install an older version of the Toolkit when it still used to be HTK and followed the steps at  (downloading the described version of Unity, Visual Studio and the Toolkit). Once I loaded the Toolkit into Unity, however, I got these 10 errors:
![Annotation 2020-03-01 193053](
Should I have installed a different version or is the guide outdated?

I need HTK as MRTK no longer supports a functionality I need (Mic Stream Selection).
Thanks a lot.</Description>
  </Issue>
  <Issue>
    <IssueID>7340</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Windows XR Plugin 2.0.4 preview.3 breaks tracking on HoloLens 2</Title>
    <CreatedDate>17/02/2020</CreatedDate>
    <ClosedDate>18/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7340</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>External</Name>
        <IssueID>7340</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>XR SDK</Name>
        <IssueID>7340</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Windows XR Plugin 2.0.4 preview.3 breaks tracking on HoloLens2 in Unity 2019.31.1f1. When upgrading from Windows XR Plugin 2.0.3 to 2.0.4 preview.3, the tracking of the head and hands does not work properly anymore, i.e. the content, including tracked hands shifts away from the user. 

Steps to reproduce the behavior:

1. Install Unity 2019.3 1f1
2. Create new project and install MRTK 2.3 following these instructions: 
3. Follow these instructions for using the XR SDK: 
4. Update Windows XR Plugin in Package Manager to 2.0.4 preview 3 as advised in MRTK 2.3 release notes
5. Set MRTK profile to DefaultXRSDKConfigurationProfile 
6. Build project for Visual Studio 2019
7. Use Visual Studio to deploy project to HoloLens 2
8. Observe that the content and hands shift when moving the head, i.e. tracking does not work properly

Expected behavior: Head tracking works properly and content does not shift.

Setup
- Unity 2019.3 1f1
- MRTK Version 2.3
- Windows XR Plugin 2.0.4 preview 3

Target platform:
- HoloLens 2</Description>
  </Issue>
  <Issue>
    <IssueID>7339</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Constraint On Rotation from Rotation Axis Constraint does not work setting by code</Title>
    <CreatedDate>17/02/2020</CreatedDate>
    <ClosedDate>19/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7339</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When I add Rotation Axis Constraint + Manipulation handler behaviours and try to set ConstraintOnRotation by code to wherever Axis, this does not reflect the changes in editor and the functionality part does not work too.

However when I set HandType parameter to two handed (for example) this work perfectly

## To reproduce

Steps to reproduce the behavior:

1. Add behaviours
2. On Added behaviours listener or whatever line of code after behaviour have been added set:

rac.ConstraintOnRotation =AxisFlags.ZAxis; 
(rac means RotarionAxisConstraint instance)
## Expected behavior

In editor I should see Constraint On Rotation set to Z Axis and also trying to rotate the game object around that axis could not rotate.

## Your setup (please complete the following information)

- Unity Version 2019.3.1f1
- MRTK Version 2.3.0

## Target platform

- HoloLens
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>7338</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Landing page of docs has some absolute links that will redirect users to default docs instead of version specific docs</Title>
    <CreatedDate>17/02/2020</CreatedDate>
    <ClosedDate>25/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>7338</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7338</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the issue
Currently there's 4 links on our landing page (README.md) that point to the direct html links of our mrtk_development docs. These links will throw users out of the version specific documentation and might lead to guides that are not applicable to their version.

## Feature area
Landing page links

## Existing doc link


## Additional context
We should never navigate a user unknowingly out of the version specific docs. 

There's another problem @cre8ivepark brought up with this: We don't have any direct links to our doc portal from the .md preview if we remove those direct links - so maybe we can add some script before triggering docfx that patches up those direct links (to relative ones / xrefs) before throwing them into the docfx conversion. 
 
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>7337</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>7337</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Lighting Scene is not taking effect in Scene system</Title>
    <CreatedDate>17/02/2020</CreatedDate>
    <ClosedDate>20/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7337</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>7337</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Lighting Scene is not taking effect in Scene system

## To reproduce

Steps to reproduce the behavior:

Create 2 lighting scene with SunLight and moonlight direction light  (different color and intense)

Open Example Hub  example scene.

Enable the lighting scene.

add SunLight And MoonLight Scene into the array 

Set sunlight as default scene


start with the Example Hub Scene

sunlight scene is loaded and the direction light in the scene is disable. no light in the scene
## Expected behavior

sunlight scene is loaded and the direction light in the scene is enabled


## Screenshots

If applicable, add screenshots to help explain your problem.

## Your setup (please complete the following information)

- Unity Version 2018.4.17f1
- MRTK Version 2.3

## Target platform (please complete the following information)

Unity Editor
## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>7336</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Multi Scene System Doc does not describe dependency of packages and profiles </Title>
    <CreatedDate>17/02/2020</CreatedDate>
    <ClosedDate>22/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7336</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Multi-Scene</Name>
        <IssueID>7336</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>7336</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the issue
It is very hard to find out how to start a Multi Scene System, there is nothing about packages dependency, and there is no demo about the system

## Feature area
Need more information about  Profiles setting

## Existing doc link


## Additional context
</Description>
  </Issue>
  <Issue>
    <IssueID>7335</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>mircast problem</Title>
    <CreatedDate>17/02/2020</CreatedDate>
    <ClosedDate>18/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7335</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>When I open the projection of mircast on Hololens2 for real-time preview on the laptop, when I open the camera function in my program, the mircast connection will be interrupted, and the real-time preview cannot be performed. What is wrong with this? I haven't encountered this problem on H1.</Description>
  </Issue>
  <Issue>
    <IssueID>7334</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Directional Indicator throw exception when object is destroyed</Title>
    <CreatedDate>16/02/2020</CreatedDate>
    <ClosedDate>19/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7334</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>cs
        private bool IsVisible()
        {
            if (DirectionalTarget == null || SolverHandler.TransformTarget == null)
            {
                return true;  //&lt;-- chage true from false
            }

            return MathUtilities.IsInFOV(DirectionalTarget.position, SolverHandler.TransformTarget,
                VisibilityScaleFactor * CameraCache.Main.fieldOfView, VisibilityScaleFactor * CameraCache.Main.GetHorizontalFieldOfViewDegrees(),
                CameraCache.Main.nearClipPlane, CameraCache.Main.farClipPlane);
        }
`</Code>
    <Description>## Describe the bug

Directional Indicator throw exception when object is destroyed due to use wrong flag.

## To reproduce

Steps to reproduce the behavior:

1. Attach Directional Indicator to gameobject
2. Set any transform of gameobject to Directional target in Directional Indicator
3. Destroy GameObject
4. See error

## Expected behavior

Directional Indicator become invisible when lost target object.

## Your setup (please complete the following information)

- Unity Version 2018.4.11f
- MRTK Version 2.3

## Target platform (please complete the following information)

- HoloLens 2

## Suggestion

DirectionalIndicator.cs
``

It will work as expected, however, IsVisible() is not an intuitive name. I suggest that change method name to IsInvisible() or something else.</Description>
  </Issue>
  <Issue>
    <IssueID>7332</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>7332</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Every package install opens the MRTK Project Configurator</Title>
    <CreatedDate>14/02/2020</CreatedDate>
    <ClosedDate>12/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7332</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7332</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Currently every time I install or upgrade a package on Unity 2019.3.1f1 and MRTK 2.3 the MRTK Project Configurator opens. All settings have already been applied. Click apply again or close it, and next time I install a package it reopens.

Unity 2019.3.1f1
MRTK 2.3  </Description>
  </Issue>
  <Issue>
    <IssueID>7331</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Screenshot for Getting Started for 2.3.0 out of date?</Title>
    <CreatedDate>14/02/2020</CreatedDate>
    <ClosedDate>15/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7331</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>7331</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The screenshot for the MRTK Project Configurator on this page:


Does not match what appears when I install into a new Unity 2019.3.1f1 project:
![image](

Perhaps not too important, but the checkbox in the position for
Enable VR Supported =&gt; Enable Legacy XR

With this text:
    Enable XR Settings for your current platform (enabling the XR checkbox).

Creates some confusion and uncertainty -- are we supposed to enable Legacy XR, aren't we updating to the new XR system?</Description>
  </Issue>
  <Issue>
    <IssueID>7328</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>7328</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Programatically modifying Bounding Box material or prefabs properties outside of Unity play mode will add unecessary run time components</Title>
    <CreatedDate>14/02/2020</CreatedDate>
    <ClosedDate>30/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7328</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
I'm currently writing a Unity Editor menu item that adds the `Bounding Box`,  `Manipulation Handler` and `Audio Source` programmatically outside of play mode. It would then set up the materials defined in the [documentation]( to create the HoloLens 2 style bounding boxes.

However, as the assignment of the materials and prefabs into the property also executes `CreateRig()`, it generates extra runtime-only components for the Bounding Box.

## To reproduce

Steps to reproduce the behavior:

1. Access and modify either of the following `Bounding Box` properties outside of play mode in the Unity Editor via an Editor script:
    - `BoxMaterial`
    - `BoxGrabbedMaterial`
    - `RotationHandleSlatePrefab`
    - `ScaleHandlePrefab`
    - `ScaleHandleSlatePrefab`
2. Observe the additional components added to the object

## Expected behavior

Modification of the material and prefab properties of the `Bounding Box` outside of play mode should not create the runtime-only components of the `Bounding Box`.

## Your setup

- Unity Version 2019.1.14f1
- MRTK Version v2.2.0

## Target platform

- HoloLens
- HoloLens 2
- AR Foundation

## Additional context

Perhaps, there should be a check for if the Unity Editor is in play mode prior to executing `CreateRig()` when changes are made to the `Bounding Box` properties
</Description>
  </Issue>
  <Issue>
    <IssueID>7325</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>BaseCursor offsetting in look direction instead of surface normal</Title>
    <CreatedDate>14/02/2020</CreatedDate>
    <ClosedDate>15/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7325</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>7325</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

BaseCursor has a surfaceCursorDistance modifier that should keep it FROM surfaces. this is multiplied by the lookForward which is wrong.

## To reproduce

Steps to reproduce the behavior:

1. The code shows it all

## Expected behavior

Offset from surfaces

## Your setup (please complete the following information)

- Unity Version 2018.3.14f1
- MRTK Version mrtk_development
</Description>
  </Issue>
  <Issue>
    <IssueID>7323</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoverLight color and radius can't be set through code</Title>
    <CreatedDate>14/02/2020</CreatedDate>
    <ClosedDate>18/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7323</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The two mentioned Properties only have getters

## To reproduce

## Expected behavior

Both properties should be settable via code

## Your setup (please complete the following information)

- Unity Version 2018.3.14f1
- MRTK Version mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>7322</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>The MRTK support oculus quest？</Title>
    <CreatedDate>14/02/2020</CreatedDate>
    <ClosedDate>15/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>7322</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Oculus</Name>
        <IssueID>7322</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The MRTK support oculus quest？</Description>
  </Issue>
  <Issue>
    <IssueID>7317</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Upgraded 2.2 to 2.3 and getting run time errors for HandInteractionExamples</Title>
    <CreatedDate>13/02/2020</CreatedDate>
    <ClosedDate>24/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7317</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>7317</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Upgraded existing "vanilla" project from 2.2 to 2.3. I opened the HandInteractionExamples from the demo folder, hit play and got the below error messages.

## To reproduce

Steps to reproduce the behavior:

1. Have previous project using MRTK 2.2 with HandInteractionExample open
2. Follow instructions to upgrade to MRTK 2.3
3. Open HandInteractionExample and press play
4. Scene plays fine but getting errors during runtime

## Expected behavior

Scene plays with no errors

## Screenshots
![image](

If applicable, add screenshots to help explain your problem.

## Your setup (please complete the following information)

- Unity Version 2019.2.19f1
- MRTK Version 2.3

## Target platform (please complete the following information)

- HoloLens 2

## Additional context

I initially did not delete all the MRTK files within the Asset folder which caused other errors. I eventually deleted everything including the examples</Description>
  </Issue>
  <Issue>
    <IssueID>7316</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>7316</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>BoundsControl needs custom inspector</Title>
    <CreatedDate>13/02/2020</CreatedDate>
    <ClosedDate>21/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7316</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>7316</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>7316</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

We need a custom bounds control inspector to make configuring bounds control as easy as possible. While adding the possibility to add scriptable objects as configurations for visualizations the control got harder to set up and therefor needs some work on the inspector side, so users can easily configure bounds control.

## To reproduce

Check latest version of bounds control that supports scriptable objects
See that visual configurations are annoying to set up if you don't have any configurations already lying around to plug in.

## Expected behavior

BoundsControl should be easy to use / setup.

part of #5340 </Description>
  </Issue>
  <Issue>
    <IssueID>7305</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity UI (UGUI) Button, Example polish</Title>
    <CreatedDate>12/02/2020</CreatedDate>
    <ClosedDate>25/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7305</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Unity UI (UGUI) Pressable Button prefabs and examples need polish. 
- Highlight plate does not show proximity proper behavior
- Need scroll view example integrated with slate
</Description>
  </Issue>
  <Issue>
    <IssueID>7303</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Using Nuget to get MRTK 2.2.0 dosn't work with Unity 2019.2</Title>
    <CreatedDate>12/02/2020</CreatedDate>
    <ClosedDate>15/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7303</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>7303</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

There are some issues when pressing PLAY on an empty project with MRTK 2.2.0 downloaded from Nuget when using Unity 2019.2

## To reproduce

Steps to reproduce the behavior:

1. New Unity 2019.2 project
2. Download NuGetForUnity.2.0.0.unitypackage
3. Import it
4. Nuget =&gt; Add Package =&gt; Microsoft.MixedReality.Toolkit.Foundation.2.2.0
5. Wait to download and compile
6. Press Play
7. Some error in the console

## Expected behavior

No error

## Screenshots

![2020-02-12 15_50_55-](

## Your setup (please complete the following information)

- Unity Version 2019.2.19f1
- MRTK Version 2.2.0

## Target platform (please complete the following information)

In Editor


Maybe it's related to </Description>
  </Issue>
  <Issue>
    <IssueID>7302</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HTC Vive Pro - No Touchpad event if gamewindow has Focus</Title>
    <CreatedDate>12/02/2020</CreatedDate>
    <ClosedDate>24/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7302</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>7302</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

I use the HTC Vive Pro and Mixed Reality Headset from HP to create a VR App.
With the HTV Vive Pro I have a very strange Issue:
If I start my app on the HTC Vive Pro I can teleport.
Then I change the focus to an other window.
I can still teleport.
But if I now change the focus back to the game window, I can teleport no longer or get the Touchpad postion event.
Tochpad touch and Touchped press event still work fine.

If I change the window focus back to another window - teleport works fine.


## To reproduce

Steps to reproduce the behavior:

Use HTC Vive Pro:
1. Start an example scene with teleport enabled.
2. Change the focus to e.g. Windows Explorer.
3. Change back the focus to unity game window.
4. Try to teleport by using the touchpad on Vive controller.

## Screenshot

Here you can see what i mean with "unity game window".
![GameWindow](


## My setup 

- Unity Version 2019.3 &amp; 2019.1
- MRTK Version v2.2

## Target platform

- OpenVR

</Description>
  </Issue>
  <Issue>
    <IssueID>7300</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>BoundingBox has bounds calculation issues</Title>
    <CreatedDate>12/02/2020</CreatedDate>
    <ClosedDate>18/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7300</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Actually it's two bugs:

1. The BoundingBox does take its own collider into account when calculating bounds. This means in the case the bounds should be smaller than the initial size, calculation fails
2. The BoundingBox does not ignore the collider when a renderer is found in the RendererOverCollider mode and vice versa for the ColliderOverRenderer mode

## To reproduce

Steps to reproduce the behavior:

1. Recalculate the Rig after the Collider has been scaled larger than its containing objects
2. Choose either mode and scale the latter option larger than the former

## Expected behavior

The box wraps the target properly depending on the options

## Your setup (please complete the following information)

- Unity Version 2018.4.14f1
- MRTK Version mrtk_development

## Target platform (please complete the following information)

- Editor
</Description>
  </Issue>
  <Issue>
    <IssueID>7299</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity hangs after switching to UWP in 2019.3</Title>
    <CreatedDate>11/02/2020</CreatedDate>
    <ClosedDate>18/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>7299</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7299</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>7299</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Unity hangs on the selawk.ttf file after switching to UWP on 2019.3 on the latest 2.3 test packages.  In order to resolve the issue, you need to end the task in the task manager.

## To reproduce

Steps to reproduce the behavior:

1. Open Unity 2019.3.0f6
2. Import the latest 2.3 test packages
3. Click apply when the project configurator pops up
4. Navigate to the Mixed Reality Toolkit menu -&gt; Add to Scene and Configure
5. Press play in your scene with the MixedRealityToolkit objects, make sure the diagnostics panel shows up in play mode.
6. Exit play mode
7. Switch the platform to UWP
8. You should see unity hang on the selawk.ttf

![image](

## Your setup (please complete the following information)

- Unity Version: 2019.3.0f6
- MRTK Version v2.3 prerelease

</Description>
  </Issue>
  <Issue>
    <IssueID>7298</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>7298</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Share MRTK-specific .gitignore</Title>
    <CreatedDate>11/02/2020</CreatedDate>
    <ClosedDate>25/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7298</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7298</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
MRTK requires that some files like DotNetAdapter.csproj at `/Assets/MixedRealityToolkit.Providers/WindowsMixedReality/Shared/DotNetAdapter/DotNetAdapter.csproj` should be included in git. These files are ignored by the recommended .gitignore file for Unity.

Provide a recommended .gitignore to use in MRTK projects. [Can use this .gitignore as a starting point](
</Description>
  </Issue>
  <Issue>
    <IssueID>7296</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>7296</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Landing page docs entry buttons open .md pages instead of .html pages.</Title>
    <CreatedDate>11/02/2020</CreatedDate>
    <ClosedDate>14/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7296</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the issue
Landing page docs entry buttons open .md pages instead of .html pages.

![2020-02-11 15_07_38-microsoft_MixedRealityToolkit-Unity_ Mixed Reality Toolkit (MRTK) provides a set](
</Description>
  </Issue>
  <Issue>
    <IssueID>7294</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Left Eye Doesn't Fade In/Out in Scene Transition</Title>
    <CreatedDate>11/02/2020</CreatedDate>
    <ClosedDate>10/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7294</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>7294</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

With Scene Transition and Scene Manager turned on, and using a Manager scene, the fade in/fade out of the Scene Transition service only partially covers the left eye in my Samsung Odyssey (right eye works fine).

## To reproduce

1. Use the MRTK Scene System.
2. Turn on the Scene Transition service.
3. In the Scene Transition service Configuration Profile (in the Inspector) choose CameraFaderQuad as the Camera Fader Type.
4. Play the app; when transitioning between scenes, the left eye only partially fades out/in.

## Expected behavior

Total fade out/fade in.

## Screenshots
View in the left eye, during transition:
![image](



## Your setup (please complete the following information)

- Unity Version 2019+
- MRTK Version 2.2

## Target platform (please complete the following information)

- WMR immersive (Samsung Odyssey)

Note:  I'm not a coder, but I opened the CameraFaderQuad script and changed 1.01f to 1.21f, and that solved the problem.  The left eye now completely fades out and in.

![image](


P.S.  The Progress Indicator settings never seem to do anything.
![image](

</Description>
  </Issue>
  <Issue>
    <IssueID>7277</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK gameobject prefab causes issues in editor</Title>
    <CreatedDate>10/02/2020</CreatedDate>
    <ClosedDate>10/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7277</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>7277</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>7277</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Add to scene and configure MRTK to a new scene
Select the MRTK gameobject and drag to assets to make a prefab
Select prefab for inspector view

Issues:
Says only one instance can be active in scene etc

Create new scene (CNTL+N) then select MRTK prefab again

Notice:
- Constant re-loading/painting of inspector work
- Facade classes in scene (CANNOT BE DELETED, even after CNTRL+N again)
- A few exceptions thrown.

![MRTK_Profile_Prefab](

## To reproduce

See above

## Expected behavior

A clear and concise description of what you expected to happen.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>7272</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>7272</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add Oculus support via XR SDK</Title>
    <CreatedDate>10/02/2020</CreatedDate>
    <ClosedDate>01/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>7272</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Oculus</Name>
        <IssueID>7272</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Unity 2019</Name>
        <IssueID>7272</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>XR SDK</Name>
        <IssueID>7272</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

XR SDK supports multiple device platforms. MRTK 2.3 shipped with support for Windows Mixed Reality devices. We should add support for Oculus devices as well.

## Additional context

Follow-up issue to #7003
</Description>
  </Issue>
  <Issue>
    <IssueID>7261</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Manipulation Handler Ignores Constraints</Title>
    <CreatedDate>09/02/2020</CreatedDate>
    <ClosedDate>22/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7261</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>7261</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - ObjectManipulator</Name>
        <IssueID>7261</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
When I set the Manipulation Type to One Handed, any Constraints that have been set are ignored. 


## To reproduce

Steps to reproduce the behavior:

1.  Attach Manipulation Handler to a gameobject.
2.  Set Manipulation Type to One Handed.
3.  Set Constraint on Rotation to X Axis Only.

## Expected behavior
The X Axis of the object can be rotated, but the Y and Z axes cannot.
But, if the Manipulation Type is One Handed, the constraint is not applied.  It is, however, applied if the Manipulation Type is Two Handed Only.

(Note: I've submitted a feature request that the constraint on rotation in the Manipulation Handler could offer, for example, an option whereby object rotation on the Y and Z axes was allowed, constraining ONLY the X axis, as opposed to the current setup where you can only specify which ONE axis is allowed for rotation. In other words, I wish the Constraint on Rotation indicated which axis CAN’T be rotated, as opposed to indicating the only axis that CAN be rotated.)


## Screenshots

![image](


## Your setup (please complete the following information)

- Unity Version 2019+
- MRTK Version 2.2

## Target platform (please complete the following information)

- WMR immersive

See also #5305 and #5147</Description>
  </Issue>
  <Issue>
    <IssueID>7259</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Target Scale does not update while using OpenVR</Title>
    <CreatedDate>07/02/2020</CreatedDate>
    <ClosedDate>10/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7259</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>7259</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>OpenVR</Name>
        <IssueID>7259</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>7259</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Most of the example scenes in VR are on the floor. To bring the scenes to eye level, the Target Scale can be changed to Seated. If the Target Scale is changed while using UWP, the scene shifts correctly but it does not while using Standalone.

![image](


## To reproduce

Steps to reproduce the behavior:

1.  Import latest Foundation 2.3. test packages
2. Open the HandInteractionExample
3. Connect WMR headset and make sure you have the Steam WMR plugin
4. Clone the profile to enabled editing in the HandInteractionExample
5. Set the Target Scale to **Seated**
6. Press play
7. The scene is still on the floor even after switching the target scale, the scene should be at eye level

## Your setup

- Unity Version: 2018.4.14
- MRTK Version: 2.3 prerelease 

## Target platform 

- OpenVR
</Description>
  </Issue>
  <Issue>
    <IssueID>7258</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>7258</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Pokepointer fails to activate on giant slate</Title>
    <CreatedDate>07/02/2020</CreatedDate>
    <ClosedDate>11/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7258</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7258</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Regression from #7016 -- if you make a slate huge, it's possible to get the poke pointer to fail to activate. See the GIF for repro.

![image](





## To reproduce

1. Make slate huge
2. Get close to slate and try to touch it

I expect to touch the slate, but actually I cannot touch it because the poke pointer fails to activate.</Description>
  </Issue>
  <Issue>
    <IssueID>7256</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>7256</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Hand Mesh Visualization Modes, Hand Joint Visualization Modes ignored on HL2 Deploy</Title>
    <CreatedDate>07/02/2020</CreatedDate>
    <ClosedDate>07/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7256</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7256</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
The DefaultHoloLens2 hand tracking profile configures hand mesh and joints to be only visible in editor, but when deploying to HoloLens 2 both the mesh and joints are visible.
![image](

## To reproduce

Steps to reproduce the behavior:

1. Create new Unity project, import MRTK 2.3
2. Deploy to HoloLens 2

## Expected behavior
I don't see hand mesh. I actually saw my mesh and joints.
</Description>
  </Issue>
  <Issue>
    <IssueID>7255</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>7255</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Provide guidance for new "msb4u" asset and Dependencies folder</Title>
    <CreatedDate>07/02/2020</CreatedDate>
    <ClosedDate>07/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7255</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7255</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
When importing MRTK 2.3 a new asset is created with the extension "msb4u". We should provide guidance about what this asset is, and whether it can be ignored. The guidance should at least be in the upgrade notes. 

If it can be ignored, it would be nice to provide a suggested .gitignore config that can be used to properly ignore files like the .msb4u file. If we provided an "MRTK gitignore" page that contained all assets to be ignored, that would also be nice.

## To reproduce

Import MRTK 2.3 in your project

See the following new assets:

![image](

</Description>
  </Issue>
  <Issue>
    <IssueID>7252</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Example scene polish</Title>
    <CreatedDate>07/02/2020</CreatedDate>
    <ClosedDate>07/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7252</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Task for example scene polish
- Scene hierarchy standardization (content under SceneContent object)
- Scale, layout
- Description panel
- Asset clean up 

</Description>
  </Issue>
  <Issue>
    <IssueID>7245</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Holographic Remoting &amp; Hand Tracking Errors: HandConstraintPalmUp &amp; IHolographicCameraRenderingParameters Error</Title>
    <CreatedDate>06/02/2020</CreatedDate>
    <ClosedDate>22/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7245</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When running hand-tracking demo's supplied in MRTK on Unity on HoloLens 2 via Holographic Remoting, it can't seem to support the full hand tracking abilities. Palm-rays are still emitted and functional, but finger-based interaction with holograms is not possible. 

These two errors show in the Unity console:
``

**However**, if this setup is used to build and deploy an app to the HoloLens 2, the demos work as expected.

## To reproduce

Steps to reproduce the behavior:

1. Install Holographic Remoting app on HoloLens 2
2. Import MRTK Foundation, MRTK Examples packages on Unity
3. Open HandMenuExamples.unity scene from Examples folder
4. Open Holographic Remoting App on HoloLens 2
5. Window&gt;XR&gt;Holographic&gt;Holographic Emulation
6. Connect, and then press play in Unity Editor
7. Bring hands into frame 

## Expected behavior

Should be able to interact with holograms by touch and should be able to view a mesh representing the hands as with a deployed app.

## Screenshots

![](

## Your setup

- Unity Version [2018.4.16f1]
- MRTK Version [v2.2.0]

## Target platform

- HoloLens 2
- Holographic Remoting App</Description>
  </Issue>
  <Issue>
    <IssueID>7243</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ObjectManipulatorMigrationHandler fails migration if ManipulationHandler is a RequiredComponent</Title>
    <CreatedDate>06/02/2020</CreatedDate>
    <ClosedDate>07/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7243</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

the title says it all, ManipulationHandler cannot be removed when it's required by some other MonoBeheaviour on the gameObject. To migrate it needs removal. The user should be notified

## To reproduce

Steps to reproduce the behavior:

1. Have the ManipulationHandler on a gameobject and let another script depend on it
2. try migrating
3. the new script is added, but the old one not removed. The log says migration was successful

## Expected behavior

No migration possibility as long as there's a RequireComponentAttribute

## Your setup (please complete the following information)

- Unity Version 2018.4.15f1
- MRTK Version mrtk_development

## Target platform (please complete the following information)

- Editor
</Description>
  </Issue>
  <Issue>
    <IssueID>7241</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>2.3 Release Notes are missing some experimental features</Title>
    <CreatedDate>06/02/2020</CreatedDate>
    <ClosedDate>06/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7241</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>There are several new experimental features in MRTK that would be good to mention in the release notes, especially because they contain new UX elements.

1. (Experimental) Non-native keyboard  #6492 
![image](

2. (Experimental) Hand coach #6493 
![image](

3. (Experimental) Follow solver (solver that matches HoloLens 2 shell behavior). #6981 
![follow_solver](

4. (Experimental) ObjectManipulator #6924 (@thalbern can you add image please?)

5. (Experimental) BoundsControl #6924 (@thalbern  can you add image please?)</Description>
  </Issue>
  <Issue>
    <IssueID>7236</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MixedRealityInputSystem.RaisePointerDown event throws exception if GameObject was destroyed</Title>
    <CreatedDate>05/02/2020</CreatedDate>
    <ClosedDate>07/02/2020</ClosedDate>
    <IssueLabels />
    <Description>On the first line:

Transform currentObject = pointer.Result?.Details.Object?.transform;

This null check does not function properly because Unity doesn't overload the ?. operator. There needs to be an explicit == null check.

This causes the rest of the logic controlling pointer behavior like updating focus lock to fail to execute.</Description>
  </Issue>
  <Issue>
    <IssueID>7233</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>7233</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK Examples Hub 2.2 for HL2 fails to deploy</Title>
    <CreatedDate>05/02/2020</CreatedDate>
    <ClosedDate>29/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7233</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>7233</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Trying to sideload the 2.2 Examples Hub appx with a HL2 fails to install.
The Examples Hub for 2.1 works just fine. 

## To reproduce

Steps to reproduce the behavior:

Download this 
MRTK.Examples.Hub_v2.2.0_HoloLens2_ARM.zip
 

And sideload on a HL2 device.
Fails to install.

## Expected behavior

Should install.

## Target platform (please complete the following information)

- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>7232</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>DotNetAdaptor fails to be restored</Title>
    <CreatedDate>05/02/2020</CreatedDate>
    <ClosedDate>07/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7232</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
The latest update to DotNetAdaptor seems to have a dependency on System.Drawing.Primitives that does not get restored automatically when restoring the DotNetWinRT nuget package. This was causing my MRTK project to have compile errors on editor loading.

## To reproduce

Steps to reproduce the behavior:

1. Ensure the nuget cache of system.drawing.primitives does not exist before proceeding. This is usually located here: %userprofile%\.nuget\packages\system.drawing.primitives.
2. Open a existing MRTK project that has been set to build for hololens 2 i.e. UWP, .net standard api.... 
Note: If you need to create a project with the settings from step 1 you will have to close the project and repeat step 1 - 2 
Result:
The DotNetAdaptor project fails to restore with the following error:

%userprofile%\.nuget\packages\microsoft.windows.mixedreality.dotnetwinrt\0.5.1043\build\Microsoft.Windows.MixedReality.DotNetWinRT.targets(26,5): error MSB3030: Could not copy the file "%userprofile%\.nuget\packages\microsoft.windows.mixedreality.dotnetwinrt\0.5.1043\build\..\..\..\System.Drawing.Primitives\4.3.0\lib\netstandard1.1\System.Drawing.Primitives.dll" because it was not found. [C:\Development\MixedRealityToolkit-Unity\Assets\MixedRealityToolkit.Providers\WindowsMixedReality\DotNetAdapter\DotNetAdapter.csproj]
UnityEngine.Debug:LogError(Object)
Microsoft.Build.Unity.MSBuildProjectBuilder:LogProgressMessage(String, ProgressMessageType) (at Library/PackageCache/com.microsoft.msbuildforunity@0.8.3/Editor/ProjectBuilder/MSBuildProjectBuilder.cs:348)
Microsoft.Build.Unity.&lt;&gt;c__DisplayClass9_0:&lt;BuildProjects&gt;b__1(ValueTuple`2) (at Library/PackageCache/com.microsoft.msbuildforunity@0.8.3/Editor/ProjectBuilder/MSBuildProjectBuilder.cs:181)
Microsoft.Build.Unity.DelegateProgress`1:Report(ValueTuple`2) (at Library/PackageCache/com.microsoft.msbuildforunity@0.8.3/Editor/ProjectBuilder/MSBuildProjectBuilder.cs:489)
Microsoft.Build.Unity.&lt;&gt;c__DisplayClass10_0:&lt;BuildProjectsAsync&gt;b__1(ValueTuple`2) (at Library/PackageCache/com.microsoft.msbuildforunity@0.8.3/Editor/ProjectBuilder/MSBuildProjectBuilder.cs:293)
Microsoft.Build.Unity.DelegateProgress`1:Report(ValueTuple`2) (at Library/PackageCache/com.microsoft.msbuildforunity@0.8.3/Editor/ProjectBuilder/MSBuildProjectBuilder.cs:489)
Microsoft.Build.Unity.&lt;&gt;c__DisplayClass17_0:&lt;ExecuteMSBuildAsync&gt;b__0(Object, DataReceivedEventArgs) (at Library/PackageCache/com.microsoft.msbuildforunity@0.8.3/Editor/ProjectBuilder/MSBuildProjectBuilder.cs:435)
System.Threading._ThreadPoolWaitCallback:PerformWaitCallback()

## Expected behavior

The DotNetAdaptor should restore any dependencies it requires automatically.

## Your setup (please complete the following information)

- Unity Version 2018.4.14f1
- MRTK Version v2.2.0

## Target platform (please complete the following information)

- HoloLens 2

## Additional context

This offending nuget package is [Microsoft.Windows.MixedReality.DotNetWinRT]( Specifically the latest update "0.5.1043 "
</Description>
  </Issue>
  <Issue>
    <IssueID>7086</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>"Create Extension Service" triggers exception when MixedRealityToolkit.Extensions is missing</Title>
    <CreatedDate>17/01/2020</CreatedDate>
    <ClosedDate>17/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7086</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
NullReferenceException: Object reference not set to an instance of an object
Microsoft.MixedReality.Toolkit.Utilities.Editor.MixedRealityToolkitFiles.FormatSeparatorsForUnity (System.String path) (at Assets/MixedRealityToolkit/Utilities/Editor/Setup/MixedRealityToolkitFiles.cs:237)
Microsoft.MixedReality.Toolkit.Utilities.Editor.MixedRealityToolkitFiles.GetAssetDatabasePath (System.String absolutePath) (at Assets/MixedRealityToolkit/Utilities/Editor/Setup/MixedRealityToolkitFiles.cs:245)
Microsoft.MixedReality.Toolkit.Utilities.Editor.MixedRealityToolkitFiles.MapModulePath (Microsoft.MixedReality.Toolkit.Utilities.Editor.MixedRealityToolkitModuleType module) (at Assets/MixedRealityToolkit/Utilities/Editor/Setup/MixedRealityToolkitFiles.cs:341)
Microsoft.MixedReality.Toolkit.Editor.ExtensionServiceCreator.get_ExtensionsFolder () (at Assets/MixedRealityToolkit.Tools/ExtensionServiceCreator/ExtensionServiceCreator.cs:86)
Microsoft.MixedReality.Toolkit.Editor.ExtensionServiceCreator.ValidateAssets (System.Collections.Generic.List`1[T] errors) (at Assets/MixedRealityToolkit.Tools/ExtensionServiceCreator/ExtensionServiceCreator.cs:285)
Microsoft.MixedReality.Toolkit.Editor.ExtensionServiceWizard.OnGUI () (at Assets/MixedRealityToolkit.Tools/ExtensionServiceCreator/ExtensionServiceWizard.cs:65)
`</Code>
    <Description>## Describe the bug
when i want to create a new extension service, i got the following exception.
I've put the "MixedRealityTookit.Tools" folder in my solution so i have access to the extension service wizard, but i didn't add the "MixedRealityToolkit.Extensions" folder and what's in it (.nuspec, .sentinel, License.txt, Version.txt)

apparently one of those files is required for the wizard to work properly.

``
A clear and concise description of what the bug is.

## To reproduce

Steps to reproduce the behavior:

1. in a project with MixedRealityToolkit.Tools but not MixedRealityToolkit.Extensions,
2. click in the menu MixedRealityToolkit &gt; Utilities &gt; Create Extension Service
=&gt; observe an empty window opens and errors in log

## Expected behavior

- At least a proper warning message saying that the extension package is missing in the project
-or recreate needed files if possible

## Your setup (please complete the following information)

- Unity Version [2018.4.13f1]
- MRTK Version [v2.2]
</Description>
  </Issue>
  <Issue>
    <IssueID>7080</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InteractableRotationTheme is using world rotation as start value</Title>
    <CreatedDate>16/01/2020</CreatedDate>
    <ClosedDate>25/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>7080</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7080</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Visual Themes</Name>
        <IssueID>7080</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

_InteractableRotationTheme_ is using a world rotation for the interpolation's start value : 
``
Since the interpolation is setting the local rotation in the _SetValue_ function, this induces weird behaviour in some cases, for exemple when the parent transform  of the rotated object has a rotation different from Vector3.zero

By using `hostTransform.localEulerAngles` in the _GetProperty_ function, the issue seems to be fixed.

## To reproduce

Steps to reproduce the behavior:

1. Open the InteractableExamples scene
2. Set a random rotation to the object Model_Bucky (for example I used 12,80,67)
3. Press play and hover the object with your cursor to reach the focus state.

## Your setup (please complete the following information)

- Unity Version 2019.2.6f1
- MRTK Version 2.2

## Target platform (please complete the following information)

- HoloLens
- HoloLens 2

</Description>
  </Issue>
  <Issue>
    <IssueID>7058</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Media Foundation and HoloLens 2</Title>
    <CreatedDate>14/01/2020</CreatedDate>
    <ClosedDate>18/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7058</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>7058</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi,

I want to have access to the depth camera streams with the HoloLens 2 as I was able to do with the HoloLens 1. With the HoloLens 1, I was able to call that method while with the HoloLens 2 I have the exception "no capture device available":

`            IReadOnlyList&lt;MediaFrameSourceGroup&gt; allFrameSourceGroups = await MediaFrameSourceGroup.FindAllAsync();`

I paid attention to activate both the Camera and the perceptionSensorsExperimental Capabilities: 

``
My HoloLens 2 is up-to-date and I should at least be able to access the default RGB camera.
I compiled a managed assembly OUTSIDE Unity (for the piece of code handling cameras) in ARM 32, minimal version 15063. I wanted to compile with the 17134 version as the doc advices (regarding that function), but then I have a conflict about system.runtime versions between my managed assembly and Unity…

I both tried using Unity 2018 LTS and Unity 2019 (last version) to generate the IL2CPP code compiled using Unity. target: HoloLens ARM. MRTK version: v2.2.0
thank you!</Description>
  </Issue>
  <Issue>
    <IssueID>7054</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Clipping box prevents to display dynamically set texture</Title>
    <CreatedDate>13/01/2020</CreatedDate>
    <ClosedDate>17/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7054</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shader Clipping</Name>
        <IssueID>7054</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shaders / Materials</Name>
        <IssueID>7054</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

I'm making a draggable list, dynamically filled with basic elements. These elements are based on the prefab _PressableButtonHoloLens2_32x96_ from the MRTK (1 icon, 1 text and the back/front plates ). I want to set dynamically the icon of each element, so i'm using the HolographicButtonIconFontMaterial with _RenderingMode_ set to _Fade_, no _Albedo_ set, and _Assigned at Runtime_ checked.
At the same time, I'm setting a clipping box so I cannot see the elements outside the UI. Since the elements are added dynamically, I must add their renderers to the clipping box at runtime too : 
 
``

Then I'm just setting the texture I want on the newly created element's material.

The issue here is that the icons appear fully transparent. Same issue when setting the _RenderingMode_ to _Transparent_. 
However, if I set it to _Opaque_, the icon is appearing correctly (with transparency) , same thing with _Cutout_. Same thing if I don't add the elements to the clipping box.

## Expected behavior

The icon should appear even if set dynamically with _Fade_ or _Transparent_ _RenderingMode_.

## Your setup (please complete the following information)

- Unity Version 2019.2.6f1
- MRTK Version 2.1 &amp; 2.2

## Target platform (please complete the following information)

- HoloLens
- HoloLens 2

## Additional context

I tried with and without depth buffer sharing with no luck.
</Description>
  </Issue>
  <Issue>
    <IssueID>7048</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>7048</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>ToggleSwitch/RadialSet prefabs use TouchHandler instead of PressableButton component</Title>
    <CreatedDate>13/01/2020</CreatedDate>
    <ClosedDate>16/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7048</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>DDE Partner</Name>
        <IssueID>7048</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Near Interaction</Name>
        <IssueID>7048</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>7048</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>7048</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The ToggleSwitch and RadialSet prefabs use a TouchHandler component with Interactable instead of the PressableButton and PhysicalPressButtonRouter.

The problem with TouchHandler is that it only looks at touch start and touch completed to activate a "press" which is just a collider intersection detection for touch. Thus, the user could push through to activate a toggle switch and on the pull back consequently de-activate as a new "touch". 

![toggle-button-issue](

By disabling the TouchHandler and using PressableButton component instead, the toggle switch worked as expected.

![image](


## To reproduce

See gif above
Open InteractableExamples scene
Bring up hand input simulation
Go through button and then mouse scroll index finger back, notice button double activates

## Expected behavior

"pressing" a button like the toggle and radialset prefabs should result in a one way switch/selection.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version - latest MRTK_dev

## Target platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>7047</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Input simulation independent from timescale</Title>
    <CreatedDate>13/01/2020</CreatedDate>
    <ClosedDate>18/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>7047</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

When i want to change the time scale to debug in unity, i change the timescale in project settings &gt; Time &gt; TimeScale to a low value (0.01)
Then, i want to click on a button with the hand simulation, but it takes forever to airtap and the pointer is moving constantly before stabilizing.

## Describe the solution you'd like

Hand simulation for pointer physic,airtap or any other simulation taht depends on time should use the unscaledDeltaTime:


## Describe alternatives you've considered

i don't see any :p
</Description>
  </Issue>
  <Issue>
    <IssueID>7044</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add voice command information text to MRTK Visual Profiler</Title>
    <CreatedDate>11/01/2020</CreatedDate>
    <ClosedDate>15/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>7044</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem
MRTK Visual Profiler is enabled by default. A lot of the MRC(Mixed Reality Capture) videos show the profiler, even for the showcase situations. Adding information text "Say "Toggle Profiler" to help people know that it can be hidden with voice command.

## Describe the solution you'd like
Add information text, similar to the "See-it, Say-it" label

## Describe alternatives you've considered
Thought about adding an explicit close button but it could impact the performance of the app.
</Description>
  </Issue>
  <Issue>
    <IssueID>7030</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>7030</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Simplify SolverHandler tracked transform targeting</Title>
    <CreatedDate>10/01/2020</CreatedDate>
    <ClosedDate>24/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7030</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>7030</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>7030</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

SolverHandler now uses PointerUtils and HandJointService to check for what controller/source to track for the target transform. This approach is a bit muddled and could be simplified with SolverHandler.cs checking against CoreServices.InputSystem.DetectedControllers and storing the IMixedRealityController reference it cares about

Furthermore, check the list of DetectedControllers seems like a repeated piece of code (like PointerUtils) and could be simplified to an extension or util method most likely. 

## To reproduce

Look at SolverHandler.cs class

## Expected behavior

A clear and concise description of what you expected to happen.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>7029</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>7029</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Solver do not properly switch between controllers/pointers</Title>
    <CreatedDate>10/01/2020</CreatedDate>
    <ClosedDate>16/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>7029</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7029</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Pointer</Name>
        <IssueID>7029</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>7029</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Due to pointer cache PR #6822 , pointers no longer necessarily destroy themselves after source lost.

Unfortunately Solverhandler was written with the assumption that the tracking target was only invalid if it was destroyed. Which is actually incorrect even before the pointer cache PR as some pointers could disable Don'tDestroyOnSourceLost property

## To reproduce

Open up SolverExamples
Switch to Controller Ray
Try to alternate hands with one of the solvers

## Expected behavior

A clear and concise description of what you expected to happen.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7029</IssueID>
        <PullRequestID>6822</PullRequestID>
        <Title>Utilize pointer cache in default input system</Title>
        <Description>## Overview
This change introduces the concept of a pointer cache so that pointers, and in particular their prefabs, can be re-used throughout the life cycle of an app. The benefit of a cache is greatly improved performance by utilizing resource re-use. Instantiating prefabs/gameobjects in Unity is very expensive and must occur on the main thread. Particularly for HL2, where hands are lost/found every time a users raises or lowers them, the performance is critically impacted. 

This new cache is primarily implemented by extending the functionality of BaseInputDeviceManager. Currently the class supports requesting pointers based on some arguments for internal use. This adds the ability for the class to also recycle or clean up pointers as well. Furthermore, this cycle is extended to work with an object pool paradigm. If a pointer has not been destroyed (either by itself or some other system in the app), then the BaseInputDeviceManager will attempt to cache the pointer for later re-use. 

The base pointer implementation class, ControllerPoseSynchronizer.cs, has the property DestroyOnSourceLost which will allow the pointer to destroy itself if it's input source has been lost. In order for the caching to work, any pointer prefabs/instances need to disable this toggle.

Also adds `UnityObjectExtensions.IsNull()` utility helper to combat issue seen in #5981

## Changes
- Fixes: #5846 , #4223 , #5981 

## Verification
&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>09/12/2019</CreatedDate>
        <ClosedDate>06/01/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Input System - Pointer</Name>
            <IssueID>7029</IssueID>
            <PullRequestID>6822</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Performance</Name>
            <IssueID>7029</IssueID>
            <PullRequestID>6822</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>Troy-Ferrell</FixedById>
            <PullRequestID>6822</PullRequestID>
            <IssueID>7029</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>7025</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>7025</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>3d Text shader doesn't support clipping</Title>
    <CreatedDate>09/01/2020</CreatedDate>
    <ClosedDate>15/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>7025</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7025</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>DDE Partner</Name>
        <IssueID>7025</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shaders / Materials</Name>
        <IssueID>7025</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Using the Text3DShader doesn't get clipped by the ClipBox.

## To reproduce

1. Add a label with MRTK/Text3DShader
2. Add the label's renderer to the ClippingBox Renderers
3. Set the Clipping Box's Clipping Side to Outside
4. Move the label outside of the clipping box

## Expected behavior
Label should be clipped

## Your setup (please complete the following information)

- Unity Version 2019.2.16f1
- MRTK Version 2.2.0

## Target platform (please complete the following information)

- HoloLens 2</Description>
  </Issue>
  <Issue>
    <IssueID>7024</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Building to multiple platforms from the same scene</Title>
    <CreatedDate>09/01/2020</CreatedDate>
    <ClosedDate>17/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>7024</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the issue

We are using MRTK in our application which targets a variety of Unity platforms (Hololens, Oculus Quest, Magic Leap, and Android Mobile, with others in the pipeline). We are using a different MRTK configuration profile for each platform, as well somewhat different MRTK playspace objects for each platform. Until now we have been mantaining separate scenes for each platform in order to manage this, but we would like to collapse these all into a single scene in order to simplify maintenance.

I can't find any documentation regarding how to approach this task. Is there an accepted best practice?
</Description>
  </Issue>
  <Issue>
    <IssueID>7022</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>PowerShell module importing in build pipelines</Title>
    <CreatedDate>09/01/2020</CreatedDate>
    <ClosedDate>11/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7022</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>7022</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Filing an issue to track some better forward resolution of powershell module imports/common modules in our build pipelines. With some changes I have out right now, I ended up doing a path based module import which feels odd, but works. I'd want to follow up here in future to see if there's a more general way to declare certain modules as available for all scripts in the pipeline, or if this is actually just a typical way of doing things.

See line like:
Import-Module -Force (Resolve-Path("$RepoRoot\scripts\ci\common.psm1"))</Description>
  </Issue>
  <Issue>
    <IssueID>7021</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>excptptr.cpp missing</Title>
    <CreatedDate>09/01/2020</CreatedDate>
    <ClosedDate>09/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>7021</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

i am trying to debug my Hololens 1 Project.
i followed this tutorial: 
as soon the Project is built and deployed via VS on the Hololens. VS Popup appears that searching for "excptptr.cpp" 


## Describe the solution you'd like
i tried copying the Projectfolder closer to root (cause i red about to long foldernames)

## Describe alternatives you've considered

Is there another good way to debug my Hololensaspp with Unity?

## Additional context
![grafik](
</Description>
  </Issue>
  <Issue>
    <IssueID>7020</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>IMixedRealityInputHandler and IMixedRealityFocusHandler events are fired twice</Title>
    <CreatedDate>09/01/2020</CreatedDate>
    <ClosedDate>18/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7020</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

I've created a script that implements `IMixedRealityInputHandler and IMixedRealityFocusHandler` and the `InputDown and InputUp and FocusEnter and FocusExit` events are being fired twice.

## To reproduce
See script that I used at: 

## Expected behavior

The event should only fire once.

## Screenshots

If applicable, add screenshots to help explain your problem.
![image](


## Your setup (please complete the following information)

- Unity Version 2018.4.10f1
- MRTK Version v2.1.0

## Target platform (please complete the following information)

- HoloLens
- HoloLens 2

</Description>
  </Issue>
  <Issue>
    <IssueID>7011</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>7011</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>SolverHandler tracked target hand joint,palm uses forward vector of transform which cases odd behaviour</Title>
    <CreatedDate>08/01/2020</CreatedDate>
    <ClosedDate>31/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>7011</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7011</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>7011</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The SolverHandler can grab the transform of the palm hand joint. However, the forward vector of the transform (z-axis) goes through the hand (from palm to edge of fingers) and thus for solver tracking like surface magnetism, provides an odd behaviour. Ideally in this scenario we want the "up" axis or y-axis that shoots through the palm and outward (and we want negative end as well)

![image](


## To reproduce

Run solver example scene and switch to palm joint target

## Expected behavior

A clear and concise description of what you expected to happen.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>7005</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>7005</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRLineRenderer on shellhandraypointer prefab not re-enabling</Title>
    <CreatedDate>08/01/2020</CreatedDate>
    <ClosedDate>10/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>7005</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Pointer</Name>
        <IssueID>7005</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>7005</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

MR Line Renderer seems to be disabled on hand lost but is not re-enabled when the pointer is re-used/re-activated on a new hand. 

Also name seems to keep concatenating on the prefab
![image](

## To reproduce

Steps to reproduce the behavior:

1. Go to '...'
2. Click on '....'
3. Scroll down to '....'
4. See error

## Expected behavior

A clear and concise description of what you expected to happen.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>7003</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>7003</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Support Unity's new XR SDK pipeline</Title>
    <CreatedDate>07/01/2020</CreatedDate>
    <ClosedDate>06/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>7003</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Cross Platform</Name>
        <IssueID>7003</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>7003</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Unity 2019</Name>
        <IssueID>7003</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>XR SDK</Name>
        <IssueID>7003</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the feature

Unity is releasing a new XR pipeline and deprecating the existing APIs and settings.






- [x] Folder + asmdef #7013, #7040, #7075
- [x] Boundary #7013 
- [x] Spatial mapping #7061 
- [x] Input #7093
  - [x] WMR
    - [x] Controller input #7124, #7195
    - [x] Articulated hand input #7124
    - [x] GGV hand #7153, #7166
- [x] Camera #7061, #7083, #7180 
- [x] Documentation #7088, #7295

TODO:
Gestures #7271 
Packaging #7270 
Oculus #7272 
Eye tracking #7284 

## Additional context

This will allow MRTK to take advantage of the cross-platform work Unity is doing, instead of needing to self-define each platform ourselves. There will likely be additional platforms we want to support, which we can investigate either supporting as an MRTK extension or possibly an XR SDK extension.
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7003</IssueID>
        <PullRequestID>7013</PullRequestID>
        <Title>Add XR SDK folder, asmdef, and boundary implementation</Title>
        <Description>## Overview

Adds the provider folder for XR SDK. Also adds a static subsystem helper script and the boundary implementation.
As part of the boundary implementation, the shared code between the existing implementation and the XR SDK implementation was refactored out into a base class.

## Changes

- Part of #7003

## Verification

Test in Unity 2019.3.
You'll need to add a few packages via the package manager:
1. XR Management
2. Windows Mixed Reality XR</Description>
        <CreatedDate>08/01/2020</CreatedDate>
        <ClosedDate>13/01/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Boundaries</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7013</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>XR SDK</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7013</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>7013</PullRequestID>
            <IssueID>7003</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7003</IssueID>
        <PullRequestID>7040</PullRequestID>
        <Title>Add XR SDK settings files to repo</Title>
        <Description>## Overview

Adds several new scriptable assets from Unity for XR SDK.
These files are settings files specific to our repo's project, and won't need to be distributed as part of our packages. I'm including them to help with testing and validating the project on XR SDK.

I've verified that these files don't prevent building or running on previous Unity versions, even when their scripts don't exist: 

![image](

and there's nothing in the console. PR validation and CI can double check :)

## Changes
- Part of #7003 </Description>
        <CreatedDate>10/01/2020</CreatedDate>
        <ClosedDate>13/01/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>XR SDK</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7040</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>7040</PullRequestID>
            <IssueID>7003</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7003</IssueID>
        <PullRequestID>7075</PullRequestID>
        <Title>Move existing WMR XR into XR2018 folder</Title>
        <Description>## Overview

This moves the existing code into its own specific folder, cleaning up the tree a bit within the WMR providers folder:

![image](

These APIs are deprecated in Unity 2019.3 and are removed in Unity 2020.

## Changes
- Part of #7003 
</Description>
        <CreatedDate>15/01/2020</CreatedDate>
        <ClosedDate>15/01/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Windows Mixed Reality</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7075</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>XR SDK</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7075</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>7075</PullRequestID>
            <IssueID>7003</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7003</IssueID>
        <PullRequestID>7061</PullRequestID>
        <Title>Add spatial awareness and camera system providers, as well as WMR-specific support for each</Title>
        <Description>## Overview

Adds generic camera and spatial mesh providers for XR SDK, as well as WMR-specific providers that add additional platform functionality, such as custom spatial observation bounds types and the ability to render MRC from the PV camera.

## Changes

- Part of #7003

## Followups

* A followup PR will add support for configuring the `TrackedPoseDriver` (required by XR SDK for head tracking) the same way our Unity AR provider currently does it.
* I'm also in the progress of refactoring the various `ConfigurationChecker` classes we now have, as they share a decent amount of code.</Description>
        <CreatedDate>14/01/2020</CreatedDate>
        <ClosedDate>14/01/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>CameraSystem</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7061</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Spatial Mapping / Awareness</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7061</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>XR SDK</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7061</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>7061</PullRequestID>
            <IssueID>7003</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7003</IssueID>
        <PullRequestID>7093</PullRequestID>
        <Title>XR SDK input helpers</Title>
        <Description>## Overview

Brings over a few helper classes for XR SDK input on Windows Mixed Reality, preparing for the full device manager.

1. Add an extension for the Windows `SpatialInteractionSourceHandedness` enum to allow for easy conversion the the MRTK's enum.
1. Add the XR SDK implementation from 
1. Rename the XR SDK configuration profile to better fit our name scheme

## Changes
- Part of #7003
</Description>
        <CreatedDate>18/01/2020</CreatedDate>
        <ClosedDate>21/01/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Input System</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7093</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>XR SDK</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7093</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>7093</PullRequestID>
            <IssueID>7003</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7003</IssueID>
        <PullRequestID>7124</PullRequestID>
        <Title>Add support for Windows Mixed Reality motion controllers and articulated hands for XR SDK</Title>
        <Description>## Overview

This adds controller definitions for XR SDK for WMR motion controllers and HL2 articulated hands.
There are still some incoming features on the Unity implementation side for HL2 articulated hands and pointing pose support. I'll keep things updated as that comes online.

## Changes
- Part of #7003 </Description>
        <CreatedDate>22/01/2020</CreatedDate>
        <ClosedDate>24/01/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Input System</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7124</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Windows Mixed Reality</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7124</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>XR SDK</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7124</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>7124</PullRequestID>
            <IssueID>7003</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7003</IssueID>
        <PullRequestID>7195</PullRequestID>
        <Title>Fix mappings for motion controllers on XR SDK</Title>
        <Description>## Overview

Some of the motion controller mappings were updated as part of shipping XR SDK.

## Changes
- Part of #7003 </Description>
        <CreatedDate>30/01/2020</CreatedDate>
        <ClosedDate>31/01/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Immersive HMD</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7195</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>XR SDK</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7195</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>7195</PullRequestID>
            <IssueID>7003</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7003</IssueID>
        <PullRequestID>7153</PullRequestID>
        <Title>Add HoloLens 1 hand definition to XR SDK support</Title>
        <Description>## Overview

Adds the GGVHand definition for XR SDK. This enables support for input on HoloLens 1.

## Changes
- Part of #7003
</Description>
        <CreatedDate>25/01/2020</CreatedDate>
        <ClosedDate>27/01/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>HoloLens</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7153</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>XR SDK</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7153</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>7153</PullRequestID>
            <IssueID>7003</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7003</IssueID>
        <PullRequestID>7166</PullRequestID>
        <Title>Update input device management for XR SDK</Title>
        <Description>## Overview

Improves input device management on HoloLens 1, where the names of each input device for each hand are the same.

Overall, makes XR SDK device management more generic, instead of depending on a left / right hand.

## Changes
- Part of #7003 </Description>
        <CreatedDate>27/01/2020</CreatedDate>
        <ClosedDate>28/01/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>HoloLens</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7166</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>XR SDK</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7166</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>7166</PullRequestID>
            <IssueID>7003</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7003</IssueID>
        <PullRequestID>7083</PullRequestID>
        <Title>Add TrackedPoseDriver for XR SDK at runtime</Title>
        <Description>## Overview

1. Add `TrackedPoseDriver` for XR SDK at runtime
1. Fix camera settings that didn't have a profile set
1. Update `UnityARCameraSettings` to read from its cached data instead of the profile again

## Changes
- Part of #7003 </Description>
        <CreatedDate>16/01/2020</CreatedDate>
        <ClosedDate>16/01/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>CameraSystem</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7083</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>XR SDK</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7083</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>7083</PullRequestID>
            <IssueID>7003</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7003</IssueID>
        <PullRequestID>7180</PullRequestID>
        <Title>Gate TrackedPoseDriver behind package existing</Title>
        <Description>## Overview

This `#define` was added in  but wasn't properly scoped.

## Changes
- Fixes: #7174
</Description>
        <CreatedDate>29/01/2020</CreatedDate>
        <ClosedDate>29/01/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Unity 2019</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7180</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>XR SDK</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7180</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>7180</PullRequestID>
            <IssueID>7003</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7003</IssueID>
        <PullRequestID>7088</PullRequestID>
        <Title>Add initial XR SDK docs and reserialize some XR SDK assets</Title>
        <Description>## Overview

Add some initial "getting started" docs for XR SDK.
Also, reserializes some XR SDK assets that were updated while testing my steps.
Also, updates some minor formatting in other docs.

## Changes
- Part of #7003</Description>
        <CreatedDate>17/01/2020</CreatedDate>
        <ClosedDate>17/01/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Documentation</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7088</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>XR SDK</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7088</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>7088</PullRequestID>
            <IssueID>7003</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>7003</IssueID>
        <PullRequestID>7295</PullRequestID>
        <Title>More XR SDK docs</Title>
        <Description>## Overview

Adds a new doc describing getting started with MRTK and XR SDK.
Also, renames the XR SDK WMR device manager to properly match its file name and our naming conventions for data providers of its type.

## Changes
- Part of #7003
</Description>
        <CreatedDate>11/02/2020</CreatedDate>
        <ClosedDate>12/02/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Documentation</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7295</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>XR SDK</Name>
            <IssueID>7003</IssueID>
            <PullRequestID>7295</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>7295</PullRequestID>
            <IssueID>7003</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>6999</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6999</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Hand-physics servicerequires a profile and does not properly set / indicate</Title>
    <CreatedDate>07/01/2020</CreatedDate>
    <ClosedDate>08/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6999</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The recently added HandPhysics service needs a profile and is not marked as requiring one. It also does not pre-populate the default profile when selected. This will result in customers (potentially unexpectedly) not experiencing the benefits of the service.

The fix includes
- [x] Set requiresProfile == true in the extension service attribute
- [x] Set the profile properties on the extension service attribute
- [x] Verify the correct behavior in the inspector when setting the service type </Description>
  </Issue>
  <Issue>
    <IssueID>6997</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Distribute test utility functions</Title>
    <CreatedDate>07/01/2020</CreatedDate>
    <ClosedDate>17/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>6997</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6997</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

As a consumer of MRTK I would like to be able to easily write integration tests that utilize MRTK systems. For example, simply triggering a button click requires the scene is setup and configured propertly. Internal tests have utility functions [here]( and [here]( Unfortunately, those functions are difficult to access as they are not distributed as packages and come with the internal test suite which depends on nearly every other part of the code base.

## Describe the solution you'd like
I would like all test utility functions to be packaged with the tools.

## Describe alternatives you've considered
I've looked into better ways to mock inputs. For example, if `Interactable` implemented an `IClickable` interface, then I could have provided dumbed down version for testing. I wasn't able to come up with an easy way to mock this particular dependency though.
</Description>
  </Issue>
  <Issue>
    <IssueID>6996</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Wrong MSBuild path for nuget build </Title>
    <CreatedDate>07/01/2020</CreatedDate>
    <ClosedDate>26/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6996</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>CI/Build</Name>
        <IssueID>6996</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6996</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

During the process to build a MRTK nuget package with this documentation : 
We need to execute the powershell script "scripts\packaging\createnugetpackages.ps1" who build
every InEditor and Player file.
There is a crash to the "Buidling Player WSA" step caused by a wrong hardcoded MSBuild path on the "NuGet/BuildSource.proj" file at line 38 :

`&lt;MSBuild Projects="@(ProjectReferences)" Targets="Restore;Build" Properties="Configuration=Player;Platform=WSA;BuildProjectReferences=false;MSBuildExtensionsPathOverride=C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\MSBuild"&gt;`

Other issue : The build crash if the MRTK folder to build had a path name to long.

## To reproduce

Steps to reproduce the behavior:

1. Download MRTK source code.
2. Execute "scripts\packaging\createnugetpackages.ps1" with the right unity folder and package version you need.

## Expected behavior

Dynamically choose the right MSBuild path or let the user target it.
Succeed the build.

## Additional context

@thalbern message on slack about this issue :

&gt; There's a hardcoded path in one of the project files msbuild is using - If you go to the Nuget folder in the MRTK repo and open the BuildSource.proj in a text editor you will notice in the last target definition (line 38) that the visual studio version there is hardcoded. - Please replace that path with the visual studio version you're using (folder should be the MSBuild folder insideyour visual studio installation. We'll open a ticket for this as we shouldn't have any hardcoded paths in that file, but this should work as a workaround for now :)

</Description>
  </Issue>
  <Issue>
    <IssueID>6994</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Graduate Follow Solver from experimental</Title>
    <CreatedDate>07/01/2020</CreatedDate>
    <ClosedDate>20/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6994</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Follow solver was specified as a feature request in #5713. This feature was added to experimental in #6981. In upcoming releases we should graduate the solver out of experimental. This will require the addition of documentation.

This issue can also be used as a place to discuss possible improvements we can make to the follow solver.</Description>
  </Issue>
  <Issue>
    <IssueID>6993</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add a Save step to building nuget package documentation</Title>
    <CreatedDate>07/01/2020</CreatedDate>
    <ClosedDate>09/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>6993</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the issue
On my way to build a new nuget package I was following the documentation (link below)
and i lost some minutes to add a new source on the Nuget For Unity settings because i didn't see 
the "Save" button below. 

## Feature area

Add an additional step after "Press Add New Source and replace source_path with the &lt;Path to your Repository&gt;\NuGet\artifacts" name "Press button save".

## Existing doc link

</Description>
  </Issue>
  <Issue>
    <IssueID>6991</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Updating Controller mapping profiles fails when adding new entry</Title>
    <CreatedDate>07/01/2020</CreatedDate>
    <ClosedDate>07/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6991</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Updating the controller mappings fail once a mapping for a new controller was created and you add another mapping to it.
The problem is that the code assumes that the current profile and the new entries are of the same size, which they might not:


## To reproduce

Steps to reproduce the behavior:

1. Add an additional mapping to any controller and choose MixedRealityToolkit -&gt; Utilities -&gt; Update -&gt; Controller Mapping Profiles

## Expected behavior

Updating profiles works no matter the size

## Your setup (please complete the following information)

- Unity Version 2018.3.12f1
- MRTK Version mrtk_development

## Target platform (please complete the following information)

- Editor (Android)
</Description>
  </Issue>
  <Issue>
    <IssueID>6986</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>6986</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>NearInteractionTouchable: No OnPointerDrag events</Title>
    <CreatedDate>06/01/2020</CreatedDate>
    <ClosedDate>08/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6986</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
**Goal:** Move a 3D target on a slate (e.g., a cube, a cursor). Eventually I'd like to fluently draw on a slate from near and far. For this, I would like to reuse the input logic that I have already implemented for my far interaction using pointer events (OnPointerDown, OnPointerUp, OnPointerDragged). When walking up and touching the holographic slates, the first two events (Down and Up) are correctly fired using NearInteractionTouchable. OnPointerDragged is never fired though :(

## Expected behavior
OnPointerDragged is fired when still touching (no PointerUp event received) and my hand (aka the pointer) is moving.

## Actual behavior
OnPointerDragged is not fired.

## Steps to reproduce
1. Create a cube
2. Attach NearInteractionTouchable and set "EventsToReceive" to "Pointer"
![image](

3. Attach a script to process the pointer events: 
![image](

## Unity editor version
Unity 2018.4.14f1 

## Mixed Reality Toolkit release version
2.2.0</Description>
  </Issue>
  <Issue>
    <IssueID>6985</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6985</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Proposal: Shorten folder names to reduce instances of exceeding path length limitations</Title>
    <CreatedDate>06/01/2020</CreatedDate>
    <ClosedDate>19/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>6985</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Cleanup</Name>
        <IssueID>6985</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Customer Feedback</Name>
        <IssueID>6985</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Every so often, a customer encounters an error that appears as if there is a bug in an MRTK component. Many times, these issues root cause down to a long path name.

Historically, Windows has had a max path length of 260, of which 256 characters are usable between "x:\" and the null terminator.

Today, every MRTK folder contains the fully spelled out "MixedRealityToolkit" which consumes 19 of the 256 allowable characters.

This proposal would replace those 19 characters with "MRTK" and reduce each path length by 15.

NOTE: If approved, the change would manifest itself as many hundreds of files under the Assets folder being renamed.

- [x] MixedRealityTookkit (#7512)
- [x] MixedRealityToolkit.Examples (#7509)
- [x] MixedRealityToolkit.Extensions (#7497, #7502)
- MixedRealityToolkit.Generated (not being renamed)
- [x] MixedRealityToolkit.Providers (#7491)
- [x] MixedRealityTookit.SDK (#7494)
- [x] MixedRealityToolkit.Services (#7479, #7492)
- [x] MixedRealityToolkit.Tests (#7508)
- [x] MixedRealityToolkit.Tools (#7504)
- [x] Update documentation links and references (#7529)
- [x] Update packaging steps in CI
    - [x] .unitypackage
    - [x] NuGet
</Description>
  </Issue>
  <Issue>
    <IssueID>6956</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>When can I support iris recognition?</Title>
    <CreatedDate>30/12/2019</CreatedDate>
    <ClosedDate>24/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6956</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>When can I support iris recognition?

Need to use iris recognition to confirm user information in unity to facilitate user identification and open corresponding functions</Description>
  </Issue>
  <Issue>
    <IssueID>6955</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>GLTF Model never loaded Hololens device.</Title>
    <CreatedDate>27/12/2019</CreatedDate>
    <ClosedDate>08/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>GLTF</Name>
        <IssueID>6955</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I have imported MRTK toolkit v2.1.0 in newly created fresh unity project. And tried to run Gltf-Loading-Demo scene to load provided Avocado.gltf model in editor as well as on hololens-1 device. 
The scripts basically calls one line of code in the Start method (it marked as async) :
GltfObject loadedGltfObject = await GltfUtility.ImportGltfObjectFromPathAsync("Avocado.gltf");

**Model is loaded in unity editor but it never loaded on hololens-1 device**.

I also tried quick-fix given on this issue #6833 for loading of GLTF model but still the model didn't load on device. 

Error came that attached here.
![GLTFLoadErrorOnDevice](

Please help me with this.

## Expected behavior
The GLTF model is loaded and displayed at runtime on hololens-1 device.
## Actual behavior
It works fine in the Editor, but when I build for hololens-1 device, it does not work.
## Steps to reproduce
_(Links to sample github project preferred)_

## Unity editor version
Unity 2018.4.12f1

## Mixed Reality Toolkit release version
Microsoft Mixed Reality Toolkit v2.1.0</Description>
  </Issue>
  <Issue>
    <IssueID>6953</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>GltfUtility preserve custom vertex attributes</Title>
    <CreatedDate>24/12/2019</CreatedDate>
    <ClosedDate>17/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6953</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>GLTF</Name>
        <IssueID>6953</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>c#
gltfObject.meshes[0].primitives[0].Attributes["_CustomAttribute"]
`</Code>
    <Description>## Describe the problem
I would like the GLTF loader to preserve custom vertex attributes as outlined in the glTF spec [here](
&gt;Valid attribute semantic property names include POSITION, NORMAL, TANGENT, TEXCOORD_0, TEXCOORD_1, COLOR_0, JOINTS_0, and WEIGHTS_0. Application-specific semantics must start with an underscore, e.g., _TEMPERATURE.

Currently mesh attributes are defined in a class [here]( Instead, it would be helpful if it could contain any number of application specific attributes.

## Describe the solution you'd like

I would like to be able to access application specific attributes via a dictionary like this:
``
## Describe alternatives you've considered
I haven't thought of any alternatives yet, certainly open to any suggestions.
</Description>
  </Issue>
  <Issue>
    <IssueID>6951</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity PhotoCapture API Failure on HoloLens 2</Title>
    <CreatedDate>23/12/2019</CreatedDate>
    <ClosedDate>28/01/2020</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Unity PhotoCapture/PhotoCaptureFrame API works fine taking photo and retrieving CameraToWorld and CameraProjection matrices on HoloLens 1, however, it always fails to provide those two matrices on HoloLens 2. Does anyone have an idea if this is an MRTK related issue or have any insight to share? Thanks!

## Expected behavior
PhotoCaptureFrame provides CameraToWorld and CameraPojection matrices on HoloLens 2.

## Actual behavior
PhotoCaptureFrame fails to provide CameraToWorld and CameraPojection matrices on HoloLens 2. No location data available.

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity editor version
2019.2.17f.

## Mixed Reality Toolkit release version
MRTK 2.2</Description>
  </Issue>
  <Issue>
    <IssueID>6950</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>6950</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Move IsInFOVCone into shared Math Utility</Title>
    <CreatedDate>20/12/2019</CreatedDate>
    <ClosedDate>06/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>6950</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Utilities</Name>
        <IssueID>6950</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Following up on [this comment]( tracking work to turn IsInFOVCone into a shared utility, with unit tests.
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>6947</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>andreiborodin</FixedById>
        <IssueID>6947</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6947</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MSBuild path and other issues causing fatal errors  on Mac</Title>
    <CreatedDate>20/12/2019</CreatedDate>
    <ClosedDate>31/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6947</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MSBuild</Name>
        <IssueID>6947</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Package Management - NuGet</Name>
        <IssueID>6947</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6947</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Leaving the MS Build option checked in the Configure Unity Project causes fatal errors in the project which can also crash Unity.

The errors happen with even just the Foundation package added to the project. In various scenarios I tried you can seem to get past the errors and even deploy but the project will remain broken in various ways.

Switching the Build Platform to iOS, apply VR, close and reopen the project and you get an endless loop where it attempts to access MS Build and locks Unity (technically not locked as if you click the close button a dozen times and eventually get between the loop iterations to close the editor).

## To reproduce
1. On Mac create a new project.
2. Add the MRTK Foundation package
3. From the Menu, Mixed Reality Toolkit : Utilities : Configure Unity Project, Apply the  default configuration with MSBuild option checked

## Expected behavior
No errors, and/or if MSBuild isn't supposed to work on Mac, some process to uncheck that option for a new project and to disable it on a previously created project.

## Screenshots
&lt;img width="1197" alt="Screen Shot 2019-12-20 at 7 39 49 AM" src="

## Your setup (please complete the following information)

- Unity Version 2019,2.17 (same on .14)
- MRTK Version 2.2

## Target platform (please complete the following information)
Any target but issue only happens on Mac

## Additional context
The error happens on projects created on Windows (where MS Build works) and downloaded to a Mac from the cloud, and on locally created projects.

I'm not certain if MSBuild is expected to work on Mac so I'm not certain what the right fix is but:

a) there is a path problem, for example:

    System.IO.DirectoryNotFoundException: Could not find a part of the path '/Applications/Unity/Hub/Editor/2019.2.14f1/Data\Resources\PackageManager\BuiltInPackages'.

The path above is mostly exists but the part at "/Data" is different than what appears on may machine.

b) If MSBuild isn't meant for Mac than the default configuration needs to uncheck the option, though even there a project created oh Windows and loaded on Mac has the same issue

c) there is no way to uncheck a configuration option, the dialog says Modify Settings but once checked you cannot uncheck an option. Further, there is no information about where these values are applied so not clear where in the project you could go to undo this -- starting over is currently the only option.

&lt;img width="635" alt="Screen Shot 2019-12-20 at 8 03 14 AM" src="

Creating a new project, going through all the steps but unchecking the MSBuild option before applying allowed me to complete a default project without the errors and deploy it to an iPad without any obvious issues, though I do not know what might be missing as a result of not having MSBuild.
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>6946</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MenelvagorMilsom</FixedById>
        <IssueID>6946</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Breaking Change: Fix RotateAboutGrabPoint and RotateAboutObjectCenter far interaction #6510</Title>
    <CreatedDate>20/12/2019</CreatedDate>
    <ClosedDate>30/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6946</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

After upgrading to 2.2.0, my MagicLeap control could grab and move, but the controller rotation would no longer effect the manipulated object. I tracked it to Issue #6510, and after reverting `TwoHandMoveLogic.cs ` and `ManipulationHandler.cs` to previous versions, my issue was solved and controller rotation effected the object as before.

I cannot test with WindowMR controllers, but this change may affect them as well.

## To reproduce

Steps to reproduce the behavior:

- Create a lumin project with MRTK 2.2.0
-  add this to project
- Run in zero iteration or build an mpk

## Expected behavior

The controller's movement will work, but the rotation of the controller will not have any effect on the object.

## Your setup (please complete the following information)

- Unity Version 2019.2.7f2
- MRTK Version v2.2

## Target platform (please complete the following information)

MagicLeap

## Additional context

tagging @MenelvagorMilsom 
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>6941</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Speech not available after using Dictation</Title>
    <CreatedDate>19/12/2019</CreatedDate>
    <ClosedDate>17/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6941</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Speech</Name>
        <IssueID>6941</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6941</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Spech keywords are not recognized after a dictation session was there.
Furthermore all triggers (DictationResult, Keyword detected, ...) are triggered twice.

## To reproduce

Steps to reproduce the behavior:

1. Set up Speech and Dictation following the appropriate examples
2. Add a new keyword to Speech
3. Add a new action to the newly created keyword, that calls `DictationHandler.StartRecording()`
4. Trigger the keyword -&gt; It will be triggerd twice
5. Use the dictation handler until the session ends -&gt; This will also be triggered twice
6. Try to trigger the keyword again -&gt; It won't work

## Expected behavior

- The keyword can be triggered after a dictation session ends.
- The triggered functions are called only once.

## Screenshots

### DictationHandler
![grafik](

### SpeechInputHandler
![grafik](

### This works multiple times in a row, but obviously doesn't start recording
![grafik](

### There is no option to restart the `SpeechInputHandler` after Dictation has completed
![grafik](


## Your setup (please complete the following information)

- Unity Version 2019.2.15f1
- MRTK Version V2.1.0

## Target platform (please complete the following information)

- HoloLens (v1)

## Additional context

Add any other context about the problem here.

Some logs. I don't know whether this is relevant or not. I can provide more logs if necessary.

``</Description>
  </Issue>
  <Issue>
    <IssueID>6938</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>6938</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>GridObjectCollection serialization issues</Title>
    <CreatedDate>19/12/2019</CreatedDate>
    <ClosedDate>02/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6938</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Collections</Name>
        <IssueID>6938</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The following errors appears when you launching a MRTK 2.2 application :

`A scripted object (probably Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection?) has a different serialization layout when loading. (Read 88 bytes but expected 92 bytes)
Did you #ifdef UNITY_EDITOR a section of your serialized properties in any of your scripts?
 
(Filename: C:\buildslave\unity\build\Runtime/Serialize/SerializedFile.cpp Line: 2001)

A scripted object (probably Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection?) has a different serialization layout when loading. (Read 660 bytes but expected 664 bytes)
Did you #ifdef UNITY_EDITOR a section of your serialized properties in any of your scripts?
 
(Filename: C:\buildslave\unity\build\Runtime/Serialize/SerializedFile.cpp Line: 2001)

A scripted object (probably Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection?) has a different serialization layout when loading. (Read 660 bytes but expected 664 bytes)
Did you #ifdef UNITY_EDITOR a section of your serialized properties in any of your scripts?
 
(Filename: C:\buildslave\unity\build\Runtime/Serialize/SerializedFile.cpp Line: 2001)

A scripted object (probably Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection?) has a different serialization layout when loading. (Read 660 bytes but expected 664 bytes)
Did you #ifdef UNITY_EDITOR a section of your serialized properties in any of your scripts?
 
(Filename: C:\buildslave\unity\build\Runtime/Serialize/SerializedFile.cpp Line: 2001)`

Everything is fine on Unity Editor.

## To reproduce

Steps to reproduce the behavior:

In my case :
1 - I updated a MRTK 2.1 project to 2.2
2 - Build and deploy

## Expected behavior

No errors.

## Your setup (please complete the following information)

- Unity Version 2018.4.12f1
- MRTK Version 2.2 (Nugget)

## Target platform (please complete the following information)

- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>6937</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>WindowsMixedRealityController initializes Visualizer past detection call</Title>
    <CreatedDate>19/12/2019</CreatedDate>
    <ClosedDate>22/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6937</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The WindowsMixedRealityController is not fully initialized when it's source detected call is made, hence, their Visualizers are missing. This is due to the controllers updating their visual repesentation during their UpdateController method, which happens past source detected call during first run. Taking the following statement into account one would need to move the visual representation initialization to a different place


## To reproduce

Steps to reproduce the behavior:

1. Create a new service with the wizzard
2. Add the IMixedRealitySourceStateHandler interface to the new class
3. try to access the visualizer of the controller when it's detected call is made

## Expected behavior

When the controller is detected, its representation is ready as well

## Your setup (please complete the following information)

- Unity Version 2018.3.12f1
- MRTK Version mrtk_development

## Target platform (please complete the following information)

- WMR immersive

## Additional context

The fact that the visualizer is basically hardwired to the controller via the EnsureControllerModel call in UpdateController, which is called every frame makes it save to say the controller should be available from the beginning
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>6936</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>speech keyword question</Title>
    <CreatedDate>19/12/2019</CreatedDate>
    <ClosedDate>28/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6936</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Speech</Name>
        <IssueID>6936</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>

[SpeechMixedRealitySpeechCommandsProfile.zip](

## Describe the bug

I added more than four hundred keywords to my profile and speech recognition didn't work properly. Can you tell us what is the upper limit of this speech recognition keyword? In other words, what do we need to pay attention to. Shouldn't keywords have too many similar sentences?
my profile is upload

## Your setup (please complete the following information)

- Unity Version [e.g. 2018.3.14f1]
- MRTK Version [e.g. v2.1]

## Target platform (please complete the following information)

- HoloLens

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>6934</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Set Color Camera as default Pose Source for AR Foundation Tracked Pose Driver</Title>
    <CreatedDate>18/12/2019</CreatedDate>
    <ClosedDate>19/12/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>AR Foundation</Name>
        <IssueID>6934</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6934</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>For the Tracked Pose Driver it would be nice if the Pose Source defaulted to Color Camera. </Description>
  </Issue>
  <Issue>
    <IssueID>6933</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>6933</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Some popup windows on Unity Mac are poorly formatted, content below fold</Title>
    <CreatedDate>18/12/2019</CreatedDate>
    <ClosedDate>30/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6933</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>6933</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
On Mac some of the popup display windows in the Unity Editor have too much space at the top so that no content appears without having to expand the window.

A clear and concise description of what the bug is.

## To reproduce
Try various options  in the Mixed Reality Toolkit Menu, the Configurator is the screenshot but I saw others.

Problem is in Unity Mac


&lt;img width="681" alt="Screen Shot 2019-12-18 at 1 25 54 PM" src="

No scrollbar appears so it isn't obvious that there is more content unless you expand the window.

&lt;img width="656" alt="Screen Shot 2019-12-18 at 1 38 41 PM" src="
</Description>
  </Issue>
  <Issue>
    <IssueID>6930</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Option to not instantiate MixedRealityPlayspace in the editor</Title>
    <CreatedDate>18/12/2019</CreatedDate>
    <ClosedDate>30/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6930</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem
I have a project for multiple platforms and only need the MRTK for the HoloLens, but a MixedRealityPlayspace is constantly instantiated, causing 2 cameras to be present when i forget to delete it. For HoloLens builds I instantiate the prefabs at runtime.

## Describe the solution you'd like
I would like to have an option to disable this behaviour</Description>
  </Issue>
  <Issue>
    <IssueID>6929</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity 2019.3.0f3 Unable to register IMixedRealityInputDeviceManager on HL2</Title>
    <CreatedDate>18/12/2019</CreatedDate>
    <ClosedDate>13/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6929</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When I upgrade our 2019.2 project to 2019.3 and build for HoloLens 2 I do not get any gesture/hand input. 

## To reproduce

Steps to reproduce the behavior:

1. Take a working 2019.2 project using articulated hands
2. Upgrade to 2019.3
3. Build ARM for HL2 with the usual settings
4. Deploy to HL2 and start the app
5. Only gaze pointer available, no reaction to hands or gestures

## Expected behavior

It works as for 2019.2.


## Your setup (please complete the following information)

- Unity Version 2019.3.0f3
- MRTK Version 2.1

## Target platform (please complete the following information)

- HoloLens 2

## Additional context

Unity log has a few of these:
 "Unable to register IMixedRealityInputDeviceManager service with a null concrete type"

I have tried re-creating MRTK configuration settings, and using the default settings, with no luck. 
I have tried using both old and new Unity XR SDK systems.

There is so many nice new features in 2019.3 I hope you at MRTK don't take too long to support it.</Description>
  </Issue>
  <Issue>
    <IssueID>6927</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>6927</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add translation / move to bounds control</Title>
    <CreatedDate>17/12/2019</CreatedDate>
    <ClosedDate>25/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6927</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>6927</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Bounds Control should offer the possibility to move / translate objects in space - that way we can avoid having to attach manipulationhandler for the movement.

Make sure the new constraints from object manipulator are working with bounds control movement logic as well

</Description>
  </Issue>
  <Issue>
    <IssueID>6926</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>6926</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Fix TODOs in BoundsControlRuntimeExample </Title>
    <CreatedDate>17/12/2019</CreatedDate>
    <ClosedDate>31/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6926</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>currently that class is a copy of BoundingBoxRuntimeExample and needs to be adjusted to reflect new functionality of BoundsControl 
Also make sure it's properly documented and fields are not exposed externally as this is an internal test scene / sequence.</Description>
  </Issue>
  <Issue>
    <IssueID>6922</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6922</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>2.3.0 Release Notes and Breaking Changes</Title>
    <CreatedDate>17/12/2019</CreatedDate>
    <ClosedDate>06/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6922</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>6922</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6922</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>This issue tracks the new features and breaking changes that are coming in 2.3.0. These will eventually make their way to the github.io docs during the release process.

Please use this issue and add your release notes and breaking changes (and associated upgrade instructions) here.</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>6922</IssueID>
        <PullRequestID>6919</PullRequestID>
        <Title>Fix spatial observer and validate with tests</Title>
        <Description>## Overview
WMRObserver had a bug where it would auto-start itself in enable() even when set to manual start.

This change move the functionality to BaseObjectObserver and creates some tests for basic observer functionality.

## Changes
- Fixes: #6908 

## Verification
&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>17/12/2019</CreatedDate>
        <ClosedDate>23/12/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Spatial Mapping / Awareness</Name>
            <IssueID>6922</IssueID>
            <PullRequestID>6919</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>Troy-Ferrell</FixedById>
            <PullRequestID>6919</PullRequestID>
            <IssueID>6922</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>6922</IssueID>
        <PullRequestID>6863</PullRequestID>
        <Title>Line pointer refactor for performance</Title>
        <Description>## Overview
**Change notes**
This change refactors the default hand ray pointer prefabs and classes for more optimal performance. Key impacts

- `LinePointer` class has been simplified to only support raycast along a 2-point line (one raystep). Support for multi-raystep has been pushed down to a new inherited class, `CurvePointer`. Teleport pointers now inherit from this class. Simplifying LinePointer reduces some overhead in calculating points along the curve and number of raysteps involved. 

- The `ShellHandRayPointer` has been re-worked to alternate the line renderers material instead of doing weird things using two `MixedRealityLineRenderer` components. The dual render components were weirdly setup and doing duplicated work to the unity LineRender. If the old line renderer properties are used, a warning is logged during start alerting user to switch to new property 

- DefaultControllerPointer prefab has removed the dual MRLineRenderers in favor of one. Also LineStepCount on the MRLineRenderer left is lowered from 16 to 10. 

- Fixed line renderer issues (did not respond to FadeLineOnEnable toggle, gradient value setting and material tiling)

**Breaking changes**
- `ShellHandRayPointer` has been removed of it's MRLineRenderer properties (`lineRendererSelected` and `lineRendererNoTarget`)
- `IMixedRealityPointer` now requires a `Reset()` method in it's interface

Updated #6922 for migration in properties change on ShellHandRayPointer

Added test under PointerTest.cs to confirm line pointer raycasts straight and curve pointer works with teleport pointer collisions


**BEFORE**
![image](

**AFTER**
![image](

## Changes
- Fixes: #5620 #6862 

## Verification
**Tested**
HandsInteractionExampleScene in editor
HandsInteractionExampleScene VR on Device
Teleport system VR on Device
ExamplesHub app on HL2 device (IN PROGRESS)

&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>11/12/2019</CreatedDate>
        <ClosedDate>07/01/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Input System - Pointer</Name>
            <IssueID>6922</IssueID>
            <PullRequestID>6863</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Performance</Name>
            <IssueID>6922</IssueID>
            <PullRequestID>6863</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>Troy-Ferrell</FixedById>
            <PullRequestID>6863</PullRequestID>
            <IssueID>6922</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>6922</IssueID>
        <PullRequestID>6989</PullRequestID>
        <Title>Refactor WMRUtilities to support Unity legacy XR and XR SDK</Title>
        <Description>## Overview
Refactors the static `WindowsMixedRealityUtilities` to take in a provider, which can be set in platform-specific data providers. This allows the utilities class to be called generically regardless of the Unity XR backend.

## Changes
- Fixes: the current build break when using DotNetWinRT.</Description>
        <CreatedDate>07/01/2020</CreatedDate>
        <ClosedDate>07/01/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Cross Platform</Name>
            <IssueID>6922</IssueID>
            <PullRequestID>6989</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Windows Mixed Reality</Name>
            <IssueID>6922</IssueID>
            <PullRequestID>6989</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>XR SDK</Name>
            <IssueID>6922</IssueID>
            <PullRequestID>6989</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>6989</PullRequestID>
            <IssueID>6922</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>6922</IssueID>
        <PullRequestID>6891</PullRequestID>
        <Title>Add symbolic constant to control UnityAR provider compilation</Title>
        <Description>This change adds a new symbolic constant (ARFOUNDATION_PRESENT) that will get added to iOS and Android builds if the Unity AR Foundation package is installed via the package manager.

It also adds code to automatically remove the constant if the package is removed. 

``

As part of this change, the ScriptingUtilities class has been moved into the editor utilities assembly and the Windows Mixed Reality check for DotNetWinRT.dll has been moved to project load time, from provider init.

Fixes #6856</Description>
        <CreatedDate>13/12/2019</CreatedDate>
        <ClosedDate>03/01/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>AR Foundation</Name>
            <IssueID>6922</IssueID>
            <PullRequestID>6891</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Cross Platform</Name>
            <IssueID>6922</IssueID>
            <PullRequestID>6891</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>davidkline-ms</FixedById>
            <PullRequestID>6891</PullRequestID>
            <IssueID>6922</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>6922</IssueID>
        <PullRequestID>7012</PullRequestID>
        <Title>Fix Solvers tracking pointers as target transforms</Title>
        <Description>## Overview
Due to pointer cache PR #6822 , pointers no longer necessarily destroy themselves after source lost. SolverHandler though would detach itself from a controller/hand once the transform was destroyed. This is actually incorrect since custom pointers could have had `DestroyOnSourceLost` false. 

This change tracks, for the controller ray tracked target type, the associated line pointer being used for the transform and whether it is still being tracked or not. If it is not null, but not being tracked, then we detach and refresh for a new transform.

Also clean up some of the code and comments around solvers/pointers related files. In particular, ControllerPointerSynchronizer did two incorrect things
1) It would allow setting of Handedness although really this was always the read value from the assigned controller
2) It would pre-append the handedness onto the gameobject name. However, since we re-use gameobjects of pointers now (they are just deactivated), the name will always pre-append onto itself making strings such as "Left_Right_Left_Left_DefaultControllerPointer"

Updated SolverTests to validate values on SolverHandler for switching hands and tracked target types.

## Changes
- Fixes: #7029

## Verification
&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>08/01/2020</CreatedDate>
        <ClosedDate>14/01/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Solvers</Name>
            <IssueID>6922</IssueID>
            <PullRequestID>7012</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>Troy-Ferrell</FixedById>
            <PullRequestID>7012</PullRequestID>
            <IssueID>6922</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>6921</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>6921</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>System Keyboard - Have to hit a letter multiple times to write it</Title>
    <CreatedDate>17/12/2019</CreatedDate>
    <ClosedDate>15/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6921</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Keyboard</Name>
        <IssueID>6921</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Unity 2019</Name>
        <IssueID>6921</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Using the MRTK 2.1, system keyboard's backspace was not working. 
Switching to MRTK 2.2, backspace is working, but we have now to hit 2 times a letter to be able to write it. Non-character keys like backspace or arrows to move the carret are working at first hit though.

This is only reproducible on Unity 2019, the keyboard works perfectly on 2018.


## To reproduce

Steps to reproduce the behavior:

Build &amp; deploy the HandInteractionExamples scene from the MRTK 2.2. 
Air tap on the 'Keyboard' button on the left.
Use the opened keyboard to write text. 

## Expected behavior

Hit a key once should write its value.

## Your setup (please complete the following information)

- Unity Version 2019.2.6f1 (tested on 2019.2.15f1 as well)
- MRTK Version 2.2

## Target platform (please complete the following information)

- HoloLens 2</Description>
  </Issue>
  <Issue>
    <IssueID>6920</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Data Provider systems destroys dataproviders on disable()?</Title>
    <CreatedDate>17/12/2019</CreatedDate>
    <ClosedDate>03/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6920</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Services</Name>
        <IssueID>6920</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Both the MixedRealitySpatialAwarenessSystem and MixedRealityInputSystem, destroy all of their data providers when disable() is called on them. via the protected `UnregisterDataProvider()` function.

However, MixedRealityCameraSystem does not perform this way and only calls disable() on it's data provider children.

## To reproduce

Look at code







## Expected behavior

I would imagine that dataproviders are only destroyed when the service is called via service.destroy(). This seems a bit odd that all references to observers are lost when calling disable().

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version - dev latest

## Target platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>6920</IssueID>
        <PullRequestID>6344</PullRequestID>
        <Title>Add support for mobile AR via Unity's AR Foundation</Title>
        <Description>## Overview

This change introduces support for the mobile AR via Unity's AR Foundation. The support provided by this change is for the camera system (spatial awareness to come in a future PR).

Support was added by:
- Adding camera settings provider(s) to the default camera system implementation (via IMixedRealityDataProviderAccess)
- Creating a UnityARCameraSettings provider, profile and inspector.
- Adding 'fallback' support to the camera system's previous behavior when there is no specified camera provider or one cannot be loaded (due to platform settings).

This change does not break support for custom camera system implementations.

**Special thanks to Takahiro Miyaura for the initial PR**

## Changes
- Fixes: #6256 (still need to apply settings for ios and android on load), #6257, #6292


## Verification
I tested on an Android based phone using the HandInteractionExamples demo scene and confirmed the scene tracked and object interaction worked via the touch screen.

I also tested on a HoloLens 1 to verify the fallback behavior.

**This PR could use testing on an iOS device**</Description>
        <CreatedDate>22/10/2019</CreatedDate>
        <ClosedDate>30/10/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>AR Foundation</Name>
            <IssueID>6920</IssueID>
            <PullRequestID>6344</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>CameraSystem</Name>
            <IssueID>6920</IssueID>
            <PullRequestID>6344</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Cross Platform</Name>
            <IssueID>6920</IssueID>
            <PullRequestID>6344</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>davidkline-ms</FixedById>
            <PullRequestID>6344</PullRequestID>
            <IssueID>6920</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>6918</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6918</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Unity 2019.3 marks many PlayerSettings methods obsolete</Title>
    <CreatedDate>16/12/2019</CreatedDate>
    <ClosedDate>30/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>6918</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6918</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Unity 2019</Name>
        <IssueID>6918</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

As part of Unity moving towards their new XR Management pipelines, they've started to deprecate many of the existing APIs. This looks to have started with their `PlayerSettings` APIs

![image](

We may need to rework some of the optimization utilities to ask MRTK data providers for their settings, instead of depending on the built-in ones.

## Your setup (please complete the following information)

- Unity Version 2019.3.0f3
</Description>
  </Issue>
  <Issue>
    <IssueID>6911</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>vaoliva</FixedById>
        <IssueID>6911</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add Migration Tool for breaking changes that require user controlled updates</Title>
    <CreatedDate>16/12/2019</CreatedDate>
    <ClosedDate>23/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6911</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>6911</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

BoundsControl and ObjectManipulator need an upgrade tool to allow users to move over from BoundingBox and ManipulationHandler. 
There might be more components in the future that might require user controlled migration.

## Describe the solution you'd like

Provide an upgrading / migration window that offers different possibilities to upgrade the components that register:
Have a table where each component that needs upgrading gets a row and users can decide per column if they want to:
-migrate the currently open scene
(-migrate the currently selected object?)
-migrate all available scenes and prefabs

Inspectors of the deprecated components should also show an upgrade button and some info that this component is going to be deprecated and replaced by the new version.

Also make sure to test the various upgrading scenarios (add tests for the upgrading tool and the components we want to support)

## Additional context

part of #5340  and #5464 
</Description>
  </Issue>
  <Issue>
    <IssueID>6910</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cannot properly open project in OSX</Title>
    <CreatedDate>16/12/2019</CreatedDate>
    <ClosedDate>20/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6910</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6910</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When opening any MRTK project with Unity on a Mac (e.g. to use the experimental iOS support), the following error is printed to console many times:

``

Between console printouts a progress window with the title `Building MSBuild projects...` appears for a split-second.
The editor cannot be used with these errors interrupting any action.

## To reproduce

Steps to reproduce the behavior:

1. Create a Unity project with MRTK imported (e.g. on a Windows computer)
2. Open that project on an OSX computer
3. Observe the errors flow in

## Expected behavior

A clear and concise description of what you expected to happen.

## Your setup (please complete the following information)

- Unity Version 2020.1.0a16
- MRTK Version 2.2.0</Description>
  </Issue>
  <Issue>
    <IssueID>6908</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>6908</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK 2.2 - Spatial Mapping starts automatically</Title>
    <CreatedDate>16/12/2019</CreatedDate>
    <ClosedDate>23/12/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>6908</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6908</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>6908</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Updated to Mrtk 2.2 and now realizing that I cant disable spatial mapping at the start. I can disable it on runtime, but the checkbox under `Spatial Awareness System Settings &gt; Spatial Mesh Observer Settings &gt; Startup Behavior` is not working.

## To reproduce

Steps to reproduce the behavior:

Set under `Spatial Awareness System Settings &gt; Spatial Mesh Observer Settings` the value of Startup Behavior to `manual start`.

## Expected behavior

Should not start. Only start if I trigger it in runtime.

## Screenshots

![image](

## Your setup (please complete the following information)

- Unity Version 2019,3
- MRTK Version v2.2

## Target platform (please complete the following information)

- HoloLens

## Additional context

Recreated my profiles; ported via guide;
</Description>
  </Issue>
  <Issue>
    <IssueID>6907</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Duplicate manager/provider objects after build</Title>
    <CreatedDate>16/12/2019</CreatedDate>
    <ClosedDate>24/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6907</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

After building a Unity project every object in `MIxedRealityToolkit` is duplicated. 
I tested only in 2020.1.0a16 as this version is required for my project.

## To reproduce

Steps to reproduce the behavior:

1. Create new project with MRTK packages imported
2. `Mixed Reality Toolkit -&gt; Add to Scene and configure`
3. `Build Unity Project` in the `Build Window` of MRTK
4. Observe that every object in `MixedRealityToolkit` (e.g. `HandJointService`, `WindowsMixedRealityDeviceManager`) exists twice.

## Expected behavior

No object duplication after building

## Your setup (please complete the following information)

- Unity Version 2020.1.0a16
- MRTK Version 2.2.0

## Target platform (please complete the following information)

- HoloLens
- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>6905</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK 2.2 - Cant build because of error while creating certification</Title>
    <CreatedDate>16/12/2019</CreatedDate>
    <ClosedDate>16/12/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6905</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
#1
Failed to create a file 'MRTK v2.0\QViewer Mrtk 2.2\Assets\WSATestCertificate.pfx' 
UnityEditor.EditorUtility:WSACreateTestCertificate(String, String, String, Boolean)



#2
Error while creating certificate at 'MRTK v2.0\QViewer Mrtk 2.2\Assets\WSATestCertificate.pfx'
UnityEditor.EditorUtility:WSACreateTestCertificate(String, String, String, Boolean)



#3
InvalidOperationException: Failed to create test certificate.
PostProcessWinRT.CreateTestCertificate () (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/PostProcessWinRT.cs:1045)
`</Code>
    <Description>I updated to Mrtk from 2.1 to 2.2 and Unity from 2019.2.15 to 2019.3. In play-mode everything works fine but my build is failing because of following lines:

``
I tried to delete my old WSATestCertificate.pfx and switched my build folder, but that didnt help. Is sb else experiencing the same behaviour?</Description>
  </Issue>
  <Issue>
    <IssueID>6900</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Create extended BaseMixedRealityProfile class for Input system data providers</Title>
    <CreatedDate>13/12/2019</CreatedDate>
    <ClosedDate>12/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6900</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>6900</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>6900</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6900</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

InputSystem, CameraSystem, and SpatialAwarenessSystem all accept data providers that they manage. Configuring these data provider configurations is done via serializable struct classes such as `MixedRealityInputDataProviderConfiguration` which extends `IMixedRealityServiceConfiguration`.

This interface supports holding a profile (via `BaseMixedRealityProfile`) that will configure the data provider defined. For CameraSystem and Spatial Awareness we have extended classes (such as `BaseCameraSettingsProfile`) but not one for Input System. 

This bug is to track adding an extended class of  `BaseMixedRealityProfile` to utilize with Input System data provider profiles.

## To reproduce

Look at:



## Expected behavior

Like Camera System and Spatial Awareness systems, there should be an extended base profile class for input system data providers.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>6896</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>System keyboard does not show up in HoloLens 2 emulator</Title>
    <CreatedDate>13/12/2019</CreatedDate>
    <ClosedDate>12/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6896</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6896</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Reference discussion in slack: 

They keyboard does not show up when using the system keyboard in MRTK


## To reproduce

Steps to reproduce the behavior:

1. Deploy MRTK HandInteractionExample scene to HoloLens emulator
1. Click on the "display keyboard" button

![image](

The system keyboard does not show up in the emulator, though it does on HoloLens 2.

## Expected behavior
System keyboard shows up.

</Description>
  </Issue>
  <Issue>
    <IssueID>6890</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Use custom overlap sphere test for Sphere/Poke Pointers</Title>
    <CreatedDate>12/12/2019</CreatedDate>
    <ClosedDate>12/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6890</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>6890</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Pointer</Name>
        <IssueID>6890</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Performance</Name>
        <IssueID>6890</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6890</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>csharp
for (all of my NearInteractionObjects)
{
    if (nearCollider.enabled &amp;&amp; spherePointerBounds.contains(nearCollider.bounds)
    {
     // then do normal stuff
    }
}
`</Code>
    <Description>## Describe the bug

Both the sphere pointer and poke pointers perform an overlap sphere collision test every frame using UnityEngine.Physics.OverlapSphereNonAlloc

Even though a layermask is provided to filter the physics operation, both only care about colliders that have a corresponding NearInteractionGrabbable or NearInteractionTouchable variant on them. However, we are searching all colliders (on a valid layer) in the scene and then from these results checking if they have the right component. 

We could probably save on performance by doing the reverse. If we have all NearInteraction* Game Objects register themselves in some static cache, then every frame we just do a bounds check between a sphere and that Collider. 

``

The two key facts to consider where this proposal might be more beneficial.
1. num of collidable objects &gt;= num of nearinteractiongrabble is always true. It's more likely we have lots of collider objects in the scene
2. GetComponent is fairly expensive as well. 

UnityEngine.Physics.OverlapSphereNonAlloc might be greatly optimized by the engine under the hood. In particular, I am worried about how the collider.bounds is computed and the contains/intersect API performance

We could also add a simple distance test first before doing bounds.intersect

## To reproduce

Look at 
FindClosestTouchableForLayerMask
TryUpdateQueryBufferForLayerMask

Also some data to support this:
In HandsInteractionExample scene, if I filter the scene view with the following queries, I get the following number of GameObjects. So again principal 1 states above for benefits is important

t:NearInteractionGrabbable =&gt; 19
t:NearInteractionTouchable =&gt; 50
t:collider =&gt; 80

## Expected behavior

We should optimize as much as possible here because 
1) This operation happens every frame
2) If both hands are up, any savings are multiplied by 4 (two pointers each hand)

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>6886</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>6886</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6886</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Replace ApiContractVersion checks with IsMethodPresent()</Title>
    <CreatedDate>12/12/2019</CreatedDate>
    <ClosedDate>27/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6886</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6886</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>To simplify and improve code clarity, we should consider replacing API gates implemented via api contract version check with calls to IsMethodPresent().
</Description>
  </Issue>
  <Issue>
    <IssueID>6883</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>sloh-ms</FixedById>
        <IssueID>6883</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Documentation clarifications for upgrading the MRTK version</Title>
    <CreatedDate>12/12/2019</CreatedDate>
    <ClosedDate>03/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>6883</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>6883</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
1. I had a hard time finding the docs about how to upgrade from one MRTK version to another.  I found this page  which seems like it should explain that, but it doesn't.  I had to ask for help and found that the release notes have the info instead.  Perhaps the Updating doc could say to refer to the release notes for instructions?

The rest of these comments refer to the release notes


2. Where it says "Delete MixedRealityToolkit (the project may not have all listed folders)" I think it means deleting directories under the Assets folder.  That could be clearer.

3. There are also "*.meta" files inside the Assets folder that it's unclear whether to delete or not.  I deleted them (except for the ".generated.meta" one); it looks like things turned out OK.  The instructions should clarify what to do.

4. "Delete MixedRealityToolkit and MixedRealityPlayspace, if present, from the hierarchy" - it's scary to delete the main camera.  It was recreated when I re-added MRTK to the scene, but does a main camera have properties I might have customized?  Should that be moved/protected through this process?
</Description>
  </Issue>
  <Issue>
    <IssueID>6881</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Extend spatial awareness documentation to include code examples</Title>
    <CreatedDate>12/12/2019</CreatedDate>
    <ClosedDate>13/12/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>6881</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>6881</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>6881</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
Users can't find out easily how to disable/enable spatial awareness in code . We're currently only describing how to use the feature in the unity editor. 

It would be great if we can add some documentation for developers that want to modify / use the feature in code. 

## Feature Area
Spatial awareness - code documentation

## Existing Doc Link


</Description>
  </Issue>
  <Issue>
    <IssueID>6878</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>6878</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>SpherePointer inspector does not allow choosing SceneQueryBufferSize</Title>
    <CreatedDate>12/12/2019</CreatedDate>
    <ClosedDate>12/12/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6878</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The SceneQueryBufferSize property isn't exposed in the inspector because SpherePointer's custom inspector (ShperePointerInspector.cs) doesn't expose it.</Description>
  </Issue>
  <Issue>
    <IssueID>6877</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>6877</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Deploy to HoloLens 2 via USB doesn't work</Title>
    <CreatedDate>12/12/2019</CreatedDate>
    <ClosedDate>27/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>6877</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6877</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>6877</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Build Window</Name>
        <IssueID>6877</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Deploying to a HoloLens 2 using the Deploy Window via USB result in the error `Authentication failed! Device Not Found | No Response Headers`.

The issue seems to be that on HoloLens 2 the device portal does not feature non-SSL access anymore. Accessing ' return a '307 Temporary Redirect' with 'Location:  in the header. The Unity WebRequest does not follow that redirect and the deployment fails.

## To reproduce

Steps to reproduce the behavior:

1. Build the MRTK or any project with the latest MRTK installed. Using the MRTK Build Window.
2. Connect a Hololens 2 via USB. Make sure the device portal is enabled.
3. Go to the Deploy Window
4. Enter Device Portal credentials.
5. Click on 'Install' for the app package.

## Expected behavior

Expected behavior: App package is successfully deployed and installed on the Hololens 2.
Actual behaviour: Deployment fails with error `Authentication failed! Device Not Found | No Response Headers`.

## Screenshots


## Your Setup (please complete the following information)

- Unity Version 2019.1.14f1
- MRTK Version v2.2.0

## Target Platform (please complete the following information)

- HoloLens 2 OS Version 18362.1039

## Additional context

Changing the code so  the deployment use SSL also for USB-Connected HoloLens 2 devices results in an SSL error. (We do not install the Self-Signed Certificates on our machines, due to the amount of HoloLens units and development machines. Its not feasible for us to install every device certificate on every development machine. Especially as you have to redo that every time you flash the device.)

One solution for that would be to implement a custom CertificateHandler for the device portal requests that simply accepts all SSL certificates. However that may rise security concerns for some users.
</Description>
  </Issue>
  <Issue>
    <IssueID>6867</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Mixed Reality Toolkit component doesn't display correctly, rendering MRTK configuration unusable for the duration of the project.</Title>
    <CreatedDate>11/12/2019</CreatedDate>
    <ClosedDate>28/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6867</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>6867</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When switching between configuration profiles, there's a chance for the MRTK component to glitch out, causing it to not be usable at all. Restarting Unity and/or removing and re-adding it to scene doesn't fix the issue.

## To reproduce

I'm not exactly certain what causes it, but I do know that if I'm messing with configuration settings long enough, the bug will reproduce itself. What I was doing at the time:

1. 2019.2.15f1: Was toggling between Default and Hololens1 configuration profiles repeatedly (was in the middle of reporting a different bug where the Hololens1 configuration is either missing default features or uses Hololens2 defaults).
2. 2019.3.0f1: Deleted a custom configuration profile from the CustomProfiles folder.

## Expected behavior

MRTK script component is still displayed as usual.

## Screenshots

![image](

## Your Setup (please complete the following information)

- Unity v2019.2.15f1 (also occurred on 2019.3.0f1)
- MRTK v2.2.0

## Target Platform (please complete the following information)

- HoloLens</Description>
  </Issue>
  <Issue>
    <IssueID>6864</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>6864</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MixedRealityLineRenderers and Data Providers perform more work than necessary</Title>
    <CreatedDate>11/12/2019</CreatedDate>
    <ClosedDate>09/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>6864</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6864</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Performance</Name>
        <IssueID>6864</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6864</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

MixedRealityLineRender is updating the Unity LineRenderer every late update. The component should be redesigned to only update when necessary especially for properties that have changed.

## To reproduce

Look at class. Many properties are even hardcoded every lateupdate which could be done in OnEnable

## Expected behavior

A clear and concise description of what you expected to happen.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2018.4 LTS
- MRTK Version MRTK_Dev

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>6862</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>6862</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Line Renderers poor performance on Shell Hand Ray Controllers</Title>
    <CreatedDate>11/12/2019</CreatedDate>
    <ClosedDate>07/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>6862</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6862</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Pointer</Name>
        <IssueID>6862</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Performance</Name>
        <IssueID>6862</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Looking into pointers and performance, found that the default controller pointer prefab has some areas that could be improved for performance

1) There are two MixedRealityLineRenderers attached in the prefab. One for no target and one for "regular". But it's odd that only one is always enabled and the other is sometimes disabled. They both execute though on the same LineRenderer doing duplicated work. Either only one MixedRealityLineRenderer should be enabled at a time or there should be only one Renderer that has it's properties altered based on the pressed state. We end up doing a lot of wasted CPU work here.

2) #6864 

3) LineStepCount is 16 for one line renderer and 32 for another. These should be decreased to improve performance if possible. It's especially problematic since most of the time the hand rays are mostly straight lines with little bend. We only need the higher precision for when focus is locked and we bend the lasso, which is why the one option is 32. 

## To reproduce

Open up DefaultControllerPointer prefab and notice all of the configuration.

## Expected behavior

Simplified mechanism to control hand rays that leads better performance for developers out of box.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2018.4 LTS
- MRTK Version MRTK_dev latest

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>6857</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HandTrackingProfile and HandJointService documentation link goes to 404</Title>
    <CreatedDate>11/12/2019</CreatedDate>
    <ClosedDate>11/12/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6857</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>6857</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Affected source files:
C:\src\github\microsoft\mrtk-Unity [mrtk_release ≡]&gt; findstr -s "Input.*Hand.*.html" *.cs
Assets\MixedRealityToolkit\Definitions\Devices\MixedRealityHandTrackingProfile.cs: [HelpURL("https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/InputSystem/HandTracking.html")]
Assets\MixedRealityToolkit\Providers\Hands\HandJointService.cs: [HelpURL("https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/InputSystem/HandTracking.html")]
Assets\MixedRealityToolkit.Providers\WindowsMixedReality\WindowsMixedRealityUtilities.cs: /// Please see https://microsoft.github.io/MixedRealityToolkit-Unity/Documentation/InputSystem/HandTracking.html#net-native for more info.
`</Code>
    <Description>## Describe the bug

Clicking on the [Documentation] link in the Hand Tracking Settings goes to a non-existent page

## To reproduce

Steps to reproduce the behavior:
Click on the [Documentation] link in Hand Tracking Settings

Broken link: [

``
## Expected behavior

Correct link: [

## Your Setup (please complete the following information)

- Unity Version [2018.4.13f1]
- MRTK Version [v2.2, by NuGet]

## Target Platform (please complete the following information)

- HoloLens 2

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>6856</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6856</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>ARFoundation is not optional</Title>
    <CreatedDate>11/12/2019</CreatedDate>
    <ClosedDate>03/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>6856</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>AR Foundation</Name>
        <IssueID>6856</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6856</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Cross Platform</Name>
        <IssueID>6856</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Just updated mrtk_development and got forced to add ARFoundation. Even removing the missing reference in the ASMDEF seems to be overridden by some mechanism.

Furthermore, this page describes how to use not, but not how to not use it:


## To reproduce

Steps to reproduce the behavior:

1. Import current MRKT without having the ARFoundation package ready

## Expected behavior

You should be able to choose

## Your Setup (please complete the following information)

- Unity Version 2018.3.12f1
- MRTK Version mrtk_development

## Target Platform (please complete the following information)

- Editor
</Description>
  </Issue>
  <Issue>
    <IssueID>6760</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>NullReferenceExeption when using SetState on an interactable in OnEnable or while it is inactive</Title>
    <CreatedDate>29/11/2019</CreatedDate>
    <ClosedDate>18/12/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6760</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>6760</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>csharp
public class InteractableResetter : MonoBehaviour
{
    #region Inspector
#pragma warning disable 0649
    [Header("Components")]
    [SerializeField] private Interactable _interactable;
#pragma warning restore 0649
    #endregion Inspector


    #region MonoBehaviour Methods

    private void Awake()
    {
        FetchComponents();
    }

    private void OnEnable()
    {
        _interactable.ResetBaseStates();
    }

    #endregion MonoBehaviour Methods


    #region Private Methods

    [ContextMenu("FetchComponents")]
    private void FetchComponents()
    {
        if (!_interactable) _interactable = GetComponent&lt;Interactable&gt;();
    }

    #endregion Private Methods
}

However, this throws a `NullReferenceException` for `StateManager` in `Interactable.UpdateState`!

When I checked the code I noted that you do the `!=null` check in `SetState`

csharp
public void SetState(InteractableStates.InteractableStateEnum state, bool value)
{
    if (StateManager != null)
    {
        StateManager.SetStateValue(state, value ? 1 : 0);
    }

    UpdateState();
}


But then you call `UpdateState` where you do not do the `!=null` check:

csharp
protected virtual void UpdateState()
{
    StateManager.CompareStates();
}


&amp;rightarrow; I would suggest to either do `UpdateState` only if `StateManager != null` in `SetState`

csharp
public void SetState(InteractableStates.InteractableStateEnum state, bool value)
{
    if (StateManager != null)
    {
        StateManager.SetStateValue(state, value ? 1 : 0);
        UpdateState();
    }
}

or/and add a check to `UpdateState`

csharp
protected virtual void UpdateState()
{
    if(StateManager != null) StateManager.CompareStates();
}
`</Code>
    <Description>## Describe the bug

The origin of the bug is actually that Interactables do not reset their states when they get disabled and re-enabled. 

To workaround this I made a simple script

``

## To reproduce

Steps to reproduce the behavior:

Call `ResetBaseStates` ro any `SetState` method on an `Interactable` in `OnEnable` or e.g. while the `Interactable` is inactive.

## Expected behavior

The main wish would be that Interactables reset their states `OnEnable`.

When resetting "manually" there shouldn't be a `NullReferenceException` but MRTK2 should handle/catch this properly.

## Your Setup (please complete the following information)

- Unity Version 2019.2.6f1
- MRTK Version v2.0

## Target Platform (please complete the following information)

- HoloLens(1/2)</Description>
  </Issue>
  <Issue>
    <IssueID>6759</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can not use system keyboard in hololens 1</Title>
    <CreatedDate>29/11/2019</CreatedDate>
    <ClosedDate>31/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6759</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Keyboard</Name>
        <IssueID>6759</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>OS Bug</Name>
        <IssueID>6759</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6759</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>![image](
When I use the latest MRTK, I run the official demo in HoloLens1, but I cannot use the keyboard of the system call. Like the picture above, there is no way to display the word I preview. Is there a way to solve it?</Description>
  </Issue>
  <Issue>
    <IssueID>6757</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Is it possible to render opaque meshes in front of all others with the MRTK shader?</Title>
    <CreatedDate>28/11/2019</CreatedDate>
    <ClosedDate>05/12/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6757</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Hello,

I would like to be able to render some GameObjects in front of all others like if they would have a later render queue. GameObjects are using the MRTK standard shader in opaque mode.

## Describe alternatives you've considered

I have considered to use a second camera, however this may be quite unecessary complex in my case if there is a simpler solution with the shader.

Thank you.
</Description>
  </Issue>
  <Issue>
    <IssueID>6756</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>artsouflMS</FixedById>
        <IssueID>6756</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>PinchSlider orientation doesn't change when setting Slider Axis to Y or Z</Title>
    <CreatedDate>28/11/2019</CreatedDate>
    <ClosedDate>19/12/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6756</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Slider</Name>
        <IssueID>6756</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

In PinchSlider script, Slider Axis property can be set to X, Y or Z axis.
While this setting do modify the way you can move ThumbRoot, it doesn't change TrackVisuals and TickMarks orientation.

## To reproduce

Steps to reproduce the behavior:

1. Create a simple HoloLens 2 scene
2. Add PinchSlider prefab
3. Set Slider Axis to Y or Z axis

## Expected behavior

Changing Slider Axis on the Pinch Slider script should also change TrackVisuals and TickMarks orientation, if TrackVisuals and TickMarks object is supplied.

When user changes the SliderAxis of the PinchSlider:
1. The TrackVisuals orientation will change to match the new axis
2. Its position will be reset so its at the center of the slider and doesn't retain any faulty position based on previous orientation.
3. The TickMarks layout of the grid will be updated to match the new axis
4. The rotation as well will change in case of slider axis being in z axis.
5. The position will be reset so its at the center of the slider and doesn't retain any faulty position based on previous orientation.

The position of TrackVisuals and TickMarks will be reset every time the user changes the SliderAxis. So the user will need to position these manually.

The scale will NOT be updated in TrackVisuals and TickMarks.

If TrackVisuals and TickMarks are not specified, then TrackVisuals and TickMarks are not updated.

## Tests to Add
* [ ] There should be tests to verify that track visuals and tickmarks are oriented properly given slider orientation. Additionally, there should be a test to verify that if the visuals are not specified, that the slider will still work.

## Documentation to Add
* [ ] Finally, documentation should state that visuals will be oriented to match orientation, but will not scale to match the endpoints of the slider. 

## Screenshots

![Annotation 2019-11-28 094145](


## Your Setup (please complete the following information)

- Unity Version 2018.4.12f1
- MRTK Version 2.1

## Target Platform (please complete the following information)

- HoloLens 2
- Unity Editor

## Additional context

Should be great to add:

- Possibility to modify Min and Max value
- Possibility to switch between Float and Whole Numbers
</Description>
  </Issue>
  <Issue>
    <IssueID>6752</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>6752</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add tests for GridObjectCollection</Title>
    <CreatedDate>27/11/2019</CreatedDate>
    <ClosedDate>06/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Tests</Name>
        <IssueID>6752</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Collections</Name>
        <IssueID>6752</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Add tests that verify that rows and columns are laying out correctly:

1. Iterate through 1 - 20 items
1. Iterate through 1 - 10 rows / colums
1. Iterate through all layout types
1. Compare expected / actual values
</Description>
  </Issue>
  <Issue>
    <IssueID>6751</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>6751</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>GridObjectCollection layout incorrect with 4 items, 3 columns</Title>
    <CreatedDate>27/11/2019</CreatedDate>
    <ClosedDate>28/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6751</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6751</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
GridObjectCollection lays out objects incorrectly in following cases (probably more):

- 10 items, 3 columns
![image](

- 4 items, 3 columns
![image](

</Description>
  </Issue>
  <Issue>
    <IssueID>6750</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Camera rotates on z axis in playmode</Title>
    <CreatedDate>27/11/2019</CreatedDate>
    <ClosedDate>28/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6750</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When holding down the right mouse button in playmode, the camera slowly rotates on the z axis.

## To reproduce

Steps to reproduce the behavior:

1. open scene in playmode
2. select main camera in inspector
3. switch to game window and press and hold right mouse button
4. observe z axis rotation

## Expected behavior

no rotation while pressing and holding the right mouse button

## Your Setup 

- Unity Version 2018.4.0f1
- MRTK Version v2.1

## Target Platform

Editor (hololens 1 default profil)
</Description>
  </Issue>
  <Issue>
    <IssueID>6747</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>ritijain</FixedById>
        <IssueID>6747</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>unity ui example is scrolling content to outside of panel</Title>
    <CreatedDate>27/11/2019</CreatedDate>
    <ClosedDate>02/12/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6747</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Unity UI Example on HandInteractionExamples Scene  scrolls content outside of panel.
Bug is not visible on the editor or Video Capture. Bug only visible on the device.

## To reproduce

Steps to reproduce the behavior:

1. Create New Unity Project
2. Import 2.2.0 Stabilization Unity Packages
3. Deploy HandInteractionExamples scene to Hololens2
4. Scroll window of the Unity UI Example

## Expected behavior

Content should stay inside scrolling panel, hiding the overflow.

## Screenshots

![image](

## Your Setup (please complete the following information)

- Unity Version 2018.4.12f1]
- MRTK Version 2.2.0 Stabilization

## Target Platform (please complete the following information)


- HoloLens 2



</Description>
  </Issue>
  <Issue>
    <IssueID>6746</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>German umlauts with MRKT TextMeshPro shader causes error</Title>
    <CreatedDate>27/11/2019</CreatedDate>
    <ClosedDate>05/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6746</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Material doesn't have a float or range property '_CullMode'
UnityEngine.Material:GetFloat(String)
TMPro.TMP_SubMesh:UpdateMaterial() (at Library/PackageCache/com.unity.textmeshpro@1.5.0-preview.2/Scripts/Runtime/TMP_SubMesh.cs:584)
TMPro.TMP_SubMesh:SetMaterialDirty() (at Library/PackageCache/com.unity.textmeshpro@1.5.0-preview.2/Scripts/Runtime/TMP_SubMesh.cs:562)
TMPro.TMP_SubMesh:SetSharedMaterial(Material) (at Library/PackageCache/com.unity.textmeshpro@1.5.0-preview.2/Scripts/Runtime/TMP_SubMesh.cs:505)
TMPro.TMP_SubMesh:AddSubTextObject(TextMeshPro, MaterialReference) (at Library/PackageCache/com.unity.textmeshpro@1.5.0-preview.2/Scripts/Runtime/TMP_SubMesh.cs:425)
TMPro.TextMeshPro:SetArraySizes(UnicodeChar[]) (at Library/PackageCache/com.unity.textmeshpro@1.5.0-preview.2/Scripts/Runtime/TMPro_Private.cs:1337)
TMPro.TMP_Text:ParseInputText() (at Library/PackageCache/com.unity.textmeshpro@1.5.0-preview.2/Scripts/Runtime/TMP_Text.cs:1858)
TMPro.TextMeshPro:OnPreRenderObject() (at Library/PackageCache/com.unity.textmeshpro@1.5.0-preview.2/Scripts/Runtime/TMPro_Private.cs:1542)
TMPro.TextMeshPro:Rebuild(CanvasUpdate) (at Library/PackageCache/com.unity.textmeshpro@1.5.0-preview.2/Scripts/Runtime/TextMeshPro.cs:239)
TMPro.TMP_UpdateManager:DoRebuilds() (at Library/PackageCache/com.unity.textmeshpro@1.5.0-preview.2/Scripts/Runtime/TMP_UpdateManager.cs:187)
TMPro.TMP_UpdateManager:OnCameraPreCull(Camera) (at Library/PackageCache/com.unity.textmeshpro@1.5.0-preview.2/Scripts/Runtime/TMP_UpdateManager.cs:158)
UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)
`</Code>
    <Description>## Describe the bug

Setting the Text for a TextMeshPro using the MRKT TextMeshPro shader using any of the german umlauts "äöü" causes the TextMesh to throw an error because it copies the material, probably for generating a different set of letters, of with it cannot find a particular shader property:

``


## To reproduce

Steps to reproduce the behavior:

1. Create a PressableButtonHoloLens2 in any scene and type any of the umlauts into the SeeItSayItLabel -&gt; TextMeshPro text component

## Expected behavior

No error

## Your Setup (please complete the following information)

- Unity Version 2018.3.12f1
- mrtk_development

## Target Platform (please complete the following information)

- Unity Editor
- Android Oculus Quest
</Description>
  </Issue>
  <Issue>
    <IssueID>6741</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Assertion failed on expression: 'GetAssetScriptingType(*m_RefreshQueue.begin()) </Title>
    <CreatedDate>26/11/2019</CreatedDate>
    <ClosedDate>09/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6741</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6741</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
I get the following error after importing the Foundation package in Unity 2019.1.14f1:

``

## To reproduce

Steps to reproduce the behavior:

1. Import latest 2.2 test Foundation Package


## Screenshots

&lt;img width="1105" alt="error2019" src="


## Your Setup 

- Unity Version:  2019.1.14f1
- MRTK Version: v2.2



</Description>
  </Issue>
  <Issue>
    <IssueID>6737</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>andreiborodin</FixedById>
        <IssueID>6737</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6737</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Assembly with name 'Microsoft.Windows.MixedReality.DotNetWinRT.Editor' already exists </Title>
    <CreatedDate>26/11/2019</CreatedDate>
    <ClosedDate>28/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6737</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Package Management</Name>
        <IssueID>6737</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6737</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The following errors show up after the import of the latest test Foundation package
``
## To reproduce
1. Import the latest Foundation test package

## Your Setup (please complete the following information)

- Unity Version: 2018.4.11f1
- MRTK Version:  v2.2</Description>
  </Issue>
  <Issue>
    <IssueID>6736</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Eye Targeting scene: Gems are rotating too fast</Title>
    <CreatedDate>26/11/2019</CreatedDate>
    <ClosedDate>30/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6736</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Example/Test Scene</Name>
        <IssueID>6736</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Eye Tracking</Name>
        <IssueID>6736</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
The gems in the eye targeting scene are rotating much too fast, inducing anxiety. 

## To reproduce
Either through the "MRTKExampleHub" scene or through the "EyeTrackingDemo-00-RootScene", load the "EyeTrackingDemo-02-TargetSelection". Move the cursor over a gem and it will start turning very quickly.

## Expected behavior
Slow and subtle rotational feedback to being looked at.
</Description>
  </Issue>
  <Issue>
    <IssueID>6734</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>6734</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Non-uniform scaling option for Bounding Box</Title>
    <CreatedDate>25/11/2019</CreatedDate>
    <ClosedDate>14/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6734</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>6734</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Problem**
As a developer I'd like to be able to enlarge (scale) a backplate or slate in order to fit more content inside. I'd like to make it wider or taller and not be limited to uniform scaling.

**Solution**
Allowing for a boolean value that toggles uniform/non-uniform scaling in the editor. Uniform by default of course.

**Alternatives**
Consider an OnScaleUpdated UnityEvent so we can re-layout content while it is scaling.
@thalbern :)</Description>
  </Issue>
  <Issue>
    <IssueID>6732</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6732</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRC captures no holograms with Render from PV Camera option, Unity 2019.2.12f1 and 13f1</Title>
    <CreatedDate>25/11/2019</CreatedDate>
    <ClosedDate>27/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6732</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6732</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
MRC captures no holograms with Render from PV Camera option, Unity 2019.2.12f1 and 13f1
Without this option, MRC works well.

&lt;img width="392" alt="2019-11-25 14_24_50-MRTK1122 - ScrollingObjectCollection - Universal Windows Platform - Unity 2019 2" src="

</Description>
  </Issue>
  <Issue>
    <IssueID>6726</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>6726</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Wireframe shows up in wrong position with Standard Shader</Title>
    <CreatedDate>25/11/2019</CreatedDate>
    <ClosedDate>14/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6726</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shaders / Materials</Name>
        <IssueID>6726</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The wireframe drawn using the standard shader has the wrong position and scale.

## To reproduce

1. Create new 3D object. 
2. Assign a material created from Standard Shader.
3. Change Scene View to show Shaded Wire Frame.
4. Move and scale object and see wireframe doesn't change.

## Expected behavior

Wireframe should be overlayed on the shaded model.

## Screenshots

![image](


## Your Setup (please complete the following information)

- Unity Version 2018.4.10f1
- MRTK Version 2.0.0

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR
- UWP

</Description>
  </Issue>
  <Issue>
    <IssueID>6725</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>FrontPlate gets stuck for all buttons if disabled while pressed in far interaction mode</Title>
    <CreatedDate>25/11/2019</CreatedDate>
    <ClosedDate>04/12/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6725</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>6725</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

If a pressable prefab button is pressed in far interaction mode and call an event that SetActive(false) the button (or a parent), the FrontPlate cover GameObject will be stuck at the pushed position when re-enabled. This bug does not happend in near interaction mode.

## To reproduce

Steps to reproduce the behavior:

1. Go to HandInteractionExampes scene from MRTK exemples
2. Set a button (button 1) event onclick to setActive(false) its own prefab GameObject
3. Set an other button (button 2) event onclick to setActive(true) button 1 prefab GameObject
4. Click on button 1 and button 2 alternately many time ( e.g 5).

## Expected behavior

The FrontPlate of button 1 should be at the start of the button cage.

## Screenshots

![image](

## Your Setup

- Unity Version 2019.2.3f1
- MRTK Version v2.0

## Target Platform

- HoloLens
- HoloLens 2
- Bug has been tested on Hololens 1

## Additional infos
I don't feel like it's a duplicate of #4528 since the button is pressable when reenabled.
Pinging @CDiaz-MS and @thalbern 
</Description>
  </Issue>
  <Issue>
    <IssueID>6723</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6723</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>move auto-modification of the package manifest into the configurator </Title>
    <CreatedDate>23/11/2019</CreatedDate>
    <ClosedDate>25/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6723</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>#6718 adds automatic modification of the package manifest to add msbuild for unity. move this from project load to a selectable option in the configurator dialog. 

We wish to do this to give customers a choice whether or not to install MSBuild for Unity. Currently, everyone who imports the MRTK gets MSBuild for Unity automatically.



</Description>
  </Issue>
  <Issue>
    <IssueID>6717</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Slate's scroll direction is not aligned with hand/gesture/ray direction</Title>
    <CreatedDate>23/11/2019</CreatedDate>
    <ClosedDate>15/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6717</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6717</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Unity 2019</Name>
        <IssueID>6717</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
In the device, Slate's scroll direction is not aligned with hand/gesture/ray direction. Verified on HoloLens 2 and HoloLens 1. This symptom doesn't exist in input simulation.

## To reproduce
1. In the device, in the HandInteractionExamples scene or SlateExamples scene, try to scroll the slate content. You will find the scrolling direction is perpendicular to the hand/gesture/ray direction.

Only reproduces in Unity 2019</Description>
  </Issue>
  <Issue>
    <IssueID>6716</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>6716</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>6716</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Errors when switching between Default MRTK and custom profiles</Title>
    <CreatedDate>22/11/2019</CreatedDate>
    <ClosedDate>11/12/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6716</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>6716</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>6716</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I get the following error when switching between the default and a custom mrtk profile:

InvalidOperationException: Collection was modified; enumeration operation may not execute.
System.ThrowHelper.ThrowInvalidOperationException (System.ExceptionResource resource) (at &lt;e1319b7195c343e79b385cd3aa43f5dc&gt;:0)
System.Collections.Generic.List`1+Enumerator[T].MoveNextRare () (at &lt;e1319b7195c343e79b385cd3aa43f5dc&gt;:0)
System.Collections.Generic.List`1+Enumerator[T].MoveNext () (at &lt;e1319b7195c343e79b385cd3aa43f5dc&gt;:0)
Microsoft.MixedReality.Toolkit.Utilities.Facades.MixedRealityToolkitFacadeHandler.DestroyFacades () (at Assets/MixedRealityToolkit/Inspectors/MixedRealityToolkitFacadeHandler.cs:189)
Microsoft.MixedReality.Toolkit.Utilities.Facades.MixedRealityToolkitFacadeHandler.UpdateServiceFacades () (at Assets/MixedRealityToolkit/Inspectors/MixedRealityToolkitFacadeHandler.cs:129)
Microsoft.MixedReality.Toolkit.Utilities.Facades.MixedRealityToolkitFacadeHandler.OnUpdate () (at Assets/MixedRealityToolkit/Inspectors/MixedRealityToolkitFacadeHandler.cs:53)
UnityEditor.EditorApplication.Internal_CallUpdateFunctions () (at C:/buildslave/unity/build/Editor/Mono/EditorApplication.cs:200)

## Steps to reproduce
In MixedRealityToolkit...
1. Select custom profile
2. Swifch to Default profile
3. Switch back to custom profile

![profile_switch_error](
</Description>
  </Issue>
  <Issue>
    <IssueID>6715</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Sr mesh Visability per scene</Title>
    <CreatedDate>22/11/2019</CreatedDate>
    <ClosedDate>22/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6715</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>6715</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

I am currently using the scene switcher but I want some scenes to activate the SR mesh and other scenes to be invisible

## Describe the solution you'd like

To have a Tool or script that would allow me to initialize the SR mesh visibility depending on the scene.

## Describe alternatives you've considered

A clear and concise description of any alternative solutions or features you've considered.

## Additional context

Add any other context or screenshots about the feature request here.
</Description>
  </Issue>
  <Issue>
    <IssueID>6709</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6709</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK 2.2  reference to non-existent assembly 'Unity.XR.ARFoundation' </Title>
    <CreatedDate>22/11/2019</CreatedDate>
    <ClosedDate>22/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6709</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6709</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
I'm getting the following error after importing the Foundation and Extensions packages for 2.2:
 
``

## To reproduce


1. Open Unity 2018.4.12f1
2. Import 2.2 packages
3. See error
</Description>
  </Issue>
  <Issue>
    <IssueID>6708</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Replace/overwrite file with FileSavePicker</Title>
    <CreatedDate>22/11/2019</CreatedDate>
    <ClosedDate>28/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6708</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>When you select an existing file with the FileSavePicker and press the save button you will hear a warning sound (same as for low battry warning) and after that the buttons for save and cancel do not work. Only way to close the FileSavePicker is to use the close button on the top right. Saving a new file works fine.

## Steps to reproduce the behavior:

1. Open a new FileSavePicker
2. Select an existing file
3. Press save button
4. Hear warning sound
5. FileSavePicker does not respond on input (only close button works)

## Expected behavior

I expect a dialog to confirm the replacing/overwrite of the selected file.

## My Setup (please complete the following information)

- Unity Version 2018.4.11f
- MRTK Version v2.1

## Target Platform 

- HoloLens

## Additional context

I think this is not related to MRTK but i think someone can forward it to the responable persons?!</Description>
  </Issue>
  <Issue>
    <IssueID>6707</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Interactable Material Theme wrongly set Active to false</Title>
    <CreatedDate>22/11/2019</CreatedDate>
    <ClosedDate>23/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>6707</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6707</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Visual Themes</Name>
        <IssueID>6707</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
when using material theme, gameobject got automatically disabled.
seems the material theme was copied from activate theme without removing corresponding line ...

``
`Host.SetActive(property.Values[index].Bool);` should not be there !

## To reproduce

Steps to reproduce the behavior:
create an interactable with a material theme

## Expected behavior
gameobject doesn't get disabled

## Workaround
also add an Interactable Activate Theme (after the material one) and check all to true to override what materialtheme does

## Your Setup (please complete the following information)

- Unity Version [ 2018.4.9f1]
- MRTK Version [**v2.1 and stabilization 2.2**]

</Description>
  </Issue>
  <Issue>
    <IssueID>6701</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>6701</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>6701</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK 2.2 after upgrade I cannot assign my custom MRTK profile</Title>
    <CreatedDate>22/11/2019</CreatedDate>
    <ClosedDate>22/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6701</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6701</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
I had a custom profile in my MRTK 2.1 project. After upgrading to 2.2, my scene no longer had a valid MRTK profile and I was not able to assign the MRTK profile to my custom profile.

## To reproduce

Steps to reproduce the behavior:

1. Take project in 2.1 that has custom mrtk profile. My custom profile:
![image](

2. Upgrade to 2.2
3. Open your scene, look at the MRTK profile. My MRTK Profile is invalid:
![image](

4. I cannot select my profile:
![image](

</Description>
  </Issue>
  <Issue>
    <IssueID>6697</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6697</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Update roadmap for the 2.2.0 release documentation</Title>
    <CreatedDate>21/11/2019</CreatedDate>
    <ClosedDate>26/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>6697</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>- [x] Remove 2.2.0 content
- [x] Add 2.3.0 plan
- [x] Add early 2.4.0 thinking</Description>
  </Issue>
  <Issue>
    <IssueID>6694</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>6694</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add support for MRC rendering from the Photo/Video camera on HoloLens 2</Title>
    <CreatedDate>21/11/2019</CreatedDate>
    <ClosedDate>21/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>CameraSystem</Name>
        <IssueID>6694</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6694</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>HoloLens 2</Name>
        <IssueID>6694</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

HoloLens 2 adds a new feature where the platform will provide an additional HolographicCamera to the app when the user takes a mixed reality capture photo or video. This HolographicCamera provides view matrices corresponding to the photo/video camera location, and it provides projection matrices using the photo/video camera field of view.

MRTK should add easy support for this new feature.



## Additional context

### WithoutPVCameraRender

![WithoutPVCameraRender](

### WithPVCameraRender

![WithPVCameraRender](
</Description>
  </Issue>
  <Issue>
    <IssueID>6683</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Toggle Profiler voice command is not working</Title>
    <CreatedDate>21/11/2019</CreatedDate>
    <ClosedDate>21/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6683</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Diagnostics / Tools</Name>
        <IssueID>6683</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>From #6632, the "toggle profiler" command is not working.

From @julenka
&gt; I cannot say toggle profiler or press 0 to turn off the profiler in that scene</Description>
  </Issue>
  <Issue>
    <IssueID>6679</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Error "type or namespace name 'SpatialTracking' does not exist in the namespace 'UnityEngine'" with various versions</Title>
    <CreatedDate>21/11/2019</CreatedDate>
    <ClosedDate>31/01/2020</ClosedDate>
    <IssueLabels />
    <Description>Hello,

I Need both XR and AR work together, and found there were bugfixes 9 days ago.
So I chosed the two newer branches.
Both give me Always error:
 "type or namespace name 'SpatialTracking' does not exist in the namespace 'UnityEngine'"
I tried included packages, then used package Manager to install suggested updates, and even tried the prereleases there. Always get this error.

Thanks a lot!
 

Unity 2019.2.9

Both Branches Development or PreRelease 2.2.0
</Description>
  </Issue>
  <Issue>
    <IssueID>6678</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>6678</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>meta files missing every now and then</Title>
    <CreatedDate>21/11/2019</CreatedDate>
    <ClosedDate>21/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6678</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

I'm trying to stay up to date with the mrtk_development branch and for some reason, at least every 5th pull, some meta files have not been pushed along with the new files they were generated for. I've created about 4 Pull Requests in the past already adding them.

## Expected behavior

meta files are always pushed along with the files they were created for.
Maybe it's possible to implement some mechanism that checks that.
</Description>
  </Issue>
  <Issue>
    <IssueID>6672</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>6672</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Manipulate Object Material After Speech Command</Title>
    <CreatedDate>20/11/2019</CreatedDate>
    <ClosedDate>16/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6672</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>6672</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

If I have code in a script to change the material of an object and that code is called using speech recognition, if I tap on the object itself or interact with it in anyway (i.e. drag, size, etc) or if I tap on anything that is not interactable, it will execute the same code every time I tap.

## To reproduce

Steps to reproduce the behavior:

Using Unity 2019.2.12f1
1. Create new project
2. Import all MRTK unity packages available
3. Add Mixed Reality Toolkit to the scene
4. Go to build settings and Player Settings to add XR Settings, check "Virtual Reality Supported and add "Windows Mixed Reality" and check ''Vuforia Augmented Reality Supported"
5. I switched to UWP, but I don't know if that's important to duplicate the bug
6. Add a cube to the 3d space and a "PressableButtonHoloLens2.prefab"button
7. Select the PressableButtonHololens2 button
8. Under the Interactable script portion, uncheck "Requires Focus"
9. Create a script and a function that will toggle between two different materials. (Actual script I was using is included in the "Additional context" section
10. For the OnClick() event of the PressableButtonHoloLens2 button, call the function of the script
11. Run program
12. While holding space, click on the button to make sure the object toggles back and forth with the different materials, then click around the object to confirm that it does not change back and forth.
13. Now say the command out loud while looking anywhere and confirm that the object has changed.
14. Now repeat tapping anywhere else regardless of where your gaze is and watch the material toggle back and forth.

## Expected behavior

I did not expect the material to change by dragging the object around (when it had a bounding box and manipulation handler on it, etc). I did not expect it to change when tapping literally anywhere else where there wasn't a handler to catch the event of the tap.

I was expecting the object to remain the same as it was with no change.

## Screenshots

N/A

## Your Setup (please complete the following information)

- Unity Version 2019.2.12f1
- MRTK Version v2.1.0

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2

## Additional context

Here's the script I was using:
public class DoTheThingsScript : MonoBehaviour
{
    [SerializeField]
    private GameObject cube;
    [SerializeField]
    private Material mat;
    private Material original;
    private bool toggled = false;
    void Start()
    {
        original = cube.GetComponent&lt;MeshRenderer&gt;().material;
    }

    public void DoTheThings()
    {
        toggled = !toggled;
        if (toggled)
        {
            cube.GetComponent&lt;MeshRenderer&gt;().material = mat;
        }
        else
        {
            cube.GetComponent&lt;MeshRenderer&gt;().material = original;
        }
    }
}
I've attached the a zipped folder of my exported package from unity. I only included my scene and script. After you add the MRTK packages, import that one and I believe it should work.
[Package.zip](
</Description>
  </Issue>
  <Issue>
    <IssueID>6670</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>6670</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>System Property Drawer missing red exclamation point</Title>
    <CreatedDate>20/11/2019</CreatedDate>
    <ClosedDate>26/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6670</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The SystemType property drawer should be rendering a little red exclamation point to draw attention to missing types. It's not drawing here. It must be a problem with the UX overhaul. We should open an issue.

![image](

## Steps to reproduce
1. Get to a commit that has incorrectly configured extension:

git reset --hard 42f68ab08dc432e19e21fdcd0fb6fc8a6983e436 

2.  Open MRTKExamplesHub.unity file
3. In MixedRealityToolkit object, open up the extensions service. 
4. Notice that the missing types do not have red exclamation point.
</Description>
  </Issue>
  <Issue>
    <IssueID>6669</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>6669</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Examples Hub fails to run with Missing Scene Transition Service</Title>
    <CreatedDate>20/11/2019</CreatedDate>
    <ClosedDate>21/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6669</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6669</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Unable to find ISceneTransitionService service.UnityEngine.Debug:LogError(Object)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:GetService(String, Boolean) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:301)
`</Code>
    <Description>## Overview
The Scene Transition Service extension has some missing types, causing the following error when running the MRTKExamplesHub:

``


There are two types missing in the Extensions configuration:

![image](

</Description>
  </Issue>
  <Issue>
    <IssueID>6665</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>6665</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>PressableButtonHoloLens2_AppButton MaterialInstance  errors </Title>
    <CreatedDate>20/11/2019</CreatedDate>
    <ClosedDate>19/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6665</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6665</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
HandMenuLayou example scene generates error messages related to the MaterialInstance:
PressableButtonHoloLens2_AppButton.prefab

&lt;img width="638" alt="2019-11-19 18_36_15-Unity 2018 4 12f1 Personal -  PREVIEW PACKAGES IN USE  - HandMenuLayoutExamples" src="
MissingReferenceException: The object of type 'Material' has been destroyed but you are still trying to access it.
Your script should either check if it is null or you should not destroy the object.
TMPro.TextMeshPro.GenerateTextMesh () (at Library/PackageCache/com.unity.textmeshpro@1.4.1/Scripts/Runtime/TMPro_Private.cs:1973)
TMPro.TextMeshPro.OnPreRenderObject () (at Library/PackageCache/com.unity.textmeshpro@1.4.1/Scripts/Runtime/TMPro_Private.cs:1550)
TMPro.TextMeshPro.Rebuild (UnityEngine.UI.CanvasUpdate update) (at Library/PackageCache/com.unity.textmeshpro@1.4.1/Scripts/Runtime/TextMeshPro.cs:241)
TMPro.TMP_UpdateManager.DoRebuilds () (at Library/PackageCache/com.unity.textmeshpro@1.4.1/Scripts/Runtime/TMP_UpdateManager.cs:187)
TMPro.TMP_UpdateManager.OnCameraPreCull (UnityEngine.Camera cam) (at Library/PackageCache/com.unity.textmeshpro@1.4.1/Scripts/Runtime/TMP_UpdateManager.cs:158)
UnityEngine.Camera.FireOnPreCull (UnityEngine.Camera cam) (at C:/buildslave/unity/build/Runtime/Export/Camera.bindings.cs:334)

I tried unchecking this MaterialInstance script in the TextMeshPro object inside the PressableButtonHoloLens2_AppButton prefab but still shows the same errors.
![2019-11-19 19_09_54-Unity 2018 4 12f1 Personal -  PREVIEW PACKAGES IN USE  - HandMenuLayoutExamples](

Also described in #6650 </Description>
  </Issue>
  <Issue>
    <IssueID>6662</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Shader error in 'Mixed Reality Toolkit/Standard' after ARKit XR Plugin import</Title>
    <CreatedDate>20/11/2019</CreatedDate>
    <ClosedDate>08/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6662</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shaders / Materials</Name>
        <IssueID>6662</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6662</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>iOS</Name>
        <IssueID>6662</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

On import of the ARKit XR Plugin package via UPM causes this shader error on a Mac:

``

## To reproduce

Steps to reproduce the behavior:

1. On a Mac, import all MRTK packages
2. Import AR Foundation preview 6 - Window &gt; Package Manager &gt; Advanced &gt; Show Preview Packages
3. Import ARKit XR Plugin

## Screenshots

&lt;img width="1368" alt="Screen Shot 2019-11-20 at 10 17 10 AM" src="


## Your Setup 

- Unity Version 2018.4.12
- MRTK Version v2.2

## Target Platform 
- iOS</Description>
  </Issue>
  <Issue>
    <IssueID>6660</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MixedRealityPlayspace intended usage is not clear in docs, especially regarding Scene System</Title>
    <CreatedDate>20/11/2019</CreatedDate>
    <ClosedDate>19/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>6660</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6660</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
We've encountered projects where the MixedRealityPlayspace transform is being treated as a general-purpose parent for scene content.

This has caused confusion in some multi-scene setups as the playspace in content scenes may get disabled on load.

Our playspace documentation is limited to one line in the [getting started guide](
&gt; MixedRealityPlayspace - The parent object for the headset, which ensures the headset / controllers and other required systems are managed correctly in the scene.

We should:
 - add a separate playspace doc that explains its intended usage
 - update our scene system docs to clearly explain when playspace transforms will be disabled

## Existing Doc Link
[Getting Started](
[Scene System Overview](</Description>
  </Issue>
  <Issue>
    <IssueID>6658</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Docs on Building NuGet Packages Correct?</Title>
    <CreatedDate>20/11/2019</CreatedDate>
    <ClosedDate>31/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>6658</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Package Management - NuGet</Name>
        <IssueID>6658</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6658</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
If I follow the docs [here]( to attempt to build the NuGet packages as described in [this section]( then I don't have any success.

I have not managed to get to the bottom of this at the time of writing but it seems like the file [BuildSource.proj]( has a hardcoded reference to Visual Studio 2017 Enterprise Edition. I'm running on Visual Studio 2019 so that doesn't seem to work for me.

Further, if I correct this then I seem to get into a problem where MSBuild is picking up Visual Studio as V15.0 rather than V16.0. 

I'm unsure whether this is just my system but it'd be good to perhaps have the document talk through in a little more detail how to get this to work as I've spent maybe 2 hours on it this morning and I don't have it working.

The specific error I end up with is relating to MSBuild not being able to import XAML tagets into any of the .csproj files that are generated by the Unity build process.

## Feature Area
As above - building NuGet packages to allow for local debugging of the MRTK when packaged as NuGet packages

## Existing Doc Link
As above

## Additional context
N/A</Description>
  </Issue>
  <Issue>
    <IssueID>6657</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>6657</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Misleading property name in BoundingBox class</Title>
    <CreatedDate>20/11/2019</CreatedDate>
    <ClosedDate>27/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6657</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>6657</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>csharp
        [SerializeField]
        [Tooltip("Prefab used to display rotation handles in the midpoint of each edge. Aligns the Y axis of the prefab with the pivot axis, and the X and Z axes pointing outward. If not set, spheres will be displayed instead")]
        private GameObject rotationHandlePrefab = null;

        /// &lt;summary&gt;
        /// Prefab used to display rotation handles in the midpoint of each edge. Aligns the Y axis of the prefab with the pivot axis, and the X and Z axes pointing outward. If not set, spheres will be displayed instead
        /// &lt;/summary&gt;
        public GameObject RotationHandleSlatePrefab
        {
            get { return rotationHandlePrefab; }
            set
            {
                if (rotationHandlePrefab != value)
                {
                    rotationHandlePrefab = value;
                    CreateRig();
                }
            }
        }
`</Code>
    <Description>## Describe the problem

The property RotationHandleSlatePrefab in the BoundingBox class is misleading cause the variable name is rotationHandlePrefab.

``

## Describe the solution you'd like

Change the name of RotationHandleSlatePrefab to RotationHandlePrefab.

## Describe alternatives you've considered

-

## Additional context

I encountered the problem because i wanted to assign a new value to the variable.
</Description>
  </Issue>
  <Issue>
    <IssueID>6656</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Misleading property name BoundingBox class</Title>
    <CreatedDate>20/11/2019</CreatedDate>
    <ClosedDate>20/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6656</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>csharp
        [SerializeField]
        [Tooltip("Prefab used to display rotation handles in the midpoint of each edge. Aligns the Y axis of the prefab with the pivot axis, and the X and Z axes pointing outward. If not set, spheres will be displayed instead")]
        private GameObject rotationHandlePrefab = null;

        /// &lt;summary&gt;
        /// Prefab used to display rotation handles in the midpoint of each edge. Aligns the Y axis of the prefab with the pivot axis, and the X and Z axes pointing outward. If not set, spheres will be displayed instead
        /// &lt;/summary&gt;
        public GameObject RotationHandleSlatePrefab
        {
            get { return rotationHandlePrefab; }
            set
            {
                if (rotationHandlePrefab != value)
                {
                    rotationHandlePrefab = value;
                    CreateRig();
                }
            }
        }
`</Code>
    <Description>## Describe the problem

The property RotationHandleSlatePrefab in the BoundingBox class is misleading cause the variable name is rotationHandlePrefab.

``

## Describe the solution you'd like

Change the name of RotationHandleSlatePrefab to RotationHandlePrefab.

## Describe alternatives you've considered

-

## Additional context

I encountered the problem because i wanted to assign a new value to the variable.
</Description>
  </Issue>
  <Issue>
    <IssueID>6646</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6646</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>6646</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Undefined symbols for architecture arm64, IOS build issue</Title>
    <CreatedDate>19/11/2019</CreatedDate>
    <ClosedDate>28/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6646</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>6646</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6646</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>iOS</Name>
        <IssueID>6646</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Build for IOS fails:
`Undefined symbol: void RegisterUnityClass&lt;WorldAnchor&gt;(char const*)`

``

&lt;img width="867" alt="Screen Shot 2019-11-19 at 3 32 51 PM" src="

## To reproduce

Steps to reproduce the behavior:

1. Open Unity on a Mac
2. Import all MRTK packages
3. Switch platform to IOS
4. Add HandInteractionExample
5. Open Xcode solution
6. Click play button in the corner of Xcode to run

## Your Setup (please complete the following information)

- Unity Version 2018.4.12
- MRTK Version v2.2

## Target Platform (please complete the following information)
- IOS
</Description>
  </Issue>
  <Issue>
    <IssueID>6324</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>404 on Eye tracking heat map link</Title>
    <CreatedDate>18/10/2019</CreatedDate>
    <ClosedDate>06/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>6324</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>6324</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Go here:


Click "Eye tracking heat map"
Tries to go here:


See 404.</Description>
  </Issue>
  <Issue>
    <IssueID>6323</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>6323</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Broken link to Pointers documentation</Title>
    <CreatedDate>18/10/2019</CreatedDate>
    <ClosedDate>21/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>6323</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>6323</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
Go here:

Click link.
See 404.


## Feature Area
What's incorrect? What's missing?

## Existing Doc Link
If this is about something in an existing document, please provide link 

## Additional context
Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>6320</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Head Gaze cursor do not reappear after hand cursor got disabled</Title>
    <CreatedDate>18/10/2019</CreatedDate>
    <ClosedDate>13/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6320</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
At startup, default gaze cursor is visible.
When  a hand is detected, the gaze cursor disappeared and the hand cursor is visible.
When the hand is not detected anymore, the head gaze cursor should be visible again just like at startup, but it stays inactive.

## To reproduce

Steps to reproduce the behavior:

1. Launch any example (in the gif it's HandMenuExamples)
2. Click Play in Unity and observe that a cursor is visible
3. pop a hand and observe that the hand cursor is visible (but the head gaze is not anymore)
so far, all good ;)
4. unpop/hide the hand
=&gt; no cursor is displayed anymore

## Expected behavior
when no hand is detected, the default head gaze cursor should be displayed just like at startup

## Screenshots
![pointer_disappear](


## Your Setup (please complete the following information)

- Unity Version [2018.4.9f1]
- MRTK Version [v2.1]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2

## Additional context
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>6320</IssueID>
        <PullRequestID>6516</PullRequestID>
        <Title>Revert "add hololens2 inputsimulationprofile"</Title>
        <Description>Reverts microsoft/MixedRealityToolkit-Unity#6393

PR #6393  aimed to change the default behavior of the Hand Interaction example scene to turn use eye simulation. It's very good to know that it's possible to have the desired behavior in #6393 by modifying the input profile. However, one of the goals of MRTK is to have defaults that match the interaction model of HoloLens and Windows Mixed Reality. 

PR #6393 had the effect of turning on the head cursor when no hands are present, which does not match shell parity. There is also a second bug: the gaze cursor turns on if a hand is near a grabbable or touchable object, issue #6496.

Fixes: #6496 


</Description>
        <CreatedDate>07/11/2019</CreatedDate>
        <ClosedDate>12/11/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Release Blocker</Name>
            <IssueID>6320</IssueID>
            <PullRequestID>6516</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>julenka</FixedById>
            <PullRequestID>6516</PullRequestID>
            <IssueID>6320</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>6319</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>6319</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>NearInteractionTouchable plane facing wrong direction</Title>
    <CreatedDate>18/10/2019</CreatedDate>
    <ClosedDate>15/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6319</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Near Interaction</Name>
        <IssueID>6319</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The white arrow represents the forward direction of the NearInteractionTouchable plane and it is facing the wrong direction by default.

&lt;img width="531" alt="CurrentNearInteractionTouchablePlacement" src="

[Video of Issue](

## To reproduce

Steps to reproduce the behavior:

1. Create MRTK scene
2. Create a cube
3. Add PressableButton component to cube
4. Click add NearInteractionTouchable
5. In NearInteractionTouchable component, click Fix Bounds and Fix Center
6. The NearInteractionTouchable plane is on the back face of the cube and the forward direction should be facing the camera

## Expected behavior

Expected NearInteractionTouchable plane position on default

&lt;img width="539" alt="ExpectedNearInteractionTouchablePlanePosition" src="


## Your Setup (please complete the following information)

- Unity Version:  2018.4.7f1
- MRTK Version: v2.1

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR
</Description>
  </Issue>
  <Issue>
    <IssueID>6316</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6316</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Service type change is not detected as a change</Title>
    <CreatedDate>17/10/2019</CreatedDate>
    <ClosedDate>18/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6316</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Services</Name>
        <IssueID>6316</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

While working on a custom camera system implementation, it was discovered that changes to the selected service type does not get noticed by the inspector. This results in the selected service not getting properly initialized.

- Unity 2018.4.11f1
- MRTK 2.1.0

</Description>
  </Issue>
  <Issue>
    <IssueID>6314</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>6314</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Scene System's error message not helpful</Title>
    <CreatedDate>17/10/2019</CreatedDate>
    <ClosedDate>22/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6314</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When attempting to load a scene that is missing from the `Content Scenes` list in the profile, the error simply states "Can't load scene." Can we provide a more helpful error message to check the scene list?

## To reproduce

Steps to reproduce the behavior:

Try loading a scene not in the content scene list.

## Your Setup (please complete the following information)

- Unity Version 2018.4.11f1
- MRTK Version 2.1

## Target Platform (please complete the following information)

- Unity Editor
</Description>
  </Issue>
  <Issue>
    <IssueID>6313</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>PhotoCapturing Issue with MRTK v2 R2</Title>
    <CreatedDate>17/10/2019</CreatedDate>
    <ClosedDate>21/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6313</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Using the  PhotoCapture from unity the "onCreatedCallback" is called on the Hololens 1 but not on the Hololens 2.  This keeps the photo capture reference null not allowing a picture to be taken.

A workaround I tried was to use the MediaCapture class. This had the problem of finding zero Devices of the video class using the "FindAllAsync"

## To reproduce

Steps to reproduce the behavior:

1. Build the project that uses the PhotoCapture class of unity or the MediaCapture class. 
2. Run the application and take a picture with the PhotoCapture or MediaCapture. On Hololens 1 and Two
4. Notice that the Hololens 1 is successful in taking a picture and the Hololens 2 is not

## Expected behavior

The Hololens 2 should be able to use PhotoCapture to take a picture.
and the FindAllAsync should be able to find Devices of the video class.


## Your Setup (please complete the following information)

- Unity Version 2018.4.11f1
- MRTK Version 2.0
-Vurforia 8.5.8

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2

## Additional context

Add any other context about the problem here.</Description>
  </Issue>
  <Issue>
    <IssueID>6312</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>6312</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Scene System editor features can interfere with prefab editing</Title>
    <CreatedDate>17/10/2019</CreatedDate>
    <ClosedDate>24/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6312</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Multi-Scene</Name>
        <IssueID>6312</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The scene system will occasionally kick you out of prefab editing mode. Consistently a problem when editing prefabs containing nested Interactable refabs.

## To reproduce

Steps to reproduce the behavior:

1) Add MRTK instance to scene.
3) Enable scene system, manager scene and all scene system editor features.
4) Attempt to edit a prefab containing nested Interactables.
5) Observe getting kicked back to main scene.

## Expected behavior

The scene system should not interfere with prefab editing.

## Your Setup

- Unity 2019.2.6
- MRTK development_branch</Description>
  </Issue>
  <Issue>
    <IssueID>6308</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>6308</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>I just upgraded to the latest mrtk_release branch and now I get FileNotFoundException: Unable to find 'Assembly-CSharp.csproj' file. error every time I try to build the project.</Title>
    <CreatedDate>16/10/2019</CreatedDate>
    <ClosedDate>07/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>6308</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6308</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>6308</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Pushing the "Build" button in the build window ends with this error: FileNotFoundException: Unable to find 'Assembly-CSharp.csproj' file.

And not the "Done" window.

## To reproduce

Steps to reproduce the behavior:

1. checkout mrtk_release branch
2. click on Build button in build window
4. See error

## Expected behavior

No errors.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.4.11f1]
- MRTK Version [e.g. v2.1]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>6307</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HandConstraint won't activate for hands already tracked.</Title>
    <CreatedDate>16/10/2019</CreatedDate>
    <ClosedDate>05/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6307</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Solvers - HandConstraint</Name>
        <IssueID>6307</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The HandConstraint doesn't add existing hands to it's hand stack if the hand source was active before the HandConstraint was active.

In HandConstraint we need to add any existing hands:

        protected override void OnEnable()
        {
            base.OnEnable();
            InputSystem?.RegisterHandler&lt;IMixedRealitySourceStateHandler&gt;(this);

            handBounds = GetComponent&lt;HandBounds&gt;();

            // Add any existing hands.
            foreach (var controller in InputSystem.DetectedControllers)
            {
                // Add to the hand stack
            }
            ...

## To reproduce

Steps to reproduce the behavior:

1. Open HandMenuExamples
2. Hit play
3. Activate a hand menu
4. While the hand menu is active with the second hand hit the "Hide on Hand Lost" button.
5. Notice the menu does not appear.

## Expected behavior

A menu appears.

## Your Setup (please complete the following information)

- Unity Version 2018.4.6f1
- mrtk_development

## Target Platform (please complete the following information)

- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>6302</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>6302</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Visual Profiler Doesn't Write Depth (which breaks dLSR)</Title>
    <CreatedDate>16/10/2019</CreatedDate>
    <ClosedDate>16/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6302</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The visual profiler does not write to the depth buffer which can cause rendering artifacts when using depth buffer sharing on HoloLens 2 (dLSR).

## To reproduce

Steps to reproduce the behavior:

1. Enable "depth buffer sharing" within the UWP/XR player settings
2. Launch the HandInteractionExamples scene on HoloLens 2
3. Notice rendering artifacts (smearing) around the visual profiler

## Expected behavior

No artifacts.

## Your Setup (please complete the following information)

- Unity Version 2018.4.6f1
- mrtk_development

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>6298</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>can not connect internet with websocket</Title>
    <CreatedDate>16/10/2019</CreatedDate>
    <ClosedDate>18/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6298</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
It is ok while run my program in unity editor,  but it seem can not connect internet after deploy to hololens.
It is no errors while in unity editor and visual studio while deploying to hololen . 
I donot know the question.
The output is "已加载“C:\Windows\System32\Windows.Networking.Connectivity.dll”。无法查找或打开 PDB 文件。" while program is debuging.

**Or my way is wrong of using websocket in hololens.**

## Screenshots
![image](
![image](

**below two images is debuging output.**
![image](
![image](

## Your Setup (please complete the following information)

- Unity Version [e.g. 2019.2.6.f1]
- MRTK Version [e.g. v2.1]

## Target Platform (please complete the following information)

- HoloLens
 
</Description>
  </Issue>
  <Issue>
    <IssueID>6297</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>6297</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>This logic will order not found paths ("False") before found paths ("True")</Title>
    <CreatedDate>16/10/2019</CreatedDate>
    <ClosedDate>07/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>6297</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6297</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>6297</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The comment in UwpAppxBuildTools.cs states that the preferences for msbuild versions is enterprise, pro, then community, but this logic will actually order those paths in reverse.  
string bestPath = paths.OrderBy(p =&gt; p.ToLower().Contains("enterprise"))
                                .ThenBy(p =&gt; p.ToLower().Contains("professional"))
                                .ThenBy(p =&gt; p.ToLower().Contains("community")).First();

## To reproduce

Steps to reproduce the behavior:

1. Install community and enterprise versions of msbuild
2. Run build command
3. check to see which version is used

## Expected behavior

The preference should match the documentation

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

The fix is to use OrderByDescending, ThenByDescending, that way found paths ("True") will be sorted before not found paths ("False") and the correct preference will be chosen.
</Description>
  </Issue>
  <Issue>
    <IssueID>6294</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>6294</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Spatial Awareness Observer profile not correctly set and can't set</Title>
    <CreatedDate>16/10/2019</CreatedDate>
    <ClosedDate>17/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>6294</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6294</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6294</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>6294</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The Observer Profile field for Spatial Mesh Observer gets auto set to None by the inspector and cannot set the correct profile value back in place.

Furthermore, note that the data provider field does not filter on profile types. Thus, one gets the full list of available profile types

![profile-error](

## To reproduce

Steps to reproduce the behavior:

Add to Scene &amp; Configure new MRTK
Select DefaultMRTKProfile etc
Go to SA section and open observer
Notice "none" now selected
Try to change it to correct profile and fail

## Expected behavior

Profile fields shouldn't be changing

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.4.11f1]
- MRTK Version - MRTK Dev

## Target Platform (please complete the following information)

Editor

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>6292</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6292</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Proposal: Modify camera system to support data providers.</Title>
    <CreatedDate>15/10/2019</CreatedDate>
    <ClosedDate>29/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>CameraSystem</Name>
        <IssueID>6292</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6292</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>We have heard from a set of customers that there is a desire for the MRTK to use an application provided camera and playspace. Often there is a desire for the MRTK to "leave the camera alone" or to allow for configuring a specific prefab to be instantiated.

This proposal describes changes to make this include:
* Adding camera "data providers" to allow for platform specific configuration
    * MixedRealityCameraSystem will implement IMixedRealityDataProviderAccess
    * Allow camera providers to extend the MixedRealityCameraProfile to add additional configuration options
* [Breaking change] Modifying the camera system interface to add a "leave the scene alone" option (ex: use the camera and playspace that already exist)

This work will simplify adding support for AR Foundation and potentially other future platforms.</Description>
  </Issue>
  <Issue>
    <IssueID>6288</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoloLens 1 and 2 support multi-thread？</Title>
    <CreatedDate>15/10/2019</CreatedDate>
    <ClosedDate>15/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>6288</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>HoloLens 1 and 2 support multi-thread？
1.UI thread is stoped while Loading data or some Prefabs (hololens 1) .
2.I cannot see anything or low frame rate in hololens 1 while runing MRTK demos once in a while.</Description>
  </Issue>
  <Issue>
    <IssueID>6284</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>6284</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Increase test coverage for bounding box</Title>
    <CreatedDate>14/10/2019</CreatedDate>
    <ClosedDate>13/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6284</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>6284</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

we currently only cover a small part of what we can do with bounding box / bounds control.

make sure to add more coverage to tests while refactoring bounding box. (eg rotation)</Description>
  </Issue>
  <Issue>
    <IssueID>6282</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Use MRTK with ZED cameras</Title>
    <CreatedDate>14/10/2019</CreatedDate>
    <ClosedDate>15/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>6282</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>So I'm looking to use some form of AR/MR SDK to work with a ZED camera as the input and was wondering if that is possible with the MRTK for Unity or not?</Description>
  </Issue>
  <Issue>
    <IssueID>6279</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hand Rays do not seem to work in Solvers example scene</Title>
    <CreatedDate>14/10/2019</CreatedDate>
    <ClosedDate>22/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6279</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>6279</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem
Currently, there is no easy way to make an object attached to the endpoint of the Hand Ray and make it placed on a surface with the surface normal aligned. 

## Describe the solution you'd like
Adding a new option 'Hand Ray' to Surface Magnetism Solver.

</Description>
  </Issue>
  <Issue>
    <IssueID>6276</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>andreiborodin</FixedById>
        <IssueID>6276</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>No versioning on nuget feed binaries</Title>
    <CreatedDate>11/10/2019</CreatedDate>
    <ClosedDate>19/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6276</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6276</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Package Management - NuGet</Name>
        <IssueID>6276</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6276</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The DLLs in the MRTK nuget feed all have versions set to 0.0.0.0.  The DLLs should have versioning applied.  Without this, it will be hard to debug issues (such as MRTK Editor Watson crashes) without having explicit knowledge of the MRTK version.

## To reproduce

Examine versions of the Nuget DLLs...they are all 0.0.0.0

## Expected behavior

Have a version that corresponds to the release
</Description>
  </Issue>
  <Issue>
    <IssueID>6275</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add symbols for binaries in the MRTK Nuget Feed</Title>
    <CreatedDate>11/10/2019</CreatedDate>
    <ClosedDate>11/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6275</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

It appears that the MRTK binaries in the nuget feed are missing symbols.  This makes debugging the MRTK in editor difficult.  Also if a .Net backend is being used, debugging MRTK within the player is also hard.

## Describe the solution you'd like

Publish symbols in nuget feed

## Describe alternatives you've considered

The developer has to import CS scripts instead of using Nuget feed.
</Description>
  </Issue>
  <Issue>
    <IssueID>6274</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>6274</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>killerantz</FixedById>
        <IssueID>6274</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>6274</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Button collections do not toggle/untoggle when currentIndex changes.</Title>
    <CreatedDate>11/10/2019</CreatedDate>
    <ClosedDate>11/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6274</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6274</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Collections</Name>
        <IssueID>6274</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

TL;DR - Pressing a button in a collection will update the currentIndex, but changing the currentIndex does not change the toggle status of buttons in the collection.

A button can be toggled on by selecting a button from the index of buttons, but a different button in that collection cannot be toggled on if the currentIndex value is manually changed in the script or the inspector.

## To reproduce

1. Create a button collection with as many buttons as you'd like (maybe 5).
2. Make sure all buttons are toggle-able so a button stays pressed after being clicked on.
3. In Play Mode, click on the various buttons while observing the Inspector. The currentIndex should change appropriately.
4. BUG: While still in Play Mode, use the Inspector and change the currentIndex value. The corresponding button should be toggled on, but it does not. (Play Mode can be stopped after observing this.)
5. BUG: If a script is written so as to change the currentIndex value, the corresponding button won't be toggled.

## Expected behavior

If the currentIndex value is changed, the button collection should toggle on/off the appropriate buttons that correspond to that index value.

## Your Setup (please complete the following information)

- Unity 2019.1.14f1
- MRTK Version RC2.1

## Target Platform (please complete the following information)

- HoloLens

## Additional context

Also noticed that with any MRTK button, it needs to be explicitly pressed by the user for the button press to work. There's no function to simulate a button press within a script. As a UX Designer &amp; Dev, both the button collections fix and being able to simulate a button press would help a ton.
</Description>
  </Issue>
  <Issue>
    <IssueID>6271</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MaterialInstance.InstanceMaterials should be more verbose.</Title>
    <CreatedDate>11/10/2019</CreatedDate>
    <ClosedDate>07/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6271</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

MaterialInstance.InstanceMaterials has an assert for when a material gets instanced more than once which isn't very helpful.

## Describe the solution you'd like

This assert should become a warning and log information about which renderer **and** which material is in question. This will help the user track down what is being instanced multiple times.

## Describe alternatives you've considered

N/A

## Additional context


</Description>
  </Issue>
  <Issue>
    <IssueID>6268</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MenelvagorMilsom</FixedById>
        <IssueID>6268</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Manipulation Handler ignores Colliders</Title>
    <CreatedDate>11/10/2019</CreatedDate>
    <ClosedDate>18/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6268</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6268</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

When Moving Object with the Manipulation handler all colliders are ignored and you can move the object through others objects or clip them into the floor. 

## Describe the solution you'd like

I would like a option where the colliers are not ignored and the manipulated object is stopped when moved against an other object with a collider. 
Similar behavior can be observed in the the "lobby" of  Microsofts Mixed Reality Portal where furniture can be moved around but not into each other or the floor.

Additionally a constraints for the movement axis would be useful. for example only allow movement across the x- and z-Axis.
</Description>
  </Issue>
  <Issue>
    <IssueID>6267</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Proper Video Streaming for HoloLens</Title>
    <CreatedDate>11/10/2019</CreatedDate>
    <ClosedDate>07/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>6267</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6267</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

I was trying to build a video streaming solution for HoloLens 1. It works, but it turned out to be  hard to obtain a good performance. I couldn't process the mp4 stream properly, so I implemented a mjpeg solution which has just decent performance.

I would like to have a proper and high-performance way to video stream (including holograms) which you can integrate in your own apps.

## Describe the solution you'd like

The MixedRealityToolkit should provide an easy way to video stream. A challenge is to investigate the right solution checking  `MediaCapture`, WebRTC, different encodings, different network stacks and ease of use.
</Description>
  </Issue>
  <Issue>
    <IssueID>6266</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>6266</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>6266</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Changing between scenes</Title>
    <CreatedDate>11/10/2019</CreatedDate>
    <ClosedDate>14/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>6266</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Multi-Scene</Name>
        <IssueID>6266</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
I am trying to change Scenes in Unity including the MRTK. The first Scenes includes a menu and the other ones are simple CAD objects. I want to switch from the menu to every other Scene and from there back to the menu. But when loading the new Scene the debug simply freezes. 

## Expected behavior
Im pretty new to the MRTK and Unity and Ive already seen that there has been a lot of discussion about this topic in the past. But i havent found any "How to" or anything like that. I would be thankful if you could write a short step by step guide how to manage to change scenes without crashing the whole programm. 

## Your Setup

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target Platform

- HoloLens
</Description>
  </Issue>
  <Issue>
    <IssueID>6263</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>StabilizationPlaneModifier, when using gaze input, doesn't fallback to default distance if there is no gaze target</Title>
    <CreatedDate>10/10/2019</CreatedDate>
    <ClosedDate>24/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>6263</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6263</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6263</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

If the StablizationPlaneModifier's mode is set to "Gaze Mode", it doesn't correctly fallback to the default distance when the Gaze provider doesn't have a valid hit target.  This results in the stabilization plane to be placed on top of the main camera; this causes poor hologram stabilization.

The bug is in this function 

``</Description>
  </Issue>
  <Issue>
    <IssueID>6262</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6262</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Replace sphere in spatial awareness demo with button bar. Add functionality</Title>
    <CreatedDate>10/10/2019</CreatedDate>
    <ClosedDate>09/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>6262</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Example/Test Scene</Name>
        <IssueID>6262</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>6262</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6262</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The current spatial awareness demo scene does not use MRTK's button bar UI to control demo options.

In addition, the demo should illustrate more of the system functionality.

- [ ] Replace sphere functionality with button bar
    - [ ] Clear meshes
    - [ ] Visible / Occlusion materials
    - [ ] Change visible material
- [ ] Make the sphere movable to help illustrate occlusion, etc.
- [ ] Configurable use of mesh object vs on-device observer, dependent if running in editor or not</Description>
  </Issue>
  <Issue>
    <IssueID>6260</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>6260</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Bounding Box shouldn't recreate entire rig if one visual property changes</Title>
    <CreatedDate>10/10/2019</CreatedDate>
    <ClosedDate>19/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6260</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>6260</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>6260</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Currently we're recreating the entire bounding box rig on almost every property change in bounding box.


## Expected behavior

We should only recreate the necessary parts of bounding box and not the entire thing.


## Your Setup (please complete the following information)

- MRTK Version v 2.1.0
</Description>
  </Issue>
  <Issue>
    <IssueID>6259</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Brightness Control </Title>
    <CreatedDate>10/10/2019</CreatedDate>
    <ClosedDate>11/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6259</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

It seems that there are no APIs in MRTK to control the brightness of Hololens1‘s screen.

## Additional context

Instead of using the Brightness up/down button, can we adjust it through code? 
For example, setting brightness from 0% to 100% maybe something like this below:

`CoreServices.XXX.XXX.setBrightness(int percentage)`
`CoreServices.XXX.XXX.getBrightness()`

Thanks!
</Description>
  </Issue>
  <Issue>
    <IssueID>6257</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6257</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[Cross Platform] Support adding MRTK to an existing AR Foundation project</Title>
    <CreatedDate>09/10/2019</CreatedDate>
    <ClosedDate>30/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>AR Foundation</Name>
        <IssueID>6257</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Cross Platform</Name>
        <IssueID>6257</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6257</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Services</Name>
        <IssueID>6257</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>MRTK needs to support projects that were begun as an AR Foundation project.

Components that expect specifically named hierarchy objects (ex: MixedRealityPlayspace) should also support the AR Foundation equivalent (AR Session Origin).

~~Update services to find the playspace object via a Tag~~
~~Add prompt to enable customers to choose to update application hierarchy to MRTK's~~
~~If yes, replace AR Session Origin, etc with MRTK equivalents~~
~~If no, tag the AR Foundation objects with the MRTK tags~~</Description>
  </Issue>
  <Issue>
    <IssueID>6256</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6256</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[Cross Platform] Update Camera Service to support AR Foundation</Title>
    <CreatedDate>09/10/2019</CreatedDate>
    <ClosedDate>30/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>AR Foundation</Name>
        <IssueID>6256</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Cross Platform</Name>
        <IssueID>6256</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6256</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The camera system needs to be aware of and support Unity's AR Foundation.

- [x] Add check for AR Foundation supported device
- [x] Camera service dynamically instantiates required AR Foundation components
- [x] Investigate camera system settings providers
    - [x] Create AR Foundation camera settings provider
    - [x] If no supported provider registered, fall back to the current Camera System behavior
- [x] Add check for AR Kit and AR Core settings in iOS and Android player settings on project load
</Description>
  </Issue>
  <Issue>
    <IssueID>6249</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[dLSR failures] Default MRTK Cursors should not write to depth map. This impacts hologram stabilization</Title>
    <CreatedDate>09/10/2019</CreatedDate>
    <ClosedDate>24/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6249</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>DDE Partner</Name>
        <IssueID>6249</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shaders / Materials</Name>
        <IssueID>6249</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The default cursor prefab writes to the depth map.  This causes interference with Hologram stabilization, especially when using the Eye/GGV Cursor.   That is, when using the GGV cursor, stabilization is always incorrect, since what your looking at is being stabilized using the cursor's depth. 

Note, when an app is "sharing depth" with unity, Holograms will be stabilized with the app's depth map.  

## To reproduce

Steps to reproduce the behavior:

1. Turn on depth sharing
2. Setup HoloLens 2 app to use GGV cursor only
3. Remove colliders from your other meshes (not needed, but makes it easier to see problem when cursor doesn't collide with meshes)
4. Play app on hololens 2.
5. Ensure GGV cursor is visible
6.  See stabilization of mesh objects, around GGV cursor, is incorrect.

## Expected behavior

Hologram stabilization shouldn't be impacted but the cursor  


## Your Setup (please complete the following information)

- Unity Version (2018 and 2019)
- MRTK Version: v2.0 - v2.1

## Target Platform (please complete the following information)

- HoloLens (auto planar LSR will also be incorrect)
- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>6244</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>6244</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Support Holographic Remoting of hands and eyes to HoloLens 2</Title>
    <CreatedDate>09/10/2019</CreatedDate>
    <ClosedDate>25/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6244</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6244</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>HoloLens 2</Name>
        <IssueID>6244</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Holographic Remoting</Name>
        <IssueID>6244</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6244</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Currently, HL2 articulated hands and eye tracking depend on UWP APIs, which aren't able to be called directly in scripts inside the Unity Editor, where remoting runs.

## Describe the solution you'd like

Using  we can enable this feature.</Description>
  </Issue>
  <Issue>
    <IssueID>6243</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Boundary System does not work correctly</Title>
    <CreatedDate>09/10/2019</CreatedDate>
    <ClosedDate>09/10/2019</ClosedDate>
    <IssueLabels />
    <Code>
Failed to calculate boundary bounds.
UnityEngine.Debug:LogWarning(Object)
Microsoft.MixedReality.Toolkit.Boundary.MixedRealityBoundarySystem:CalculateBoundaryBounds() (at Assets/MixedRealityToolkit.Services/BoundarySystem/MixedRealityBoundarySystem.cs:932)
Microsoft.MixedReality.Toolkit.Boundary.MixedRealityBoundarySystem:Initialize() (at Assets/MixedRealityToolkit.Services/BoundarySystem/MixedRealityBoundarySystem.cs:45)
Microsoft.MixedReality.Toolkit.&lt;&gt;c:&lt;InitializeAllServices&gt;b__57_0(IMixedRealityService) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:865)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:ExecuteOnAllServices(IEnumerable`1, Action`1) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:972)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:ExecuteOnAllServicesInOrder(Action`1) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:953)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:InitializeAllServices() (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:865)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:InitializeServiceLocator() (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:430)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:InitializeInstance() (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:535)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:RegisterInstance(MixedRealityToolkit, Boolean) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:674)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:Awake() (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:568)
`</Code>
    <Description>I tried to visualize Boundaries but instead I get warning "Failed to calculate boundary bounds." and just Spatial Mesh.
 
![image](

``

It happens in both editor and Hololens 1st gen.

## To reproduce

I encountered this in empty unity project with only MRTK.Foundation installed.
My settings:
![image](
![image](
![image](
![image](


## Expected behavior

Boundary Visualization

## Setup
I tested it with Unity 2018.4.4f1(.NET) and Unity 2019.1.3f(IL2CPP).
MRTK v2.0.0

## Target Platform

- Unity editor
- HoloLens 1st gen
</Description>
  </Issue>
  <Issue>
    <IssueID>6242</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>AdamMitchell-ms</FixedById>
        <IssueID>6242</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>6242</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>PressableButtonCube position shift </Title>
    <CreatedDate>08/10/2019</CreatedDate>
    <ClosedDate>25/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6242</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6242</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

PressableButtonCube shifts positions in play mode.

## To reproduce

Steps to reproduce the behavior:

1. Navigate to PressableButtonExample
2. Run Scene

## Expected behavior

No position shift.

## Screenshots

[Video of Issue](

&lt;img width="1305" alt="PressableButtonIssue" src="

## Your Setup (please complete the following information)

- Unity Version: 2018.4.7f1
- MRTK Version: v2.1

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR
</Description>
  </Issue>
  <Issue>
    <IssueID>6241</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>6241</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Toggle-Dot moves outside of control constraints</Title>
    <CreatedDate>08/10/2019</CreatedDate>
    <ClosedDate>09/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6241</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>6241</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>from: 

Description - I have a settings panel in my scene which appears if I click the settings button on my toolbar. By repeating this, I noticed one bug → The dot of all toggled toggles moves further and further. The dot of an untoggled toggle stays in the right position. Did someone fix that bug in the script interactable or did a workaround?

![image](

How to reproduce - I used the toggles that were given by the example package. Place one that is already toggled and one not toggled and start play mode. Activate and deactivate the script Interactable on your toggle and you should see this behavior

![image](

Unity 2019.2.8f1
MRTK 2.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>6239</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>6239</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6239</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Consider the duplicate packaged files solution</Title>
    <CreatedDate>08/10/2019</CreatedDate>
    <ClosedDate>24/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6239</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>6239</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Package Management - NuGet</Name>
        <IssueID>6239</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6239</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When we package distinct folder hierarchies into a single folder hierarchy in the NuGet, the zipping process packages them as duplicate files without issue. This does cause issue with NuGetForUnity when unzipping.

A better solution is needed.</Description>
  </Issue>
  <Issue>
    <IssueID>6237</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>6237</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Tile Grid Object Collection needs some rework</Title>
    <CreatedDate>08/10/2019</CreatedDate>
    <ClosedDate>13/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>6237</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6237</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6237</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Today, i tried to use Tile Grid Object Collection ..

first of all : "Centered" option is bugged (missing parenthesis in the code arround `Column - 1`)
secondly : does not derive from BaseObjectCollection or GridObjectCollection
third (link to 2nd) : the position is updated constantly in the Update() function (performance issue) 
fourth : typo in property `LayoutDireciton`

lastly, not sure what the difference is from Grid, and documentation is not very explicit (and misleading, as we can think it inherit from Grid) :

&gt; `TileGridObjectCollection.cs` provides some additional options to GridObjectCollection

## Expected behavior

minimal : fix 1 and 4 
optimized: inherit from Grid and document better to tell what are the differences
radical : remove TileObjectCollection

## Your Setup (please complete the following information)

- Unity Version [2018.4.9f1]
- MRTK Version [2.1 stabilization]

## Additional context

I can help and make a PR based on decision 
</Description>
  </Issue>
  <Issue>
    <IssueID>6234</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>6234</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>6234</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Hand mesh toggle button disables hand input</Title>
    <CreatedDate>07/10/2019</CreatedDate>
    <ClosedDate>08/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6234</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6234</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Hand mesh toggle button in the toggle features panel disables hand input and freezes HoloLens 2 app.

## To reproduce

Steps to reproduce the behavior:

1. Build HandInteractionExample - UWP
2. Connect HoloLens 2
3. Run app through visual studio: Release, ARM, Device
4. Press hand mesh toggle button in the toggle features panel

## Screenshots

[Video of Issue - Hand Mesh Toggle](

## Your Setup (please complete the following information)

- Unity Version 2018.4.7f1
- MRTK Version v2.1

## Target Platform (please complete the following information)

- HoloLens 2

</Description>
  </Issue>
  <Issue>
    <IssueID>6226</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Designtime build failed for project IntelliSense might be unavailable.</Title>
    <CreatedDate>07/10/2019</CreatedDate>
    <ClosedDate>30/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6226</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6226</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

i use MRTKv2 and i build scenes successfully.
![image](

But when i open .sln in visual studio 2019,
it shows error : Designtime build failed for project 'D:\UnityWorkSpace\MR\APP\MR\MR.vcxproj' configuration 'Debug|x64'. IntelliSense might be unavailable.
Set environment variable TRACEDESIGNTIME = true and restart Visual Studio to investigate.
![image](
![image](

i try to  disable IntelliSense but it doesn't work ,i find maybe it  is caused by the project being moved,so i want to get some suggets here

## Expected behavior

i expect i can figure out this problem so i can use hololens2 emulator to run this appliaction

## Your Setup (please complete the following information)

- Unity Version 2019.2.3f1
- MRTK Version v2.0.0
- Win10SDK Version 10.0.18362.0

</Description>
  </Issue>
  <Issue>
    <IssueID>6225</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>6225</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Search feature for profiles</Title>
    <CreatedDate>07/10/2019</CreatedDate>
    <ClosedDate>23/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>6225</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6225</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

MRTK profiles are rather complex and have tons of options to configure. It's often hard to find the right section for the option one wants to modify.

## Describe the solution you'd like

A search feature for profiles would help navigating to our long list of profile settings.

</Description>
  </Issue>
  <Issue>
    <IssueID>6221</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Could not find the Mesh asset for GameObjec</Title>
    <CreatedDate>06/10/2019</CreatedDate>
    <ClosedDate>07/10/2019</ClosedDate>
    <IssueLabels />
    <Description>Could not find the Mesh asset for GameObjec</Description>
  </Issue>
  <Issue>
    <IssueID>6220</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>6220</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>6220</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Bounding box grab handles flicker when nearing 15cm far pointer threshold and disappear when the threshold is crossed</Title>
    <CreatedDate>05/10/2019</CreatedDate>
    <ClosedDate>08/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6220</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>6220</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>DDE Partner</Name>
        <IssueID>6220</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>6220</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
The following are two issues noticed with the bounding box component when the activation behavior is set to Activate By Proximity And Pointer.

1. Bounding box flickers when the hand is approximately 15cm away from it.
2. There's a dead zone between 0cm - 15cm range of the bounding box. The far pointer ray disappears because the hand is in a 15cm radius of a collider. The bounding box grab handles are not visible because the hand is not yet colliding with it.

[Posting both issues in a single ticket as they're closely related and might be dependent]


## To reproduce

Steps to reproduce the behavior:

1. Go to the "BoundingBoxExamples" scene in MRTK examples.
2. Play the scene.
3. Point the hand ray to "CoffeeCup4" gameobject (far interaction).
4. Scroll the mouse wheel to move the hand ray towards the cup.
5. [Issue 1] The bounding box grab handles will start flickering at the 15cm threshold.
6. [Issue 2] Scroll the mouse wheel further towards the cup by approx 1-2 cm. The grab handles will disappear and only appear when the hand's index tip collides with the bounding box.


## Expected behavior
For the first issue (Flickering): Flickering should not happen when the transition from far to near pointer transition is happening.

For the second issue: The grab handles should not disappear as long as the far/near ray is hitting the bounding box.


## Screenshots

![bounding_box_issues](


## My Setup

- Unity Version 2018.4.9f1
- MRTK Version v2.0

## Target Platform

- HoloLens 2 (Can be simulated in the editor as well)
</Description>
  </Issue>
  <Issue>
    <IssueID>6149</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>6149</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Backspace doesn't work on system keyboard.</Title>
    <CreatedDate>30/09/2019</CreatedDate>
    <ClosedDate>14/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6149</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6149</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When typing on the system keyboard, the backspace key doesn't delete previously typed characters.

## To reproduce

Steps to reproduce the behavior:

1. Go to HandInteractionExample scene.
2. Add a text mesh that outputs keyboard text.
3. Click on Open Keyboard
4. Type something on the keyboard
5. Press the backspace key.
6. Notice how nothing gets deleted.



## Expected behavior

Previously typed characters should be deleted when you press backspace.


## Your Setup (please complete the following information)

- Unity 2019.2.6f1
- Microsoft Mixed Reality Toolkit 2.1.0

## Target Platform (please complete the following information)

- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>6144</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>lukastoenneMS</FixedById>
        <IssueID>6144</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>NullRef when opening Playback tab in input simulation service</Title>
    <CreatedDate>30/09/2019</CreatedDate>
    <ClosedDate>30/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6144</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6144</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
In 2.1 stabilization, opening the playback view in the input simulation window causes null pointeers

## Expected Behavior
I can see playback controls.

## Actual Behavior
Get the following error non-stop:

**NullReferenceException: Object reference not set to an instance of an object
Microsoft.MixedReality.Toolkit.Input.InputSimulationWindow.DrawPlaybackGUI () (at Assets/MixedRealityToolkit.Services/InputSimulation/Editor/InputSimulationWindow.cs:335)
Microsoft.MixedReality.Toolkit.Input.InputSimulationWindow.OnGUI () (at Assets/MixedRealityToolkit.Services/InputSimulation/Editor/InputSimulationWindow.cs:136)
System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters,** 

## Steps to reproduce
1. In menu bar, go to MixedRealityToolkit -&gt; Utilities -&gt; Input simulation
2. Play your scene
3. Click "playback" button to go to playback view:

![image](

</Description>
  </Issue>
  <Issue>
    <IssueID>6138</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>It's extremely difficult to find classes in the github repo that you read about on the documentation page without opening the project</Title>
    <CreatedDate>30/09/2019</CreatedDate>
    <ClosedDate>30/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>6138</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
I am trying to find the PointerUtils class through the github website. I noticed the PointerUtils class in the microsoft.github.io page.

## Feature Area
It would be great if the code was better organized in the github repo, searching for a specific class is unintuitive/near impossible even if you know the namespace.

It may also  help if the documentation website had hyperlinks to source files.

## Existing Doc Link


## Additional context
n/a
</Description>
  </Issue>
  <Issue>
    <IssueID>6136</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>6136</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>SceneTransitionService glitches when using single pass instanced rendering in 2019.2.6++</Title>
    <CreatedDate>30/09/2019</CreatedDate>
    <ClosedDate>03/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6136</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

In Unity 2019.2.6 and later, the shader being used in the SceneTransitionService glitches when using single pass instanced rendering.

## To reproduce

Steps to reproduce the behavior:

1) Play examples hub scene in editor or on device
2) Click on any example hub button
3) Observe transition quad glitching / displaying improperly

## Expected behavior

Transition quad material should render correctly.

## Your Setup

- Unity Version 2019.2.6, 2019.3.0a11
- MRTK development branch</Description>
  </Issue>
  <Issue>
    <IssueID>6135</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>only see 2D scene</Title>
    <CreatedDate>29/09/2019</CreatedDate>
    <ClosedDate>30/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6135</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
I deploy MRTK Example to Holoens 1, but I only see 2D window in scene，and I donot make any change with camera.

## To reproduce

Steps to reproduce the behavior:

1. Build HandInteractionExamples scene （The same is true of other scenes）;
2. deploy to Hololens 1 via visual studio 2017;
3.  see 2D scene; 

## Screenshots
![image](
![image](
![image](
![image](
![image](
![image](

## Your Setup (please complete the following information)

- Unity Version [2019.2.6f1]
- MRTK Version [v2.0]

## Target Platform (please complete the following information)

- HoloLens


</Description>
  </Issue>
  <Issue>
    <IssueID>6134</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6134</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Registered Services throws NullReferenceException when service is added</Title>
    <CreatedDate>28/09/2019</CreatedDate>
    <ClosedDate>30/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6134</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6134</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When adding a service to the Registered Services a NullReferenceException is thrown by the inspector because adding the entry does not define the actual type of service.

## To reproduce

Steps to reproduce the behavior:

1. Add SceneTransitionService, which currently is the only one

## Expected behavior

No error

## Your Setup (please complete the following information)

- Unity Version 2018.4.6f1
- MRTK Version mrtk_development

## Target Platform (please complete the following information)

- Editor
</Description>
  </Issue>
  <Issue>
    <IssueID>6130</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Navigation not working for WMR: Motion Controller can not turn left and right</Title>
    <CreatedDate>28/09/2019</CreatedDate>
    <ClosedDate>24/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6130</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>No Repro</Name>
        <IssueID>6130</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Teleport System</Name>
        <IssueID>6130</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Navigation not working for WMR

Can not turn left and right, but can forword.</Description>
  </Issue>
  <Issue>
    <IssueID>6124</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6124</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Expand Codeowners list to reflect suggested reviewers list</Title>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>11/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>6124</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>6124</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
I have started contributing to MRTK fairly recently and something that I find a little hard to know is who are all the area experts that should be looking at a PR ? Given that the authority to merge a PR into the repo resides with the core MRTK team, I am wondering when I send out a PR who should I make sure signs off on it and hits the Merge button? It would be great if we had some sort of feature owner guide added to the "Contributing" section of the documentation.


 </Description>
  </Issue>
  <Issue>
    <IssueID>6121</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>6121</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>TestGazeProviderTargetNotNull and ScaleViaHl1Interaction are failing intermittently</Title>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>23/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6121</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6121</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Tests</Name>
        <IssueID>6121</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
We aim to fix intermittent failures right away so they do not block people

TestGazeProvierNotNull is failing intermittently, for example see  
</Description>
  </Issue>
  <Issue>
    <IssueID>6120</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>6120</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK Inspector Performance is Poor</Title>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>16/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6120</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>6120</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The MixedRealityToolkit inspector is slow.

## To reproduce

Steps to reproduce the behavior:

1. Add an MRTK instance to the scene
2. Select a configuration profile
3. Open a few sub-profile inspectors
4. Observe slow performance, especially when resizing inspector

## Expected behavior

The inspector should be more responsive.</Description>
  </Issue>
  <Issue>
    <IssueID>6118</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Interactable Profile's Pressed does not mach with Pressable Button's Pressed</Title>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>17/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6118</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6118</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>6118</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>6118</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The state in the `Interactable`'s profile is not consistent to the `PressableButton`'s State. The `Pressed` triggered under the `Interactable` is same as the `TouchBegin` in `PressableButton`.

## To reproduce

Follow the button tutorial, and triggered the button with both `PressableButton` and `Interactable` script attach.

## Expected behavior

The `Pressed` state in the `Interactable` should be triggered when the `PressableButton`'s `ButtonPressed` got triggered, the current `Pressed` state should be renamed to `Touched` (or something like that).

## Your Setup (please complete the following information)

- Unity Version : 2018.4.8
- MRTK Version : 2.0.0

## Target Platform (please complete the following information)
- HoloLens 2


</Description>
  </Issue>
  <Issue>
    <IssueID>6117</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Failed to resolve assembly UniversalApiContract</Title>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Duplicate</Name>
        <IssueID>6117</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Since upgrading from HoloToolkit to Mixed Reality Toolkit, I am unable to build for hololens. The error unity throws is:

``

The scene itself is mostly empty, containing only the required gameobjects for MRTK (Directional Light, MixedRealityToolkit and MixedRealityPlayspace, which has the Main Camera as child.)

Unity version 2019.2.6, SDK version 10.0.18362.0

Building a test scene from the MRTK works fine, so it must have something to do with our project.</Description>
  </Issue>
  <Issue>
    <IssueID>6116</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>cannot deploy  MRTK v2 to hololens 1</Title>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>12/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6116</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6116</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
I need update my hololens 1 to 18362 , but hololens cannot receive the update (18362).
Hololens OS version is 10.0.17763.737.
 
## To reproduce

Steps to reproduce the behavior:

Build and Deploy MRTK v2.0 to hololens 1.

## Expected behavior

A clear and concise description of what you expected to happen.

## Screenshots 
![image](

![image](

## Your Setup (please complete the following information)

- Unity Version [2018.4.0f1]
- MRTK Version [ v2.0]

## Target Platform (please complete the following information)
- HoloLens

 
</Description>
  </Issue>
  <Issue>
    <IssueID>6114</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>6114</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>It is difficult to run playmode tests multiple times</Title>
    <CreatedDate>27/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
    <IssueLabels />
  </Issue>
  <Issue>
    <IssueID>6108</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6108</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>6108</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>MenelvagorMilsom</FixedById>
        <IssueID>6108</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>One hand grab manip handler in VR, HL1 causes object to visibly move</Title>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>04/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6108</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6108</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>6108</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input Simulation</Name>
        <IssueID>6108</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6108</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Objects should not jump significant distances when grabbed by VR motion controllers, but they do.

This is a regression from 2.0.

## Steps to reproduce
Load up HandInteractionExamples in VR, and grab any object with one motion controller. Notice that the object visibly jumps in Z / depth.

## Expected Behavior
Object should have minimal movement when being grabbed if hand does not move.

## Actual Behavior
Object jumps significantly.

## Mixed Reality Toolkit Release Version
prerelease/2.1.0_stabilization</Description>
  </Issue>
  <Issue>
    <IssueID>6106</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Input simulation indicators interfere with graphics raycasts</Title>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>27/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6106</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Input simulation indicators show the state of hands which is nice, but placing them in the center of the screen introduces visual clutter. However, when you move the indicators to the sides, they interfere with graphics raycasts.

This bug is preventing us from turning on the input simulation indicators. Once it is fixed we can show the blue viewport indicators.

![image](

See PR #6062 

## Steps to reproduce
Update the input simulation indicators to be 50 px from the bottom left corner for left indicator, 50 px from bottom right for right indicator. Set indicators on in the default profile. 

Run FocusProviderRaycastTests.RaycastProxies test

## Expected Behavior
The test passes

## Actual Behavior
The test fails. You will see also if you try to raycast against Unity UI, the raycast will fail.
</Description>
  </Issue>
  <Issue>
    <IssueID>6101</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Interactable Inspector does not update based on state changes in play mode</Title>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>28/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6101</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>6101</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6101</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>6101</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The Interactable Inspector looks at only serialized properties and does not recall against property getters in the Interactable class. At runtime, most state information is present in these property getters.

Furthermore, the Interactable inspector has everything disabled while in play mode. Ideally, most properties are available to be re-configured during play mode. But this requires the appropriate setters are called while in play mode.

[Stretch] It could also be doubly useful to have a debug view mode where all states and their on/off value are disabled in some way. 

Also related, one sets ButtonMode in inspector but it cannot be set in via code except by indirect of Dimensions property. 

## To reproduce

## Expected behavior

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>6100</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>6100</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Interactable CanInteract() seems problematic</Title>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>20/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>6100</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6100</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>6100</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Interactable.CanInteract() is used as a gate for the various input interface handlers but includes checking that input isn't accepted for focus on toggle without canselect/candeselect?

CanSelect/CanDeselect also seem weird with multi-dimension button mode?

VoiceCommands trigger a timer to simulate a press when selected via voice. This along with the click fire timer seem problematic together if I voice select and hand ray select a button at the same time. Also strange that OnSpeechKeywordRecognized() does not utilize CanInteract() like other input interfaces

TriggerOnClick does not use CanInteract() or check if Interactable is disabled? Might need to redesign as TriggerOnClick(bool force = false)?

## To reproduce

Read the code and look for public interfaces

## Expected behavior

Ensure expected behavior is gated properly and input is coordinated across all properties/input handler channels

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>6098</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>UWP project generation fails with com.unity.burst package installed</Title>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>07/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6098</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6098</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>In a blank 3D project with MRTK enabled setup to build for HoloLens ARM/ARM64:

1. Import the Burst package from Package Manager (project will build).
2. Import the MRTK Foundation package.
3. Attempt to generate the Visual Studio project.

Result:

![image](

Unity version: 2019.1.14f1
Windows SDK: 18362 (verified the referenced winmd is present)

This blocks usage of Unity's new Jobs and Entity-Component-System perf optimizations.</Description>
  </Issue>
  <Issue>
    <IssueID>6096</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>6096</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Tooltip inspectors cause tooltip prefabs to refresh continuously when selected in project view</Title>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>27/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6096</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>6096</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>6096</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

ToolTip inspectors cause tool tip prefabs to refresh continuously when selected in project view in Unity 2019. If tool tips are used in nested prefabs this can cause lengthy re-imports.

## To reproduce

Steps to reproduce the behavior:

1) Select Bezier ToolTip prefab in project window.
2) Expand either ToolTip or ToolTipConnector script in inspector.
3) Observe continuous refresh.

## Expected behavior

Inspectors should not cause the prefab to refresh.</Description>
  </Issue>
  <Issue>
    <IssueID>6093</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>PressableButton on Unity UI button doesn't work properly if a NearInteractionTouchable is on the parent canvas.</Title>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6093</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>6093</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>6093</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UnityUI</Name>
        <IssueID>6093</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

For a gameobject with PressableButton + NearInteractionTouchableUnityUI on it, the PressableButton does not respond to pointer input if the canvas containing that gameobject _also_ contains a NearInteractionTouchableUnityUI.

## Solution

We should do **one** of the following:
1. Just get it working correctly in this case.
2. Add inspector messages to inform the dev that this is happening and a button to fix it.</Description>
  </Issue>
  <Issue>
    <IssueID>6092</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>install into Hololens1 .but it show nothing(has not "made with unity")but hololens remote is normal</Title>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>27/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6092</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>
and my project be named "win32",i want to know  this is correct? </Description>
  </Issue>
  <Issue>
    <IssueID>6091</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can't rename objects in the Hierarchy after "Add to Scene and configure ..."</Title>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>22/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6091</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

After doing "Add to scene and configure ..." the F2 funtionality for renaming objects in the `Hierarchy` breaks and it is impossible to rename objects except via the Inspector. It is still possible to use &lt;kbd&gt;F2&lt;/kbd&gt; to rename Assets.

## To reproduce

Steps to reproduce the behavior:

1. Create a new Unity Project
2. Import the MRTK 2
3. Until now everything works as expected, you can still rename objects in the hierarchy using &lt;kbd&gt;F2&lt;/kbd&gt;
4. Go to &lt;kbd&gt;Mixed Reality Toolkit&lt;/kbd&gt; $rightarrow; &lt;kbd&gt;Add to Scene and configure ...&lt;/kbd&gt;
5. After doing this and the according objects are added to the scene it is now impossible to rename objects in the Hierarchy pressing &lt;kbd&gt;F2&lt;/kbd&gt;! It goes to rename mode for a millisecond then the object is not focused anymore.
6. As soon as the according MRTK2 objects are removed from the scene it works again.

See GIF below


## Expected behavior

Having MRTK2 in the scene should not break the &lt;kbd&gt;F2&lt;/kbd&gt; rename shortcut

## Screenshots

[![anim1][1]][1]

[1]: 

## Your Setup

- reproduced in Unity Version `2019.1.14f1`, `2019.2.5f1`, `2019.2.6f1`
- MRTK Version v2.0.0

## Target Platform

 - Not relevant as it is a Bug in the Editor regardless which target platform.
</Description>
  </Issue>
  <Issue>
    <IssueID>6090</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>AdamMitchell-ms</FixedById>
        <IssueID>6090</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>PressableButtons UnityUI example does not work with hand ray</Title>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>27/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6090</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6090</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
PressableButtons UnityUI example does not work with hand ray when the scene is launched using examples hub. It may alsonot work when launched without examples hub (did not test).

![mrtk_2 1_pressableui_2](

## Expected Behavior
Should be able to press unityui buttons with hand ray.

## Actual Behavior
Can press buttons near, but not with hand ray.

</Description>
  </Issue>
  <Issue>
    <IssueID>6089</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cannot interact with UnityUI in Examples Hub</Title>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6089</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6089</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When you launch the handinteraction examples scene from examples hub, it's not possible to interact with Unity UI near or far.

![mrtk_2 1_unityUI](


## Expected Behavior
Should be able to interact with UnityUI example.

## Actual Behavior
Cannot interact with UnityUI example

## Steps to reproduce
1. Configure MRTK to launch examples hub, build to device
2. Open HandInteractionExamples scene and interact with the UnityUI
3. You will notice it is broken.

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>6088</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>6088</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>BoundingBox scales about incorrect pivot</Title>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6088</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6088</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6088</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Regression in 2.1 stabilization. When scaling bounding box near or far, some bounding boxes in the hand interaction example scenes scale about the wrong pivot point. This is especially visible when scaling slate.

## Repro
Scale the slate, cheese, or hololens 2 coffee cup to see the issue in HandInteractionExamples scene. 

## Expected Behavior
Bounding box should scale about opposite corner.

## Actual Behavior
Bounding box seems to scale about some point between opposite corner and center.


![mrtk_2 1_boundingbox_2](


## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>6087</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>6087</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add "toggle ray" to toggle features panel</Title>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>30/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6087</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6087</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>1) Add 'toggle ray' to features panel
2) Add toggle pointers example to example hub</Description>
  </Issue>
  <Issue>
    <IssueID>6085</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>2017.3.1 Camera </Title>
    <CreatedDate>26/09/2019</CreatedDate>
    <ClosedDate>06/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6085</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>So, On my Mac(which is on 10.11) ran 2017.3.1 Just fine until I switched to 2018. When i came back to 2017.3.1 my Camera Would no longer Show the Cam Rect or The Camera Sprite. but if i were to use a Canvas, it would show me the Outline of the Cam Rect. is this i bug or just my bad Mac?</Description>
  </Issue>
  <Issue>
    <IssueID>6080</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Code Configurability - Visual Themes</Title>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>02/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6080</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6080</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Visual Themes</Name>
        <IssueID>6080</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>csharp

var themeDefinition = ThemeDefinition.GetDefaultThemeDefinition&lt;ScaleOffsetColorTheme&gt;().Value;
            // themeDefinition.Easing.Enabled = false;
            // Set the offset state property (index = 1) to move on the Pressed state (index = 2)
            themeDefinition.StateProperties[1].Values = new List&lt;ThemePropertyValue&gt;()
            {
                new ThemePropertyValue() { Vector3 = Vector3.zero},
                new ThemePropertyValue() { Vector3 = Vector3.zero},
                new ThemePropertyValue() { Vector3 = new Vector3(0.0f, -0.32f, 0.0f)},
                new ThemePropertyValue() { Vector3 = Vector3.zero},
            };
            // Set the color state property (index = 2) values
            themeDefinition.StateProperties[2].Values = new List&lt;ThemePropertyValue&gt;()
            {
                new ThemePropertyValue() { Color = DefaultColor},
                new ThemePropertyValue() { Color = FocusColor},
                new ThemePropertyValue() { Color = Color.green},
                new ThemePropertyValue() { Color = DisabledColor},
            };

            Theme testTheme = ScriptableObject.CreateInstance&lt;Theme&gt;();
            testTheme.States = interactable.States;
            testTheme.Definitions = new List&lt;ThemeDefinition&gt;() { themeDefinition };

            interactable.Profiles = new List&lt;InteractableProfileItem&gt;()
            {
                new InteractableProfileItem()
                {
                    Themes = new List&lt;Theme&gt;() { testTheme },
                    Target = translateTargetObject.gameObject,
                },
            };
`</Code>
    <Description>## Describe the bug

Similar to #5459 , this bug is to track making Visual Themes more configurable. Right now, Visual Themes are very difficult to set up via code and they are very difficult to modify at runtime on InteractableThemeBase. 

notes:
- Difficult to isolate particular property, just access via known index (see below)
- Not well guarded or imposed balance between number of ThemePropertyValues in a ThemeStateProperty to the actual state objects assigned
- The ThemePropertyValue is a bit overloaded and difficult to keep adding additional types
- Slight weirdness in that ThemeDefinitions are copied into InteractableThemeBase at runtime so in some cases have to reference/modify two different endpoints which is a bit redundant

Related bugs:
- [ ]  
- [ ] 
- [ ] 
- [ ] 

## To reproduce

``
## Expected behavior



## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>6078</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>6078</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Clean up Interactable Enable/Disable Design</Title>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>6078</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6078</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>6078</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The current enable/disable design for Interactable can be improved.  Interactable can be disabled many ways:

- Disabling the gameObject Interactable is attached to 
- Disabling the Interactable script component
- Setting Enabled property to false in Interactable
- Calling SetDisabled(true)

There also exists an IsDisabled property which has the potential to be confusing when there is also an Enabled property.

## Your Setup 

- Unity Version: 2018.4.11f1
- MRTK Version 2.0

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>6077</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>not being able to build my app </Title>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>26/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6077</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Suddenly, when I am going to create a new project, I am not able to build the project. Even when I open an empty project and just changing the settings for HoloLens. The strange thing is that everything is fine with my previous projects and I can change and rebuild them. I do not know what has happened because I haven't changed anything in my projects. I used different versions of unity, but I got the same error for all of them. I would appreciate any help that can guide me in solving the problem.

![error](


</Description>
  </Issue>
  <Issue>
    <IssueID>6076</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6076</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>6076</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>LeapMotion cross platform support</Title>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>20/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Cross Platform</Name>
        <IssueID>6076</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6076</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>6076</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Add code to enable customers who have installed the LeapMotion SDK to compile MRTK integration code to produce an input data provider. This provider will enable applications to acquire hand data from a connected LeapMotion device and leverage hand interaction with MRTK's UX elements.

Note: This may be a code distribution (both unitypackage and nuget) and will require the developer customer to install the Leap Motion SDK and Unity components.</Description>
  </Issue>
  <Issue>
    <IssueID>6070</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK  support hololens1？ but HoloLens1 can not upgrade to 1809</Title>
    <CreatedDate>25/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>6070</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>
I use MRTK make a project  ，it need 18962，but my HoloLens can not up to  version 1809， Now，I can not install packdge into HoloLens1</Description>
  </Issue>
  <Issue>
    <IssueID>6065</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>AdamMitchell-ms</FixedById>
        <IssueID>6065</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>PressableButtonHololens2UnityUI in-editor hit target size is too big</Title>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>30/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6065</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The script that resizes the cube in that button to fit into a rect transform ends up making the hit target very large.

![HitTargetTooBig](
</Description>
  </Issue>
  <Issue>
    <IssueID>6060</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>6060</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>SceneSystem / SceneInfo is brittle when renaming scenes.</Title>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>16/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>6060</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

The SceneInfo struct is being used outside of SceneSystem profiles to store scene data. (Eg `LoadContentScene.cs`)

While this usage is appropriate, the struct currently depends on its property drawer to keep its fields up to date. When a scene name is changed and a SceneInfo field is not viewed in an inspector, stale scene data can cause errors in the SceneSystem.

SceneSystem error messages are also too cryptic for effective troubleshooting. This made detecting the stale data difficult.

## Describe the solution you'd like

SceneInfo structs in ScriptableObjects and Components should be kept up to date by the editor even when they're not being presented in an inspector.

The SceneSystem should do a better job of reporting errors and make actionable suggestions.

## Additional context

#6056</Description>
  </Issue>
  <Issue>
    <IssueID>6058</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>6058</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Some unit tests fail in the build intermittently</Title>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6058</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6058</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>6058</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Microsoft.MixedReality.Toolkit.Tests.BoundingBoxTests.ScaleViaNearInteration
Unhandled log message: '[Assert] Assertion failed'. Use UnityEngine.TestTools.LogAssert.Expect
Microsoft.MixedReality.Toolkit.Tests.&lt;ScaleViaNearInteration&gt;d__5:MoveNext() (at Assets/MixedRealityToolkit.Tests/PlayModeTests/BoundingBoxTests.cs:119)
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)


2. Microsoft.MixedReality.Toolkit.Tests.BaseCursorTests.CursorContextMove

PR #6075


A3CursorContextMove1 (0.350s)
---
Expected: MoveCross
  But was:  None
---
at Microsoft.MixedReality.Toolkit.Tests.BaseCursorTests.VerifyCursorContext (Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor cursor, Microsoft.MixedReality.Toolkit.Input.CursorContextEnum context) [0x0000f] in H:\mrtk.dev\Assets\MixedRealityToolkit.Tests\PlayModeTests\BaseCursorTests.cs:89
at Microsoft.MixedReality.Toolkit.Tests.BaseCursorTests.VerifyCursorContextFromPointers (System.Collections.Generic.IEnumerable`1[T] pointers, Microsoft.MixedReality.Toolkit.Input.CursorContextEnum context) [0x00024] in H:\mrtk.dev\Assets\MixedRealityToolkit.Tests\PlayModeTests\BaseCursorTests.cs:81
at Microsoft.MixedReality.Toolkit.Tests.BaseCursorTests+&lt;CursorContextMove&gt;d__10.MoveNext () [0x00309] in H:\mrtk.dev\Assets\MixedRealityToolkit.Tests\PlayModeTests\BaseCursorTests.cs:246
at UnityEngine.TestTools.EnumerableTestMethodCommand+&lt;ExecuteEnumerableAndRecordExceptions&gt;c__Iterator1.MoveNext () [0x0002f] in C:\buildslave\unity\build\Extensions\TestRunner\UnityEngine.TestRunner\NUnitExtensions\Commands\EnumerableTestMethodCommand.cs:58



3. https://github.com/microsoft/MixedRealityToolkit-Unity/pull/5949/checks?check_run_id=233372911

PR #6075


Microsoft.MixedReality.Toolkit.Tests.InteractableTests.TestInputActionMenuInput
Unhandled log message: '[Exception] AssertionException:   Transform target object was not translated by action.
  Expected: True
  But was:  False
'. Use UnityEngine.TestTools.LogAssert.Expect


Microsoft.MixedReality.Toolkit.Tests.InteractableTests.TestInputActionSelectInput
Unhandled log message: '[Error] No EventSystem detected. UI events will not be propagated to Unity UI.'. Use UnityEngine.TestTools.LogAssert.Expect


4. https://github.com/microsoft/MixedRealityToolkit-Unity/pull/6069/checks?check_run_id=236048579

Not failing in latest stabilization. 100/100 tests passed.


Microsoft.MixedReality.Toolkit.Tests.PointerBehaviorTests.TestGrab
Incorrect state for Left Line Pointer.IsInteractionEnabled
  Expected: False
  But was:  True


5. `InteractableTests.TestVoiceInputOnPrefab`

PR #6082


TestVoiceInputOnPrefab (0.397s)
---
Transform target object was not translated by action.
  Expected: True
  But was:  False
---
at Microsoft.MixedReality.Toolkit.Tests.InteractableTests+&lt;CheckButtonTranslation&gt;d__21.MoveNext () [0x0008b] in H:\mrtk.dev\Assets\MixedRealityToolkit.Tests\PlayModeTests\InteractableTests.cs:560
at UnityEngine.TestTools.EnumerableTestMethodCommand+&lt;ExecuteEnumerableAndRecordExceptions&gt;c__Iterator1.MoveNext () [0x0002f] in C:\buildslave\unity\build\Extensions\TestRunner\UnityEngine.TestRunner\NUnitExtensions\Commands\EnumerableTestMethodCommand.cs:58
---
No main camera found. The Mixed Reality Toolkit requires at least one camera in the scene. One will be generated now.


6. ManipulationHandlerOneHandMoveFar

PR #6084 


A13ManipulationHandlerOneHandMoveFar0 (9.220s)
---
Unhandled log message: '[Assert] Grab point on object changed during rotation, expected (-0.780, 0.732, 4.830), was (-0.327, 0.751, 5.057)'. Use UnityEngine.TestTools.LogAssert.Expect
---
Microsoft.MixedReality.Toolkit.Tests.TestUtilities:AssertAboutEqual(Vector3, Vector3, String, Single) (at Assets/MixedRealityToolkit.Tests/TestUtilities.cs:195)
Microsoft.MixedReality.Toolkit.Tests.&lt;ManipulationHandlerOneHandMoveFar&gt;d__8:MoveNext() (at Assets/MixedRealityToolkit.Tests/PlayModeTests/ManipulationHandlerTests.cs:477)
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
---
`</Code>
    <Description>I've had a few PR builds fail for unit tests which were unaffected by my changes.  They appear to be intermittent failures.  Creating this issue to track.  I suspect that the individual tests may not be to blame, but rather some environmental issue.  Maybe some other test doesn't clean things up properly or something?  Not sure of the root cause.

Builds that failed
1. 

PR: #6074

``
</Description>
  </Issue>
  <Issue>
    <IssueID>6057</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>6057</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>HandMenuExample scene - Menu toggle state is broken</Title>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6057</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6057</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
HandMenuExample scene - Menu toggle state is broken. All four buttons are highlighted. Only the selected button should be highlighted. Proper theme profile is missing in the Interactable of the buttons.

![2019-09-24 08_58_38-Unity 2018 4 6f1 Personal - HandMenuExample unity - MRTK-Public-Microsoft - Univ](

![2019-09-24 08_58_49-Unity 2018 4 6f1 Personal - HandMenuExample unity - MRTK-Public-Microsoft - Univ](

## To reproduce
1. Open HandMenuExamples scene
2. Run

## Expected behavior
Only the selected button should be highlighted. 

## Your Setup (please complete the following information)
- Unity Version 2018.4.6f1
- MRTK Version prerelease 2.1.0

</Description>
  </Issue>
  <Issue>
    <IssueID>6056</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>6056</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>6056</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>HandMenuExamples scene file cannot be loaded by Scene System</Title>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6056</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6056</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
From the Hub main menu, when I load one of the example scene HandMenuExamples, it gives me the error message below. 

**Can't load invalid scene HandBasedMenuExample**
UnityEngine.Debug:LogError(Object)
Microsoft.MixedReality.Toolkit.SceneSystem.&lt;LoadScenesInternal&gt;d__112:MoveNext() (at Assets/MixedRealityToolkit.Services/SceneSystem/MixedRealitySceneSystem.cs:396)
System.Runtime.CompilerServices.AsyncTaskMethodBuilder:Start(&lt;LoadScenesInternal&gt;d__112&amp;)
Microsoft.MixedReality.Toolkit.SceneSystem.MixedRealitySceneSystem:LoadScenesInternal(IEnumerable`1, SceneType, SceneActivationToken, Single, Single, Boolean)
Microsoft.MixedReality.Toolkit.SceneSystem.&lt;LoadContent&gt;d__107:MoveNext() (at Assets/MixedRealityToolkit.Services/SceneSystem/MixedRealitySceneSystem.cs:270)
System.Runtime.CompilerServices.AsyncTaskMethodBuilder:SetResult()
Microsoft.MixedReality.Toolkit.SceneSystem.&lt;UnloadScenesInternal&gt;d__113:MoveNext() (at Assets/MixedRealityToolkit.Services/SceneSystem/MixedRealitySceneSystem.cs:613)
UnityEngine.UnitySynchronizationContext:ExecuteTasks()

## To reproduce
1. Checkout 2.1.0 prerelease branch
2. Open MRTKExamplesHub
3. Run
4. Select Hand Menu Examples 

## Expected behavior
Scene loaded without errors</Description>
  </Issue>
  <Issue>
    <IssueID>6055</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK V2 - Spectator View: Can't see changed Dynamic Texture</Title>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I'm using the nativ render plugin to display webcontant on a texture and not overload the main thread. Unity side passes a texture into the plugin and the code changes the pixels of it each frame. This is done by using [Texture.GetNativeTexturePtr](

``
I set up the whole specator view stuff according to the guide from Microsoft. I can do stuff with my HoloLens and a second person can see my interaction via an android device. 
## Expected Behavior
Spectator should see webcontent on the texture.
## Actual Behavior
The problem is that the spectator can't see my texture/webcontent. Does sb know how to tell unity that the texture has been changed and needs to be updated? My knowledge is very limited in this area. As far as I can understand, the problem seems to be the spectator and the spectator does not provide a way to fix the problem.
## Unity Editor Version
Unity 2019.2.0f1
Visual Studio 2017
Native Plugin: [Unity]( [Bitbucket]( [Github](
## Mixed Reality Toolkit Release Version
[MRTK 2.0.0](</Description>
  </Issue>
  <Issue>
    <IssueID>6054</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MixedRealityInputSimulationProfile serialization problem</Title>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>07/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6054</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The DefaultMixedRealityInputSimulationProfile is part of the the simulation data provider in the MRKT input profile. But at the same time it's AMSDEF is Editor and UWP only, causing a deserialization problem on all other platforms.
Since it's the only service (I think) that's only being used in Editor and the fact that it also compiles for UWP makes me believe that either this could very well be just compiled for all platforms and we're done with it, or the profile needs to be extracted out, which I tried and stopped after the 3rd file.

## To reproduce

Steps to reproduce the behavior:

1. Build MRKT with SimulationProfile for e.g. Standalone.

## Expected behavior

no serialization problem

## Your Setup (please complete the following information)

- Unity Version 2018.4.6f1
- MRTK Version mrtk_development

## Target Platform (please complete the following information)

- Standalone
</Description>
  </Issue>
  <Issue>
    <IssueID>6053</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SeeItSayItLabel warning</Title>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>24/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6053</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Something happened that most if not all prefabs using an Interactable script have a problem with their SeeItSayItLabel Theme. Using a button throws this for its initialization:

`Could not use HolographicButtonSeeItSayItLabel in Interactable on PressableButtonHoloLens2 because Theme's States does not match FocusPressTouchGrabStates`

My question for this:
If the Theme States have to match, why not removing the Theme States selector and have it show and use the Interactable General States profile as readonly, maybe not even show it?

## To reproduce

Steps to reproduce the behavior:

1. Create an empty scene with MRKT in it
2. Add for example a PressableButtonHoloLens2
3. run and watch the console

## Expected behavior

no warning, or updated themes in prefabs

## Your Setup (please complete the following information)

- Unity Version 2018.4.6f1
- MRTK Version mrtk_development

## Target Platform (please complete the following information)

- Editor
</Description>
  </Issue>
  <Issue>
    <IssueID>6052</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Maximum number of 64 colliders found in PokePointer overlap query. </Title>
    <CreatedDate>24/09/2019</CreatedDate>
    <ClosedDate>02/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>6052</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
I am trying to build a color selection list in my personal project, with 48 * PressableButtonHoloLens2 + GridObjectCollection. When I run and hover with the simulated fingertip, the editor gives me these warning message: **'Maximum number of 64 colliders found in PokePointer overlap query. Consider increasing the query buffer size in the pointer profile.'**
![TypeInSpace_ColorList](

**Q1**: Is this because too many buttons are too close to each other? Or just the number of the buttons with collider is over 64? The message says 'Consider increasing the query buffer size in the pointer profile' 

**Q2**: Where can I increase the buffer size? I don't see any 'Buffer size' field in the pointer profile.
![2019-09-23 23_06_35-Window](

**Q3**: Would it decrease performance? (increasing the buffer size) 

## Warning message

Maximum number of 64 colliders found in PokePointer overlap query. Consider increasing the query buffer size in the pointer profile.
UnityEngine.Debug:LogWarning(Object)
Microsoft.MixedReality.Toolkit.Input.PokePointer:FindClosestTouchableForLayerMask(LayerMask, BaseNearInteractionTouchable&amp;, Single&amp;, Vector3&amp;) (at Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Pointers/PokePointer.cs:169)
Microsoft.MixedReality.Toolkit.Input.PokePointer:OnPreSceneQuery() (at Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Pointers/PokePointer.cs:127)
Microsoft.MixedReality.Toolkit.Input.FocusProvider:UpdatePointer(PointerData) (at Assets/MixedRealityToolkit.Services/InputSystem/FocusProvider.cs:878)
Microsoft.MixedReality.Toolkit.Input.FocusProvider:UpdatePointers() (at Assets/MixedRealityToolkit.Services/InputSystem/FocusProvider.cs:841)
Microsoft.MixedReality.Toolkit.Input.FocusProvider:Update() (at Assets/MixedRealityToolkit.Services/InputSystem/FocusProvider.cs:518)
Microsoft.MixedReality.Toolkit.&lt;&gt;c:&lt;UpdateAllServices&gt;b__60_0(IMixedRealityService) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:880)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:ExecuteOnAllServices(IEnumerable`1, Action`1) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:969)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:ExecuteOnAllServicesInOrder(Action`1) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:950)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:UpdateAllServices() (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:880)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:Update() (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:580)

## To reproduce
1. Create an empty game object
2. Put 48(or more) x PressableButtonHoloLens2 prefabs under it
3. Assign GridObjectCollection to the parent
4. Update layout (cell width x height = 0.032)
5. Run and hover with simulated hand.
![2019-09-23 22_55_35-Window](


## Expected behavior
No warning messages

## Your Setup (please complete the following information)
- Unity Version [e.g. 2018.4.6f1]
- MRTK Version [e.g. v2.0.0]
</Description>
  </Issue>
  <Issue>
    <IssueID>6045</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>6045</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Finger Cursor is Offset from the Interaction Location</Title>
    <CreatedDate>23/09/2019</CreatedDate>
    <ClosedDate>09/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6045</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>6045</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>DDE Partner</Name>
        <IssueID>6045</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Cursors</Name>
        <IssueID>6045</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The finger cursor within the MRTK is offset from the interaction location (and Shell location) when a finger is roughly perpendicular to a interactable surface normal.

This was found by one of our partners when trying to interact with narrow UI.

## To reproduce

Steps to reproduce the behavior:

1. Open the PressableButtonExample scene.
2. Make sure the hand is roughly perpendicular to the surface normal of a button.
3. Move the hand towards a button to press it.
3. Notice the cursor is located above the finger tip rather than near the finger pad.
4. Reproduces in Editor and on HoloLens 2.

## Expected behavior

The finger cursor and proximity light match the interaction location.

## Screenshots

![image](


## Your Setup (please complete the following information)

- mrtk_development

## Target Platform (please complete the following information)

- Editor
- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>6044</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6044</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>SolverHandler: Improper use of ?.</Title>
    <CreatedDate>23/09/2019</CreatedDate>
    <ClosedDate>30/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6044</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6044</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Customer Feedback</Name>
        <IssueID>6044</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6044</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

From slack:
Eric Provencher 9:46 AM
I found another dangerous null-conditional operator on a unity object in the MRTK

![image](

This one is in the SolverHandler.cs class
Eric Provencher 9:52 AM
It's ambiguous from the docs when describing gameobjects, but for monobehaviors, it's clear that ?. is not defined behavior, as it skips the overriden == check
Still, GameObjects have overriden == checks, so it remains unsafe to rely on ?

</Description>
  </Issue>
  <Issue>
    <IssueID>6042</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Changing ActiveProfile: Collection changed during LateUpdate</Title>
    <CreatedDate>23/09/2019</CreatedDate>
    <ClosedDate>23/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6042</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>6042</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Services</Name>
        <IssueID>6042</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Create a new scene and configure for the MixedRealityToolkit
Add a button to the scene and apply / configure the included script
Enter play mode and expand the MixedRealityPlayspace object in the hierarchy
Click the button to toggle between profiles


## To reproduce

1. Create a new scene and configure for the MixedRealityToolkit
2. Add a button to the scene and apply / configure the included script
3. Enter play mode and expand the MixedRealityPlayspace object in the hierarchy
4. Click the button to toggle between profiles


## Expected behavior

The collection modification either does not occur, or the enumeration is aborted during [Late]Update when it is modified.

## Your Setup (please complete the following information)

- Unity Version 2018.4.9f1
- MRTK Version 2.0.0 + fixes that will be in 2.1.0

## SwapActiveProfile.cs

c#
using Microsoft.MixedReality.Toolkit;
using UnityEngine;

public class SwapActiveProfile : MonoBehaviour
{
    public MixedRealityToolkitConfigurationProfile profile1;
    public MixedRealityToolkitConfigurationProfile profile2;

    void Start()
    { }

    public void Swap()
    {
        MixedRealityToolkit.Instance.ActiveProfile = (MixedRealityToolkit.Instance.ActiveProfile == profile1) ? profile2 : profile1;
    }
}
`</Code>
    <Description>## Describe the bug

When swapping the MixedRealityToolkit.ActiveProfile, the following InvalidOperationException (collection changed) occurs during LateUpdate.

``
</Description>
  </Issue>
  <Issue>
    <IssueID>6039</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>6039</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Interactable does not register itself when set to IsGlobal at runtime</Title>
    <CreatedDate>23/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>6039</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6039</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>6039</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Interactable does not dynamically update itself in code configuration for IsGlobal (and likely many other related public interface properties).

If I change the IsGlobal property on interactable, then it should register/deregister itself appropriately.

## To reproduce

Look at InteractableTests.TestGlobalSelectInput(). The Test itself has to manually register the interactable globally even when setting interactable.isGlobal = true.

## Expected behavior

All public property/interfaces on Interactable should do the correct thing when called. Users should not have to have knowledge on how to configure it correctly

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version - latest MRTK_Dev

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>6033</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InputSimulationIndicators causes deserialization error</Title>
    <CreatedDate>23/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6033</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When running a build on UWP with development enabled, a serialization error pops up

## To reproduce

Steps to reproduce the behavior:

1. Build MRTK scene with development mode

## Expected behavior

No serialization problem

## Screenshots

![image](

## Your Setup (please complete the following information)

- Unity Version 2018.4.6f1
- MRTK Version mrtk_development

## Target Platform (please complete the following information)

- WMR immersive
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>6032</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Missing documentation about handling controller visualizers</Title>
    <CreatedDate>23/09/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>6032</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6032</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
There is no documentation about controller visualizers.
The documentation for creating input data providers does not mention this, but not mentioning it causes an issue with namespaces when someone still tries to create them.
The problem is that those must not be added to a platform specific ASMDEF but be available for all platforms.
The only way of not doing this is adding the script, if necessary, at runtime. Other than that, deserializing assigned prefabs in the Input Controller section would cause mismatch errors.

## Feature Area
Documentation/Input/CreateDataProvider.md does not provide information for visualizers

## Existing Doc Link
</Description>
  </Issue>
  <Issue>
    <IssueID>6025</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>PressableButton puts the front plate in the wrong direction if the button is rotated</Title>
    <CreatedDate>20/09/2019</CreatedDate>
    <ClosedDate>24/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6025</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

If you rotate a UnityUI based PressableButton after it is instantiated, then try to poke it, the front plate gets put in the wrong spot.

## To reproduce

Steps to reproduce the behavior:

1. Go to HandInteractionExamples.unity
2. Hit Play
3. Rotate the canvas containing the unity ui pressable buttons
4. Poke the buttons
5. See error.

## Expected behavior

Should put the front plate in front.</Description>
  </Issue>
  <Issue>
    <IssueID>6024</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>PressableButton doesn't work correctly if you disable/enable it before the first frame</Title>
    <CreatedDate>20/09/2019</CreatedDate>
    <ClosedDate>24/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6024</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

If you disable, then re-enable a PressableButton before Start() is called, then the front plate and other flat elements are flattened into a plane instead of where they should be.

## To reproduce

Steps to reproduce the behavior:

1. Instantiate a PressableButton prefab
2. Disable the button or some ancestor during the same frame (before Start() executes)
3. Enable the button
4. See error

## Expected behavior

Should be robust to having OnDisable() called before any call to Start().

## Screenshots

![Inversion (1)](</Description>
  </Issue>
  <Issue>
    <IssueID>6023</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>6023</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>2D Simulated hand UI is confusing and in the way</Title>
    <CreatedDate>20/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6023</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6023</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6023</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

It is unclear what these buttons are suppose to do:

![Screenshot_2019-09-20_09-58-34-AM_8b9ecada433fbea4299a74f9e566e33a](

I thought they were used to rotate the hand, after asking I found out they reset the hand to the default orientation.

Additionally, the hands are in the center of the screen and are distracting. It would be nice if we could move them to the sides:
![image](


## To reproduce

Steps to reproduce the behavior:

1. Open the "Hand Interaction Example' scene
2. Play the scene

## Expected behavior

Maybe we should change the icon from arrows to a reset icon? Or, make the arrows rotate the hand?

## Your Setup (please complete the following information)

- mrtk_development

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>6023</IssueID>
        <PullRequestID>6040</PullRequestID>
        <Title>Uses/anborod/nuget documentation</Title>
        <Description>This change contains the documentation for consuming MRTK as a NuGet package.</Description>
        <CreatedDate>23/09/2019</CreatedDate>
        <ClosedDate>24/09/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Package Management - NuGet</Name>
            <IssueID>6023</IssueID>
            <PullRequestID>6040</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>andreiborodin</FixedById>
            <PullRequestID>6040</PullRequestID>
            <IssueID>6023</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>6023</IssueID>
        <PullRequestID>6097</PullRequestID>
        <Title>Stops ToolTip inspectors from continuously refreshing</Title>
        <Description>## Overview
Replaces SetDirty calls in ToolTip inspectors with RequireConstantRepaint.

## Changes
- Fixes: #6096

## Verification
&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>26/09/2019</CreatedDate>
        <ClosedDate>26/09/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Bug</Name>
            <IssueID>6023</IssueID>
            <PullRequestID>6097</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Editor</Name>
            <IssueID>6023</IssueID>
            <PullRequestID>6097</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>UX Controls</Name>
            <IssueID>6023</IssueID>
            <PullRequestID>6097</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>6023</IssueID>
        <PullRequestID>6029</PullRequestID>
        <Title>Updated default simulation mouse rotation speed for improved usability</Title>
        <Description>## Overview
Updated default simulation mouse rotation speed for improved usability.
Previous value: 6
Update: 30

*Updated mouseHandRotationSpeed: 30. Other lines are automatically updated.

## Changes
- Fixes: #6022

![MRTK_InputSimulationHandRotation](
</Description>
        <CreatedDate>20/09/2019</CreatedDate>
        <ClosedDate>27/09/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Input Simulation</Name>
            <IssueID>6023</IssueID>
            <PullRequestID>6029</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>cre8ivepark</FixedById>
            <PullRequestID>6029</PullRequestID>
            <IssueID>6023</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>6023</IssueID>
        <PullRequestID>6195</PullRequestID>
        <Title>Fix toggle buttons and other multi-dimension interactable themes </Title>
        <Description>## Overview
Prior to #6104 Interactable would create all themes for all dimensions at startup, and then just select the appropriate list for the current dimension.

#6104  accidentally re-wrote that to recreate the list of current themes every time the dimension changed. When a theme is created and inits, it looks at the current offset/position/rotation etc as the starting position from which to base offset. In case of #6178 and #6187 the buttons had not reset to their original position before the new theme is created, causing new themes to be based not on the original 'resting' transform, but on some transform in middle of animation. This caused things like toggle buttons to move forward steadily as toggle was triggered.

Big thank you to @ritijain and @gilbdev for finding these issues!


## Changes
- Fixes: #6178
- Fix this by reverting to old behavior -- creating list of all themes per dimension whenever interactable is created, or when profiles change. 
- Add test to catch this regression in future, thank you @cdiaz-ms for helping write the test.

## Verification
Manually verified toggles behave correctly
Verified that test did not pass before changes, and that the test passes after changes.

&gt; This optional section is a place where you can detail the specific type of verification 
&gt; you want from reviewers. For example, if you want reviewers to checkout the PR locally
&gt; and validate the functionality of specific scenarios, provide instructions
&gt; on the specific scenarios and what you want verified.
&gt;
&gt; If there are specific areas of concern or question feel free to highlight them here so
&gt; that reviewers can watch out for those issues.
&gt;
&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>03/10/2019</CreatedDate>
        <ClosedDate>03/10/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Release Blocker</Name>
            <IssueID>6023</IssueID>
            <PullRequestID>6195</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>6023</IssueID>
        <PullRequestID>6104</PullRequestID>
        <Title>Interactable interface fixes</Title>
        <Description>## Overview
This change involves fixing up the Interactable class to be more robust and fix some broken interface design. The goal of this change is to ensure things won't break when a user configures Interactable. This PR does not add new functionality or change design with the exception of some inspector changes. Furthermore, there are multiple functions designated as deprecated.

- Update to use CoreServices.InputSystem
- Slimmed state tracking to just properties wrappers instead of StateManager and variables that can get out of sync, and made properties virtual for overriding
- Simplified Dimension logic and slimmed down guards to appropriate areas
- Slimmed down IsGlobal into guarded get/set property 
- Slimmed down VoiceRequiresFocus into guarded get/set property
- SetupStates now reset all states appropriately so not out of sync
- Added SelectionMode property for easily querying current button mode
- Interactable inspector disabled entirely while in play mode (short term fix for bug XXXX)
- IsEnabled updated to reset base input tracking states when disabled
- Update documentation and better comments
- Added tests to get better coverage on Interactable

## Changes
- Fixes: #5958 , #6039 , #6078 

- Future Issues to address: 
#6100, #6101, #6103, #6105 

## Verification
All tests pass
HandInteractionExamples and InteractablesExample scene run as expected
&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>26/09/2019</CreatedDate>
        <ClosedDate>01/10/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Release Blocker</Name>
            <IssueID>6023</IssueID>
            <PullRequestID>6104</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>UX Controls - Interactable</Name>
            <IssueID>6023</IssueID>
            <PullRequestID>6104</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>Troy-Ferrell</FixedById>
            <PullRequestID>6104</PullRequestID>
            <IssueID>6023</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>6022</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>6022</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Input Simulation - Hand rotation speed is too slow</Title>
    <CreatedDate>20/09/2019</CreatedDate>
    <ClosedDate>27/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6022</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>6022</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>6022</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Thanks for amazing input simulation update! One suggestion: Could we increase the amount of the rotation on CTRL+Mouse move?
Currently, I have to move the mouse a lot to test the hand menu. (to make the palm face me)
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>6022</IssueID>
        <PullRequestID>6029</PullRequestID>
        <Title>Updated default simulation mouse rotation speed for improved usability</Title>
        <Description>## Overview
Updated default simulation mouse rotation speed for improved usability.
Previous value: 6
Update: 30

*Updated mouseHandRotationSpeed: 30. Other lines are automatically updated.

## Changes
- Fixes: #6022

![MRTK_InputSimulationHandRotation](
</Description>
        <CreatedDate>20/09/2019</CreatedDate>
        <ClosedDate>27/09/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Input Simulation</Name>
            <IssueID>6022</IssueID>
            <PullRequestID>6029</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>cre8ivepark</FixedById>
            <PullRequestID>6029</PullRequestID>
            <IssueID>6022</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>6020</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ProximityLight pulse can sometimes get stuck mid-pulse when a button is pressed rapidly</Title>
    <CreatedDate>20/09/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6020</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6020</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

If you press a pressable button rapidly, the proximity light will get stuck mid-pulse and then stop pulsing on subsequent presses.

![ProximityLightPulseBug](

## To reproduce

Steps to reproduce the behavior:
1. Press on a pressable button twice in a row rapidly.  Not sure of exact timing.

## Other

I initially thought this was caused if ProximityLight.Pulse() was called after PulseRoutine() [set pulseTime to 0]( but before it [set pulseFade to 0](  However when I added an extra check in Pulse() to reject a new pulse if pulseFade was not 0, it did not resolve the issue.  So I'm not quite sure what's going on.
</Description>
  </Issue>
  <Issue>
    <IssueID>6018</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>6018</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>documentation vague on using spatial awareness to access surfacetypes(wall, floor, ceiling etc)</Title>
    <CreatedDate>20/09/2019</CreatedDate>
    <ClosedDate>14/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6018</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6018</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Documentation about the subsystem which separates the walls and floors are vague. Older versions of the toolkit had at least example to understand more about surface types. Please elaborate about querying and enumeration with respect to walls/floors fro spatial data.


I am working on a simple project and I want to put a material only on the walls. Spacial awareness systems helps giving wireframe or occulution to entire mapped mesh (layer 31). is there a way to have walls alone in a different layer? for organisation. Thank you.


##  Setup 
- Unity Version [2019.1.7f1]
- MRTK Version [v2.0]

## Target Platform 
- HoloLens
- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>6015</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity 2019.2.5f1 upgrade error message</Title>
    <CreatedDate>20/09/2019</CreatedDate>
    <ClosedDate>23/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6015</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Upgrading v2.1rc from the development branch to 2019.2.5f1 produces the error below.

## To reproduce
1. download fresh copy of development branch
2. Open in unity 2019.2.5f1
3. See error

-_Additional Steps Taken_-
4. Updated all packages in package manager
5. same error persists

## Expected behavior
No error, allowing the remaining code to compile.

## Error Message

Assets\MixedRealityToolkit\Utilities\BuildAndDeploy\UwpAppxBuildTools.cs(301,41): error CS0117: 'EditorUserBuildSettings' does not contain a definition for 'wsaGenerateReferenceProjects'


## Your Setup (please complete the following information)

- Unity Version [e.g. 2019.2.5f1]
- MRTK development [v2.1rc]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Cycling through different build platforms made no difference.
</Description>
  </Issue>
  <Issue>
    <IssueID>6013</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>6013</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Enumerating and Accessing Spatial Mesh</Title>
    <CreatedDate>20/09/2019</CreatedDate>
    <ClosedDate>02/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>6013</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6013</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>6013</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>6013</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I have been having trouble trying to understand how to use the Spatial Awareness user guide to get access to the spatial meshes to use in a multi-user app. I cannot find a way to serialize the meshes to be able to send them to a remote device as was previously possible in the older toolkit. I have tried to add the meshes to a list and used the old simplemeshserializer but that did not seem to work at all. Any help would be greatly appreciated in trying to understand the current capabilities in current MRTK and how the same functionality can be replicated. </Description>
  </Issue>
  <Issue>
    <IssueID>6011</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MenelvagorMilsom</FixedById>
        <IssueID>6011</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[ManipulationHandler][DefaultControllerPointer] Nullref occurs at times when interacting with a ManipulationHandler via a DefaultControllerPointer</Title>
    <CreatedDate>20/09/2019</CreatedDate>
    <ClosedDate>21/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6011</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>6011</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>6011</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Now</Name>
        <IssueID>6011</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When interacting (via DefaultControllerPointer) with an object using the ManipulationHandler, it sometimes causes the following errors to hit:

``
## To reproduce

This sometimes results in the app losing all user input capabilities; but more often it causes a significant amount of performance degradation. 

Steps to reproduce the behavior:

There's no consistent repro step in our application; it seems to be related to turning pointers on and off based on what utilities we are activating/deactivating, and then triggering far field interactions with our manipulation handler. 

## Expected behavior

When switching between active pointers (using a pointer mediator), it's 

## Your Setup (please complete the following information)

- Unity Version 2018.4.8f1
- MRTK Version 2.1.0-20190918.5

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2</Description>
  </Issue>
  <Issue>
    <IssueID>6008</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Need Shell-parity Lost Tracking asset &amp; logic</Title>
    <CreatedDate>19/09/2019</CreatedDate>
    <ClosedDate>29/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6008</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Currently, MRTK does not have lost tracking asset.
Need to add a shell-parity Lost Tracking asset &amp; logic

</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>6007</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Missing function in Interactable.cs (  T AddReceiver&lt;T&gt;() where T : ReceiverBase, new ()  )</Title>
    <CreatedDate>19/09/2019</CreatedDate>
    <ClosedDate>02/10/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
At runtime I create dynamically buttons to going deeper in a hierarchy. I have it working now with the default click event from the Interactable.cs For touch events I saw in the documentation examples to add extra receivers at runtime with the Interactable.AddReceiver&lt;T&gt;() function. 

I look in Interactable.cs but cannot find the function.

## Expected Behavior
A **T AddReceiver&lt;T&gt;() where T : ReceiverBase, new()** function as described in the documentation and Api documentation in Interactable.cs.





## Actual Behavior
An Interactable.cs without a **T AddReceiver&lt;T&gt;() where T : ReceiverBase, new()** as described in the documentation.

## Steps to reproduce
_(Links to sample github project preferred)_
Search in the MRTK for Interactable.cs
Look in the file and you cannot find: **T AddReceiver&lt;T&gt;() where T : ReceiverBase, new()**

## Unity Editor Version
Unity 2019.2.5f1
## Mixed Reality Toolkit Release Version
MRTK 2.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>6005</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>UWP Native Keyboard flicker jumps around</Title>
    <CreatedDate>19/09/2019</CreatedDate>
    <ClosedDate>18/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6005</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>External</Name>
        <IssueID>6005</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Keyboard</Name>
        <IssueID>6005</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6005</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

@julenka provided a fix that made the NativeKeyboard work for HL1 and UWP, thanks for that. It's still broken thought.

I attached a video that shows that the keyboard, besides performing a slight stretch-glitch when opened, jumps around like crazy when looking down at a certain angle.

I would have reported this in Microsofts Feedback HUB, but I never received any answer on any of my reports there... @SarahSexton was so kind to try fixing the discrepancy between the HUBs user and Microsoft staff view as well as getting anyone to react to the tasks, but to no avail.

[Mixed Reality Portal 2019-09-19 15-32-45_Trim.zip](


## To reproduce

Steps to reproduce the behavior:
- Simply open the Keyboard wearing a UWP headset and slowly look down. At some point it flickers around like no tomorrow

## Expected behavior

Keep still... just work dammit

## Your Setup (please complete the following information)

- Unity Version 2018.4.6f1
- MRTK Version [e.g. v2.0]

## Target Platform (please complete the following information)

- WMR immersive
</Description>
  </Issue>
  <Issue>
    <IssueID>6003</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>6003</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>HandTriangle shader warning</Title>
    <CreatedDate>19/09/2019</CreatedDate>
    <ClosedDate>14/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6003</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

A warning:
`Shader warning in 'Mixed Reality Toolkit/HandTriangles': array reference cannot be used as an l-value; not natively addressable, forcing loop to unroll at line 697 (on d3d11)`

## To reproduce

I don't know

## Expected behavior

No warning

## Your Setup (please complete the following information)

- Unity Version 2018.4.6f1
- MRTK Version mrtk_development

## Target Platform (please complete the following information)

- HoloLens
</Description>
  </Issue>
  <Issue>
    <IssueID>6000</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>6000</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Hold Gesture will impact on Xbox Controller Trigger input</Title>
    <CreatedDate>19/09/2019</CreatedDate>
    <ClosedDate>09/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>6000</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>6000</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Description

The developer found that the action of Xbox One controller "Trigger L/R" would be also executed when he make Hold gesture in device.

**This feedback is from strategic customer of Japan**

## To reproduce

Steps to reproduce the behavior:
1.	Create new project and setup MRTKv2 (Import Foundation &amp; Examples) in Unity
2.	Unzip the attachment and Import "Custom.Controller.unitypackage" in Unity
3.	Open the scene “ControllerExampleScene” which is in the “Custom.Controller” directory
4.	Check the profile, ensure that two default profiles have been replaced
- DefaultMixedRealityInputActionsProfile -&gt; New MixedRealityInputActionsProfile
- DefaultMixedRealityControllerMappingProfile -&gt; New MixedRealityControllerMappingProfile
5.	Check the game object “Cube” in the scene, ensure that "ObjectController.cs" script has been attached
6.	Deploy to device (HoloLens 1 or HoloLens 2)
7.  Connect Xbox Controller with HoloLens via bluetooth and launch the app. Press the “RT” or “LT” to rotate the Cube. **If user make Hold Gesture, the Cube can also be rotated.**

## Setup Environment
- Unity 2019.2.2f1
- MRTK v2.0
- [Custom.Controller.unitypackage.zip](

## Target Platform 
- HoloLens
- HoloLens 2

## Additional context
I don't know whether “IMixedRealityInputHander” would replace the Controller’s Triger data with Hold Gesture’s data.
</Description>
  </Issue>
  <Issue>
    <IssueID>5998</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>ritijain</FixedById>
        <IssueID>5998</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Demonstrate how Interactable can be used with Unity UI</Title>
    <CreatedDate>18/09/2019</CreatedDate>
    <ClosedDate>18/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>5998</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>5998</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>5998</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UnityUI</Name>
        <IssueID>5998</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Unity UI Button's don't provide a good funnel for determining button state logic and expose very limited states for building great MR experiences. A lot of folks end up creating their own variations of "Unity UI Interactable" or "Unity UI Selectable" for greater flexibility and end up doing their own state logic . Adding an example based on Unity UI will help demonstrate that interactable system can be leveraged by unity ui as well, and should help with more adoption of the Interactable system.


Demonstrate by adding a the following constructs based on Unity UI + Interactable:

1. Simple button
2. Toggle Button
3. Radial Button
4. Checkbox Buttons


</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>5998</IssueID>
        <PullRequestID>5967</PullRequestID>
        <Title>Interactable configuration/documentation/test changes</Title>
        <Description>## Overview
This is a culmination of multiple PRs and merging the feature branch into MRTK_Dev:
- Related PRs: #5857 , #5889 , #5898 , #5925 , #5960 

There are a lot of fixes in here and I would reference each PR for details but the important notes for this PR is the review of breaking changes and validation steps.

## Upgraded Interactable and Visual Themes
Interactable has been refactored significantly. We took great care to not break anything, but it's a good idea before upgrading to 2.1 to back up your existing project. 

### Change Highlights:
* The Themes functionality with Interactable has been extracted into it's own feature called Visual Themes. 
* The Visual Themes code has been refactored to be more robust and simplified. This involves some class name changes and some property changes. 
* Themes can now target specific shader properties explicitly using the new `ThemeStateProperty.TargetShader` and `ThemeStateProperty.ShaderPropertyName` variables.
* Better documentation on how to create Interactables and Themes dynamically via code

**1) If you used default Theme scriptableobjects or created Theme assets using the default Theme types (like InteractableColorTheme):**

Everything should work as-is. To force your assets to update though, you can select your assets or scene/prefab items and view them in the inspector. Note: Unity only writes inspector changes to disk once the scene is saved. After doing this, you should be able to see the serialized diffs in your source control tracking.

**2) If you defined Events Receivers for your Interactables in scenes/prefabs:**

Everything should work as-is. To force your assets to update properly though, you can select and view the Events (foldout must be opened) to force the asset update. Note: Unity only writes inspector changes to disk once the scene is saved. 

**3) If you built a custom theme class extending InteractableThemeBase:**

The names of many classes have changed. See list below for full information. Three new properties should be implemented by your class extending `InteractableThemeBase`. 

`public override bool IsEasingSupported =&gt; true;`
Set to true if your theme supports easing between values when state changes

`public override bool AreShadersSupported =&gt; false;`
Set to true if your theme supports shader property targeting

`public override ThemeDefinition GetDefaultThemeDefinition()`
This method returns a default configuration object for your theme. Include properties, names, and types that your Theme is expecting to run when configured via `Init(GameObject host, ThemeDefinition definition)`

Look at \MixedRealityToolkit.SDK\Features\UX\Scripts\VisualThemes\ThemeEngines\ for examples of how to implement this method

Also function definitions may need to be updated for new class name which are arguments into the function such as
`InteractableThemeBase.Init(GameObject, ThemeDefinition)` 
`ThemePropertyValue GetProperty(ThemeStateProperty property)`
`SetValue(ThemeStateProperty property, int index, float percentage)`

**4) If you built a custom Event receiver class extending ReceiverBase:**

Everything should work as-is. Only step to be taken is to update any extended constructors to pass a name string into the base. Note: Fields must have the InspectorField attribute to show up on Interactable objects in the Unity inspector

**Change Details:**

- `InteractableThemeBase` now has abstract method `GetDefaultTheme()`, `IsEasingSupported`, `AreShadersSupported`
- Shader property metadata in Theme SO moved to `ThemeStateProperty.TargetShader` and `ThemeStateProperty.ShaderPropertyName` variables
- Event Receivers in scene/prefab files need to update to include AssemblyClassName. Bug where data was not originally saved.
- Multiple classes have been renamed see list below
- `InteractableTextureTheme` not extends `InteractableShaderTheme` and supports shader property targeting
- Elimination of `InteractableTypeFinder`/`InteractableTypesContainer` classes
- Creating Scriptable objects shortcut now under *Create* &gt; *MRTK* &gt; *Theme/State*

**Major API Renames:**
Interactable.Events =&gt; Interactable.InteractableEvents
Interactable.ForceUpdateThemes() =&gt; Interactable.RefreshSetup()
InteractableStateModel =&gt; BaseStateModel
InteractableThemePropertySettings =&gt; ThemeDefinition
InteractableThemeProperty =&gt; ThemeStateProperty
InteractableCustomSetting =&gt; ThemeProperty
InteractableThemePropertyValue =&gt; ThemePropertyValue
InteractableThemePropertyTypes =&gt; ThemePropertyType
States.CompareStates =&gt; States.Equals

## Changes
- Fixes: #5866 , #5652 , #5462 , #5058 , #5459 , #5050 , #5788 

## Verification
**Build following in GA and then update GA to feature branch**
1) Theme assets (SUCCESS)
2) CustomThemeClass (SUCCESS)
3) Interactable Events Receivers in a scene (SUCCESS)
4) Interactable Events Receivers a in prefab (SUCCESS)
5) Create custom EventReceiver class(SUCCESS)

**After MRTK code update, test the following**
Functionality works out-of-box after just hitting playing
Theme inspector works as expected
Interactable inspector works as expected

**Other validation**
All automated tests pass (SUCCESS)
Test InteractableExamples scene works (SUCCESS)
Test HandInteractionExample scene works (SUCCESS)
Tested import of Themes from RC2.1 (SUCCESS)

&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>17/09/2019</CreatedDate>
        <ClosedDate>21/09/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Documentation</Name>
            <IssueID>5998</IssueID>
            <PullRequestID>5967</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>UX Controls - Interactable</Name>
            <IssueID>5998</IssueID>
            <PullRequestID>5967</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>julenka</FixedById>
            <PullRequestID>5967</PullRequestID>
            <IssueID>5998</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
          <PullRequestAssignee>
            <FixedById>Troy-Ferrell</FixedById>
            <PullRequestID>5967</PullRequestID>
            <IssueID>5998</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>5998</IssueID>
        <PullRequestID>6049</PullRequestID>
        <Title>Add an example to demo Interactable with  UnityUI support</Title>
        <Description>## Overview
Due to certain documentation and example gaps, folks leveraging MRTK were under the impression that Interactable can only be leveraged by Collider based objects, which is not true. This PR attempts to bridge that gap in understanding by creating a  simple Unity UI based interactable. 

## Changes
- Adds a ButtonHololens1UnityUI prefab, which leverages Interactable system to drive state and visual changes. This button mimics the ButtonHololens1 prefab in visuals.
- Added the prefab to the InteractablesExample scene to demonstrate the usage
-  Updated the Button documentation to showcase  this new prefab.
- Added/updated existing Visual Themes to drive Unity UI elements' property changes.

![ugui](


## Verification
&gt; This optional section is a place where you can detail the specific type of verification 
&gt; you want from reviewers. For example, if you want reviewers to checkout the PR locally
&gt; and validate the functionality of specific scenarios, provide instructions
&gt; on the specific scenarios and what you want verified.
&gt;
&gt; If there are specific areas of concern or question feel free to highlight them here so
&gt; that reviewers can watch out for those issues.
&gt;
&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>23/09/2019</CreatedDate>
        <ClosedDate>27/09/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>UnityUI</Name>
            <IssueID>5998</IssueID>
            <PullRequestID>6049</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>Troy-Ferrell</FixedById>
            <PullRequestID>6049</PullRequestID>
            <IssueID>5998</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>5997</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>5997</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Unity UI dropdown, buttons and text fields are missing dropdown shadows</Title>
    <CreatedDate>18/09/2019</CreatedDate>
    <ClosedDate>20/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5997</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>5997</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5997</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UnityUI</Name>
        <IssueID>5997</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
All of the materials should have a drop down shadow on Unity UI, but they are all missing.

![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>5996</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>5996</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>InputDataExample Scene runs at 40 fps on HoloLens 2</Title>
    <CreatedDate>18/09/2019</CreatedDate>
    <ClosedDate>20/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5996</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>5996</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Run the InputDataExample scene on HoloLens 2, note the framerate. the framerate should be 60, but it can drop to 40 when you have two hands up.
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>5993</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>5993</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Clipping Primitives are writing shader keywords directly to materials</Title>
    <CreatedDate>18/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5993</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>5993</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shaders / Materials</Name>
        <IssueID>5993</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5993</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
I've run into an issue where once I've added items with shared materials to a `ClippingPrimitive` (in my case a holographic button), any additional materials have the shader keyword `_CLIPPING_BOX` enabled, but its not configurable in the inspector.

I know `ClippingPrimitive` makes use of material property blocks, and those are applied to the objects added to the renderer list. I'm not sure where the base material is being changed though...

## To reproduce

Steps to reproduce the behavior:

1. New scene
2. Add button prefab
3. New Gameobject add `ClippingBox` component
4. Add backplate quad from button prefab to `Renderers` list on `ClippingBox`
    Works as expected
5. Add new button prefab to the scene
     Backplate is no longer visible
     Inspector doesn't show modification to base material
6. File -&gt; Save project
7. open HolographicBackPlate.mat in code viewer, `_CLIPPING_BOX` is added


## Expected behavior

Material property blocks should prevent changing the base materials.

## Screenshots
![image](
![image](

(after step 4, you can see the back plate on see it say it is already disabled)

new button (that is not clipped)

![image](
![image](
inspector doesn't show material property block message, and clipping box is turned off.


![image](
after saving project, `HolographicBackPlate.mat was modified` but doesn't show in unity inspector.

## Your Setup (please complete the following information)

- Unity Version 2018.4.7f1
- MRTK Version - mrtk_development - last merge was 7f8571bd27eff2ee6021eafb876bddb1884c6d4e (~9/16/2019)

## Target Platform (please complete the following information)

- Editor, haven't needed to check on device yet.

## Additional context

Add any other context about the problem here.
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>5993</IssueID>
        <PullRequestID>6001</PullRequestID>
        <Title>Experimental UX Feature: Scrolling object collection</Title>
        <Description>![MRTK_ScrollingList3](

## Overview
Reviving the PR for #4724, this builds on the basic concept of ObjectCollection to allow developers to build scrollable lists of native, 3d content! This control was originally built for the HoloLens 2 Out of Box Experience (OOBE).

## Features
- Works like any other object collection, add children, press "update."
- Works with MRTK input system including buttons and interactable. Includes UnityEvents as well. 
- Scrolls both up/down, and left/right.
- Works with touch, as well as controllers / far / pointers.
- Can by dynamically instantiated.
- N items in list, any configuration of viewable and nonviewable content.
- Uses MRTK Standard shader and clipping primitive for scroll clipping effect.
- Multiple velocity options - None, None snap to item, standard falloff per frame, falloff per item (always magically lands on a full viewable set)

## Changes
 - New Scrolling Object Collection control
 - Added an example scene

Additive - should be no breaking changes here:
 - `ObjectCollectionNode` now has a few more fields to reduce redundancy calls.
 - `ObjectCollectionNode` is no longer a `struct` its been changed to a `class` for mutability.
 - `BaseObjectCollection` has been broken out into a few more `protected` methods to cut down on redundancy.

## Caveats
 - Due to #5993, you'll find a button with a missing back plate in the example scene.
</Description>
        <CreatedDate>19/09/2019</CreatedDate>
        <ClosedDate>15/10/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Experimental</Name>
            <IssueID>5993</IssueID>
            <PullRequestID>6001</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>UX Controls</Name>
            <IssueID>5993</IssueID>
            <PullRequestID>6001</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>julenka</FixedById>
            <PullRequestID>6001</PullRequestID>
            <IssueID>5993</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>5992</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>5992</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>BoundingBox cannot assign Target from code</Title>
    <CreatedDate>18/09/2019</CreatedDate>
    <ClosedDate>19/12/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5992</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>5992</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>5992</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
      private void PutABoxAroundIt(GameObject target)
        {
            var empty = new GameObject();
            var bbox2 = empty.AddComponent&lt;BoundingBox&gt;();
            // I cannot do this
            bbox2.Target = target;
            
        }



## Expected Behavior
csharp
      private void PutABoxAroundIt(GameObject target)
        {
            var empty = new GameObject();
            var bbox2 = empty.AddComponent&lt;BoundingBox&gt;();
            // I can do this :-)
            bbox2.Target = target;
            
        }
`</Code>
    <Description>## Overview
Quickly writing something up for @thalbern.

I would expect the following code to be possible, but it is not:

``
</Description>
  </Issue>
  <Issue>
    <IssueID>5991</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Service Facades no longer update when enabling / disabling services</Title>
    <CreatedDate>18/09/2019</CreatedDate>
    <ClosedDate>25/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5991</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>5991</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When enabling / disabling services outside of play mode facades no longer update to reflect changes.

## To reproduce

1) Add an MRTK instance to the scene.
2) Check 'Use Service Inspectors.'
2) Enable or disable a service.
3) Observe that facades do not change.

## Expected behavior

Facades should always be up-to-date.

- Unity Version 2018.4.3f1
- MRTK development branch</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>5991</IssueID>
        <PullRequestID>5746</PullRequestID>
        <Title>Allow developers to rename GameObjects with MRTK</Title>
        <Description>## Overview
With MRTK in the scene and possibly with SceneSystem enable for service facades, developers were not able to F2 or right click and rename any gameobject in a scene. 

This was caused by two operations happening repeatedly while in editor.
1) MRTK static class would call hierarchyChanged callback and auto-update the name of every MRTK instance. This name update would cause hierarchyChanged to be called again resulting in a never ending sort of recursive operation.

2) ServiceFacadeHandler would update all gameobjects every editorapplication.update. Not only was this excessive but it would cause the heirachy to change when trying to rename another GameObject. 

Both of these operations have been refactored to only execute when an actual change has occurred. 

## Changes
- Fixes: #5062 


## Verification
Tested service facade in editor and MRTK gameobject in editor to rename another GameObject
All tests passed

&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>21/08/2019</CreatedDate>
        <ClosedDate>28/08/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Editor</Name>
            <IssueID>5991</IssueID>
            <PullRequestID>5746</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Services</Name>
            <IssueID>5991</IssueID>
            <PullRequestID>5746</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>Troy-Ferrell</FixedById>
            <PullRequestID>5746</PullRequestID>
            <IssueID>5991</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>5989</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>AdamMitchell-ms</FixedById>
        <IssueID>5989</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>DefaultPointerMediator needs a parameterless constructor to avoid a breaking change</Title>
    <CreatedDate>18/09/2019</CreatedDate>
    <ClosedDate>19/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5989</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>5989</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5989</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>In a [recent change]( to DefaultPointerMediator, a new constructor was added which requires a parameter.

This removes the implicit parameterless constructor.  This is a breaking change.  Now classes derived from DefaultPointerMediator must somehow construct the param and pass it in.

We should add in an explicit parameterless constructor.  It should effectively set this.pointerPrefs to null and a null check will then be needed in places where it's referenced.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>5984</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Disabling a button as part of its OnClick constantly moves the collider backwards</Title>
    <CreatedDate>18/09/2019</CreatedDate>
    <ClosedDate>19/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5984</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

In case a button (in my case PressableButtonHoloLens2) is pressed and causes its own deactivation, the button breaks. The next time the button is activated, it's press collider starts at where it left off, constantly moving it backwards for every click.
This is not very convenient in cases, where the button is part of larger menu structures where layers of buttons get toggled all the time.

## To reproduce

Steps to reproduce the behavior:

1. Check out [this Repository]( or temporarily merge it into the current dev branch
2. Open Assets/Test scene
3. Press Play
4. Mouse interaction should be enabled, press the button multiple times and observe the collider (button comes back after a sec)

## Expected behavior

A button always starts in it's default state.

## Screenshots

If applicable, add screenshots to help explain your problem.
![image](


## Your Setup (please complete the following information)

- Unity Version 2018.4.6f1
- MRTK Version mrtk_development

## Target Platform (please complete the following information)

- Editor for now
</Description>
  </Issue>
  <Issue>
    <IssueID>5981</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5981</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>NullChecking interfaces</Title>
    <CreatedDate>18/09/2019</CreatedDate>
    <ClosedDate>01/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5981</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

It's not a bug in that sense, but rather something that could be a problem for the MRTK and I wanted to make staff and contributors aware of it, unless they already know.

Basic premise:
1. Throughout the MRTK, interfaces are used for most if not all services being part of it
2. Unity uses overridden versions of the comparison operators because of it's native and managed side implementation

The problem comes in where an interface is checked for null. Checking an interface for null does not call the implementors version of the comparison operators, which in case of UnityEngine.Object derived classes, are important to call. This means the following:

In the case of a UnityEngine.Object derived class being destroyed, its interface being checked for null before the actual destruction happened and a subsequent access to the class, a NullReferenceException will be thrown.

## To reproduce
As an example:

MixedRealityInputModule's ProcessMrtkPointerLost method includes the following line:



In case of the Hololens 1 with the use of Holographic Remoting and moving hands in and out of view, this will be triggered quite often.
Do a proper null check on the pointer in an if statement and see it not being entered.
VS confuses you with an actual hint in that it displays the value of pointer as being "null" (string). This seems to be the ToString() overloaded version for UnityEngine.Object in cases where it's null in the Unity sense.
The fact this is not throwing here is that ProcessMrtkPointerLost is being called from a try block, which might be another bug as I don't think you'd ever need try blocks in regular Unity code.</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>5981</IssueID>
        <PullRequestID>6822</PullRequestID>
        <Title>Utilize pointer cache in default input system</Title>
        <Description>## Overview
This change introduces the concept of a pointer cache so that pointers, and in particular their prefabs, can be re-used throughout the life cycle of an app. The benefit of a cache is greatly improved performance by utilizing resource re-use. Instantiating prefabs/gameobjects in Unity is very expensive and must occur on the main thread. Particularly for HL2, where hands are lost/found every time a users raises or lowers them, the performance is critically impacted. 

This new cache is primarily implemented by extending the functionality of BaseInputDeviceManager. Currently the class supports requesting pointers based on some arguments for internal use. This adds the ability for the class to also recycle or clean up pointers as well. Furthermore, this cycle is extended to work with an object pool paradigm. If a pointer has not been destroyed (either by itself or some other system in the app), then the BaseInputDeviceManager will attempt to cache the pointer for later re-use. 

The base pointer implementation class, ControllerPoseSynchronizer.cs, has the property DestroyOnSourceLost which will allow the pointer to destroy itself if it's input source has been lost. In order for the caching to work, any pointer prefabs/instances need to disable this toggle.

Also adds `UnityObjectExtensions.IsNull()` utility helper to combat issue seen in #5981

## Changes
- Fixes: #5846 , #4223 , #5981 

## Verification
&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>09/12/2019</CreatedDate>
        <ClosedDate>06/01/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Input System - Pointer</Name>
            <IssueID>5981</IssueID>
            <PullRequestID>6822</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Performance</Name>
            <IssueID>5981</IssueID>
            <PullRequestID>6822</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>Troy-Ferrell</FixedById>
            <PullRequestID>6822</PullRequestID>
            <IssueID>5981</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>5980</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Why EyeTracker doesn't work in hololens emulator even though I tick the 'GazeInput' checkbox under Capabilities in 'Package.appxmanifest' </Title>
    <CreatedDate>18/09/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>5980</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5980</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
The problem of using eye Tracker in HoloLens emulator.

## Feature Area
I did the work step by step by following this link " But the HoloLens emulator didn't have the "Eye Tracker"checkbox. So what's the problem?
</Description>
  </Issue>
  <Issue>
    <IssueID>5979</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5979</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>CameraExtensions IsInFov includes points behind the camera.</Title>
    <CreatedDate>18/09/2019</CreatedDate>
    <ClosedDate>30/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5979</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5979</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>5979</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5979</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

I tried using the camera extension 'IsInFOV'.  In the unity editor it was clear that the points being returned included points behind the camera, so long as they were still within the angles of the FOV. 

## To reproduce

``

Steps to reproduce the behavior:

1. put a bunch of things in the scene
2. put your camera in the middle
3. conditionally visualize your things based on Camera.main.IsInFov(thing.transform.position)
4. note that things behind the camera will render.

## Expected behavior

things behind the camera shouldn't render.

## Screenshots
bad:
![image](

good:
![image](


## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1] 2019.2.5f1
- MRTK Version [e.g. v2.0] 2

## Target Platform (please complete the following information)


## Additional context

</Description>
  </Issue>
  <Issue>
    <IssueID>5978</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Mixed Reality Toolkit/Standard shader overwrites unique material properties during selection</Title>
    <CreatedDate>17/09/2019</CreatedDate>
    <ClosedDate>20/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5978</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Selecting more than one material using the "Mixed Reality Toolkit/Standard" shader results in the "Albedo Alpha Mode" property being reset to the setting of whatever material was either first or last selected (the exact pattern probably isn't random, but I haven't figured it out yet). This doesn't appear to be platform dependent (Windows/MacOS), but hasn't been fully tested on both.

## To reproduce

Steps to reproduce the behavior:

1. Create two materials, choosing "Mixed Reality Toolkit/Standard" shader from the shader selector
2. Change the first material's property "Albedo Alpha Mode" to "Metallic"
3. Change the second material's property "Albedo Alpha Mode" to "Smoothness"
4. Select the first material, then shift-click or shift-right-arrow to select the second material
5. The "Albedo Alpha Mode" property of both materials is now set to "Metallic" (the second material was corrupted by the first)

You can imagine how disastrous this could be on a project with more than one material using the "Mixed Reality Toolkit/Standard" shader; simply selecting files to move them into a different folder will overwrite any unique albedo alpha modes.

## Expected behavior

If two materials with the same shader are selected, any properties with settings they do not hold in common should display "-" and allow the user to either bulk-edit them (overruling the unique properties), or leave the property unique and unchanged.

They should not be instantly overwritten with a single setting from one of the materials.

## Your Setup (please complete the following information)

- Unity Version 2019.1.14f1
- MRTK Version 2.0.0

## Target Platform (please complete the following information)

- HoloLens 2

(but the error occurs within the Unity editor itself)

## Additional context

It's possible this is a bug with the Unity shader GUI. The material property in question just happens to be the only custom dropdown implemented in the MicedRealityStandardShaderGUI.cs file.

``</Description>
  </Issue>
  <Issue>
    <IssueID>5970</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5970</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Update perf documentation and optimize window to be clearer about 16-bit depth format</Title>
    <CreatedDate>17/09/2019</CreatedDate>
    <ClosedDate>12/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5970</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5970</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>5970</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Using 16-bit depth buffer format in Unity doesn't create an 8-bit stencil buffer. Any stencil operations a developer might have in Unity then won't work. One option is to use the RectMask2d which does not require a stencil buffer but this only works in 2d space/coplanar. 

Update documentation and tooling to elaborate on when to use 16-bit vs 24-bit depth buffer formats more clearly

Related: #5969 and #5784 

## To reproduce

Steps to reproduce the behavior:

1. Go to '...'
2. Click on '....'
3. Scroll down to '....'
4. See error

## Expected behavior

A clear and concise description of what you expected to happen.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5968</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>5968</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Duplicated service displayed under MixedRealityToolkit hierarchy (Service Inspector)</Title>
    <CreatedDate>17/09/2019</CreatedDate>
    <ClosedDate>18/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5968</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
A scene with 'Use Service Inspectors' checked sometimes show duplicated MRTK service.
&lt;img width="400" alt="2019-09-17 12_05_19-Unity 2018 4 7f1 Personal - MRTKExamplesHub unity - MRTK-Public-Microsoft - Univ" src="

## To reproduce
In MRTK Profile &gt; Editor &gt; check 'Use Service Inspectors'
Save the scene and close Unity editor.
Open Unity editor, load the scene.

## Branch
mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>5966</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Camera sticks on "floor" after teleportation?</Title>
    <CreatedDate>17/09/2019</CreatedDate>
    <ClosedDate>28/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5966</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5966</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>`float height = targetPosition.y;
targetPosition -= CameraCache.Main.transform.position - MixedRealityPlayspace.Position;
targetPosition.y = height;

MixedRealityPlayspace.Position = targetPosition;`

Source code copied from "MixedRealityTeleportSystem.cs", seems there is nowhere to adjust height after teleportation?</Description>
  </Issue>
  <Issue>
    <IssueID>5963</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>5963</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Pressable Button pulse effect unexpected behavior</Title>
    <CreatedDate>17/09/2019</CreatedDate>
    <ClosedDate>18/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5963</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>5963</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5963</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Regression: Sometimes, PressableButtonHoloLens2 prefabs show static pulse effect without animation. This could be related to #5962 

## To reproduce
HandInteractionExample scene
Interact with HoloLens2 buttons

## Screenshots
![MRTK_ShaderPulse2](

![MRTK_ShaderPulse](

![2019-09-16 18_20_48-Unity 2018 4 6f1 Personal - HandInteractionExamples unity - MRTK-Public-Microsof](

</Description>
  </Issue>
  <Issue>
    <IssueID>5962</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>5962</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Fingertip light missing for near interactions</Title>
    <CreatedDate>17/09/2019</CreatedDate>
    <ClosedDate>19/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5962</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>5962</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5962</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5962</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Regression: Objects with materials that use 'Near Fade' with 'Use LIght' option don't show proper behavior. 

## To reproduce
- Open HandInteractionExamples scene
- Move hand closer to the Coffee cup with a Bounding Box.

## Expected behavior
White wire shows up based on the proximity.

## Current behavior
The wire is not displayed. It only shows up with far hand ray.
![2019-09-16 17_23_23-Unity 2018 4 6f1 Personal - HandInteractionExamples unity - MRTK-Public-Microsof](

![2019-09-16 17_24_05-Unity 2018 4 6f1 Personal - HandInteractionExamples unity - MRTK-Public-Microsof](

## Branch
mrtk_development



</Description>
  </Issue>
  <Issue>
    <IssueID>5958</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5958</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Interactable does not proctect Dimensions property</Title>
    <CreatedDate>16/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5958</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5958</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>5958</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The Interactable Dimensions property is just a public get/set value. 
1) It is not obvious in code the relationship between Dimensions and SelectionMode
2) Dimensions can be set to anything by the user (even negative numbers)
3) the actual dimensionIndex does not seem to be updated when Dimensions changes (i.e setter needs to enforce dimensionIndex)

As an aside, Interactable.CanInteract() could also be cleaned up by using SelectionMode terms instead of dimension -1 blah blah blah.

## To reproduce

Look at Interactable.cs

## Expected behavior

A clear and concise description of what you expected to happen.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version MRTK_dev

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5957</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MenelvagorMilsom</FixedById>
        <IssueID>5957</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Far Manipulation Rotate About Object Center does not rotate about X, Y axes</Title>
    <CreatedDate>16/09/2019</CreatedDate>
    <ClosedDate>05/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5957</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>5957</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Somehwere in 2.0 release we lost the ability to rotate objects about their center  when manipulating at a distance. It was very handy to have this so you could place objects far away, but then rotate them just by rotating your hand. I can rotate about the z axis, but not so much about the X and Y axes.

I believe this is because we are using the pointer rotation instead of the pointer controller's grip pose rotation. Here is the code to get grip pose:

        private bool TryGetGripRotation(IMixedRealityPointer pointer, out Quaternion rotation)
        {

            for (int i = 0; i &lt; pointer.Controller.Interactions.Length; i++)
            {
                if(pointer.Controller.Interactions[i].InputType == DeviceInputType.SpatialGrip)
                {
                    rotation = pointer.Controller.Interactions[i].RotationData;
                    return true;
                }
            }
            rotation = Quaternion.identity;
            return false;
        }

## Expected Behavior
I expect when I rotate my palm for the object to rotate about the object center. This is handy for rotating things at a distance.

![rotateObjectCenter](


## Actual Behavior
The object only rotates about the Z axis, not the x/y axis

![rotateObjectCenter_actual](

## Steps to reproduce
In ManipulationHandler, set the One Hand Rotation Mode Far to "RotateAbout Object Center", and then manipulation object with the articulated hands.

## Unity Editor Version
2018.4.6f1

## Mixed Reality Toolkit Release Version
2.0

## Notes
I used the following code to work around this -- just needed to apply the Grip Pose rotation:

</Description>
  </Issue>
  <Issue>
    <IssueID>5953</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>5953</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>SDK/Experimental folder structure is confusing</Title>
    <CreatedDate>14/09/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>5953</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5953</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5953</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When you import the MRTK 2.0 Foundation package, several non-experimental systems are actually under the experimental folder, they should not be under the Experimental folder.

All of the systems in the below image should not be under the experimental folder
![image](


## Steps to reproduce
Download and import the foundation package from the [mrtk release page](

Import the package. I was using Unity 2019.2.5f1.

## Expected Behavior
There are no folders under MRTK.SDK/Experimental

## Actual Behavior
There are several folders under MRTK.SDK/Experimental

## Unity Editor Version
Unity 2019.2.5f1.
</Description>
  </Issue>
  <Issue>
    <IssueID>5950</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>5950</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Preliminary 2.2.0 iteration plan</Title>
    <CreatedDate>13/09/2019</CreatedDate>
    <ClosedDate>11/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>1 - Planning</Name>
        <IssueID>5950</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>[Note: This plan is preliminary and subject to change. Please add your feedback to this issue.]

2.2.0 Iteration plan

Release: 2019/11

Themes
- **Stability** - Maintain and improve stability and quality
- **Developer education** - Expand and improve developer resources, including documentation and example scenes
- **Mobile AR** - Add formal support for Mobile AR by embracing Unity's AR Foundation
- **Build Tools** - Bug fixes, NuGet restore, etc
- **UX improvements**</Description>
  </Issue>
  <Issue>
    <IssueID>5945</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InvalidOperationException in MixedRealityToolkitFiles when editor was reloading scripts</Title>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5945</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5945</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
InvalidOperationException: Collection was modified; enumeration operation may not execute.
System.Collections.Generic.Dictionary`2+Enumerator[TKey,TValue].MoveNext () (at &lt;df7127ba07dc446d9f5831a0ec7b1d63&gt;:0)
Microsoft.MixedReality.Toolkit.Utilities.Editor.MixedRealityToolkitFiles.TryUnregisterModuleFolder (System.String folder) (at Assets/MixedRealityToolkit/Utilities/Editor/Setup/MixedRealityToolkitFiles.cs:220)
Microsoft.MixedReality.Toolkit.Utilities.Editor.MixedRealityToolkitFiles+AssetPostprocessor.OnPostprocessAllAssets (System.String[] importedAssets, System.String[] deletedAssets, System.String[] movedAssets, System.String[] movedFromAssetPaths) (at Assets/MixedRealityToolkit/Utilities/Editor/Setup/MixedRealityToolkitFiles.cs:91)
System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) (at &lt;df7127ba07dc446d9f5831a0ec7b1d63&gt;:0)
Rethrow as TargetInvocationException: Exception has been thrown by the target of an invocation.
System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) (at &lt;df7127ba07dc446d9f5831a0ec7b1d63&gt;:0)
System.Reflection.MethodBase.Invoke (System.Object obj, System.Object[] parameters) (at &lt;df7127ba07dc446d9f5831a0ec7b1d63&gt;:0)
UnityEditor.AssetPostprocessingInternal.PostprocessAllAssets (System.String[] importedAssets, System.String[] addedAssets, System.String[] deletedAssets, System.String[] movedAssets, System.String[] movedFromPathAssets) (at C:/buildslave/unity/build/Editor/Mono/AssetPostprocessor.cs:141)
`</Code>
    <Description>## Describe the bug
Specifically, after I switched branches and Unity was reloading, I saw the following print out in the editor:

``

## To reproduce

I've seen this a few times, so here are what I think the most likely repro steps are:

1. Switch branches while the project is open in Unity (or maybe even just edit a script so Unity reloads something) (it might be specific to a folder being created / removed)
2. Re-focus the editor
3. Allow it to reload assets
4. See exception in console

## Screenshots

![image](

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]: **2018.4.6f1**
- MRTK Version [e.g. v2.0]: **mrtk_development**</Description>
  </Issue>
  <Issue>
    <IssueID>5943</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>5943</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>5943</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>In HandInteractionExamples, the black piano keys are very difficult / impossible to press</Title>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5943</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5943</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

In the HandInteractionExamples scene, I'm able to press the white keys consistently and well.
The black keys only occasionally respond to touch, and, even when they do, they sometimes jump up and down and never actually become "pressed".

I was able to repro this both on-device and with editor simulation.

Far rays appeared to behave correctly.

## To reproduce

Steps to reproduce the behavior:

1. Load the HandInteractionExamples scene
2. Try to press the black keys

## Expected behavior

Piano music!

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]: **2018.4.6f1**
- MRTK Version [e.g. v2.0]: **mrtk_development latest**
</Description>
  </Issue>
  <Issue>
    <IssueID>5942</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>5942</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Unity app hangs when MRTK enabled (arm64, il2cpp)</Title>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>13/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5942</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5942</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>5942</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5942</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

A clear and concise description of what the bug is.

## To reproduce

Steps to reproduce the behavior:

1. Make an arm64 app for HL2 on unity 2019.1.14
2. enable the MRTK spatial mapping and input services
3. run the app for awhile
4. the rendering is blank

## Expected behavior

Rendering continues

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2 2019.1.14]
- MRTK Version Microsoft Mixed Reality Toolkit 2.0.0

## Target Platform (please complete the following information)


- HoloLens 2

## Additional context

The Ordered systems list could be cached and only recreated when systems are added or removed.

This is going to generate a ton of garbage since it is called several times per frame:
private bool ExecuteOnAllServicesInOrder(Action&lt;IMixedRealityService&gt; execute)
        {
            var orderedSystems = MixedRealityServiceRegistry.GetAllServices().OrderBy(m =&gt; m.Priority);
            return ExecuteOnAllServices(orderedSystems, execute);
        }

CritSec GameAssembly!GC_allocate_ml+0 at 00007ffb29d2ccc0
WaiterWoken        No
LockCount          2
RecursionCount     1
OwningThread       11a4
EntryCount         0
ContentionCount    7
*** Locked

   7  Id: 1020.11a4 Suspend: 1 Teb: 00000072`9a918000 Unfrozen
# RetAddr           : Args to Child                                                           : Call Site
00 00007ffb`27460b7c : 00000072`9b4fe7c0 00007ffb`27460b7c 00007ffb`29a8a9e0 00007ffb`29a8a9e0 : GameAssembly!GC_mark_from+0x13c [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\IL2CPP\external\bdwgc\mark.c @ 839] 
01 00007ffb`27460858 : 00000072`9b4fe820 00007ffb`27460858 00000000`01345c3b 00007ffb`29a8a9e0 : GameAssembly!GC_mark_some_inner+0x2ac [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\IL2CPP\external\bdwgc\mark.c @ 389] 
02 00007ffb`27466940 : 00000072`9b4fe850 00007ffb`27466940 00007ffb`00000000 00007ffb`29a8a9e0 : GameAssembly!GC_mark_some+0x10 [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\IL2CPP\external\bdwgc\mark.c @ 495] 
03 00007ffb`27466e58 : 00000072`9b4feb40 00007ffb`27466e58 00000072`9b4fe860 00007ffb`29a8a9e0 : GameAssembly!GC_stopped_mark+0x498 [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\IL2CPP\external\bdwgc\alloc.c @ 809] 
04 00007ffb`27459f7c : 00000072`9b4febb0 00007ffb`27459f7c 00000000`00001000 00007ffb`29a8a9e0 : GameAssembly!GC_try_to_collect_inner+0x180 [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\IL2CPP\external\bdwgc\alloc.c @ 557] 
05 00007ffb`27459244 : 00000072`9b4fec10 00007ffb`27459244 00000000`00000000 00000000`00000001 : GameAssembly!GC_collect_or_expand+0xc4 [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\IL2CPP\external\bdwgc\alloc.c @ 1461] 
06 00007ffb`2745d9d4 : 00000072`9b4fec90 00007ffb`2745d9d4 00000001`00000000 00000190`00000000 : GameAssembly!GC_allocobj+0x294 [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\IL2CPP\external\bdwgc\alloc.c @ 1556] 
07 00007ffb`2745d6b0 : 00000072`9b4fecf0 00007ffb`2745d6b0 00000000`00000001 00007ffb`29d2ccc0 : GameAssembly!GC_generic_malloc_inner+0x29c [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\IL2CPP\external\bdwgc\malloc.c @ 191] 
08 00007ffb`2745f9c0 : 00000072`9b4fed50 00007ffb`2745f9c0 00000000`00000000 00000000`00000050 : GameAssembly!GC_generic_malloc+0x188 [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\IL2CPP\external\bdwgc\malloc.c @ 280] 
09 (Inline Function) : --------`-------- --------`-------- --------`-------- --------`-------- : GameAssembly!GC_malloc_kind_global+0xc8 [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\IL2CPP\external\bdwgc\malloc.c @ 327] 
0a 00007ffb`27446ec0 : 00000072`9b4fed90 00007ffb`27446ec0 00000000`00000006 00000190`b3d02430 : GameAssembly!GC_malloc_kind+0xe0 [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\IL2CPP\external\bdwgc\malloc.c @ 333] 
0b (Inline Function) : --------`-------- --------`-------- --------`-------- --------`-------- : GameAssembly!il2cpp::vm::Object::Allocate+0x4 [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\IL2CPP\libil2cpp\vm\Object.cpp @ 55] 
0c 00007ffb`2838be78 : 00000072`9b4fede0 00007ffb`2838be78 00000072`9b4fede0 ffffffff`fffffffe : GameAssembly!il2cpp::vm::Array::NewSpecific+0xd8 [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\IL2CPP\libil2cpp\vm\Array.cpp @ 142] 
0d 00007ffb`280ff904 : 00000072`9b4fede0 00007ffb`2838ba50 00000072`9b4fee70 00007ffb`280ff904 : GameAssembly!Buffer_1__ctor_mFC593D644243CEC302C442E4AA893955A7EA307C_gshared+0x480 [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\Source\il2cppOutput\Generics33.cpp @ 27418] 
0e (Inline Function) : --------`-------- --------`-------- --------`-------- --------`-------- : GameAssembly!Buffer_1__ctor_mFC593D644243CEC302C442E4AA893955A7EA307C+0x1c [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\Source\il2cppOutput\Generics34.cpp @ 10512] 
0f 00007ffb`281e9190 : 00000072`9b4feec0 00007ffb`281e9190 00000000`00000000 00000000`00000000 : GameAssembly!U3CGetEnumeratorU3Ed__1_MoveNext_m23D3773DBF4D81ABBC236E9DDA007553DC56A04F_gshared+0x54 [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\Source\il2cppOutput\Generics34.cpp @ 14745] 
10 (Inline Function) : --------`-------- --------`-------- --------`-------- --------`-------- : GameAssembly!InterfaceFuncInvoker0&lt;bool&gt;::Invoke+0x54 [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\Source\il2cppOutput\Microsoft.MixedReality.Toolkit3.cpp @ 73] 
11 00007ffb`281e89f4 : 00000072`9b4feec0 00007ffb`281e8ee4 00000072`9b4fefc0 00007ffb`281e89f4 : GameAssembly!MixedRealityToolkit_ExecuteOnAllServices_m7F5DF4DD8D4C9FD2D42556B02325A47A94172FDF+0x360 [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\Source\il2cppOutput\Microsoft.MixedReality.Toolkit3.cpp @ 12248] 
12 00007ffb`281f3ce8 : 00000072`9b4ff080 00007ffb`281f3ce8 00000190`ac3ed400 00000072`9b4ff010 : GameAssembly!MixedRealityToolkit_ExecuteOnAllServicesInOrder_m0562E6D760ADFEBE8D458F991EC49CF4E3BAD756+0x2c4 [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\Source\il2cppOutput\Microsoft.MixedReality.Toolkit3.cpp @ 12017] 
13 00007ffb`281f3f70 : 00000072`9b4ff120 00007ffb`281f3f70 00000190`acb59630 00000072`9b4ff090 : GameAssembly!MixedRealityToolkit_UpdateAllServices_m1909290BC589EC6049EB06525D64083E6CDE0640+0x1f8 [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\Source\il2cppOutput\Microsoft.MixedReality.Toolkit3.cpp @ 11336] 
14 00007ffb`271a84c4 : 00000072`9b4ff1a0 00007ffb`271a84c4 00000190`acb59630 00000072`9b4ff130 : GameAssembly!MixedRealityToolkit_Update_mEBE2065607C9518A5AA69B0BA56BC45AAC908144+0x1d0 [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\Source\il2cppOutput\Microsoft.MixedReality.Toolkit3.cpp @ 9728] 
15 00007ffb`27442f14 : 00000072`9b4ff1b0 00007ffb`27442f14 00000072`9b4ff220 00007ffb`2b57ec1c : GameAssembly!RuntimeInvoker_TrueVoid_t22962CB4C05B1D89B55A6E1139F0E87A90987017+0x14 [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\Source\il2cppOutput\Il2CppInvokerTable.cpp @ 33964] 
16 00007ffb`2b57ec1c : 00000072`9b4ff220 00007ffb`2b57ec1c 00000072`9b4ff310 ffffffff`fffffffe : GameAssembly!il2cpp::vm::Runtime::Invoke+0x94 [E:\git\sraas\CapSRaaS\vsbridge\Il2CppOutputProject\IL2CPP\libil2cpp\vm\Runtime.cpp @ 542] 
17 00007ffb`2b5945d0 : 00000072`9b4ff290 00007ffb`2b5945d0 00000000`00000000 ffffffff`fffffffe : UnityPlayer!scripting_method_invoke+0x6c
18 00007ffb`2b598e3c : 00000072`9b4ff300 00007ffb`2b598e3c 00000190`acb59630 00000000`00000000 : UnityPlayer!ScriptingInvocation::Invoke+0xa0
19 00007ffb`2b598f28 : 00000072`9b4ff460 00007ffb`2b598f28 00000000`00000000 00000000`00000000 : UnityPlayer!MonoBehaviour::CallMethodIfAvailable+0x9c
1a 00007ffb`2afd4b34 : 00000072`9b4ff490 00007ffb`2afd4b34 00000190`acb59630 00000190`acb59630 : UnityPlayer!MonoBehaviour::CallUpdateMethod+0xe0
1b 00007ffb`2afdc69c : 00000072`9b4ff530 00007ffb`2afdc69c ffffffff`fffffffe 00000072`9b4ff4a8 : UnityPlayer!BaseBehaviourManager::CommonUpdate&lt;BehaviourManager&gt;+0x17c
1c 00007ffb`2b284800 : 00000072`9b4ff570 00007ffb`2b284800 ffffffff`fffffffe 00007ffb`2d472a80 : UnityPlayer!BehaviourManager::Update+0x34
1d 00007ffb`2b272584 : 00000072`9b4ff5a0 00007ffb`2b272584 ffffffff`fffffffe 00000000`00000008 : UnityPlayer!`InitPlayerLoopCallbacks'::`2'::UpdateScriptRunBehaviourUpdateRegistrator::Forward+0x48
1e 00007ffb`2b272650 : 00000072`9b4ff780 00007ffb`2b272650 00007ffb`2c5c0058 00000000`00000004 : UnityPlayer!ExecutePlayerLoop+0x5c
1f 00007ffb`2b275c18 : 00000072`9b4ff960 00007ffb`2b275c18 00000072`00000001 00000190`aad80020 : UnityPlayer!ExecutePlayerLoop+0x128
20 00007ffb`2bcbaefc : 00000072`9b4ffa00 00007ffb`2bcbaefc ffffffff`fffffffe 00007ffb`2d483e18 : UnityPlayer!PlayerLoop+0x128
21 00007ffb`2bca05f0 : 00000072`9b4ffa20 00007ffb`2bca05f0 00000072`9b4ffa78 00000000`00000000 : UnityPlayer!metro::MainLoop+0x24
22 00007ffb`2bca7fa4 : 00000072`9b4ffac0 00007ffb`2bca7fa4 00000000`00000000 00007ffb`2bca0a2c : UnityPlayer!UnityPlayer::AppCallbacks::DoPerformUpdateAndRender+0x1b8
23 00007ffb`58dd97a8 : 00000072`9b4ffba0 00007ffb`58dd97a8 00000000`00000000 00000000`00000000 : UnityPlayer!UnityPlayer::AppCallbacks::_AppThreadImplementation+0x304
24 00000000`00000000 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : ntdll!RtlUserThreadStart+0x58 [minkernel\ntdll\rtlstrt.c @ 1152]

</Description>
  </Issue>
  <Issue>
    <IssueID>5939</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>PressableButton visual planes should become semi-transparent when PressableButton is disabled</Title>
    <CreatedDate>12/09/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5939</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

If you disable a PressableButton component, its visual planes are still rendered at full opacity.

## Describe the solution you'd like

I'd expect it to behave similar to BoxCollider, where the gizmos render at half opacity when the component is disabled.</Description>
  </Issue>
  <Issue>
    <IssueID>5929</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>5929</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5929</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[Docs] Fix broken image URLs</Title>
    <CreatedDate>11/09/2019</CreatedDate>
    <ClosedDate>20/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5929</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5929</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>5929</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>5929</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
There are several missing images in the README files. Need a pass for updating the URLs.


## Branch
mrtk_release
</Description>
  </Issue>
  <Issue>
    <IssueID>5634</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>5634</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5634</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Interactable - "Remove Event" button does not work, NullPtr</Title>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5634</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5634</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>5634</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5634</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
You should be able to remove events using the "remove event" button in interactable. Unfortuantely, the button does not work for removing all but the first event, and instead throws large number of exceptions.

![image](

## Steps to reproduce
1. Open any interactable, and under "event", add a second event
2. Try to remove that second event

## Expected Behavior
I can remove the event!

## Actual Behavior
Oh no! I cannot actually remove the second event.
</Description>
  </Issue>
  <Issue>
    <IssueID>5629</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>5629</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>2.0.0 Release notes</Title>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>5629</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5629</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Draft release notes for v2.0.0 that will be published in the documentation.

Also update:

- UpdatingToGA.md
- Authors.ms</Description>
  </Issue>
  <Issue>
    <IssueID>5626</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>5626</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Apply Default Settings does not add the SDK in Unity 2019</Title>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5626</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5626</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>What appears to be a behavior change in Unity 2019 is causing the XR Settings SDK to not be correctly selected when using the "Apply Mixed Reality Default Settings" message box.

Unity 2018.4 does not experience this issue.</Description>
  </Issue>
  <Issue>
    <IssueID>5625</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>5625</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Spatial Observer Volume ignores MRTK Playspace transform</Title>
    <CreatedDate>13/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5625</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5625</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5625</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>5625</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

This one is my bad, I missed it when fixing up other SpatialMesh issues with Playspace transform.

When the WindowsMixedRealitySpatialMeshObserver sets the ObserverVolume, it incorrectly accounts for the MRTK Playspace transform (and any other transform on the camera hierarchy).

The tangible outcome is that when there is a non-identity transform on the Playspace, the Spatial Meshes will no longer be centered around the camera

## To reproduce

Steps to reproduce the behavior:

1. Set a large translation on the playspace (e.g. teleport a few meters).
2. Notice that the spatial meshes are centered around where you were, rather than where you are.

## Expected behavior

The spatial meshes to recenter around the viewer as the viewer teleports around.

## Additional context

There are two conflicting approaches to this problem. It is important to note that, whatever else, the volume passed into observer.SetVolumeXXX(volume) is expected to be in the same space as the head pose. That is, in the space of the camera's parent.

Approach 1) Treat WindowsMixedRealitySpatialMeshObserver.ObserverOrigin as being in the same space as the head pose (i.e. already in the camera's parent's space). In that case, the error is in UpdateObserver(), where ObserverOrigin should be CameraCache.Main.transform.**localPosition**, rather than **position**.

Approach 2) Treat ObserverOrigin as being in world space (Unity's root coordinate system). In that case, UpdateObserver() is correct, but ConfigureObserverVolume() needs to transform the world space ObserverOrigin into the camera's parent's space before passing it to Observer.SetVolumeXXXX(). This would presumably use CameraCache.Main.transform.parent.InverseTransformPoint(ObserverOrigin), with appropriate null check(s).

Since ObserverOrigin is publicly settable, it is probably expected that it is in world space, but the expected space isn't actually explicitly stated, so I might be wrong there. But if it is generally in world space, then Approach 2) would be preferred. Otherwise, Approach 1) is a simpler fix.

Note that everything here also applies to ObserverRotation.
</Description>
  </Issue>
  <Issue>
    <IssueID>5621</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpherePointer to cache TryGetNearGraspPoint</Title>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5621</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Pointer</Name>
        <IssueID>5621</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Performance</Name>
        <IssueID>5621</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

SpherePointer leverages TryGetNearGraspPoint() for many commonly used properties (i.e IsNearObject and IsInteractionEnabled). These properties are called multiple times which causes the TryGetNearGraspPoint and resulting Physics.CheckSphere to be redundantly called everytime.

## To reproduce

Read SpherePointer.cs =&gt; IsNearObject &amp; IsInteractionEnabled

## Expected behavior

For a given frame update, the results of TryGetNearGraspPoint and Physics.CheckSphere could potentially be cached. The checksphere may be problematic if objects are instantiated during an update loop. But the TryGetNearGrapsPoint should not be altering.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5620</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5620</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>LinePointer is overly expensive</Title>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>07/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>5620</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5620</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Pointer</Name>
        <IssueID>5620</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Performance</Name>
        <IssueID>5620</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The LinePointer class is used for hand rays but executes expensive ray marching every frame. The line pointer class is written to support multiple curve types, not just straight lines. This is evident in TeleportPointer extending from LinePointer as well. The problem is even if ShellHandRayPointer which extends LinePointer and only needs to raycast a straight line for the hand ray, will still execute ray marching based on the number of extents in the **rendered** line.

The ShellHandRayPointer has a line that can bend when wobbling or when selecting and pulling like a lasso. The raycast though is still just a straight line. 

In particular, LinePointer generally keeps the bezier line at the PointerExtent distance and then modifies *LineBase.LineEndClamp* normalized length to a value of the raycast hit point when intersecting an object. Thus, the raycast is the full PointerExtent but the rendered line only goes to the hit object. 

Setting this *LineBase.LineEndClamp* is quite expensive because of `lineBase.GetNormalizedLengthFromWorldLength`. This walks down the entire line and performs multiple 1) `linebase.GetUnClampedPoint()` and 2) sqrt distance calculations. This is excedingly expensive especially with two hands accounting for probably 0.25-1ms on device (hard to tell with profiler overhead etc)

## To reproduce

Read OnPreSceneQuery and OnPostSceneQuery in LinePointer.cs

## Expected behavior

Make LinePointer class just a straight line and make a CurvePointer class that extends from LinePointer. This curve pointer class can support bending curve lasso like pointers such as TeleportPointer. 

The LinePointer would only have to worry about one RayStep

Furthermore, it may be wise to also update TransformPoint and DistortPoint in BaseMixedRealityLineDataProvider to utilize ref struct Vector3 to avoid additional copying between functions.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2018.4.5
- MRTK Version - Stabilization branch

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5616</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>5616</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>5616</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Buttons play sounds even when approached from behind</Title>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>15/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5616</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5616</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5616</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Buttons should only play touch down, up sounds, when they are actually being pressed! Since we cannot press buttons from the back, we should not hear sounds when approaching a button from the back

## Repro steps
Approach a button from behind using your finger
Move finger through collider
Notice that a pressed and released sound plays

## Expected Behavior
The pressed and released sounds should only play when the button is actually compressed. If the button state and visual doesn't respond to the finger movement, then a sound should not be playing.

Otherwise, the user will be confused because they are hearing feedback that the button is responding to them, when it is actually not responding. 


## Mixed Reality Toolkit Release Version
GA</Description>
  </Issue>
  <Issue>
    <IssueID>5612</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Allow defining a custom GazePointer</Title>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>15/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>5612</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5612</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem



&gt; While being able to define your own GazeProvider means you also are able to define your own InternalGazePointer; it isn't very easily discoverable.

Related to 

&gt;Also, being able to implement your own GazePointer and provide that to the GazeProvider seems like a feature that's missing; given that user-defined pointer definition is available for all other pointer types.
</Description>
  </Issue>
  <Issue>
    <IssueID>5604</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>5604</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5604</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Nullptr in Overlap.SolverUpdate after Upgrade from RC2 to G1</Title>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5604</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5604</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5604</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5604</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
After I updated my personal project from RC2 to GA, I am getting NullPtr every frame when I hit "Play" in my sample scene

## Repro steps
1. Unzip the project Assets folder located [here]( move it to a new test project
2. Open the project, then open the BouncyBall/SampleScene.unity scene, and then hit play

You will get a large number of errors like:

    NullReferenceException: Object reference not set to an instance of an object
    Microsoft.MixedReality.Toolkit.Utilities.Solvers.Overlap.SolverUpdate () (at Assets/MixedRealityToolkit.SDK/Features/Utilities/Solvers/Overlap.cs:13)
    Microsoft.MixedReality.Toolkit.Utilities.Solvers.Solver.SolverUpdateEntry () (at Assets/MixedRealityToolkit.SDK/Features/Utilities/Solvers/Solver.cs:245)
    Microsoft.MixedReality.Toolkit.Utilities.Solvers.SolverHandler.LateUpdate () (at Assets/MixedRealityToolkit.SDK/Features/Utilities/Solvers/SolverHandler.cs:326)

This project contains my old project (all my files are in the BouncyBall folder), plus the new MRTK GA release (in the other MRTK folders). All MRTK files have been updated to their newer version, except PinchSlider.cs

## Expected Behavior
The expectation is to not get any errors.

## Unity Editor Version
2018.4.4f1

## Mixed Reality Toolkit Release Version
GA</Description>
  </Issue>
  <Issue>
    <IssueID>5602</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Flickering texture in Bounding Box example</Title>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>27/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5602</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5602</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>5602</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Go through the BoundingBoxRuntimeExample and observe the flickering Cyan Material applied in one of the later steps of the example (cycle through steps by pressing 1)

## To reproduce

Open BoundingBoxRuntimeExample
Press 1 to advance in the steps
Step that changes material to cyan will cause the bounding box to flicker

## Expected behavior

Bounding box shouldn't flicker

## Screenshots

![cyan_material](


## Your Setup (please complete the following information)

- stabilization drop 2.0.0 from 08-10-2019

## Target Platform (please complete the following information)


- WMR immersive
- Unity Editor
</Description>
  </Issue>
  <Issue>
    <IssueID>5600</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>5600</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Button labels are misaligned in HandInteractionExample</Title>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5600</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5600</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5600</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The text in the buttons in HandInteractionExample look misplaced. See Screenshot:
![image](


## To reproduce

Open HandInteractionScene 
Observe misplaced text in Editor
or
Press Play and observe misplaced text in WMR headset

## Expected behavior

Text should be centered in the button



## Your Setup (please complete the following information)

- Stabilization v2.0.0
used latest package from 08-10

## Target Platform (please complete the following information)

- Unity Editor
- WMR immersive

</Description>
  </Issue>
  <Issue>
    <IssueID>5599</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Using MRTK/Standard Shader results in pink materials</Title>
    <CreatedDate>12/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5599</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Materials using the MRTK Standard shader are pink.

## To reproduce

Steps to reproduce the behavior:
**For a new project**
   1. Start a new 3D project.
   2. Import RC2.1.
   3. Create a material and set it's shader to "MRTK Standard".
   4. Pink.

**For MRTK Release**
   1. Download MRTK release from GitHub
   2. Open Project in Unity 2018.4.5f1
   3. Materials using MRTK Standard shader are pink.

## Expected behavior

Materials using the MRTK Standard shader should not be pink.

## Screenshots

![image](
![image](

![image](

## Your Setup

- Unity Version 2018.4.5f1
- MRTK Version v2.0.0 RC2.1
- VS 2019

## Target Platform

- HoloLens
- Target SDK 10.0.18362.0

## Additional context

The pink materials don't show any missing references to shaders and the shader doesn't seem to have any compile errors.
</Description>
  </Issue>
  <Issue>
    <IssueID>5597</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>5597</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>All interactables with Is Global checked are triggered OnClick </Title>
    <CreatedDate>11/08/2019</CreatedDate>
    <ClosedDate>02/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5597</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>5597</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Any buttons with Interactable.cs attached, Is Global checked and contain an OnClick event are all triggered at the same time when another button is manually selected on air tap/press.
Speech commands work fine and only trigger one event.

## To reproduce

Steps to reproduce the behavior:

1. Go to MixedRealityToolkit.Examples &gt; UX &gt; Interactables &gt; InteractablesExamples
2. Add a SetActive false event to the AnimationButton object
3. Check the Is Global box under DefaultInteractableStates section on the AnimationButton object
4. Click Play button to run in the editor
5. When running click the Button or ToggleButton object. The Animation Button object should then disappear.

## Expected behavior

Only the event on the button being manually selected/tapped/pressed should be triggered

## Screenshots



## Your Setup (please complete the following information)

- Unity 2019.1.11f1
- MRTK  v2.0.0 RC2.1

## Target Platform (please complete the following information)

- HoloLen

## Additional context

I was under the impression the the Is Global setting would only apply to speech commands.

</Description>
  </Issue>
  <Issue>
    <IssueID>5595</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Update incorrect descriptions in the HandInteractionExample scene</Title>
    <CreatedDate>10/08/2019</CreatedDate>
    <ClosedDate>11/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5595</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5595</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5595</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Some of the labels are not relevant for some platform/devices. Update description text to avoid any customer confusion.

- **Touch Interaction**: Only works on Hololens 2 with articulated hands
- **Launch External apps:** HoloLens 2/WMR can display apps in Unity apps. Hololens 1 exits the current app then launches the external app
- Other description updates to clearly communicate the examples
</Description>
  </Issue>
  <Issue>
    <IssueID>5587</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>5587</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>UnityUI is missing shadow and sounds (slate parity issue)</Title>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>10/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5587</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5587</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5587</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5587</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
UnityUI is one of our top-used UI components, but it is not at shell parity. It is missing a shadow, as well as sounds on touch down and up. Sounds exist when pressing buttons and moving sliders, but not when touching the back panel to scroll.

## Steps to reproduce
Touch the unityui component with a hand, either in editor or on device.

## Expected Behavior
The expectation is that the visuals and sounds match the behavior in the "Pan &amp; Zoom Interaction" slate on the left side of interaction examples.

1) There should be a shadow to help with targeting and knowing proximity of hand to surface
2) There should be a sound on touch down and on touch up, even when interacting with the back panel of Unity UI.
</Description>
  </Issue>
  <Issue>
    <IssueID>5586</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>5586</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>UnityUI back panel does not occlude cursor</Title>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>10/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5586</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5586</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5586</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5586</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When a hand goes through UnityUI, the cursor should not be visible. Currently when you move your hand behind UnityUI you can still see the cursor. This reproduces on both HL2 and in editor.

## Steps to reproduce
To reproduce, just bring the hand behind the UnityUI canvas and notice that the curso as well as the hand rays and even the hand joints are still visible.

![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>5583</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>5583</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Buttons are missing press, release sounds when doing far interaction</Title>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5583</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5583</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5583</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5583</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Buttons should play sounds on press and release both when doing near and far interaction. Currently the sounds play on near interaction, but not far interactions.

## Steps to reproduce
Open up the HandInteractionExamples scene and use hand rays to press any button.

The following buttons do not play sound at a distance:
* PressableButtonHoloLens* buttons (2, round, etc).
* Pressable RoundButton
* Any of the buttons under Features/UX/Interactable

## Expected Behavior
At a minimum, the PressableButtonHoloLens* buttons and the PressableRoundButton should play sound on press and release.
</Description>
  </Issue>
  <Issue>
    <IssueID>5580</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>5580</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Gaze cursor shows up when hands are in near touch mode</Title>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>14/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5580</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5580</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5580</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
The gaze cursor shows up when the hands go into near mode. 

## To reproduce
1. Sync to the latest '2.0.0_stabilization' branch 
2. Start Unity and move the HandsInteractionAll scene to the first place in the Build Settings
3. Open the VS project and enable the "Gaze Input" capability
4. Compile and deploy to HoloLens 2

*Please note:*
This issue doesn't occur if the "Gaze Input" capability is disabled. However, in this case, once the hands are not detected anymore, the head gaze cursor will not show up automatically. Instead the user has to say "Select" first.

## Expected behavior
The gaze cursor should only show up if either "no hands" are detectable and/or "no hands" + an activation command (e.g., say select) is issued.

## Screenshots
If applicable, add screenshots to help explain your problem.
![image](


## Your Setup (please complete the following information)
- Unity 2018.4.0f1
- MRTK 2.0.0_stabilization

## Target Platform (please complete the following information)
HoloLens 2</Description>
  </Issue>
  <Issue>
    <IssueID>5576</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>5576</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Start push distance is wrong for all buttons</Title>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5576</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5576</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5576</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5576</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
All hololens 2 buttons should begin to compress immediately as the finger tip touches the button surface. Currently, the finger needs to go at least half way through the button before the button begins to compress.

## Steps to reproduce
In the editor, press a button and observe where the finger is when the button starts moving.

![image](

You can also observe this by looking at the press planes of the button (select button component then inspect in scene view. Ensure "Show Button Event Planes" is checked. Noticethat the start push distance is half way into the button:

![image](


## Expected Behavior
The start push plane should be at the beginning of the button cage, the button should start moving as soon as the finger touches the cage.
</Description>
  </Issue>
  <Issue>
    <IssueID>5573</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Normal Maps + Proximity Light Causes Shader Compilation Failure</Title>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5573</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5573</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5573</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shaders / Materials</Name>
        <IssueID>5573</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When enabling Normal Maps and Proximity Light on a MRTK/Standard material the MRTK/Standard shader fails to compile.

## To reproduce

Steps to reproduce the behavior:

1. Select a MRTK/Standard material.
2. Enable the Normal Map and Proximity Light features.
3. See compilation error in the console.

## Expected behavior

Shader compiles with all feature permutations.

## Your Setup (please complete the following information)

- Unity Version 2018.4.2f1
- mrtk_development

## Target Platform

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR
</Description>
  </Issue>
  <Issue>
    <IssueID>5572</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Performance drops to 45fps on one hand detected, after a lot of manipuation. Drops to 22 fps on two hands detected.</Title>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5572</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5572</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5572</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5572</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
After a lot of manipulation interaction (one or two-handed), the Profiler shows the framerate drop to 45fps on two hands detected even there are no objects in the viewport. (no hand mesh/joint)
Presenting a single hand seems fine (60fps). Only drops when both hands are detected.

After pausing and restarting the app and manipulating the HL2 style bounding box, then bringing up a single hand can cause the framerate to drop to 45 fps, and bringing up 2 hands causes frame rate drop to 22 fps.

## To reproduce
In the HandInteractionExample scene, keep interacting with the objects with ManipulationHandler and BoundingBox. Use two-handed manipulation for scaling/rotating.

## Expected behavior
No framerate drop

## Your Setup (please complete the following information)
- Unity Version 2018.4.

## Target Platform (please complete the following information)
- HoloLens 2

## Branch
- prelease
</Description>
  </Issue>
  <Issue>
    <IssueID>5571</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Example Scene drops to 45 fps on HL2 when manipulating HL2-style bounding box</Title>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5571</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5571</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5571</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The hand interaction examples scene should be running at 60 fps, always, on all supported platforms. It's possible to get the main example scene to run at 45 fps by scaling with bounding box.

## Steps to reproduce
1. Deploy the HandInteractionExamples scene to HoloLens 2 device, using a Release build
2. Turn off the hand mesh, hand joints, and keep the mrtk profiler open
3. Scale / move / rotate the  "HoloLens 2 Style" bounding box 
![image](

## Expected behavior
Scene runs at 60 fps

## Actual behavior
Scene runs at 45 fps</Description>
  </Issue>
  <Issue>
    <IssueID>5569</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>5569</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Green Gem in HandInteractionExample will immediately scale the mesh down on interaction</Title>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>10/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5569</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5569</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5569</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Transform Scale Handler is using the wrong scale values

## To reproduce

Open HandInteractionExample scene
Try to far manipulate the green gem on the left side
Observe it snaps to a lower scale
![image](


## Expected behavior

Gem should keep it's size until it gets scaled.
Gem setup should define max / min bounds that include the initial setup

## Your Setup (please complete the following information)

MRTK stabilization 2.0.0
tested with WMR controller far interaction
</Description>
  </Issue>
  <Issue>
    <IssueID>5568</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>5568</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[Editor][NuGet] The simulated articulated hand visualization only appears as a single orb in-editor when getting MRTK via NuGet</Title>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>15/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5568</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5568</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>5568</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When using MRTK via NuGet packages, the articulated hand simulation visualization is a single orb rather than a full hand.

## To reproduce

Steps to reproduce the behavior:

1. Pull MRTK using NuGet
2. Set the input simulation type to Articulated
3. Press play in an example scene
4. See a single orb rather than a whole hand

## Expected behavior

A full hand representation is visible, rather than a single orb

## Screenshots

If applicable, add screenshots to help explain your problem.
![image](

## Your Setup (please complete the following information)

- Unity Version 2018.4.4f1
- MRTK Version 2.0.0-20190730.2

## Target Platform (please complete the following information)
Editor - H2</Description>
  </Issue>
  <Issue>
    <IssueID>5566</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>UnityMouseDeviceManager needs improvement and bug fix</Title>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>29/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5566</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Mouse Input</Name>
        <IssueID>5566</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5566</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Hello, I tried the mouse device manager from the MRTK and it's not usable as it is. Here some of the problems I got:

- The cursor is way too big, it should be the same size as the real cursor
- The cursor is invisible when we are not over an object
- The cursor position is not the same as the real cursor position
- When we stop moving the mouse for few seconds, the cursor disappear and its position change
- The cursor is not oriented towards the camera but seems to follow the normal of the collider that we are pointing at
- The crusor shakes a lot, it is not smooth at all

Here a screenshot of my profiles:

![image](


Here some screenshots to illustrate the problems, note that the third media is not a zoom of my screen, it's simply the MRTK camera that is very very close to the button.

![3](

![2](
![1](


## To reproduce

Steps to reproduce the behavior:

Create a default MouseInput profile and add a Mouse device manager to the MRTK

## Expected behavior

The MRTK cursor behaviour is the as the windows cursor


## Your Setup (please complete the following information)

- Unity Version 2019.1
- MRTK Version RC2.1

## Target Platform (please complete the following information)

- Desktop
</Description>
  </Issue>
  <Issue>
    <IssueID>5565</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>killerantz</FixedById>
        <IssueID>5565</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Interactable Behavior doesn't trigger UX changes applied via profiles for NEAR Interaction.</Title>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>22/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5565</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Fixed</Name>
        <IssueID>5565</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Interactible doesn't execute/apply different profile when performing near interaction. It executes all profiles when performing far interaction.

## To reproduce

Steps to reproduce the behavior:
1. Launch latest MRTK ( v2-RC2.1 is what i tested) and open interactables example scene
2. Make sure that Coffee Mug game object is present in the scene.
3. Use hand to interact with far. When we press, the coffee color changes in cup and coffee (child element) changes it's position.
4. Repeat the same action from near the coffee cup. The color change happens

## Expected behavior
The coffee cup should show also change color and move below (i.e. appear to be reduced in quantity by changing position) in near interaction mode.
## Screenshots
When user presses cup from far:
![image](

When user presses cup from near:
![image](

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version :2018.4.4f1
- MRTK Version : Mixed Reality Toolkit 2.0.0-RC2.1

## Target Platform (please complete the following information)
- HoloLens 2

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5563</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>5563</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Create test data providers (input and spatial awareness) to confirm correct registration behavior</Title>
    <CreatedDate>09/08/2019</CreatedDate>
    <ClosedDate>16/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Tests</Name>
        <IssueID>5563</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>#5557 pointed out a recent regression that occurred because the new data provider registration code path had some bugs (ex: Enable was calling Reset, Enable was not being called).

Create a set of test providers and profiles that validate that the correct methods are being called when expected.</Description>
  </Issue>
  <Issue>
    <IssueID>5557</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>5557</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>5557</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>5557</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Hand input broken in stabilization branch</Title>
    <CreatedDate>08/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5557</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5557</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5557</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Services</Name>
        <IssueID>5557</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Hand tracking is not working. Hand rays are not shown. I can't poke or grab holograms. I can't use air-tap.

## To reproduce
1. I've synced to latest in the prerelease/2.0.0_stabilization branch.
2. I've moved the HandInteractionExamples.unity to the first place in the BuildSettings to build and test that scene. 
3. Build and deploy to the device.
4. No hand input is registered. I do see an little opaque gaze cursor that is following my eye gaze. 

I did not change the MRTK config profile. When checking it's set to 'DefaultHoloLens2ConfigurationProfile'. 

## Expected behavior
1. The gaze cursor should not follow my eye gaze. If that's desired, let's replace the visuals as the distinct opaque circle is not recommended.
2. Holograms should be interactable using hand input (near and far). 

## Video
![image](

## Your Setup (please complete the following information)
- Unity  2018.4.0f1
- MRTK Version: prerelease/2.0.0_stabilization

## Target Platform (please complete the following information)
- HoloLens 2

</Description>
  </Issue>
  <Issue>
    <IssueID>5555</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>(LWRP) Magenta shows in prefab thumbnails but not on the prefab itself</Title>
    <CreatedDate>08/08/2019</CreatedDate>
    <ClosedDate>08/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5555</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'm currently setting up the scene environment for HoloLens using LWRP and MRTK RC2.1. After importing assets, the prefab textures in the scene/thumbnails became magenta. After selecting "Mixed Reality Toolkit &gt; Utilities &gt; Upgrade MRTK Standard Shader for LWRP", the magenta was fixed on the prefab textures but not in the thumbnail.

![image](

SETUP:
- Unity 2019.1.13f1
- MRTK RC2.1
</Description>
  </Issue>
  <Issue>
    <IssueID>5553</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>5553</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Interactable throws error for onFocus event with selected toggle buttonmode</Title>
    <CreatedDate>08/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5553</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5553</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>5553</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>csharp
       public void OnFocusEnter(FocusEventData eventData)
        {
            Debug.Assert(focusingPointers.Count &gt; 0,
                "OnFocusEnter called but focusingPointers == 0. Most likely caused by the presence of a child object " +
                "that is handling IMixedRealityFocusChangedHandler");
`</Code>
    <Description>## Describe the bug

Interactable will throw an assertion fail for all OnFocusEnter calls if the OnBeforeFocusChange fails with CanInteract(). 

OnBeforeFocusChange is called which returns early because CanInteract() returns false because of some logic I don't understand fully. Since OnBeforeFocusChange returns early, the focusingPointers is never set properly and thus the following event call to OnFocusEnter right after, throws an error

Inside Interactable.cs
``

Thanks to @KevinKennedy for discovery!

## To reproduce

This seems to primarily occur with Toggle interactable buttons, most likely using the InteractableToggleCollection? 

For a good repo, do the following

1) Open the SolverExample scene (at least in stabilization branch)
2) Press space to get input simulated hand
3) Hover over the "RadialView" interactable button with it already selected
4) See error message in console

## Expected behavior

Users should be able to focus on a selected toggle interactable without errors in console

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2018.4.5
- MRTK Version Stabilization branch 2.0.0

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5552</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>5552</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>5552</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>ManipulationHandlerOriginOffset test has race condition causing unpredictable failures</Title>
    <CreatedDate>08/08/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5552</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5552</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Tests</Name>
        <IssueID>5552</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - ObjectManipulator</Name>
        <IssueID>5552</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5552</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Running ManipulationHandlerOriginOffset locally in different branches, I get consistently get inconsistent success/fail results. There is a failure for checking the position of the expected vs actual data components at the very end of the test.

Not exactly sure what is going on but I believe it is causing the CI failures intermittently 

## To reproduce

In Test Runner, just run selected multiple times and get different results

## Expected behavior

This should pass 100% of the time predictably. 

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2018.4.5
- MRTK Version Stabilization branch

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5549</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>WMR controller Menu Button switched</Title>
    <CreatedDate>08/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5549</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5549</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5549</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The handedness of menu button for windows mixed reality controllers is switched.

I Press the Menu button on the left controller and the InputEventData.Handedness is right.

## To reproduce

Try this class:

``



## MySetup 

- Unity Version  2019.1.11f1
- MRTK Version v2.1

## Target Platform 

- WMR immersive


</Description>
  </Issue>
  <Issue>
    <IssueID>5547</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>5547</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>It’s Unclear How to Add Clipping Primitives</Title>
    <CreatedDate>08/08/2019</CreatedDate>
    <ClosedDate>09/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>5547</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shaders / Materials</Name>
        <IssueID>5547</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
When adding a new clipping primitive to a scene it is unclear what steps need to be taken. And, what restrictions are around clipping primitives. For example, why can’t I have two clipping spheres in scene?

## Feature Area
MRTK/Standard Shader Clipping Primitives

## Existing Doc Link


## Additional context
It would be great if adding two many clipping primitives to a scene would output and error in the log.</Description>
  </Issue>
  <Issue>
    <IssueID>5546</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Kjakubzak</FixedById>
        <IssueID>5546</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>ManipulationHandler's TwoHandMoveLogic doesn't properly adjust to the ConstraintOnMovement public field changing (indicating intent to change the type of movement)</Title>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5546</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>5546</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Currently, if the user is trying to trigger far-field manipulations using the gaze pointer + ManipulationHandler and have defined the ConstraintOnMovement type as not being "FixDistanceFromHead" in the scene, the move logic's update function causes NaN errors to pop up. 

This is due to line 63 in TwoHandMoveLogic; which tries to recalculate the distance ratio based on the current hand distance (which is 0 since this is done by a gaze-driven pointer).

 A simple workaround to this issue would be to allow for dynamic setting of the ConstraintOnMovement variable that the TwoHandMovementLogic would respect when its Update function is called; much like it is for rotation constraint when the TwoHandRotationLogic Update function is called.

## To reproduce

Steps to reproduce the behavior:

1. Create an object with a ManipulationHandler object, where the constraint on movement option is anything but the "FixDistanceFromHead" type. 
2. Stare at the object, and using a voice command, spoof some pointer events (Down and Dragged) and utilize the gaze pointer as the pointer for those events to respect.
3.  See resulting NaN error

## Expected behavior

The ManipulationHandler

## Screenshots

ManipulationHelper settings the MoveConstraint type on Awake():
![image](

TwoHandRotateLogic function parameters:
![image](

TwoHandMoveLogics function parameters:
![image](


## Your Setup (please complete the following information)

- Unity Version 2018.4.4f1
- MRTK Version 2.0.0-20190730.2

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2

## Additional context

Spoke to @keveleigh about this, and since it's a small change and I know what needs to be done, I'll be making the changes for it. 
</Description>
  </Issue>
  <Issue>
    <IssueID>5545</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>5545</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>5545</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>GazeProvider is not able to be implemented as editor UI Indicates, and it's impossible to define your own GazePointer</Title>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5545</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5545</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>5545</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5545</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5545</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Right now, you are not able to properly define and set your own IMixedRealityGazeProvider in the pointer configuration. The FocusProvider implementation takes the passed in IMixedRealityGazeProvider and then casts it to the GazeProvider in UpdateGazeProvider() to call  .UpdateGazeInfoFromHit(). This causes problems for a IMixedRealityGazeProvider that's not the MRTK-defined GazeProvider.

## To reproduce

Steps to reproduce the behavior:

1. Write a new GazeProvider that implements the IMixedRealityGazeProvider class
2. Assign the new implementation to the GazeProvider option in the Pointer profile 
3. Click play, and see the casting exception occur

![image](

## Expected behavior

It doesn't throw an exception and allows you to have your own implementation of the GazeProvider. 

Also, being able to implement your own GazePointer and provide that to the GazeProvider seems like a feature that's missing; given that user-defined pointer definition is available for all other pointer types.
 
## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2018.4.4f1
- MRTK Version - mrtk_development - 2.0.0-20190730.2

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2

## Additional context

Spoke to @wiwei and @keveleigh about this already and just wanted to immortalize it in bug form. 
</Description>
  </Issue>
  <Issue>
    <IssueID>5538</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Error messages on App Bar's Adjust button click</Title>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>28/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5538</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - AppBar</Name>
        <IssueID>5538</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Error messages when the 'Adjust' Button is clicked with hand ray.
No functionality issues. (works well both in the editor and device. just messages)

## Error message
InvalidCastException: Specified cast is not valid.
Microsoft.MixedReality.Toolkit.UI.Interactable.&lt;OnEnable&gt;b__121_0 (Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer focusingPointer) (at Assets/MixedRealityToolkit.SDK/Features/UX/Interactable/Scripts/Interactable.cs:451)
System.Collections.Generic.List`1[T].RemoveAll (System.Predicate`1[T] match) (at &lt;d7ac571ca2d04b2f981d0d886fa067cf&gt;:0)
Microsoft.MixedReality.Toolkit.UI.Interactable.OnEnable () (at Assets/MixedRealityToolkit.SDK/Features/UX/Interactable/Scripts/Interactable.cs:451)
UnityEngine.GameObject:SetActive(Boolean)
Microsoft.MixedReality.Toolkit.UI.AppBarButton:SetVisible(Boolean) (at Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/AppBar/AppBarButton.cs:99)
Microsoft.MixedReality.Toolkit.UI.AppBar:UpdateButtons() (at Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/AppBar/AppBar.cs:295)
Microsoft.MixedReality.Toolkit.UI.AppBar:UpdateAppBar() (at Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/AppBar/AppBar.cs:276)
Microsoft.MixedReality.Toolkit.UI.AppBar:LateUpdate() (at Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/AppBar/AppBar.cs:194)

## To reproduce
1. Open HandInteractionExamples scene
2. Using the hand ray, click 'Adjust' button in the App Bar - one of the Bounding Box example.
3. See error message in the console

## Expected behavior
No error message

## Screenshots
&lt;img width="295" alt="2019-08-07 12_54_10-Unity 2018 4 1f1 Personal - HandInteractionExamples unity - MRTK-Public-Microsof" src="


## Your Setup (please complete the following information)

- Unity Version **2018.4.1f1**
- MRTK Version **prelease/2.0.0_stabilization**

## Target Platform (please complete the following information)
- Unity Editor
</Description>
  </Issue>
  <Issue>
    <IssueID>5534</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>White screen on load on desktop when there is no WMR headset</Title>
    <CreatedDate>07/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5534</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Hello,
I need to configure my Hololens project to make it workable on desktop. However after installing and launching the msix on my Win10 computer, the application is stuck on a white screen and it starts the official WMR application.

I don't have this problem when:
- I have a WMR headset plugged but I want to be able to use the app without headset
- Virtual Reality support is disabled in Unity project settings, but I want to have the same build for both desktop and Hololens
- Project is built for Windows standalone in Unity, but it brokes the MRTK and I want only one build

I have not tested on a computer without the official WMR application.

I tried to disable XR support at start but it does not work:

``

## To reproduce

Create a basic MRTK application, install it on a desktop computer and start it without headset.

## Expected behavior

MRTK camera is rendered on screen.

## Your Setup (please complete the following information)

- Unity Version 2019.1
- MRTK Version RC2.1

## Target Platform (please complete the following information)

- Desktop
</Description>
  </Issue>
  <Issue>
    <IssueID>5529</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Interactable Focus broken. Activates when not actually in focus</Title>
    <CreatedDate>06/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5529</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>5529</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When creating a new interactable, the component will respond to focus theme values when the object is not actually in focus. Just activating the left or hand line ray pointers into space will cause the interactable to become in "focus" even when the hand ray isn't pointing at the cube

What is odd is that the bucky ball in the InteractablesExample scene works as expected. It appears after reloading the scene or some such change, the interactable will start working as expected. So there is some default initialization value causing the odd behavior.

At first the emerald box was not working then on re-opening the scene a second time, it started working. When I created a new orange cube, that one started off broken.

![interactable-focus-bug](

![interactable-focus-bug-2](


## To reproduce

Create new scene
Add MRTK with HL2 default profile
Create cube and add interactable component
Add Target of Cube and add "Model_BuckyTheme" as theme

![image](

## Expected behavior

The model should only rotate when articulated hands actually focuses on the collider of the cube.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2018.4.5
- MRTK Version Stabilization branch

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5521</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Some Icon Materials Don't Respect Depth</Title>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5521</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
A handful of materials are using the GUI/Text Shader which does not respect the depth buffer. This results in icons drawing though other objects. This icons should use the MRTK/Standard shader and be marked as TransparentCutout or Transparent.

![image](


## To reproduce

Steps to reproduce the behavior:

1. Open the HandInteractionExamples scene.
2. Look at the ToggleFeaturesPanel from the backside.

## Expected behavior

Objects do not draw though each other (unless specified).
</Description>
  </Issue>
  <Issue>
    <IssueID>5510</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Building MRTK v2.0.0 RC2.1 with min. SDK 16299 fails</Title>
    <CreatedDate>05/08/2019</CreatedDate>
    <ClosedDate>06/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5510</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5510</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Build Window</Name>
        <IssueID>5510</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

We get errors in Visual Studio when we try to build and deploy a clean MRTK v2.0.0 RC2.1 Unity Project (with min. SDK 16299 in Unity build settings) to the HoloLens1. We need the min. SDK 16299 because our main project depends on a DLL which needs 16299 as min. SDK. 

The following errors occur: 

`18&gt;------ Build started: Project: MRTK_SDK_Test, Configuration: Release x86 ------`
`[...]`
`18&gt;  Running AssemblyConverter...`
`18&gt;  Failed to fix references for method System.Reflection.MethodInfo Microsoft.MixedReality.Toolkit.ReflectionExtensions::GetMethod(System.Type,System.String,System.Reflection.BindingFlags)`
`18&gt;  Failed to fix references for type Microsoft.MixedReality.Toolkit.ReflectionExtensions`
`18&gt;  System.Exception: Failed to resolve System.Reflection.BindingFlags`
`18&gt;     bei Unity.ModuleContext.Retarget(TypeReference type, GenericContext context)`
`18&gt;     bei Unity.FixReferencesStep.Visit(MethodDefinition method, GenericContext context)`
`18&gt;     bei Unity.FixReferencesStep.Visit(TypeDefinition type)`
`18&gt;     bei Unity.TypeDefinitionDispatcher.DispatchType(TypeDefinition type)`
`18&gt;     bei Unity.TypeDefinitionDispatcher..ctor(ModuleDefinition module, ITypeDefinitionVisitor visitor)`
`18&gt;     bei Unity.FixReferencesStep.ProcessModule()`
`18&gt;     bei Unity.ModuleStep.Execute()`
`18&gt;     bei Unity.FixReferencesStep.Execute()`
`18&gt;     bei Unity.Step.Execute(OperationContext operationContext, IStepContext previousStepContext)`
`18&gt;     bei Unity.Operation.Execute()`
`18&gt;     bei Unity.Program.Main(String[] args)`

[This answer at Stackoverflow]( stated that it should be possible to build the MRTK Project with a min. SDK at or lower as the HoloLens OS version (which in our case is 10.0.17763.615). 

In Unity forums I've found [a workaround]( with which I could resolve these errors and successfully build and deploy the MRTK v2.0.0 RC2.1 Unity Project with min. SDK 16299 on HoloLens1. 

## To reproduce

Steps to reproduce the behavior:

1. Create a new MRTK v2.0.0 RC2.1 Unity Project and scene with MixedRealityToolkit and MixedRealityPlayspace Gameobjects. 
2. Build the scene with the following build settings: 
![build-options](
3. Build the resulting VS solution with the following settings: Release, x86

## Expected behavior

The VS solution should build without errors and deploy the resulting app on HoloLens1. 

## Your Setup (please complete the following information)

- Unity Version 2018.4.5f1
- MRTK Version v2.0.0 RC2.1
- Visual Studio 2017 v. 15.9.28307.586

## Target Platform (please complete the following information)

- HoloLens 1
</Description>
  </Issue>
  <Issue>
    <IssueID>5509</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>5509</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>IMixedRealityService vs IMixedRealityDataProvider complicates service registration</Title>
    <CreatedDate>02/08/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5509</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Services</Name>
        <IssueID>5509</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The service registration process is a bit convoluted at the moment. The interfaces currently in place, to not break customers and scenarios, result in a contradictory architecture.

Much of the issue revolves around the MRTK tracking it's own services while still have the MixedRealityServiceRegistry around. Unfortunately, the MixedRealityServiceRegistry cannot register IMixedRealityDataProviders. But IMixedRealityDataProvider is just an empty interface extending IMixedRealityService.

Thus, the MRTK object is a Registrar is the class to register services &amp; data providers and the Registry is the class for storage.

However, only the services &amp; not the dataproviders can be placed in the Registry storage which is very odd. This makes it difficult to clean up the code. 

It's also strange that developers can access services in both the MixedRealityServiceRegistry  and the MRTK.GetService and MRTK.GetDataProvider. But also subsystems can also provide GetDataProvider etc

Related Issues:
#4104 

## To reproduce

## Expected behavior

Clear service registration and access as well as flexibility for people to use some services but not all of the MRTK framework

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5506</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MenelvagorMilsom</FixedById>
        <IssueID>5506</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Input simulation 'tap/press' does not work </Title>
    <CreatedDate>02/08/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5506</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input Simulation</Name>
        <IssueID>5506</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5506</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Now</Name>
        <IssueID>5506</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
When I click the mouse, instead of tap/press, the simulated hand only moves vertically.

## To reproduce
Run any scenes in the Unity editor. Click left mouse button to simulate press.

## Screenshots
![MRTK_InputSimulation2](

![MRTK_InputSimulationIssue](

## Branch
prerelease/2.0.0_stabilization</Description>
  </Issue>
  <Issue>
    <IssueID>5504</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>5504</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Bounding Box Handle asset cleanup needed for RC1/RC2 to GA upgrade</Title>
    <CreatedDate>02/08/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5504</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5504</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>5504</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Customers upgrading from RC1, RC2 to GA will see invisible handles since the asset scaling logic has been changed which requires new assets. 

</Description>
  </Issue>
  <Issue>
    <IssueID>5503</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>5503</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>"Make active instance" kills input in editor</Title>
    <CreatedDate>02/08/2019</CreatedDate>
    <ClosedDate>20/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5503</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5503</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

If try to make another gameobject with an MRTK monobehavior the active instance for the entire framework via the editor button "Make this the Active Instance", keyboard input such as camera control or hand simulation breaks. 

Note: The inactive instance does become the active instance or at least appears to.
Note: I have not tried on device to see if the API fails or only in editor

## To reproduce

Open HandINteractionExample scenes
Duplicate MRTK gameobject
Run scene
Navigate around with camera control &amp; hand simulation
On inactive MRTK instance, click "Make this the Active Instance"
Notice now no controls work

Note: Click "Make this the Active Instance" while not in play mode works

## Expected behavior

Switching instances will re-initialize MRTK framework for the new system profiles but this should not break editor interaction

## Screenshots

## Your Setup (please complete the following information)

- Unity Version 2018.4.5f1
- MRTK Version 2.0.0_Stabilization (around 8/2)

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5501</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Null Reference Exception in SystemKeyboardExample</Title>
    <CreatedDate>02/08/2019</CreatedDate>
    <ClosedDate>06/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5501</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When running the HandInteractionExamples the Unity log is spammed with null reference exceptions from the SystemKeyboardExample due to the debug text not being set up in the inspector.

## To reproduce

Steps to reproduce the behavior:

1. Run the HandInteractionExamples on a HoloLens 2.
2. Download the UnityPlayer.log
3. Notice `NullReferenceException: Object reference not set to an instance of an object.
  at Microsoft.MixedReality.Toolkit.Examples.Demos.SystemKeyboardExample.Update () [0x00000] in &lt;00000000000000000000000000000000&gt;:0 ` throughout the log.

## Your Setup (please complete the following information)

- Unity Version 2018.4.2f1
- mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>5499</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>FindMsBuildPathAsync() does not actually follow filtering criteria for bestPath</Title>
    <CreatedDate>02/08/2019</CreatedDate>
    <ClosedDate>28/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5499</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Build Window</Name>
        <IssueID>5499</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5499</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The first result from vswhere -all -products * -requires Microsoft.Component.MSBuild -property installationPath will always be returned regardless of the filter criteria.  This is because result.Output is a string array of each returned path.  The code currently then reads the first string splits on newlines and tries to filter that array by the filter criteria and return the best path.  That first line only has one msbuild install path though so it will always be returned.

## To reproduce

Steps to reproduce the behavior:

1.  Install multiple versions of Visual Studio, i.e. 2019, 2017 professional/community/enterprise etc.
2. Run vswhere -all -products * -requires Microsoft.Component.MSBuild -property installationPath from Visual Studio Installer directory.
3.  Take note of order results are returned
4. Run build appx from MRTK build window
5. Take note of msbuild version that is used (it will be the first in the list)
6.  Change the filter order in "FindMsBuildPatchAsync()" in UwpAppxBuildTools
7. Run build appx from MRTK build window
8. Notice the same msbuild version is used

## Expected behavior

The path to the current msbuild version should be returned.  Right now the script can't handle the case if Visual studio 2019 is installed and shows up earlier in the list.  The location of msbuild is slightly different in VS2019.  I have change that will fix this but also requires changing the VSTools version in the generated solution.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5497</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5497</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Interactable Themes need to allow reverting to original properties</Title>
    <CreatedDate>02/08/2019</CreatedDate>
    <ClosedDate>04/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5497</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5497</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>5497</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Visual Themes</Name>
        <IssueID>5497</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When disabling an Interactable that's using an InteractableShaderTheme, the Interactable needs to clean up all its MaterialPropertyBlocks so that the properties of the targeted material are not locked.

## To reproduce

Steps to reproduce the behavior:

1. Setup an Interactable that uses an InteractableShaderTheme
2. At runtime, disable or destroy the Interactable
3. Select the MeshRenderers material propertie that the InteractableShaderTheme was targeting and try to change its value, it will be locked from the MaterialPropertyBlock

## Expected behavior

All targeted renderer materials should be cleaned up and unlocked from the MaterialPropertyBlocks when ether disabling or destroying the Interactable script.

## Your Setup (please complete the following information)

- Unity Version 2019.1.0f2
- MRTK Version v2.0.0 RC2.1

## Target Platform (please complete the following information)

- Any</Description>
  </Issue>
  <Issue>
    <IssueID>5494</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>5494</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>ArgumentNullExceptions from within SDK when looking at objects in HoloLens</Title>
    <CreatedDate>02/08/2019</CreatedDate>
    <ClosedDate>05/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5494</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5494</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>5494</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Thousand Cuts</Name>
        <IssueID>5494</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When in a HoloLens application, the app just randomly crashes and restarts quickly, throwing an error in the output log. This usually happens just once when looking at an object in the beginning, then doesnt happen anymore. 
EDIT: Seems to happen on first detection of my hand
EDIT2: Ok nope, also happens without hand present
EDIT 3: By crashing i mean that it just throws a big exception, the view is gone for a while and then pops back up. I am interning for a company this summer working on a HoloLens project, but my internship will end soon, so I will probably not look at this again :( 

Error output: 

Exception thrown: 'System.NullReferenceException' in Microsoft.MixedReality.Toolkit.SDK.dll
'UnityTest.exe' (CoreCLR: CoreCLR_UWP_Domain): Loaded 'C:\Data\Users\DefaultAccount\AppData\Local\DevelopmentFiles\Template3DVS.Release_x86.rhelsen\System.Diagnostics.StackTrace.dll'. 
'UnityTest.exe' (CoreCLR: CoreCLR_UWP_Domain): Loaded 'C:\Data\Users\DefaultAccount\AppData\Local\DevelopmentFiles\Template3DVS.Release_x86.rhelsen\System.Reflection.Metadata.dll'. 
'UnityTest.exe' (CoreCLR: CoreCLR_UWP_Domain): Loaded 'C:\Data\Users\DefaultAccount\AppData\Local\DevelopmentFiles\Template3DVS.Release_x86.rhelsen\System.IO.FileSystem.dll'. 
'UnityTest.exe' (CoreCLR: CoreCLR_UWP_Domain): Loaded 'C:\Data\Users\DefaultAccount\AppData\Local\DevelopmentFiles\Template3DVS.Release_x86.rhelsen\System.Collections.Immutable.dll'. 
'UnityTest.exe' (CoreCLR: CoreCLR_UWP_Domain): Loaded 'C:\Data\Users\DefaultAccount\AppData\Local\DevelopmentFiles\Template3DVS.Release_x86.rhelsen\System.IO.FileSystem.Primitives.dll'. 
'UnityTest.exe' (CoreCLR: CoreCLR_UWP_Domain): Loaded 'C:\Data\Users\DefaultAccount\AppData\Local\DevelopmentFiles\Template3DVS.Release_x86.rhelsen\System.Runtime.Handles.dll'. 
'UnityTest.exe' (CoreCLR: CoreCLR_UWP_Domain): Loaded 'C:\Data\Users\DefaultAccount\AppData\Local\DevelopmentFiles\Template3DVS.Release_x86.rhelsen\System.Threading.Overlapped.dll'. 
Exception thrown: 'System.IO.FileLoadException' in System.Private.CoreLib.ni.dll
Exception thrown: 'System.IO.FileLoadException' in System.Private.CoreLib.ni.dll
NullReferenceException: Object reference not set to an instance of an object.
   at Microsoft.MixedReality.Toolkit.Input.GGVPointer.OnPreSceneQuery()
   at Microsoft.MixedReality.Toolkit.Input.FocusProvider.UpdatePointer(PointerData pointer)
   at Microsoft.MixedReality.Toolkit.Input.FocusProvider.UpdatePointers()
   at Microsoft.MixedReality.Toolkit.Input.FocusProvider.Update()
   at Microsoft.MixedReality.Toolkit.MixedRealityToolkit.&lt;&gt;c.&lt;UpdateAllServices&gt;b__68_0(IMixedRealityService service)
   at Microsoft.MixedReality.Toolkit.MixedRealityToolkit.ExecuteOnAllServices(Action`1 execute)
   at Microsoft.MixedReality.Toolkit.MixedRealityToolkit.UpdateAllServices()
   at Microsoft.MixedReality.Toolkit.MixedRealityToolkit.Update()
   at Microsoft.MixedReality.Toolkit.MixedRealityToolkit.$Invoke53(Int64 instance, Int64* args)
   at UnityEngine.Internal.$MethodUtility.InvokeMethod(Int64 instance, Int64* args, IntPtr method) 
(Filename: &lt;Unknown&gt; Line: 0)

Creating controller model from platform SDK
 
(Filename: C:\buildslave\unity\build\Runtime/Export/Debug.bindings.h Line: 45)


Failed to obtain controller model from driver
 
(Filename: C:\buildslave\unity\build\Runtime/Export/Debug.bindings.h Line: 45)


Failed to create controller model from driver, defaulting to BaseController behavior
 
(Filename: C:\buildslave\unity\build\Runtime/Export/Debug.bindings.h Line: 45)


Creating controller model from platform SDK
 
(Filename: C:\buildslave\unity\build\Runtime/Export/Debug.bindings.h Line: 45)


Exception thrown: 'System.ArgumentNullException' in System.Runtime.WindowsRuntime.dll
Exception thrown: 'System.ArgumentNullException' in System.Private.CoreLib.ni.dll
ArgumentNullException: Value cannot be null.
Parameter name: source
   at System.WindowsRuntimeSystemExtensions.AsTask[TResult](IAsyncOperation`1 source, CancellationToken cancellationToken)
   at Microsoft.MixedReality.Toolkit.WindowsMixedReality.Input.WindowsMixedRealityController.&lt;CreateControllerModelFromPlatformSDK&gt;d__11.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.&lt;&gt;c.&lt;ThrowAsync&gt;b__6_0(Object state)
   at UnityEngine.UnitySynchronizationContext.WorkRequest.Invoke() 
(Filename: &lt;Unknown&gt; Line: 0)




## To reproduce

Steps to reproduce the behavior:

1. HoloLens app running
2. Look at something

## Expected behavior

No random ArgumentNullExceptions from within the SDK.


## Your Setup (please complete the following information)

- Unity Version 2018.4.4f1
- MRTK Version v2.0 RC2.1

## Target Platform (please complete the following information)

- HoloLens
</Description>
  </Issue>
  <Issue>
    <IssueID>5491</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>IMixedRealityController does not have a TryGetTransform-like interface</Title>
    <CreatedDate>01/08/2019</CreatedDate>
    <ClosedDate>
    </ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5491</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>5491</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5491</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The IMixedRealityHand has a TryGetJoint() function to get the transform for various joints. However, the IMixedRealityController interface has no means to get some kind of default controller transform. 

To get a controller's position, one has to do IMixedRealityController.Visual.GameObjectProxy.transform currently to try to solve this which also requires us to check null for each and not exactly a reliable accessor method. 

Also, WindowsMixedRealityController.cs does not seem to have an easy interface to get any transforms on the controller. It appears to only track internally those kind of properties internally?

## To reproduce

Look at IMixedRealityController inteface

## Expected behavior

There should be a way to get the "general" transform of a controller easily

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2018.4.5
- MRTK Version latest mrtk_development at time of bug opening

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5489</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>lukastoenneMS</FixedById>
        <IssueID>5489</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>In-Editor Input simulation does not allow for head tilt/camera roll</Title>
    <CreatedDate>01/08/2019</CreatedDate>
    <ClosedDate>21/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>5489</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>5489</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5489</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

From the [documentation]( it doesn't look like head tilting (camera roll) is something that's supported:

![image](

Here's what's desired:
![image](

This is also something that's supported in the [HL simulator](

![image](

This is critical to be able to test out code that more accurately mimics user's head movement without having to deploy onto a physical HMD.

## Describe the solution you'd like

Extend `ManualCameraControl.GetCameraControlRotation` ([source]( to include additional keys that supports this:

``

## Describe alternatives you've considered

N/A

## Additional context

N/A
</Description>
  </Issue>
  <Issue>
    <IssueID>5486</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Write Unit Tests for BoundsExtensions</Title>
    <CreatedDate>01/08/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5486</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Tests</Name>
        <IssueID>5486</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Following up from PR #5307, it would be good to write up unit tests for methods in BoundingBoxExtensions class.

</Description>
  </Issue>
  <Issue>
    <IssueID>5485</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>lukastoenneMS</FixedById>
        <IssueID>5485</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>In-Editor camera/hand simulation can get into a bad state when the mouse goes out of the Unity Editor window. </Title>
    <CreatedDate>01/08/2019</CreatedDate>
    <ClosedDate>06/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5485</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>5485</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>5485</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Won't Fix</Name>
        <IssueID>5485</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

One of our developers observed that the hand simulation can get into a bad state when the mouse goes out of the Unity Editor window. Specifically, when enabling mouse look (Mouse Right Click), Left Hand Manipulate (Left Shift), Pinch (Mouse Left Click) to drag an object in the HandInteractionExamples scene until the mouse is outside of the Unity Editor window. Releasing all would still result in mouse look state still being active.

## To reproduce

Steps to reproduce the behavior:

1. Run the HandInteractionExamples scene
2. Grab an object with Mouse Right Click, Left Shift + Mouse Lift Click
3. Start dragging the object until the mouse cursor leaves the Unity Editor
4. Release Mouse Right &amp; Left Click &amp; Left Shift

## Expected behavior

Mouse movement no longer triggers mouse look

## Actual behavior

Mouse movement continues to drive camera

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [2018.4.4f1]
- MRTK Version [Microsoft.MixedReality.Toolkit.Foundation 2.0.0-20190730.2]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2

## Additional context</Description>
  </Issue>
  <Issue>
    <IssueID>5263</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>OpenVR mapping for Oculus is incorrect - maps buttons to axis</Title>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5263</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Help Wanted</Name>
        <IssueID>5263</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

During testing of Oculus under OpenVR, it was discovered that some of the mappings were incorrect, mapping Button Presses (digital) to Axis data (float)

## To reproduce

Steps to reproduce the behavior:

1. Run on OpenVR using Oculus hardware

## Expected behavior

It should work

## Your Setup (please complete the following information)

- Unity Version 2018.4.1
- MRTK Version v2.0

## Target Platform (please complete the following information)

- OpenVR

## Additional context

Resolved recently in the XRTK</Description>
  </Issue>
  <Issue>
    <IssueID>5262</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Is unity getting support for passthrough from tracking cameras?</Title>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>External</Name>
        <IssueID>5262</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5262</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Since newest update we can use flashlight in WMR immersive headsets
Could we in some future acces the same cameras through api in unity?
It would really justify using "mixed reality" in the name of this line of products.</Description>
  </Issue>
  <Issue>
    <IssueID>5260</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Double cursor with Keyboard system</Title>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>23/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5260</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5260</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>5260</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Gaze</Name>
        <IssueID>5260</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Keyboard</Name>
        <IssueID>5260</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5260</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When the Keyboard System is visible, a cursor appear with it (in addition to the application's cursor by default). When your gaze leave the keyboard, this cursor keep visible but you got the application's one with.

## To reproduce

Steps to reproduce the behavior:

1 : Instanciate Keyboard system.
2 : Show the keyboard.

## Expected behavior

One cursor at a time.

## Screenshots

When you keep your cursor and your gaze on the keyboard :
![20190710_165450_HoloLens](

When your cursor and your gaze leave it (The little white point come from the keyboard and the circle from the application):

![20190710_165455_HoloLens](
![20190710_165458_HoloLens](

## Your Setup

- Unity Version 2018.3.14f1
- MRTK Version RC2.1

## Target Platform

- HoloLens

Tell me if you need more information !
Thank you</Description>
  </Issue>
  <Issue>
    <IssueID>5257</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>5257</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Hand menu should not show up if user is manipulating something with hands</Title>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5257</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5257</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>5257</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Hand Menu</Name>
        <IssueID>5257</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The hand menu shows up when users grab and manipulate objects. The menu should now show up if a pointer is locked / if a hand is manipulating something.

</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>5257</IssueID>
        <PullRequestID>4532</PullRequestID>
        <Title>Hand Constrained Solver (useful for Hand UI)</Title>
        <Description>## Overview
These changes introduce a new type of solver called "HandConstraint." The HandConstraint provides a solver that constrains the tracked object to a region safe for hand constrained content. (Such as hand UI/menus.) Safe regions are considered areas that don't intersect with the hand.

HandUIExample Scene:

![handmenu](

A derived class of HandConstraint called "HandConstraintPalmUp" is also included to demonstrate a common behavior of activating the solver tracked object when the palm is facing the user. For example use of this behavior please see the HandUIExample scene.

![image](

Finally, a new utility class called "HandBounds" has been added to help classes access the AABB bounds of the articulated hands. 

## Changes
- Fixes:  


## Verification
Please check out the HandUIExample scene to verify example use of the solver.
</Description>
        <CreatedDate>22/05/2019</CreatedDate>
        <ClosedDate>01/06/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>DDE Partner</Name>
            <IssueID>5257</IssueID>
            <PullRequestID>4532</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>julenka</FixedById>
            <PullRequestID>4532</PullRequestID>
            <IssueID>5257</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
          <PullRequestAssignee>
            <FixedById>radicalad</FixedById>
            <PullRequestID>4532</PullRequestID>
            <IssueID>5257</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
          <PullRequestAssignee>
            <FixedById>Railboy</FixedById>
            <PullRequestID>4532</PullRequestID>
            <IssueID>5257</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
          <PullRequestAssignee>
            <FixedById>davidkline-ms</FixedById>
            <PullRequestID>4532</PullRequestID>
            <IssueID>5257</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
          <PullRequestAssignee>
            <FixedById>cre8ivepark</FixedById>
            <PullRequestID>4532</PullRequestID>
            <IssueID>5257</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>5257</IssueID>
        <PullRequestID>5416</PullRequestID>
        <Title>Refactor SolverHandler to fix multiple issues</Title>
        <Description>## Overview

The solver system has many issues (most of which are posted on GitHub). One of the key limitations for the feature is involved in the SolverHandler class. This change addresses multiple issues:

- Cleaner understanding of what kind of target type is active
=&gt; Simpler types =&gt; Head, MotionController, HandJoint, &amp; CustomOverride
=&gt; Inspector now shows valid sub-properties based on the target type

- Developers can define order of solvers in code (via SetSolvers)
- Solvers can now be correctly tracked/instantiated at runtime dynamically
- Solvers can now follow any hand or motion controller (defaults to Left first if set to Both/Any)
- Removed OnValidate from Solver.cs as this is generally poor practice and give inconsistent results
- Removed nonexisting property for InBetween.cs
- Added solvertests to tests package (See verification section below for details)

- Fixed SurfaceMagnetism 
=&gt; Renamed properties to not assume always head tracked transform
=&gt; Created new inspector to make properties easier to understand &amp; group
=&gt; Updated MaxDistance for raycast default from 3m to 50m
=&gt; Updated default Raycast Direction Mode to Tracked Target Forward (ray along head gaze or hand pointer, etc)
- Fixed InBetween
=&gt; Updated names to be clearer
=&gt; Updated refresh of second solver to be accurate
=&gt; Updated tooltips to be accurate
=&gt; Modified inspector to extend from SolverInspector

**NOTE:** This changes property names and will break any existing code that tried to extend Solvers themselves

New Solver Handler Targeting
![tracked-target-type](

Hand Switching Feature:
![hand-switching](

New Editor Inspectors:
![surface-mag-inspector](

![InBetween](

New Solver Tests:
![image](

## Changes
- Fixes: #5141 , #5110 , #4642 , #4788 , #5143 

## Verification
Added Solver Tests! 

Furthermore, I will follow up this PR with another one to fix the Solver Example scene which is mostly broken.
- Test dynamic instantiation of solver (Orbital)
- Test switch hands (Orbital)
- Test switch target types at runtime (Orbital)
- Test SurfaceMagnetism (simple raycast against "wall" tracked against head*)
- Test InBetween (between two cubes &amp; modifies PartwayOffset)

Tested basic functionality manually
- VR Motion Controllers
- Editor Hands Simulation
- HL2 Hands on Device
- Custom override with transform in scene
- Dynamically add component to gameobject (both in scene editor &amp; via c# code)
- Modify SolverHandler values in Inspector at runtime

&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>24/07/2019</CreatedDate>
        <ClosedDate>01/08/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>BREAKING CHANGE</Name>
            <IssueID>5257</IssueID>
            <PullRequestID>5416</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Solvers</Name>
            <IssueID>5257</IssueID>
            <PullRequestID>5416</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>Troy-Ferrell</FixedById>
            <PullRequestID>5416</PullRequestID>
            <IssueID>5257</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>5257</IssueID>
        <PullRequestID>5500</PullRequestID>
        <Title>Moving the HandConstraint Solver from Experimental to Release</Title>
        <Description>## Overview
This pull request moves the HandConstraint  (and HandConstraintPalmUp) solver from Experimental to Release by adding tests, documentation, and a handful of bug fixes and improvements. Functionality remains pretty much the same from the previous pull request ( and utilizes solver fixes from @Troy-Ferrell's (

The solver has also be genericized to work with motion controllers.

Thank you @julenka for guidance on how to write unit tests that utilize hands!

## Changes
- Fixes:    


## Verification
Please try HandBasedMenuExample scene.
&gt;
&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>02/08/2019</CreatedDate>
        <ClosedDate>09/08/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Solvers</Name>
            <IssueID>5257</IssueID>
            <PullRequestID>5500</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Solvers - HandConstraint</Name>
            <IssueID>5257</IssueID>
            <PullRequestID>5500</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>julenka</FixedById>
            <PullRequestID>5500</PullRequestID>
            <IssueID>5257</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>5256</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5256</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>glTF examples issues</Title>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5256</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
glTF models take about 1/3 to 1/2 of the examples project size.
The BoomBox glTF model is not used locally and is actually downloaded over the internet to be loaded.
The glTF loading example executes onvalidate() and automatically copies files into user's streamingassets folder.

## To reproduce

## Expected behavior

Reduce assets to minimum needed
Provided better information in gltf scene
Remove onvalidate() and make it user acknowledged action

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5255</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>5255</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Provide example of how to use button to cycle through different configurations / settings</Title>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5255</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Provide example of how to use button to cycle through different configurations / settings
</Description>
  </Issue>
  <Issue>
    <IssueID>5254</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>5254</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Create a toggle pressable button prefab for HoloLens 2</Title>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>15/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>5254</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>5254</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
A few people have asked how to implement a pressable button with a toggle state. We should make a prefab that people can use that's a toggle version of HoloLens2PressableButton.

* The button would be similar to HoloLens2PressableButton, but with toggle functionality on Interactable enabled. 
* The button should also visually change state when the toggle button is disabled</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>5254</IssueID>
        <PullRequestID>5457</PullRequestID>
        <Title>[Shell Parity] Adding HoloLens 2 shell-parity Toggle button</Title>
        <Description>## Overview
Currently, MRTK only has HoloLens 1 style toggle button. Adding HoloLens 2 shell-parity Toggle button.

- Created a new prefab variant **PressableButtonHoloLens2Toggle.prefab**
- Added related theme files and material

## Changes
- Fixes: #5254 

## Video
![MRTK_ToggleButtonHoloLens2](

## What's added to this prefab variant?
Added additional quad for visualizing the toggle state(sky blue). The visibility is controlled by PressableButtonToggleStateOff and On theme files.
![2019-07-29 16_00_17-Unity 2018 4 2f1 Personal - PressableButtonExample unity - MRTK-Public-Microsoft](

![2019-07-29 15_59_42-Unity 2018 4 2f1 Personal - PressableButtonExample unity - MRTK-Public-Microsoft](

![2019-07-29 16_13_04-Unity 2018 4 2f1 Personal - PressableButtonExample unity - MRTK-Public-Microsoft](

</Description>
        <CreatedDate>29/07/2019</CreatedDate>
        <ClosedDate>31/07/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Customer Feedback</Name>
            <IssueID>5254</IssueID>
            <PullRequestID>5457</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Hack Week</Name>
            <IssueID>5254</IssueID>
            <PullRequestID>5457</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Shell Parity</Name>
            <IssueID>5254</IssueID>
            <PullRequestID>5457</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>UX Controls - Buttons</Name>
            <IssueID>5254</IssueID>
            <PullRequestID>5457</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>cre8ivepark</FixedById>
            <PullRequestID>5457</PullRequestID>
            <IssueID>5254</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>5253</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>5253</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Toggle features prefab references files in Examples folder</Title>
    <CreatedDate>10/07/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5253</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5253</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The toggle features panel is located in Assets/**MixedRealityToolkit.SDK**/Features/UX/Prefabs/Panels/ToggleFeaturesPanel.prefab however it references two scripts that are in the examples folder:

* Assets/MixedRealityToolkit.Examples/Demos/HandTracking/Script/ToggleHandVisualisation.cs
* Assets/MixedRealityToolkit.Examples/Demos/Diagnostics/Scripts/DiagnosticsDemoControls.cs

Because the prefab is in the .SDK folder the code should be in the SDK folder.
</Description>
  </Issue>
  <Issue>
    <IssueID>5252</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>5252</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>GazeProvider GazeTarget returns null when articulated hands are up</Title>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5252</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5252</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Many customers use GazeProvider to know what user is looking at by examining where the head ray is pointing. For example, Experimental/Features/Utilities/StabilizationPlaneModifier.cs uses the GazeProvider to determine where to place the LSR stabilization plan for Hololens.

The `GazeProvider.GazeTarget` is filled in on startup, but then becomes null whenever articulated hands are present, even though Gazeprovider is enabled.

## Steps to reproduce
You can use the following class to print the gaze target 

``
2. Place a cube at 0, 0, 3, attach the GazeProviderDebug script to the cube.
3. Press play, look at console, notice the following messages:

gazeprovider enabled: True target: Cube (UnityEngine.GameObject)

4. Bring up articulated hand, look at console, notice messages

gazeprovider enabled: True target: 

## Expected Behavior
Even when the articulated hands are up, the console output should read:

gazeprovider enabled: True target: Cube (UnityEngine.GameObject)


</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>5251</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>lukastoenneMS</FixedById>
        <IssueID>5251</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>PointerClickHandler and PointerHandler are almost identical, very confusing</Title>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>18/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5251</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>5251</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5251</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
There are two scripts located under Assets\MixedRealityToolkit.SDK\Features\Input\Handlers which are nearly identical, `PointerHandler` and `PointerClickHandler`. We should depracate/delete the PointerClickHandler class to reduce confusion regarding which class to use.

We should remove PointerClickHandler in favor of PointerHandler for three reasons:

* Both classes expose Unity events for listening to pointer events (down, up, clicked, etc.), though only PointerHandler can be configured via code (PointerClickHandler requires setup in the designer because the InputActionEventPair fields in PointerClickHandler are private.
* PointerClickHandler naming is misleading -- the class responds to all input events, but the naming leads devs to believe it is only for click events.
* PointerClickHandler requires devs to specify an input action for every event, the default action is None. Several devs did not notice this input action field for the event handlers, and did not change it from "None". Unless the input action field is configured properly, the events will not respond to most inputs.

</Description>
  </Issue>
  <Issue>
    <IssueID>5246</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Windows SDK 18362 on Hololens 1 (build with MRTKv2 RC2.1)</Title>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>28/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5246</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5246</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Build Window</Name>
        <IssueID>5246</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>5246</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Thousand Cuts</Name>
        <IssueID>5246</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When building the ObjectCollection sample in unity it builds correct, when deploying in vs2017 to HoloLens 1. I get folowing two errors described in the screenshot. 

## To reproduce

Steps to reproduce the behavior:

1. Go to 'ObjectCollection Sample.'
2. Place Object Collection Sample in Build Settings
3. Build the application with MRTK Build Menu
4. Open visual studio project in VS2017
5. Deploy application to HoloLens 1
6. See Errors

## Expected behavior

A deploy at HoloLens 1 without compile errors in VS 2017

## Screenshots

![image](
![image](
![image](


## Your Setup (please complete the following information)

- Unity Version [e.g. 2019.7.1f1]
- MRTK Version [e.g. v2.0.0 RC 2.1]
- VS2017 15.9.13

## Target Platform (please complete the following information)

- HoloLens

## Additional context

I have tried both the recommend settings for MRTK 2.0.0 RC 2.1 and the build settings for HoloLens 1
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>5243</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MenelvagorMilsom</FixedById>
        <IssueID>5243</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Tests for objects being disabled or destroyed during interaction</Title>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>24/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>5243</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5243</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Tests</Name>
        <IssueID>5243</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>5243</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>ManipulationHandler does not seem to gracefully handle the case where an object gets destroyed while it is manipulated. I assume this situation exists with many other interactions, e.g. buttons being disabled on click.

Augment tests for ManipulationHandler, Touchable, Grabbable, PressableButton, etc. where the GameObject is disabled or destroyed during the interaction, and make sure the handlers catch this case and stop the interaction when needed.</Description>
  </Issue>
  <Issue>
    <IssueID>5240</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>lukastoenneMS</FixedById>
        <IssueID>5240</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Hand needs to be way too close to grabbable before hand ray disappears</Title>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>18/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>5240</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5240</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
return UnityEngine.Physics.CheckSphere(position, SphereCastRadius, ~UnityEngine.Physics.IgnoreRaycastLayer);
`</Code>
    <Description>## Overview
The hand ray currently only turns off when the hand is incredibly close to a grabbable, when the hand is ~1cm near a grabbable. The ray should turn off when the hand is ~10cm near a grabbable.

This should be implemented by having a separate radius for turning off the line ray, separate from the radius that is used for doing a query for determining what to grab.

Currently, SpherePointer.IsNearObject contains the following:

``

Instead of `SphereCastRadius` (used when determining grab start/edn), we should use a different radius `HandRayOffRadius`.


## Expected Behavior
The ray should turn off when hand is ~10cm near a grabbable
![image](

## Actual Behavior
Ray is still on, even when hand is very close to grabbable
![image](


## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>5239</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>5239</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Clipping plane not working on Hololens 1 in some cases</Title>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>12/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5239</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

I am trying to add a clipping plane feature in my application using the MRTK standard shader. It works very well in the editor but once in the Hololens it doesn't.

I tried to build the project with the material gallery demo scene and here the clipping plane works. I surely missed something and maybe it's not a MRTK bug, but I can't figure what is the problem.

## Screenshots

in the editor

![image](

![image](

I am using the shader from  #4946

in the Hololens 1

![image](


## Expected behavior

Clipping plane works as in the editor

## Your Setup (please complete the following information)

- Unity Version 2019.1.8
- MRTK Version RC2.1

## Target Platform (please complete the following information)

- HoloLens 1

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5238</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>lukastoenneMS</FixedById>
        <IssueID>5238</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Write tests that combine multiple instances and types of touchables</Title>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>03/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5238</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>5238</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5238</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Tests</Name>
        <IssueID>5238</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>#5217 was a regression that could have been detected by testing multiple touchables in the same scene.

Test the following scenarios:
1. Multiple touchables facing the same direction. Make sure the closest one is activated.
1. Multiple touchables facing different directions (both concave and convex arrangement). Make sure normals are returned correctly and closest touchable is detected correctly.
1. Multiple _types_ of touchables (rect, volume, UnityUI) in the same scene. Make sure they work well together.</Description>
  </Issue>
  <Issue>
    <IssueID>5236</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>5236</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>5236</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Slate - when panning with hand ray, the ray sticks to slate</Title>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>05/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5236</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5236</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>5236</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Help Wanted</Name>
        <IssueID>5236</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Slate</Name>
        <IssueID>5236</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When panning with hand rays, the rays should not stick to the pannable texture.

## Expected Behavior
![PanStic_actual](

## Actual Behavior
![PanStic](

</Description>
  </Issue>
  <Issue>
    <IssueID>5235</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>OnPointerClicked's IMixedRealityPointerHandler is called even after a long drag</Title>
    <CreatedDate>09/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5235</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
When implementing interface `IMixedRealityPointerHandler`, `OnPointerUp` and `OnPointerClicked` are always called together: this means that even after a long gesture (drag, manipulation, long tap), the `OnPointerClicked` method is called.

## To reproduce

Steps to reproduce the behavior:

1. Add a script implementing `IMixedRealityPointerHandler` that logs calls to `OnPointerClicked`
2. Run the scene and do a long gesture
3. `OnPointerClicked` is always called.

## Expected behavior

We would expect `OnPointerClicked` to be called only when the gesture is short (the delay between `OnPointerDown` and `OnPointerUp` should be small) and stationary (it's a click and not a swipe).   
Despite the name difference, as of now, `OnPointerUp` and `OnPointerClicked` are identical in their use.


## Screenshots

![2019-07-09_10-05-32](


## Your Setup
- Unity Version [e.g. 2018.4.2f1]
- MRTK Version [e.g. v2.1]

## Target Platform

- HoloLens
- HoloLens 2

</Description>
  </Issue>
  <Issue>
    <IssueID>5232</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ManipulationHandler hand ray z-movement does not match the shell</Title>
    <CreatedDate>08/07/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5232</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5232</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>5232</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5232</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - ObjectManipulator</Name>
        <IssueID>5232</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When moving an object in depth using the hand ray, the acceleration does not match the shell. You can move an object much farther in depth when in the shell. In MRTK, moving hand in depth leads to only small object movements.

</Description>
  </Issue>
  <Issue>
    <IssueID>5226</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK 2 generates errors on Hololens 1</Title>
    <CreatedDate>08/07/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5226</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5226</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>5226</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Thousand Cuts</Name>
        <IssueID>5226</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When starting my application using MRTK 2 on Hololens 1, I get some errors thant does'not occur in the editor (we capture them with a custom log tool). I have not noticed any feature of the MRTK2 that would be affected by this, everything seems to work fine.

``

## Expected behavior

No errors

## Your Setup (please complete the following information)

- Unity Version 2019.1.8
- MRTK Version RC2.1

## Target Platform (please complete the following information)

- HoloLens 1
</Description>
  </Issue>
  <Issue>
    <IssueID>5225</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to connect HoloLens to server via TCP/IP?</Title>
    <CreatedDate>08/07/2019</CreatedDate>
    <ClosedDate>08/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>5225</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi guys,
I am a beginner in this field. I want to know there is a tutorial that explains to me, how can I connect HoloLens to a server on the network using TCP/IP to exchange data between them.
Thnx</Description>
  </Issue>
  <Issue>
    <IssueID>5223</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>5223</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>PressableButtonHololens2 is used in our example projects a lot and confuses users on other platforms.</Title>
    <CreatedDate>08/07/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5223</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>5223</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5223</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>5223</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

PressableButtonHololens2 is for example integrated into Slate and is our default button for the example scenes. There's users working with Windows Mixed Reality Headsets / Hololens 1 and it's not clear to them if they should use these buttons and components. We should either rename that button or add some info about that in the documentation. (also state which features might not work if used on other platforms)


## Expected behavior

- we should only use components suitable for all supported platforms in our generic sample scenes. I would only expect platform specific components in a platform specific example scene.


## Your Setup (please complete the following information)

- MRTK Version v2 RC2.1

## Target Platform (please complete the following information)

- HoloLens
- WMR immersive
- OpenVR

</Description>
  </Issue>
  <Issue>
    <IssueID>5222</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Copying assembly InputSimulation.Editor.dll failed</Title>
    <CreatedDate>08/07/2019</CreatedDate>
    <ClosedDate>08/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5222</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Copying assembly from 'Temp/Microsoft.MixedReality.Toolkit.Services.InputSimulation.Editor.dll' to 'Library/ScriptAssemblies/Microsoft.MixedReality.Toolkit.Services.InputSimulation.Editor.dll' failed

## To reproduce

Steps to reproduce the behavior:

1. Create a new project with Unity 2019.1.8f1
2. Import MRTK 2.0.0 RC2.1 Foundation + Examples
3. Search in the Assets browser for Slate.prefab
4. Drag it into the Hierarchy view to create an instance

## Expected behavior

No error message

## Your Setup (please complete the following information)

- Unity 2019.1.8f1
- MRTK Version 2.0.0 RC2.1

## Target Platform (please complete the following information)

Editor issue

## Workaround

Restart Unity several times and/or try to manually copy the file. The error message eventually went away.
</Description>
  </Issue>
  <Issue>
    <IssueID>5219</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>5219</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>ManipulationHandler Far interaction "Rotate using wrist" no longer works</Title>
    <CreatedDate>08/07/2019</CreatedDate>
    <ClosedDate>06/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5219</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5219</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - ObjectManipulator</Name>
        <IssueID>5219</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
If ManipulationHandler one hand rotation mode is configured as "rotate using wrist", the object does not rotate with the wrist when using far interaction

## Steps to reproduce
1. Open HandInteractionExamples scene, and notice that the earth is configured with "One Hand Rotation Mode Far" as "Rotate around Grab Point"
![image](
2. Grab globe with ray and rotate hand

Expected: globe rotates

Actual: nothing rotates
</Description>
  </Issue>
  <Issue>
    <IssueID>5218</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>5218</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[Shell-Parity] Adjust fingertip proximity light size/color</Title>
    <CreatedDate>08/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5218</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Adjust fingertip proximity light size/color to match the latest updates in the shell.

Part of Shell-Parity UX Items #4200 
</Description>
  </Issue>
  <Issue>
    <IssueID>5217</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>lukastoenneMS</FixedById>
        <IssueID>5217</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Hand ray dead zone in HandInteractionExamples</Title>
    <CreatedDate>08/07/2019</CreatedDate>
    <ClosedDate>08/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5217</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5217</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5217</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
There is a dead-zone where hand ray disappears even though it is not in the NearInteractionTouchable/Grabbable zone. When I remove the Unity UI example from the scene, it works well. It seems like something is wrong with Unity UI example updates.

## To reproduce
1. Start HandInteractionExamples scene
2. Raise hand to make the hand ray visible
3. Rotate to left

## Video
![MRTK_HandRayBug](


## Branch
mrtk_development
</Description>
  </Issue>
  <Issue>
    <IssueID>5216</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>5216</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Write a test to ensure voice commands work in MRTK</Title>
    <CreatedDate>08/07/2019</CreatedDate>
    <ClosedDate>07/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>5216</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Speech</Name>
        <IssueID>5216</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Tests</Name>
        <IssueID>5216</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
This is a follow-up task for bug #5176, which was caused by a regression in PR  #5132. 

We should write a test to ensure that changes to MRTK do not break the ability to use voice commands.

The test would do the following:

- Run a scene that has MRTK, with default voice commands.
- Trigger a voice command that is registered in the voice commands list, such as "menu" or "select" (keyboard keys '1' and '2').
- Ensure that the voice command event gets raised.

Here is an example test:

- Create a gameobject, add a component that listens for voice commands, and simulate pressing the '1' key (in editor, pressing '1' simulates a voice command 'select'). Ensure that the component received the 'select' keyword.

In case simulating keyboard buttons is not possible in Unity, here is a second idea:

- In the voice data provider, throw an exception if voice system is not enabled, then in the test load up a scene and ensure no exceptions get thrown.
</Description>
  </Issue>
  <Issue>
    <IssueID>5214</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK's ReadOnlyAttribute conflicts with Unity Entities' Jobs and Hybrid Renderer packages</Title>
    <CreatedDate>05/07/2019</CreatedDate>
    <ClosedDate>08/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5214</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Library\PackageCache\com.unity.rendering.hybrid@0.0.1-preview.4\Unity.Rendering.Hybrid\LODGroupSystem.cs(31,41): error CS0592: Attribute 'ReadOnly' is not valid on this declaration type. It is only valid on 'field' declarations.
`</Code>
    <Description>## Describe the bug

If either the Jobs or Hybrid Renderer package are installed on a project that includes MRTK then you will receive a CS0592 warning in both packages.

``

## To reproduce

Steps to reproduce the behavior:

1. Start with a blank Unity project with MRTK.
2. Click on Window &gt; Package Manager to open the package manager window.
3. In the package manager window click on the Advanced combo box and select or make sure the Show Preview Packages option is enabled.
4. Search and install either, or both, Hybrid Renderer and Jobs package(s).
5. See error in Console after package(s) finish installing.

## Expected behavior

ReadOnlyAttribute namespace should not conflict. I would assume the MRTK ReadOnlyAttribute would be wrapped in a namespace. Any reason it's not?

I would say the error also falls on Unity's side as well. They should really move their `using ReadOnlyAttribute = Unity.Collections.ReadOnlyAttribute;` inside the namespace. Best way to provide this feedback to them?

## Screenshots

N/A

## Your Setup (please complete the following information)

- Unity Version [2018.4.2f1]
- MRTK Version [RC1]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>5213</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>5213</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>OnManipulationEnded doesn't fire for rotation or scale</Title>
    <CreatedDate>05/07/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5213</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5213</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Description

The ManipulationHandler event OnManipulationEnded doesn't seem to fire at the end of a rotation or scale, only at the end of an object translation.

## To reproduce

Create a component which, on Start, adds a BoundingBox and ManipulationHandler components. For example:

``

Implement `FinishManipulation(ManipulationEventData)` to do something clearly visible (e.g. return the object to its starting point).

Attach the component to an object (e.g. cube) in the scene and run the scene.

If you move the object, its FinishManipulation gets called. If you rotate or scale the object using the boundingbox handles, the object will be properly rotated or scaled, but there will be no callback at the end.

## Expected behavior

ManipulationEnded event should fire for any type of manipulation.

## Your Setup (please complete the following information)

- Unity Version [2018.4.1f1]
- MRTK Version [e.g. mrtk_development, 2019-07-05, rc2.1]

## Target Platform (please complete the following information)

- HoloLens
</Description>
  </Issue>
  <Issue>
    <IssueID>5212</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>googlan</FixedById>
        <IssueID>5212</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Need to set application tick rate to get certain tests to pass</Title>
    <CreatedDate>05/07/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5212</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5212</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5212</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Tests</Name>
        <IssueID>5212</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
In `BaseCursorTests` the following line of code is required in `SetUp` in order to get the tests to Pass:
``
Removing this causes the tests to fail on CI.

You can see the an unsuccessful build without this line [here]( and a successful build with this line [here](</Description>
  </Issue>
  <Issue>
    <IssueID>5210</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hololens can´t connect to the SharingTest example scene</Title>
    <CreatedDate>05/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5210</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The sharing service gets the following error when i boot my hololens through the sln file from my build and the hololens wont connect

Error : SharingService: Created Session "Default" with ID 0 on port 20601
SharingService: Created Session "DefaultSession" with ID 1 on port 20600
SharingService: User Test at address 127.0.0.1 joined session DefaultSession
SharingService: ListServer: Handshake failed with error 1

## To reproduce

Steps to reproduce the behavior:

1. install holoToolkit release
2. Open SharingTest example scene
3. Start SharingService.exe
4. Boot to hololens through sln file from your build

Expected behaviour : The "ManualIPConfigUtility" will show on my hololens that i am connected and the anchor text will say that it has successfully uploaded my anchor "worldstage" so that other hololenses can join my session

My setup:

- Unity Version  2017.2.5
- MixedRealityToolkit-Unity-htk_release

and Yes the firewall is not blocking any of the sharingservice and i have all the right capabilities 
thanks to @StephenHodgson youtube video "HoloToolkit for Unity Live Sream Tutorial Series 003"</Description>
  </Issue>
  <Issue>
    <IssueID>5208</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Airtap\Select not working on Hololens 1 device</Title>
    <CreatedDate>05/07/2019</CreatedDate>
    <ClosedDate>19/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5208</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5208</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>5208</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Airtap is not working when the project is built on Hololens 1. But it seems to work when using holographic Emulation
## Expected Behavior
Airtap to select/ Interact with object
## Actual Behavior
The reticle grows but doesn't go back to rest state and doesn't interact or select anything
## Steps to reproduce
Create a new project.
Add MRTK2 example and foundation.
Do the necessary setup for XR.
Build interaction sample or any other sample for hololens

## Unity Editor Version
Unity 2019.1.5f1
## Mixed Reality Toolkit Release Version
Microsoft Mixed Reality Toolkit v2.0.0 RC2.1</Description>
  </Issue>
  <Issue>
    <IssueID>5207</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HMD stuck at loading screen while playing in editor</Title>
    <CreatedDate>04/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5207</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi.
I'm working on a project where I can explore a museum hall and change light parameters via UI.
When I plug in HMD and controllers and Play the scene from Unity, the screen goes black to the loading scene, but even after the scene is completerly loaded, nothing happens withing the display, but those four loading dots.
I need to use HDRP, but VR doesn't work with no pipeline either.
Can you tell me if I just miss something or there is incompatibility I can't walk around?

Here my hardware and software:
Windows 10
intel i7-4510U
Nvidia GTX 850M
Unity 2018.4.3f1
High Definition Render Pipeline
Steam with Steam VR</Description>
  </Issue>
  <Issue>
    <IssueID>5206</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Normal Mouse Input</Title>
    <CreatedDate>04/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5206</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

I've tried to use the current MouseController but even though it's fancy and all, it's not as easy to use as the regular 2D mouse cursor. It's way too large when raycasting closeobjects, it's way too small in the distance, it's movement is angular based and different from how you configured your mouse to behave on your desktop.

## Describe the solution you'd like

An additional MouseController that is just the desktop mouse.

## Additional context

Add any other context or screenshots about the feature request here.
The current MouseDeviceManager implementation handles hiding the real cursor for the MouseController instead of letting it do so itself. The controller should know if he has its own appearance on screen or not.</Description>
  </Issue>
  <Issue>
    <IssueID>5205</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>5205</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>5205</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5205</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>No Way to Have Extension Service Marked as UWP Only? (i.e. not for editor?)</Title>
    <CreatedDate>04/07/2019</CreatedDate>
    <ClosedDate>20/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5205</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5205</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5205</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>5205</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Extension</Name>
        <IssueID>5205</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5205</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

I have a Mixed Reality Extension Service. I have marked it so that the only "supported platform" is "WindowsUniversal". I do not want that service to be instantiated inside of the Unity Editor.

However, when I run my code in the editor I find that the service is instantiated.

## To reproduce

Make a MixedRealityExtensionService by deriving from BaseExtensionService. Mark it with a MixedRealityExtensionService attribute and specify only "WindowsUniversal" for the supported platforms.

Add it to your extension services configuration in the toolkit configuration and then debug the project in Visual Studio and see whether your service is created or not.

## Expected behavior

I would not expect the service to be instantiated in the editor, only on a UWP device.

## Screenshots

N/A

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.4.3f1]
- MRTK Version [e.g. v2.0 RC2.1]

## Target Platform (please complete the following information)

- HoloLens/2

## Additional context

The code in PlatformUtility.cs seems to do the checking here. 

I am looking at a call to GetSupportedPlatformMask and when running in the editor it is returning "WindowsUniversal | WindowsEditor". My service says it supports "WindowsUniversal" and so the code decides to instantiate my service inside of the editor but by marking my service as "WindowsUniversal" only, I expected to keep it away from running inside of the editor.

Is the logic there correct? </Description>
  </Issue>
  <Issue>
    <IssueID>5204</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK adds several MixedRealityInputModule component to main camera</Title>
    <CreatedDate>04/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5204</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Scenario: I have 3 MixedRealityPlayspace object in the scene, but ONLY ONE active per time. Each of them has a Camera as a child in it. Each time I open the editor, I got an error saying "For Mixed Reality Toolkit input to work properly, please remove your other input module(s) and add a MixedRealityInputModule to your main camera." and I found multiple MixedRealityInputModule attached (instead of the only one I put) to the active Camera. I have then to manually remove them each time it happens.

## Expected behavior

MRTK to understand that a MixedRealityInputModule is already there.

## Screenshots

![image](


## Setup

- Unity Version 2018.3.12f1
- MRTK Version 2.0.0 RC1

## Target Platform
UWP:
- Desktop
- HoloLens
- HoloLens 2
- WMR immersive
</Description>
  </Issue>
  <Issue>
    <IssueID>5203</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>5203</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Raycast Rubber effect</Title>
    <CreatedDate>04/07/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5203</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>5203</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>5203</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Pointer</Name>
        <IssueID>5203</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5203</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hello Folks,

We are currently producing some Training modules on Unity 2018.3.6f1 and are/where using Windows Mixed Reality toolkit v2.0.0-Beta 2.


We now wanted to upgrade to 2019.1.8f1 because of LWRP, ShaderGraph, VisualEffectsGraph, which would be very handy to create the upcoming modules.

Sadly, we found out that the current Version we were using from WMRT is not compatible with Unity 2019 so we had to upgrade to Version RC2.1. Sadly, this ment we had to rewrite our whole scripts.

My main question would be the Raycast(er) (if I’m naming it correctly). In the "old" beta 2.0 version it was a stiff ray that was coming out of the Gizmo but in the new RC2.1 version it has a new rubber band effect that’s not very effective. Because we need to drag and drop many objects in the scene/game, the feeling is somewhat flimsy and not very intuitive. It's like moving objects with a fishing rod.

Is there a way to change this behavior of the Raycast? Stiffen the raycast somehow?

It would be nice to add a variable of how stiffen the Raycast should be (e.g. 10 = hard, 1 = soft)

Thank you in advance

Beta 2.0
![image](

RC 2.1
![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>5200</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>5200</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Write a test to ensure you can run HandInteractionExample scene</Title>
    <CreatedDate>04/07/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5200</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Tests</Name>
        <IssueID>5200</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
This is a follow up to #5176. To ensure we don't hit this again, let's write a test to check that the HandInteractionExample scene can run without errors. 

The test should
- Load the handinteractionexamples scene
- Run for a second or two (at least 60 frames) to ensure no errors are hit.
- Access the input system

Here is a test that could work, suggested by @wiwei

``

 </Description>
  </Issue>
  <Issue>
    <IssueID>5197</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>googlan</FixedById>
        <IssueID>5197</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>5197</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>InputHandler Breaking Change</Title>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>5197</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>5197</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5197</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

It looks like PR #4970 added two abstract methods to [InputSystemGlobalHandlerListener]( These abstract methods are **RegisterHandlers** and **UnregisterHandlers**. This is a breaking change for anyone inheriting from **BaseInputHandler** or **InputSystemGlobalListener**.

In addition, **InputSystemGlobalListener** was marked Obsolete with a recommendation to use **InputSystemGlobalHandlerListener** instead.

## Recommended Fix

The following two documents need to be updated:



and 

 

- InputEvents.html should clarify when to use BaseInputHandler vs. when to use InputSystemGlobalHandlerListener.

- InputEvents.html should document the pattern of the abstract Register and Unregister methods.

- UpdatingToGA.html should document the obsolescence of *InputSystemGlobalListener** and recommend **InputSystemGlobalHandlerListener** instead.

- UpdatingToGA.html should document the new abstract methods and route users to InputEvents.html for new guidance.</Description>
  </Issue>
  <Issue>
    <IssueID>5196</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>5196</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Windows Mixed Reality Spatial Mesh Observer should support changing material and physics layer settings on existing observations.</Title>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>06/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>5196</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Windows Mixed Reality</Name>
        <IssueID>5196</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Today, the Windows Mixed Reality Spatial Mesh Observer requires two calls to change the mesh materials:

1. Update the desired material property (visible or occlusion)
2. Set the DisplayOption property to Visible or Occlusion.

Feedback from customers indicates that the second step is not discoverable and there is a desire for the material to update automatically, presuming the observer is in the corresponding display option.

Similarly, there is currently no mechanism for updating the physics layer of the existing meshes.

Feedback indicates that customers have a need to modify the layer at runtime to achieve desired scenarios.</Description>
  </Issue>
  <Issue>
    <IssueID>5192</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>5192</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>5192</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Speech Commands are not working in any scenes, in Editor</Title>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Urgency-Now</Name>
        <IssueID>5192</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Speech commands are not working in any scenes. To repro, grab latest mrtk_development, play any scene, and try to invoke "select" or any other speech command by pressing on the keyboard. You will see that no actual speech commands are invoked.

You can test this by opening the BoundingBoxRuntimeExample scene. The scene will update its state when you press the '1' key. The actual behavior is no state changes happen when 1 key is pressed.

In WindowsSpeechInputProvider it looks like the provider is exiting early, failing to set keywordRecognizer. If keywordRecognizer is null, then the speech system does not work. The return is failing early because Commands is nul.

``
        public override void Enable()
        {
            if (!Application.isPlaying || 
                (Commands == null) ||
                (Commands.Length == 0)) { return; }
```
</Description>
  </Issue>
  <Issue>
    <IssueID>5190</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoloLens 2 - MRTK - Unity UI Interaction - direct manipulation doesn't work</Title>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5190</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Description:

Direct manipulation of Unity UI Interaction in MRTK doesn't work.


Steps to reproduce the behavior:

1. Go to MRTK
2. Try far field (hand rays) interaction to manipulate Button, Toggle Button, Slide Bar and Drop down Menu. 
3. Confirm far field interaction works.
4. Try near field (direct manipulation) interactions to manipulate Button, Toggle Button, Slide Bar and Drop down Menu. 
5. Confirm near field interaction doesn't work.


 Setup 
- MRTK Version [2018.9.10.0]

Target Platform 
- HoloLens 2

</Description>
  </Issue>
  <Issue>
    <IssueID>5188</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>DefaultCursor clones are added on every inspection of MRTK profile options in play mode</Title>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>04/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5188</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When looking into Mrtk profile options in play mode, every click in Profile options inspector window adds a clone of DefaultCursor under MixedRealityPlayspace. It might be one of visible consequences of a larger issue.

## To reproduce

Steps to reproduce the behavior:

1. Start play mode in any scene with Mrtk.
2. Select MixedRealityToolkit and go to 'Inspector'.
3. In profile settings select 'Input' (not specific to input, just easier to repro).
4. Start expanding-collapsing any settings group under it (e.g. Pointers).
5. See that every click adds a new cursor game object into scene hierarchy.

## Screenshots

![image](


## Your Setup (please complete the following information)

- Unity Version [e.g. 2019.1.8f1]</Description>
  </Issue>
  <Issue>
    <IssueID>5186</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>What is this error in build adroid and build app bundle in unity 2017.4.17?</Title>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>5186</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>


![image](




I get some Error when build android in Unity 2017.4.17

I have not problem with unity 5.3.4p3 but google play do not accept my games and it wants x64 so I change to unity 2017.4.17 and in gradle and clicked on build app bundle (google play ) but I have error

I attached errors
this error is

    gradle build failed see the console for details

enter image description here
![image](


I had this error in unity 2019.1.5 too

please help me

I am 30 days in this errors and can not cross it thanks

I wrote errors in below:

    CommandInvokationFailure: Gradle build failed. C:/Program Files/Java/jdk1.8.0_192\bin\java.exe -classpath "F:\files\pc\Video\artoon\program files\UnitySetup64-2017.4.17f1\Unity\Editor\Data\PlaybackEngines\AndroidPlayer\Tools\gradle\lib\gradle-launcher-4.6.jar" org.gradle.launcher.GradleMain "-Dorg.gradle.jvmargs=-Xmx4096m" "bundleRelease"

stderr[

FAILURE: Build failed with an exception.

* What went wrong:
A problem occurred configuring root project 'gradleOut'.
&gt; Could not resolve all artifacts for configuration ':classpath'.
   &gt; Could not resolve com.android.tools.build:gradle:2.3.0.
     Required by:
         project :
      &gt; Could not resolve com.android.tools.build:gradle:2.3.0.
         &gt; Could not get resource '
            &gt; Could not HEAD '
               &gt; jcenter.bintray.com

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.

* Get more help at 

BUILD FAILED in 32s
]
stdout[
Starting a Gradle Daemon (subsequent builds will be faster)
]
exit code: 1
UnityEditor.Android.Command.WaitForProgramToRun (UnityEditor.Utils.Program p, UnityEditor.Android.WaitingForProcessToExit waitingForProcessToExit, System.String errorMsg)
UnityEditor.Android.Command.Run (System.Diagnostics.ProcessStartInfo psi, UnityEditor.Android.WaitingForProcessToExit waitingForProcessToExit, System.String errorMsg)
UnityEditor.Android.AndroidJavaTools.RunJava (System.String args, System.String workingdir, System.Action`1 progress, System.String error)
UnityEditor.Android.GradleWrapper.Run (System.String workingdir, System.String task, System.Action`1 progress)
Rethrow as GradleInvokationException: Gradle build failed
UnityEditor.Android.GradleWrapper.Run (System.String workingdir, System.String task, System.Action`1 progress)
UnityEditor.Android.PostProcessor.Tasks.BuildGradleProject.Execute (UnityEditor.Android.PostProcessor.PostProcessorContext context)
UnityEditor.Android.PostProcessor.PostProcessRunner.RunAllTasks (UnityEditor.Android.PostProcessor.PostProcessorContext context)
UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)


Build completed with a result of 'Failed'
UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)

UnityEditor.BuildPlayerWindow+BuildMethodException: 2 errors
  at UnityEditor.BuildPlayerWindow+DefaultBuildMethods.BuildPlayer (BuildPlayerOptions options) [0x0020e] in C:\buildslave\unity\build\Editor\Mono\BuildPlayerWindowBuildMethods.cs:181 
  at UnityEditor.BuildPlayerWindow.CallBuildMethods (Boolean askForBuildLocation, BuildOptions defaultBuildOptions) [0x00065] in C:\buildslave\unity\build\Editor\Mono\BuildPlayerWindowBuildMethods.cs:88 
UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)

enter image description here

This is mainTemplate file in UnitySetup64-2017.4.17f1&gt;Unity&gt;Editor&gt;Data&gt;PlaybackEngines&gt;AndroidPlayer&gt;Tools&gt;GradleTemplates:

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0'
    }
}

allprojects {
   repositories {
      google()
      jcenter()
      flatDir {
        dirs 'libs'
      }
   }
}

apply plugin: 'com.android.application'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
**DEPS**}

android {
    compileSdkVersion **APIVERSION**
    buildToolsVersion '**BUILDTOOLS**'

    defaultConfig {
        targetSdkVersion **TARGETSDKVERSION**
        applicationId '**APPLICATIONID**'
        ndk {
            abiFilters **ABIFILTERS**
        }
    }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        noCompress '.unity3d', '.ress', '.resource', '.obb'**STREAMING_ASSETS**
    }

**SIGN**
    buildTypes {
        debug {
            minifyEnabled **MINIFY_DEBUG**
            useProguard **PROGUARD_DEBUG**
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'**USER_PROGUARD**
            jniDebuggable true
        }
        release {
            minifyEnabled **MINIFY_RELEASE**
            useProguard **PROGUARD_RELEASE**
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'**USER_PROGUARD**
            **SIGNCONFIG**
        }
    }
**PACKAGING_OPTIONS**
    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }
}


**SOURCE_BUILD_SETUP**```

</Description>
  </Issue>
  <Issue>
    <IssueID>5184</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>5184</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Logging of EyeGaze data to csv file is culture-specific</Title>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>08/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5184</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Logs of EyeGaze data are written culture-specific into .csv files. This means for cultures which use a comma instead of a dot as decimal separator (e.g. german) that the csv file gets currupted and can't be read for playback since it assumes commas as separators.
This happens both when using the recording on a PC and on HoloLens 2.

## To reproduce

Steps to reproduce the behavior:

**Variant a**
1. Start the EyeTrackingDemo-05-Visualizer Demo on a PC in Unity with culture settings applied that uses commas as decimal separators.
2. Record eye gaze data for heatmap.
3. Play heatmap data.
4. Nothing gets displayed.

**Variant b**
1. Deploy the EyeTrackingDemo-05-Visualizer Demo to a HoloLens 2 which was set up with a language that uses commas as decimal separators.
2. Record eye gaze data for heatmap.
3. Play heatmap data.
4. Nothing gets displayed

## Expected behavior

The logging should happen with dot decimal separator to be able to play back the records no matter which culture setting is used.

## Setup

- Unity 2018.4.2
- MRTK v2.0.0 RC2.1

## Target Platform

- PC
or
- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>5183</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MenelvagorMilsom</FixedById>
        <IssueID>5183</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[HL1] Cursor should follow the movement for manipulation </Title>
    <CreatedDate>03/07/2019</CreatedDate>
    <ClosedDate>18/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5183</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>5183</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
For GGV input in HoloLens 1, currently, MRTK's pointer/cursor does not follow on tap-and-drag gesture movement (grab point for manipulation/navigation and BB handle) which is confusing.

### Current MRTK behavior:
![MRTK_ContextualCursor0702b](
![MRTK_ContextualCursor0702c](

### Shell behavior:
Cursor follows the grab point 
![MRTK_ContextualCursorShell](
movement 


## Target Platform (please complete the following information)
- HoloLens
</Description>
  </Issue>
  <Issue>
    <IssueID>5176</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>5176</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>5176</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Null ref in MixedRealityServiceRegistry.TryGetService&lt;IMixedRealityInputSystem&gt;()</Title>
    <CreatedDate>02/07/2019</CreatedDate>
    <ClosedDate>02/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5176</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Now</Name>
        <IssueID>5176</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Steps to reproduce
1. Load the HandInteractionExamples scene
2. Hit play.


## Expected Behavior
I get no errors and can use hand simulation

## Actual Behavior
Get lots of errors like this:

NullReferenceException: Object reference not set to an instance of an object
Microsoft.MixedReality.Toolkit.UI.Interactable.ResolveInputAction (System.Int32 index) (at Assets/MixedRealityToolkit.SDK/Features/UX/Interactable/Scripts/Interactable.cs:1071)
Microsoft.MixedReality.Toolkit.UI.Interactable.Awake () (at Assets/MixedRealityToolkit.SDK/Features/UX/Interactable/Scripts/Interactable.cs:417)

Root cause is  MixedRealityServiceRegistry.TryGetService&lt;IMixedRealityInputSystem&gt;() is returning null
</Description>
  </Issue>
  <Issue>
    <IssueID>5174</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>5174</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Screenshot Tool</Title>
    <CreatedDate>02/07/2019</CreatedDate>
    <ClosedDate>22/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5174</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Taking screenshots in Unity for MRTK documentation and promotional imagery can be burdensome and the output often looks less than desirable. 

## Describe the solution you'd like

I would like a screenshot tool that outputs images at "print media" resolutions and can export the current camera view with a transparent background.

## Additional context

This tool can be used not only for documentation but helping developers showcase their application for the store or other media outlets.
</Description>
  </Issue>
  <Issue>
    <IssueID>5171</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Robust Spectator View leveraging Azure Spatial Anchors for HL2</Title>
    <CreatedDate>02/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5171</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Spectator View integration is one of the most frequent and essential feature request from clients. They want the ability to hold up a tablet, project to a TV or view from another HoloLens what a user is doing in real time. Any attempt to use the "pre-built" MRKT spectator view in the past has failed for various reasons, was full of bugs, or did not met the needs of our application. And now with UNET being deprecated, this feature is unusable as is. We had to write our own spectator view using UDP and TCP networking, and add capabilities as they are needed

## Describe the solution you'd like

A new Spectator View based on Azure Spatial Anchors for the HoloLens 2 seems like an essential feature. Using UDP and TCP, come up with a Spectator View that utilizes Azure Spatial Anchors instead of the iOS QR code reader (also very buggy and extremely time consuming to build out). This solution could then be adapted to work for any specific customer/user scenarios 

## Describe alternatives you've considered

As of right now, the only alternative is building your own Spectator View from scratch, or using an "out of the box" solution/package that you can download form the Unity store. These packages fit niche needs and don't cover all that you should be able to do with Spectator View
</Description>
  </Issue>
  <Issue>
    <IssueID>5170</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title> import a dynamic 3D model in HoloLens</Title>
    <CreatedDate>02/07/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>5170</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
A clear and concise what the issue

Hello, I want to import a dynamic 3D model in HoloLens. Do you have a recommended viewer app? In addition, how can I combine multiple static 3D models into a dynamic 3D model? For example, FBX format?
## Feature Area
What's incorrect? What's missing?

## Existing Doc Link
If this is about something in an existing document, please provide link 

## Additional context
Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5169</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hololens 1 keyboard</Title>
    <CreatedDate>02/07/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5169</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When opening the system keyboard, the layout of the keyboard is completely messed up. see pictures below:


![20190702_083104_HoloLens](
![20190702_083323_HoloLens](
![20190702_083350_HoloLens](

## To reproduce

Steps to reproduce the behavior:

1. Open and deploy HandInteractionExamples demo scene to Hololens 1
2. Open keyboard (left side). The first time it may looks good, after opening it again will mess up the keyboard layout.

## Expected behavior

Working keyboard every time.

## Your Setup (please complete the following information)

- Unity Version: 2019.1.6f1
- MRTK Version: v2.0.0 RC2.1

## Target Platform (please complete the following information)

- HoloLens


## Additional context

I am not sure if it is related to MRTK or a Unity / Hololens issue.
Also the keyboard is looking different every time you open it.
You can also see a lot of exceptions be thrown after opening the keyboard and the framerate droping</Description>
  </Issue>
  <Issue>
    <IssueID>5164</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>5164</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[GA] Example scene polish</Title>
    <CreatedDate>01/07/2019</CreatedDate>
    <ClosedDate>22/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5164</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Overall polish pass on the example scenes for the GA release.
- Asset clean up
- Naming updates
- New RC2.1 components
- Docs consistency</Description>
  </Issue>
  <Issue>
    <IssueID>5144</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ControllerFinder does not need interface for source detection</Title>
    <CreatedDate>30/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5144</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Even though ControllerFinder implements IMixedRealitySourceStateHandler, it does not register to the InputSystem and therefore never receives events for the detection of controllers.
</Description>
  </Issue>
  <Issue>
    <IssueID>5143</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5143</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>InBetweenInspector/-Editor serializes non existing field</Title>
    <CreatedDate>30/06/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5143</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5143</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Help Wanted</Name>
        <IssueID>5143</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The following field does not exist and causes error when choosing HandJointLeft or -Right in "Tracked Object For Second Transform" in the inspector:



I don't know what this did so I don't know if this could just be removed as the Inspector code is explicitly using this:



Additional note: InBetweenInspector is the name of the file, InBetweenEditor the name of the class</Description>
  </Issue>
  <Issue>
    <IssueID>5142</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Orbital not capable of what Billboard can do (which is not a solver)</Title>
    <CreatedDate>30/06/2019</CreatedDate>
    <ClosedDate>21/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5142</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>5142</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5142</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>5142</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Orbital  does not have any option to follow one object while looking at another on the y-axis only. The Orbital script has all sorts SolverOrientationType modes instead, which completely define the rotation.
Orbital does not have a TransformTarget field even though it can for example look at the camera, with is an option of SolverOrientationType  and is hard coded.

## Expected behavior

Orbital should use the same PivotAxis enum like Billboard does.
In addition, it should be able to look at custom targets, like Billboard does
Basically, it should integrate the capability of being billboard, which it nearly is.

Or maybe creating a Billboard Solver and just ditch Orbital

Also, there are quite a lot of enums and a couple of them are pretty much either a portion of another or a combination of them:

OrientationType
PivotAxis
RadialViewReferenceDirection
RotationConstraintType
SolverOrientationType

And why doesn't the Pivot Axis enum make use of the FlagsAttribute?</Description>
  </Issue>
  <Issue>
    <IssueID>5141</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5141</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>SolverHandler: Changing transformTarget does not recalculate the Solver</Title>
    <CreatedDate>29/06/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5141</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5141</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>5141</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The SolverHandler does not update it's inner workings when assigned a new TransformTarget. It's neither recalculating it's transformWithOffset nor is there any API call that would make changing what to operate on easy. There is also no option for a custom reference in TrackedObjectType

## To reproduce

There is not much to reproduce other than checking out the API

## Expected behavior

Setting a new TransformTarget recalculates the Solver to use it

## Additional context

I have a menu that jumps around depending on where it's used.</Description>
  </Issue>
  <Issue>
    <IssueID>5139</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>5139</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Remove InteractionReceiver since it is not being used by anything</Title>
    <CreatedDate>29/06/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5139</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5139</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>If InteractionReceiver is supposed to be removed from the Toolkit, stop reading and mark as closed.

## Describe the bug

While trying to find something in common between FocusEventData and BaseInputEventData, I stumbled across the BaseEventData.selectedObject. Searching for every appearance of it revealed that it's not assigned to even once in the whole Toolkit.
This also means that InteractionReceiver simply does not work as it depends on its existence when comparing with it's list of registered receivers.

## Expected behavior

Either InteractionReceiver gets removed or BaseEventData.selectedObject gets set

## Screenshots

![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>5131</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>5131</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>5131</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Build error when a scene with MRTK instance is open in editor</Title>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5131</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5131</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5131</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When building while a scene with an MRTK instance is open, if that scene has entered play mode, an error is caused due to an OnValidate call in the instance.

## To reproduce

Steps to reproduce the behavior:

- Open scene with MixedRealityToolkit instance
- Play scene
- Stop scene
- Build player
- Observe error

## Your Setup

- Unity Version 2019.1
- MRTK branch mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>5130</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Build fails for PC, Mac &amp; Linux Standalone</Title>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5130</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Building for PC, Mac &amp; Linux Standalone fails with an error.

## To reproduce

- Open a project with MixedRealityToolkit
- Build for PC, Mac &amp; Linux Standalone
- Observe error

`Assets\MixedRealityToolkit.Examples\Demos\HandTracking\Script\SystemKeyboardExample.cs(64,41): error CS0117: 'TouchScreenKeyboard' does not contain a definition for 'visible'`

## Your Setup

- Unity Version 2018.3.5 &amp; 2019.1
- MRTK branch mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>5126</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>5126</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Tooltip background responsiveness</Title>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>02/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5126</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

If a tooltip is dynamically instantiated and text is assigned, the background does not react and expand accordingly.

## To reproduce

Steps to reproduce the behavior:

1. Instantiate a tooltip prefab
2. In the same frame set the tooltiptext to a string value
3. Observe bug that background does not expand to fit the new text

## Expected behavior

I expect that setting the tooltiptext value will cause the background panel to expand and fit the text

## Screenshots
![image](


If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.13f1]
- MRTK V2

## Target Platform (please complete the following information)

- HoloLens
</Description>
  </Issue>
  <Issue>
    <IssueID>5124</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>5124</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Scene system profile inspector doesn't reflect state of build settings</Title>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>02/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5124</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Scene system profile inspector doesn't reflect when scenes are in build settings unless you manually refresh it.

## To reproduce

 - Open a scene system profile.
 - Open the build settings window.
 - Add / remove a scene included in the profile from build settings window.
 - Observe no change in the profile.

## Expected behavior

Scene system profile should always reflect build settings.</Description>
  </Issue>
  <Issue>
    <IssueID>5122</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>5122</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>5122</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK's Radial Prefab is using a font from HoloToolkit</Title>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>09/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5122</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5122</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5122</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Thousand Cuts</Name>
        <IssueID>5122</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

[Radial prefab]( still refers to the old [HoloToolkit selawk font]( instead of the [MixedRealityToolkit selawk font](

## To reproduce

Steps to reproduce the behavior:

1. Open MRTK in Unity
2. Open the Radial prefab
3. Expand the prefab and select the Label component
![image](

Observe the missing font:
![image](

## Expected behavior

A proper font.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.4.1f1]
- MRTK Version [e.g. v2.0] (both mrtk_release and mrtk_develop branches)

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5121</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK Utilities Build Window is not documented</Title>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>18/05/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5121</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Build Window</Name>
        <IssueID>5121</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>5121</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5121</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
The benefits and how-to of using the MRTK build window is not documented anywhere. The build tool also in particular does some added benefits such as inserting the xml in VS for the ARM64 issue as well as setting the eye gaze capability since Unity does not provide. 

Docs should probably also call out IL2CPP optimizations:


## Feature Area
Missing details on build window

## Existing Doc Link
If this is about something in an existing document, please provide link 

## Additional context
Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5119</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>OnFocus events are not routed through global listeners</Title>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5119</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The IMixedRealityFocusHandler interface can be implemented and registered with the InputSystem.RegisterHandler method. Yet nothing is received because the FocusProvider directly calls the receiver instead of passing through the regular eventchain.
(I mentioned it in #3607 and forgot about it)

## To reproduce

Steps to reproduce the behavior:

1. Register any IMixedRealityInputHandler implemeter with the InputSystem and gaze on something
2. Note that you do not receive anything

## Expected behavior

You can listen to all events you are allowed to register the corresponding interface for.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2018.4.2f1
- MRTK Version mrtk_development 27.06.

## Target Platform (please complete the following information)

- Editor</Description>
  </Issue>
  <Issue>
    <IssueID>5117</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>5117</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Pinch slider properties are changing on their own</Title>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>30/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5117</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5117</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>5117</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>5117</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Help Wanted</Name>
        <IssueID>5117</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>5117</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Slider</Name>
        <IssueID>5117</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Description
The "Slider Start Distance" and "Slider End Distance" properties of the Pinch Slider script keep changing without any user input.

## To reproduce
Add a Pinch slider prefab to the scene from MRTK2 RC2.1
MixedRealityToolkit.SDK\Features\UX\Prefabs\Sliders
Play the scene, stop it and select the slider object in the Hierarchy.

## Screenshots
 

## My setup
- Unity Version 2019.1.8f1
- MRTK Version v2.0.0 RC2.1

## Target Platform
- HoloLens
- HoloLens 2

## Additional context
I used holographic remoting when the problem first showed up.
</Description>
  </Issue>
  <Issue>
    <IssueID>5115</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>5115</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add DirectionIndicator from Original Toolkit</Title>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>28/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5115</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5115</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>HTK Parity</Name>
        <IssueID>5115</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>5115</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

The original toolkit had a direction indicator behaviour which guided the user to look at a particular object which had left their field of view. The MRTK V2 does not have this which adds an extra thing for developers to locate when they come to port.

## Describe the solution you'd like

Replace the original behaviour from the toolkit - the script should largely "just work" on MRTK V2.

## Describe alternatives you've considered

Manual bringing across of the original script.

## Additional context

N/A</Description>
  </Issue>
  <Issue>
    <IssueID>5114</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MSBuild not found during build scripts</Title>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5114</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>5114</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>5114</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
A partner at the Berlin Hack tried to extend BuildAppx method to build for HL2. However, BuildAppxAsync throws an error when trying to find MSBuild.exe:
![msbuildfail]( 

The problem is probably that the methods expects to find the MSBuild.exe in a directory that ends with _\MSBuild\15.0\Bin\MSBuild.exe_ but MSBuild cannot be found at this locaton for there VS Installation.

## Expected Behaviour
The build should find MSBuild independent of where it is located in your VS installation.
</Description>
  </Issue>
  <Issue>
    <IssueID>5112</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Parabolic drag line tip overshoots target position</Title>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>20/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5112</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5112</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Pointer</Name>
        <IssueID>5112</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5112</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When holding onto a GameObject, the pointer gets fixed in position and the parabolic pointer bends while moving the motion controller. In doing so, the tip of the parabola seems to moving ahead of the current position instead of always ending where the pointer is. It always overshoots the position it should end in which leads to circling the pointer when the motion controller is actually moved in a circle.

Video:
[Preview.zip](

## To reproduce

Steps to reproduce the behavior:

1. Grab something that does not move and move your motion controller.

## Expected behavior

the parabola always ends at the center of the pointer or hold position, whatever it's called

## Your Setup (please complete the following information)

- Unity Version 2018.4.2f1
- MRTK Version mrtk_development 27.06.

## Target Platform (please complete the following information)

- WMR immersive</Description>
  </Issue>
  <Issue>
    <IssueID>5111</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>5111</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>BoundingBox bounds calculation issues</Title>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>20/07/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5111</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5111</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5111</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>5111</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The BoundingBox has several issues related to calculating its bounds. To inverse the bug, the BoundingBox only calculates them correctly when one of these cases is true:

- The BoundingBox script is on the GameObject that has the collider and does not have any child colliders
- The BoundingBox stays Axis aligned while being initialized with colliders at child level 1 only

Here are the cases that I found:

- If the BoundingBox's GameObject, with collider, has another child with a collider, the calculation only happens on the child

![image](

- If the BoundingBox is calculating either a child or multiple colliders while rotated, the size is wrong and based on the axis aligned bounds of the calculated colliders

![image](

## To reproduce

Steps to reproduce the behavior:

1. Open the "BoundingBoxRuntimeExample" scene
2. Replace the first block of code in BoundingBoxTest.cs with this:
``
2. Press play and see how the BoundingBox is being calculated only for child2
3. outcomment the last line
4. Play again and see how the bounds of child2 are too large

A couple of findings I made:

The following code does not take BoundingBox GameObject itself into account and it only interates one level of children (#4755 also mentions this):


GetSingleObjectBounds simply uses collider bounds, which are axis aligned world space bounds and therefore inappropriate for the calculation. 



## Expected behavior

Whatever hierarchical structure, I expect the BoundingBox to include all colliders, starting with the GameObject it is attached to. If it's GameObject does not have a Collider, bounds should be calculated for all children.
It should not matter how the colliders are oriented, the Box should be aligned with the Transform it belongs to.

## Your Setup (please complete the following information)

- Unity Version 2018.4.2f1
- MRTK Version mrtk_development 27.06.

## Target Platform (please complete the following information)

- Unity Editor

## Additional context

I remember the old HTK BoundingBox to be capable of dealing with this by adding all transformed corner points of all bounds together and then using this as local bounds volume for the box.</Description>
  </Issue>
  <Issue>
    <IssueID>5110</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Allow manual ordering of Solvers for a SolverHandler</Title>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5110</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>5110</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>5110</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem
As noted in the ["Known Issues"]( we currently have to set the Solvers' order of execution in case of a problem: it is neither practical nor does it allow it to be done per-instance. 

## Describe the solution you'd like
Currently, the list of solvers is obtained `GetComponents&lt;Solver&gt;()`: exposing the list so that it can be manually ordered within the inspector and from the code would solve this issue.

## Additional context
Solvers</Description>
  </Issue>
  <Issue>
    <IssueID>5108</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can not build scene </Title>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>13/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5108</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Reference Rewriter found some errors while running with command "--target=Temp\StagingArea\Data\Managed\Assembly-CSharp.dll" "--target=Temp\StagingArea\Data\Managed\MixedRealityToolkit.Services.CameraSystem.dll" "--target=Temp\StagingArea\Data\Managed\MixedRealityToolkit.Examples.Demos.UX.Interactables.dll" "--target=Temp\StagingArea\Data\Managed\MixedRealityToolkit.Examples.Demos.Utilities.InspectorFields.dll"

**If I ignore these errors and deploy on Hololens 1 , but I can not see anything .**

## To reproduce

Steps to reproduce the behavior:

1. Build scene PressableButtonExample
2. see errors 

## Screenshots

![image](
![image](

## Your Setup (please complete the following information)

- Unity Version [2018.4.2f1 ,  2018.4.0f1]
- MRTK Version [v2.0.0 RC2.1]

## Target Platform (please complete the following information)

- HoloLens


</Description>
  </Issue>
  <Issue>
    <IssueID>5107</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HandInteractionExample in HL2 scene drops to 30 fps when you bring hands up</Title>
    <CreatedDate>28/06/2019</CreatedDate>
    <ClosedDate>08/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Performance</Name>
        <IssueID>5107</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5107</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Now</Name>
        <IssueID>5107</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When compiled in Master or Release, the hand interactionexamples scene on HoloLens2 will drop to 30 fps when you bring your hands into view, and stays that way even when hand mesh and joints are turned off.

## Expected Behavior
Framerate should stay at 60.

## Steps to reproduce
1. Build and deploy HandInteractionExample scene to HoloLens 2
2. Keep the profiler on.
2. Play around with the holograms for about 1 minute, especially bounding box
3. Bring hand up and target the lunarmodule with hand rays

You will notice that after being on for a while the framerate will drop to 30 fps.

## Mixed Reality Toolkit Release Version
mrtk_development latest</Description>
  </Issue>
  <Issue>
    <IssueID>5104</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Updating Legacy Hololens Code (what happened to the TestButton object?)</Title>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>20/12/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>5104</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'm currently working on a new project using HoloToolKit 2017.4.3.0, and I'm trying to re-use some code that was written between May-August 2017, the version used was likely v1.5.7.0,  [HoloToolkit-Unity for Unity 5.6.1f1+](

In the MixedRealityToolkit-Unity for Unity 2017.1.2f1 update, the Test and Example folders were merged, and in my old code I now have a deprecated object called TestButton. 

Can someone direct me on what happened to TestButton and what I need to do to get my old code working in the newer version of the toolkit that I'm using?

</Description>
  </Issue>
  <Issue>
    <IssueID>5099</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>5099</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Try Repair system type button misplaced and unclickable</Title>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>12/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5099</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5099</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>5099</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Thousand Cuts</Name>
        <IssueID>5099</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When a system type reference is missing in a configuration profile, a "Try Repair" button appears to help you fix it. Unfortunately, it's currently placed overlapped with the system type dropdown and unclickable as a result.

## To reproduce

Steps to reproduce the behavior:

1. Change an assembly name or delete a system class that's currently referenced in a profile.
2. View the profile
3. Try to click the "Try Repair" button

## Screenshots

![image](

## Your Setup (please complete the following information)

- Unity Version 2018.4.2
- MRTK Version: mrtk_dev</Description>
  </Issue>
  <Issue>
    <IssueID>5095</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>5095</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Asset Dependency Tracking</Title>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>11/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5095</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

When bringing in new assets, or examining old ones, it is difficult to understand which assets are in use or referenced from other assets. This leads to keeping assets around which are no longer in use.

## Describe the solution you'd like

I would like a tool that tells the user which assets are in use (and by what).

## Additional context

The shell team is about to bring in a large amount of UI assets that need to be combed over for which assets are still being used. This tool would prevent them from manually inspecting assets.
</Description>
  </Issue>
  <Issue>
    <IssueID>5092</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Grid Object Collection script Layout setting not working</Title>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>19/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5092</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>5092</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

In the Editor panel for Grid Object Collection there is a dropdown for Layout with "First Row then Column" and "First Column then Row" and an "Update Collection" button. That doesn't show a different pattern. I don't think the logic is correct in ResolveGridLayout() as it always works per row (horizontal), where "first column then row" should go vertical first.

## To reproduce

Steps to reproduce the behavior:

Open the ObjectCollectionExamples scene, Pick one if the collections and give each cube in the collection a different color. Then play with the Layout setting and the "Update Collection" button. The code is hit every time, but it doesn't show a different result.

## Expected behavior

"First Row then Column" should show items first items in the first row, the next items in the next row. "First Column then Row" should show item 1 in row 1, item2 in row 2 until the max rows. Then go to the next column, 

## Screenshots

n/a

## Your Setup (please complete the following information)

- Unity Version 2018.4.2f1
- MRTK Version v2.0 RC2.1

## Target Platform (please complete the following information)

- HoloLens 2

## Additional context

n/a</Description>
  </Issue>
  <Issue>
    <IssueID>5091</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5091</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>SolverExamples scene is broken</Title>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5091</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5091</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Example/Test Scene</Name>
        <IssueID>5091</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>5091</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The solverexamples scene is broken for testing.

1) Prefabs are spawned and assignment of tracked transform is incorrect for hands. In simulation hand parent gameobjects are always at &lt;0,0,0&gt; while the joint transforms are being updated to world positions. The prefab spawning also seems overkill when you cannot create multiple gameobjects after selecting a solver option

2) Clickable spheres have no interactable profiles to indicate if in focus or onclick or even if that solver is active in scene

3) Not all solvers are shown in example

## To reproduce

Open the solver examples scene and run in editor

## Expected behavior

A clear and concise description of what you expected to happen.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2018.4
- MRTK Version Latest

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5090</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Code recompile, while in playmode, reinitalizes MRTK</Title>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>26/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5090</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5090</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>5090</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>5090</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Thousand Cuts</Name>
        <IssueID>5090</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
When Unity recompiles the solution while in play MRTK re-initializes itself (adds a second performance counter for example).

## To reproduce

- Make sure Unitys general setting for 'Script changes while playing' is set to 'Recompile and continue playing'.
- Start playing a scene with MRTK in in.
- Trigger recompile by either chaning some cs files, or creating a new one

## Expected behavior
Do not perform initalization again

## Screenshots
![ezgif com-video-to-gif](


## Your Setup (please complete the following information)

- Unity Version 2018.4.2f1
- MRTK Version 2.0.0-RC2.1

## Target Platform (please complete the following information)
- HoloLens 2


</Description>
  </Issue>
  <Issue>
    <IssueID>5087</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Project build failed with scripting backend IL2CPP</Title>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5087</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
IOException: Win32 IO returned 234. Path: C:\Program Files (x86)\Windows Kits\10\References\10.0.18362.0\Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingContract\2.0.0.0\Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingContract.winmd" or "Temp\StagingArea\Data\Managed\Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingContract.winmd
System.IO.File.Copy (System.String sourceFileName, System.String destFileName, System.Boolean overwrite) (at &lt;d7ac571ca2d04b2f981d0d886fa067cf&gt;:0)
PostProcessUAPIl2Cpp.CopyFrameworkAssemblies () (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/PostProcessUAPIl2Cpp.cs:339)
PostProcessWinRT.Process () (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/PostProcessWinRT.cs:160)
UnityEditor.WSA.BuildPostprocessor.PostProcess (UnityEditor.Modules.BuildPostProcessArgs args) (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/ExtensionModule.cs:122)
UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)
`</Code>
    <Description>## Describe the bug


![BaiduShurufa_2019-6-27_11-41-41](

![BaiduShurufa_2019-6-27_11-43-5](


``

## To reproduce

1 Create new project
2 Import "Microsoft.MixedReality.Toolkit.Unity.Foundation-v2.0.0-RC2.1.unitypackage" and "Microsoft.MixedReality.Toolkit.Unity.Examples-v2.0.0-RC2.1.unitypackage"
3 Switch platform to Universal Windows Platform
4 Import TMP Essentials. Add HandInteractionExamples.unity to Scenes In Build .
5 Click Build


## Your Setup (please complete the following information)

- Unity Version 2018.4.2f1
- MRTK Version v2.0.0 RC2.1

## Target Platform (please complete the following information)

- HoloLens

## Additional context

Change Script backend  to .NET , then build Succeeded with 8 errors
![BaiduShurufa_2019-6-27_12-3-19](

</Description>
  </Issue>
  <Issue>
    <IssueID>5085</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>5085</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>5085</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>InputSystemDisable() followed by InputSystem.Enable causes NullPointerExceptions</Title>
    <CreatedDate>27/06/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5085</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>5085</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>5085</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK usability</Name>
        <IssueID>5085</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5085</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
NullReferenceException: Object reference not set to an instance of an object
Microsoft.MixedReality.Toolkit.Input.FocusProvider.RegisterPointers (Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource inputSource) (at Assets/MixedRealityToolkit.Services/InputSystem/FocusProvider.cs:689)
`

## Steps to reproduce
Use the following script to enable and disable the input system. Notice that after enabling the input system console spits out continuous null pointers:


using Microsoft.MixedReality.Toolkit;
using Microsoft.MixedReality.Toolkit.Input;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class DisableInputSystemTest : MonoBehaviour
{
    private IMixedRealityInputSystem inputSystem = null;
    private IMixedRealityInputSystem InputSystem
    {
        get
        {
            if (inputSystem == null)
            {
                MixedRealityServiceRegistry.TryGetService&lt;IMixedRealityInputSystem&gt;(out inputSystem);
            }
            return inputSystem;
        }
    }

    public void DisableInputSystem()
    {
        InputSystem.Disable();
    }

    public void EnableInputSystem()
    {
        InputSystem.Enable();
    }

    public void Update()
    {
        if (Input.GetKeyDown(KeyCode.Alpha1))
        {
            EnableInputSystem();
        }
        if (Input.GetKeyDown(KeyCode.Alpha2))
        {
            DisableInputSystem();
        }
    }
}
`</Code>
    <Description>## Overview
Disabling and then re-enabling the input system causes the following exception to be thrown every frame:

``


## Unity Editor Version
2018.4.1f1

## Mixed Reality Toolkit Release Version
mrtk_development latest</Description>
  </Issue>
  <Issue>
    <IssueID>5084</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Partner Hack] MRTK Extensibility</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5084</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>5084</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Description: Partner feels MRTK v2 is great to get started quickly or for beginner developers. However for experimented dev, that have been around for a while, MRTK can feel restritive :

Too pre-baked features / behaviour
Not extensible / tweakable option or not enough.

This can help drive adoption and improve Developer Experience.

Sometime can be a blocker and force dev to use alternatives.

Partner: XXII
Filed for: @dacoppet  during Paris hack</Description>
  </Issue>
  <Issue>
    <IssueID>5083</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Partner Hack] UIRaycastCamera is created in the parent scene when a child scene is loaded Additively</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5083</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5083</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Multi-Scene</Name>
        <IssueID>5083</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>5083</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Description: 
When the initial scene does not contain the MixedRealityToolkit object, loading a scene with the "SceneLoading.Additive" flag, that does contain the MixedRealityToolkit object, it results in the UIRaycastCamera being created in the initial scene and if that initial scene is unloaded, the UIRaycastCamera is destroyed. 



Immersion loads an initial MainScene that contains UI and then they load a CoreSystem scene that contains the MixedRealityToolkit object. When MRTK initializes, it creates the UIRaycastCamera in MainScene instead of CoreSystem scene and so it is destroyed when MainScene is unloaded to advance the experience. This causes the UI system to break.




Partner: Immersion



Filed for: @Foxman13  during Paris hack. </Description>
  </Issue>
  <Issue>
    <IssueID>5082</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Partner Hack] ARM support and MRTKv2 equivalent needed for HoloLens apps built with UrhoSharp</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5082</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5082</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Description: 
Atos' Augmented Field Worker app built is with UrhoSharp, collaboration and features A/V calls via WebRTC, digital twin data, PDF doc viewer, management ERP features. They need updated support for UrhoSharp to compile their app and plugins for ARM and also get access to components similar to MRTKv2 for hand interactions, solvers, etc.



Partner: Atos
Filed for: @ActiveNick  during Paris hack</Description>
  </Issue>
  <Issue>
    <IssueID>5081</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Partner Hack] MRTK Scene Object Breaks Additive Scene Loading</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5081</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Description: 
Partners wanted to use Unity additive scene loading. They have MRTK in a "Main" scene and then load child scenes additively. However, this results in the MRTK object missing from the child scenes which causes many of the MRTK inspectors to break.

This Teams thread states that MRTK can be configured without being in the scene, but  GitHub pull request 4099 states "Other services and demos will be updated to use the new registry pattern over the next few PRs".

 

According to Lars, this will be available very soon. See docs here. Almost all of it is in mrtk_development branch but needs PR4455 to be complete.

 

Documented by the customer at #4935.



Partner: Theoris

Filed for: @jbienzms  during Paris hack</Description>
  </Issue>
  <Issue>
    <IssueID>5080</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Partner Hack] Interactable component errors when loaded programmatically</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5080</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5080</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK usability</Name>
        <IssueID>5080</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>5080</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Description: 
When adding the Interactable component dynamically onto game objects at run time, get null reference errors



Workaround: Have to create a game object with an interactable component ahead of time in editor, than copy that component onto a game object at runtime


Partner/Customer: Stryker
Filed for: @TobiahZ  during Redmond June hack</Description>
  </Issue>
  <Issue>
    <IssueID>5079</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Partner Hack] Video decoding</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5079</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>5079</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Problem: 
Video decoding is very slow on device, affecting framerate. Neither H.265 nor H.264 worked. Jerome from Unity is investigating and filing a ticket with Unity. Streaming the same codec from the internet worked fine, so this could be an "on device" issue.



Partner: 

Digital Surgery

Filed for: @SarahSexton </Description>
  </Issue>
  <Issue>
    <IssueID>5078</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Partner Hack] "Eye-Supported Positioning" MRTK sample scene lists incorrect instructions for placing objects </Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>5078</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>

Copied from Description when changed from Task to Bug
Problem: 
MRTK's "Eye-Supported Positioning" scene text and online documentation ​says, "Look at one of the boxes below and say 'Put this,' then look over where you want to place the hologram and say 'here.'" However, the word "here" in the explanation for placing objects does not work. The phrase you need to say is "OVER here."



Reprot steps: 

Build and deploy fully functional MRTK Sample Scene "EyeTrackingDemo-04-TargetPositioning.unity"  



Partner: 

Digital Surgery



Filed for: @SarahSexton </Description>
  </Issue>
  <Issue>
    <IssueID>5077</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Partner Hack] MixedRealityToolkit preventing Play mode from starting</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>04/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5077</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Repro steps: 
After importing the Mixed Reality Toolkit into any version of Unity between 2018.3 and 2019.*


Description: 
MixedRealityToolkit was preventing Play mode from starting in Unity, which is impacting developer productivity when building applications. It highlighted MixedRealityToolkit object in scene, but no error in console was shown, and "Play" was impossible to press.

Would be convenient to be able to toggle MRTK profile settings quickly, without having to clone and reassign the profile script first.​

Workaround: Solved by restarting Unity​.



Partner: 
Digital Surgery

Filed for: @SarahSexton </Description>
  </Issue>
  <Issue>
    <IssueID>5076</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Partner Hack] Multi-lens Sharing</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5076</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Found: London Hack
Customer: OverIT
Problem Description: 
They currently use the sharing solution in MRTK v1 and need an equivalent set of features in MRTKve for HoloLens 2.

@ActiveNick bug from London hack</Description>
  </Issue>
  <Issue>
    <IssueID>5075</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Partner Hack] Border thickness in MRTKStandShader is different on device</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5075</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Problem: 
Border thickness in MRTKStandShader is different on device than in editor. Images above show what's shown in editor versus on HL2.

 

Partner is using a quad with an image. Quad is stretched to make it wide, but in editor it looks very different to on-device.



See attachment for images



Partner:Afternow

Reported by: @danielescudero </Description>
  </Issue>
  <Issue>
    <IssueID>5074</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Partner Hack] MRTK API docs should include code examples</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>26/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>5074</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>

Copied from Description when changed from Task to Bug
Problem: 
Documentation ( should include code examples, just like the Unity ScriptingReference. So variables and methods always include a small snippet of code showing how to use them.



Partner: all partners

Reported by: @danielescudero </Description>
  </Issue>
  <Issue>
    <IssueID>5073</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Partner Hack] Using XRTK blocking HL2 feature implementation</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5073</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>
Customer: ByteCubed (U.Group)



Problem Description: 
Customer is using XRTK (Fork of MRTK1 with support for magic leap) with customizations, which may make implementing HL2 features more difficult


Impact: 
Making it harder to implement HL2 features, as XRTK doesn't support HL2 and MRTK2 doesn't support Magic Leap. 

@hannesne filing bug from SF hack #</Description>
  </Issue>
  <Issue>
    <IssueID>5071</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Input simulation docs should mention that eye tracking can be simulated</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5071</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>5071</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input Simulation</Name>
        <IssueID>5071</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5071</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
[Input simulation]( docs say the following can be supported:
- HoloLens or VR device head tracking
- HoloLens hand gestures
- HoloLens 2 articulated hand tracking

HoloLens 2 eye tracking is also supported, we should mention that.
</Description>
  </Issue>
  <Issue>
    <IssueID>5066</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>5066</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>no documentation on how to add tests to mrtk</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>5066</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
we don't have any guidance for contributors how to add tests to mrtk

## Feature Area
missing documentation

</Description>
  </Issue>
  <Issue>
    <IssueID>5063</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>5063</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add an outline in the MRTK shader</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>29/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5063</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5063</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shaders / Materials</Name>
        <IssueID>5063</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Hello, in many of our projects with have used an outline effect (to higlight objects) like these ones:




However passing to MRTK 2 and single pass rendering broke these assets.
We are curently looking for an alternative but because MRTK2 shaders are recommended I am suggesting this feature.

## Describe the solution you'd like

The possibility in one of the MRTK shader to create a colored outline.

## Describe alternatives you've considered

Using an external asset but the shaders are not optimized for HL2 and are not working in Single Pass rendering.

note: the rim light effect does not meet the needs
</Description>
  </Issue>
  <Issue>
    <IssueID>5062</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5062</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Renaming in the hierarchy not possible due to deselection</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>28/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5062</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5062</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5062</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Help Wanted</Name>
        <IssueID>5062</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Thousand Cuts</Name>
        <IssueID>5062</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

For some reason, the existence of either the MixedRealityPortal or it's children, causes the hierarchy to deselect selected gameobjects as soon as you press F2 to rename them.
It does not matter what you're trying to rename.
The blue selection turns grey.

## To reproduce

Steps to reproduce the behavior:

1. Create a new scene and add the MixedRealityToolkit via "Add to scene and configuration"
2. Try to rename a GameObject in the hierarchy using F2

## Expected behavior

Renaming GameObject should work as usual

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target Platform (please complete the following information)

- Editor
</Description>
  </Issue>
  <Issue>
    <IssueID>5061</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Auto-generated camera is missing MixedRealityInputModule</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5061</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When the CameraCache does not find a camera it will auto-generate one. This auto-generated camera, however, does not have a MixedRealityInputModule script component on it.

The MixedRealityInputModule script pipes MRTK input data into the Unity event system. It is necessary in particular for make Unity UI elements work.

## To reproduce

Steps to reproduce the behavior:

1. Create an new scene
1. _Mixed Reality Toolkit &gt; Add to Scene and Configure_
1. Remove the main camera from the MixedRealityPlayspace
1. Enter PlayMode

A new camera is generated automatically with a warning:
"No main camera found. The Mixed Reality Toolkit requires at least one camera in the scene. One will be generated now."

## Expected behavior

The generated camera has a MixedRealityInputModule. Unity UI elements work.

## Additional context

Playmode tests are using auto-generated camera and do not work with Unity UI buttons for this reason.

Note that the MixedRealityInputModule type is in the InputSystem service assembly and is not accessible directly in the CameraCache.
</Description>
  </Issue>
  <Issue>
    <IssueID>5059</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>5059</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Home Button and favicon missing from docs</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>5059</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Home Button and favicon missing from docs

Apart from the visual bug there's also no possibility to navigate back to the homepage (apart from entering the URL manually in the address bar)

</Description>
  </Issue>
  <Issue>
    <IssueID>5058</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5058</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Can't edit Shader in Interactable Theme</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>21/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5058</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5058</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5058</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>5058</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>5058</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
When creating a new Interactable Theme, there is no way to edit the shaderName property.
When selecting an existing Theme, the shader name is displayed but can't be changed either, and disappear when changing back and forth the theme property(see below for repro).

So, currently, i don't see any easy way to (re)create a new color theme for, let's say as an example, a Textmeshpro text with mrtk.textmeshpro shader.
I don't even know how i could just recreate the same theme as AppBarButtonTextTheme that is available in MRTK (except with a copy&amp;paste).

Maybe there is a way, but it's not clear on how to procede.

## To reproduce
-in Project View &gt; Assets, right click 
-in contextual menu, select Create &gt; Mixed Reality Toolkit &gt; Interactable &gt; Theme
- in the theme asset, select the theme property to InteractableColorTheme
=&gt; observe that you can't select the shader of your choice, and by consequence can't select the material colorId.

- if you select an existing theme, you can't change the shader, despite it is visible
- and if you change the theme property, and come back to interactablecolortheme, the sahder infos disappeared!

## Expected behavior
-ideally a dropdown list of all shader, so that we can select the shader of our choice, and then select the colorId
-or maybe, if a way exists, enhance documentation on how to be able to select the wanted shader.

## Screenshots
upper : the existing AppBarButtonTextTheme
lower: a freshly new created theme
![interactabletheme](


## Your Setup (please complete the following information)

- Unity Version 2018.4.2f1
- MRTK Version v2.0.0 RC2.1

## Target Platform (please complete the following information)

- unity editor
</Description>
  </Issue>
  <Issue>
    <IssueID>5057</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>show error when Build v2.0.0 RC2.1 in Hololens 1</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>26/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5057</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
require Windows 10 SDK 10.0.18362.0 ,but this SDK cannot run on Hololens 1( Hololens 1 was updated latest：10.0.17763.0)
A clear and concise description of what the bug is.

## To reproduce

Steps to reproduce the behavior:

1. do not install  Windows 10 SDK 10.0.18362.0
2. open Build Window 

## Screenshots
![image](

## Your Setup (please complete the following information)

- Unity Version [2018.4.0f1 LTS]
- MRTK Version [v2.0.0 RC2.1]

## Target Platform (please complete the following information)
- HoloLens
</Description>
  </Issue>
  <Issue>
    <IssueID>5056</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>show error when  Build  Microsoft Mixed Reality Toolkit v2.0.0 RC2.1</Title>
    <CreatedDate>26/06/2019</CreatedDate>
    <ClosedDate>26/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5056</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Assets\MixedRealityToolkit.Providers\WindowsMixedReality\WindowsMixedRealityArticulatedHand.cs(390,73): error CS0246: The type or namespace name 'HandJointKind' could not be found (are you missing a using directive or an assembly reference?)

A clear and concise description of what the bug is.

## To reproduce

Steps to reproduce the behavior:

1.  Building scene PressableButtonExample 

## Screenshots
![image](

## Your Setup (please complete the following information)

- Unity Version [2018.4.0f1 LTS]
- MRTK Version [v2.0.0 RC2.1]

## Target Platform (please complete the following information)
- HoloLens
</Description>
  </Issue>
  <Issue>
    <IssueID>5053</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>5053</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Make test to verify that pointer is valid for first frame after hand appears</Title>
    <CreatedDate>25/06/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5053</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5053</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>5053</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Pointer</Name>
        <IssueID>5053</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Tests</Name>
        <IssueID>5053</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
In response to #5044 , this work tracks creating a test to validate the fix in #5044 (fixing issue #5029)

I started to create a test to validate this but it is ending up being more than just 20 minutes of work. Storing my starter code here, to be completed post-GA release.

## Starter Code
The test aims to do the following

1. Raise the hand
2. Get the pointer corresponding to the hand
3. Get the controller corresponding to the hand
4. Verify that the pointer pose for the hand controller matches the pointer rotation.


``
</Description>
  </Issue>
  <Issue>
    <IssueID>5050</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5050</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Interactable Custom Theme Assembly at Runtime</Title>
    <CreatedDate>25/06/2019</CreatedDate>
    <ClosedDate>21/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5050</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>5050</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5050</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>5050</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Interactable themes currently depend on editor-only inspector code to be configured correctly. They are also composed of many nested layers of classes. This makes it difficult to assemble and troubleshoot custom themes at runtime.

## Describe the solution you'd like

- A static utility class for assembling custom Interactable themes at runtime.
- Reduced dependence on inspectors for theme configuration.
- A revamped Interactable life cycle that allows for setting a theme after initialization.

## Describe alternatives you've considered

Sticking strictly to scriptable object references. This is not always feasible or desired.
</Description>
  </Issue>
  <Issue>
    <IssueID>5046</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>5046</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add a default MRTK profile for HoloLens 1 Interactions</Title>
    <CreatedDate>25/06/2019</CreatedDate>
    <ClosedDate>08/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5046</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5046</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>5046</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>5046</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Gaze</Name>
        <IssueID>5046</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The original question / bug highlighted a gap in usability/configurability of MRTK for HoloLens 1. By default interactions are set up for HoloLens 2 and there's no easy way to get to a HoloLens 1 friendly MRTK profile. This item tracks adding a config profile that's hololens 1 friendly (for HoloLens 1 interactions). 

This profile should use Gestures input simulation mode instead of articulated hands to simulate how HoloLens 1 works.

# Original Question
Gaze cursor is no longer re-enabled after using the 'Hand' in the latest release and can not be altered manually via the inspector.

Steps to reproduce the behavior:
1. Press Play( Gaze Cursor will be visible/active highlighting correctly )
2. Hold Down the 'Space Bar' to engage 'Hand'.
3. Release 'Space Bar'
4. Gaze Cursor remains inactive and disabled.
5. Can not be activated in the inspector as something is turning it off per frame.

## Expected behavior
After using either 'Hand', the Gaze cursor should reappear and be active after releasing the space bar.


## Your Setup (please complete the following information)

- Unity Version 
Unity : 2019.1.6f1
- MRTK : MRTK RC2.1

Platforms
- HoloLens
- HoloLens 2</Description>
  </Issue>
  <Issue>
    <IssueID>5041</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>UI Mask does not work in Hololens</Title>
    <CreatedDate>25/06/2019</CreatedDate>
    <ClosedDate>25/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5041</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## The UI mask does not work in Hololens, but work in Unity. 

 In HandInteractionUnityUIExample scene, there is TestCanvas prefab, when scrolling the UI Panel, the viewport content will show outside of the mask when built and view in Hololens.

## To reproduce

Steps to reproduce the behavior:

1. Go to HandInteractionUnityUIExample scene
2. Build the scene to Hololens
3. Scroll the vertical scrollbar
4. See the error, the content should be hidden, but it renders outside of UI Mask.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.14f1]
- MRTK Version [e.g. v2.0]

## Target Platform (please complete the following information)

- HoloLens


</Description>
  </Issue>
  <Issue>
    <IssueID>5040</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Camera destroyed when selecting different profiles in the inspector</Title>
    <CreatedDate>25/06/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5040</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>5040</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>5040</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Swapping off of camera in the profile inspector while in play mode causes the camera to be destroyed and MissingReferenceExceptions. 

## To reproduce

1. Start play mode
1. Open the mrtk profile
1. Switch from the camera profile to another profile in the inspector
1. Observe exceptions

![DestroyCamera](</Description>
  </Issue>
  <Issue>
    <IssueID>5039</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Speech Input Handler UI breaks after playmode</Title>
    <CreatedDate>25/06/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5039</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>5039</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Help Wanted</Name>
        <IssueID>5039</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Speech</Name>
        <IssueID>5039</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The speech input handler component losses most of its editor ui after entering playmode and leaving it again. Selecting the mrtk object in the scene tree 'resets' the behaviour until next playmode. 
Seems to be only visual as speech commands keep working.

## Expected Behavior
Component should still be configurable after leaving playmode once.

## Actual Behavior
It is not
Perfore playmode
![grafik](
In playmode
![grafik](
After playmode
![grafik](

## Unity Editor Version
2018.4.2f1
## Mixed Reality Toolkit Release Version
Mixed Reality Toolkit 2.0.0-RC2.1</Description>
  </Issue>
  <Issue>
    <IssueID>5038</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>BoundingBox causes error after dynamic add in script</Title>
    <CreatedDate>25/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5038</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>5038</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

GameObjects are created in a loop on the main thread. BoundingBox and Manipulator scripts are added to those objects. Because it's a large number of GameObjects that need to be added it's done in multiple frames. This results in an error during one of the frames:

Microsoft.MixedReality.Toolkit.UI.BoundingBox:UpdateRigHandles() (at Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/BoundingBox/BoundingBox.cs:1635)
Microsoft.MixedReality.Toolkit.UI.BoundingBox:CreateRig() (at Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/BoundingBox/BoundingBox.cs:721)
Microsoft.MixedReality.Toolkit.UI.BoundingBox:set_BoxGrabbedMaterial(Material) (at Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/BoundingBox/BoundingBox.cs:219)

It could be solved by creating a Coroutine. But the script shouldn't crash.

## To reproduce

Create large number of GameObjects with the script attached over multiple frames.

## Expected behavior

No crash

## Screenshots

n/a

## Your Setup (please complete the following information)

- Unity Version 2018.4.2f1
- MRTK Version v2.0 RC2.1

## Target Platform (please complete the following information)

- HoloLens 2

## Additional context

n/a</Description>
  </Issue>
  <Issue>
    <IssueID>5037</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InputActionHandler script wrong initialization for list of actions (missing MixedRealityToolkit)</Title>
    <CreatedDate>25/06/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5037</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>5037</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

In some cases the UI for the InputActionHandler script is not initialized well. This results in a list of actions where only "Missing MixedRealityToolkit" is shown. Clicking on MixedRealityToolkit and go back to the GameObject and it's solved.

## To reproduce

Steps to reproduce the behavior:

1. Add a GameObject
2. Add InputActionHandler script from MRTK to the GameObject
3. Press Unity PLAY
4. Press Unity STOP
5. Notice the "Missing MixedRealityToolkit" text in the Actions list.

## Expected behavior

It should just show the list of actions

## Your Setup (please complete the following information)

- Unity Version 2018.4.2f1 (LTS)
- MRTK Version v2.0 RC2.1

## Target Platform (please complete the following information)

- HoloLens 2</Description>
  </Issue>
  <Issue>
    <IssueID>5032</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpectatorViewSetup needs updating</Title>
    <CreatedDate>24/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>5032</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'm following the guide here:

[

Steps 10 and 11 appear to refer to older versions of the SpectatorView script. I believe the spatial anchor id, key, and domain should now be set in the AzureSpatialAnchorsDemoConfig asset. 

I could be wrong, I can't get builds working on Hololens or Android anyway.

Also, should the ip address be changed on the SpectatorView script for Hololens builds?</Description>
  </Issue>
  <Issue>
    <IssueID>5029</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>5029</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Simulated hand ray does not show until you move the hand</Title>
    <CreatedDate>24/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5029</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## To reproduce

Steps to reproduce the behavior:

1. Play any MRTK scene with the default configuration profiles.
2. Bring up the right simulated hand by pressing 'Y'.
3. Observe how no hand ray is displayed.
4. Move hand by moving the mouse while pressing space.
5. Observe how hand ray is displayed.

![SimulatedHandRay](

## Expected behavior

The hand ray shows from the beginning.

## Your Setup (please complete the following information)

- Unity Version: 2018.4.1.f1
- MRTK Version: development post RC 2.1 (79044680e42ea7)

## Target Platform (please complete the following information)

- Editor

## Additional context

The ray pointer is missing the input changed event raised by the ` SimulatedArticulatedHand` to notify of the initial index finger pose. This is caused by `InputSystemGlobalListener.lateInitialize` being set to true and thus delaying the registration of the pointer as a global listener to a later point when the event has already been raised.
</Description>
  </Issue>
  <Issue>
    <IssueID>5028</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>BoundingBox uses null check on structs</Title>
    <CreatedDate>24/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5028</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5028</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Help Wanted</Name>
        <IssueID>5028</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Two Vector3 variables (maximumScale, minimumScale) are checked for null:

``

I would have fixed it myself, but I don't know what the coding convention says about nullables.
</Description>
  </Issue>
  <Issue>
    <IssueID>5027</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MouseController stutters when used on BoundingBox</Title>
    <CreatedDate>24/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5027</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The 3D mouse cursor of the MouseController stutters really bad when handles of the BoundingBox are being manipulated.
This is especially noticeable in the editor. During normal operation, the rendered debug lines green and brown match up all the time. While dragging handles of the box around, they diverge pretty bad. While the green line indicates that input is being processed at a smooth rate, the brown one, along with the cursor jumps around. The faster you go, the worse it gets.

## To reproduce

Steps to reproduce the behavior:

1. Enable the MouseController for Windows Editor in the MRTK Input Provider list
2. Run the BoundingBoxRuntimeExample
3. Modify the boundingbox and watch the 3D mouse cursor

## Expected behavior

Smooth movement with the mouse

## Screenshots

If applicable, add screenshots to help explain your problem.
![image](


## Your Setup (please complete the following information)

- Unity Version 2018.4.2f1
- MRTK Version mrtk_development

## Target Platform (please complete the following information)

- Unity Editor
</Description>
  </Issue>
  <Issue>
    <IssueID>5025</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Selecting Input category in MixedRealityToolkit in play mode deletes UIRaycastCamera</Title>
    <CreatedDate>24/06/2019</CreatedDate>
    <ClosedDate>24/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5025</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The UIRaycastCamera gets deleted wheh the Input category from the MixedRealityToolkit is selected.

## To reproduce

Steps to reproduce the behavior:

1. Run any scene with the MRTK in it
2. Select the MRTK
3. Choose Input in the inspector
4. See error and that the UIRaycastCamera is missing

## Expected behavior

UIRaycastCamera does not get deleted

## Your Setup (please complete the following information)

- Unity Version 2018.4.2f1
- MRTK Version development branch</Description>
  </Issue>
  <Issue>
    <IssueID>5023</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>5023</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Pressable button cannot be created in a root hierarchy</Title>
    <CreatedDate>23/06/2019</CreatedDate>
    <ClosedDate>25/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>5023</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5023</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>5023</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>5023</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>5023</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

- Creating a new button with PressableButton.cs in the scene root generates error messages and the button does not move.
- Moving this button into an empty game object as a child component resolves this symptom.
- Verified both on mrtk_release and mrtk_development

## Repro step
Create a button from scratch (needs only 1st step to verify the symptom)


## Error message:
NullReferenceException: Object reference not set to an instance of an object
Microsoft.MixedReality.Toolkit.UI.PressableButton.get_InitialPosition () (at Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/PressableButtons/PressableButton.cs:192)
Microsoft.MixedReality.Toolkit.UI.PressableButton.GetWorldPositionAlongPushDirection (System.Single localDistance) (at Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/PressableButtons/PressableButton.cs:338)
Microsoft.MixedReality.Toolkit.Editor.PressableButtonInspector.DrawPlaneAndHandle (UnityEngine.Vector3[] vertices, UnityEngine.Vector3 halfExtents, System.Single distance, Microsoft.MixedReality.Toolkit.Editor.PressableButtonInspector+ButtonInfo info, System.String label, System.Boolean editingEnabled) (at Assets/MixedRealityToolkit.SDK/Inspectors/UX/Interactable/PressableButtonInspector.cs:201)
Microsoft.MixedReality.Toolkit.Editor.PressableButtonInspector.DrawButtonInfo (Microsoft.MixedReality.Toolkit.Editor.PressableButtonInspector+ButtonInfo info, System.Boolean editingEnabled) (at Assets/MixedRealityToolkit.SDK/Inspectors/UX/Interactable/PressableButtonInspector.cs:138)
Microsoft.MixedReality.Toolkit.Editor.PressableButtonInspector.OnSceneGUI () (at Assets/MixedRealityToolkit.SDK/Inspectors/UX/Interactable/PressableButtonInspector.cs:106)
System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) (at &lt;d7ac571ca2d04b2f981d0d886fa067cf&gt;:0)
Rethrow as TargetInvocationException: Exception has been thrown by the target of an invocation.
System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) (at &lt;d7ac571ca2d04b2f981d0d886fa067cf&gt;:0)
System.Reflection.MethodBase.Invoke (System.Object obj, System.Object[] parameters) (at &lt;d7ac571ca2d04b2f981d0d886fa067cf&gt;:0)
UnityEditor.SceneView.CallOnSceneGUI () (at C:/buildslave/unity/build/Editor/Mono/SceneView/SceneView.cs:2836)
UnityEditor.SceneView.HandleSelectionAndOnSceneGUI () (at C:/buildslave/unity/build/Editor/Mono/SceneView/SceneView.cs:2125)
UnityEditor.SceneView.OnGUI () (at C:/buildslave/unity/build/Editor/Mono/SceneView/SceneView.cs:1986)
System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) (at &lt;d7ac571ca2d04b2f981d0d886fa067cf&gt;:0)
Rethrow as TargetInvocationException: Exception has been thrown by the target of an invocation.
System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) (at &lt;d7ac571ca2d04b2f981d0d886fa067cf&gt;:0)
System.Reflection.MethodBase.Invoke (System.Object obj, System.Object[] parameters) (at &lt;d7ac571ca2d04b2f981d0d886fa067cf&gt;:0)
UnityEditor.HostView.Invoke (System.String methodName, System.Object obj) (at C:/buildslave/unity/build/Editor/Mono/HostView.cs:342)
UnityEditor.HostView.Invoke (System.String methodName) (at C:/buildslave/unity/build/Editor/Mono/HostView.cs:336)
UnityEditor.HostView.InvokeOnGUI (UnityEngine.Rect onGUIPosition, UnityEngine.Rect viewRect) (at C:/buildslave/unity/build/Editor/Mono/HostView.cs:310)
UnityEditor.DockArea.DrawView (UnityEngine.Rect viewRect, UnityEngine.Rect dockAreaRect, System.Boolean customBorder, System.Boolean floatingWindow, System.Boolean isBottomTab) (at C:/buildslave/unity/build/Editor/Mono/GUI/DockArea.cs:361)
UnityEditor.DockArea.OldOnGUI () (at C:/buildslave/unity/build/Editor/Mono/GUI/DockArea.cs:320)
UnityEngine.Experimental.UIElements.IMGUIContainer.DoOnGUI (UnityEngine.Event evt, UnityEngine.Matrix4x4 worldTransform, UnityEngine.Rect clippingRect, System.Boolean isComputingLayout) (at C:/buildslave/unity/build/Modules/UIElements/IMGUIContainer.cs:244)
UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)

## Screenshots
![2019-06-23 14_00_58-Unity 2018 4 2f1 Personal - Untitled - MRTK-GitHub - Universal Windows Platform_](

### Generates error when it is in the scene root
![2019-06-23 14_01_33-Unity 2018 4 2f1 Personal - Untitled - MRTK-GitHub - Universal Windows Platform_](

### The issue is resolved when the button is placed under a game object
![2019-06-23 14_01_40-Unity 2018 4 2f1 Personal - Untitled - MRTK-GitHub - Universal Windows Platform_](

## Your Setup (please complete the following information)

- Unity 2018.4.2f1
- **mrtk_release** and **mrtk_development**
</Description>
  </Issue>
  <Issue>
    <IssueID>5021</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5021</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK Utility for common access to services</Title>
    <CreatedDate>22/06/2019</CreatedDate>
    <ClosedDate>08/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5021</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5021</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK usability</Name>
        <IssueID>5021</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Thousand Cuts</Name>
        <IssueID>5021</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

With the addition of the new **MixedRealityServiceRegistry.TryGetService** and related APIs (thanks @davidkline-ms !) every class now has to define their own local properties and setup for accessing the MRTK service such as is common below. This get property is copy/pasted continuously across both MRTK internal code &amp; developer partner code. 

`        
private IMixedRealityInputSystem inputSystem = null;

        /// &lt;summary&gt;
        /// The active instance of the input system
        /// &lt;/summary&gt;
        public IMixedRealityInputSystem InputSystem
        {
            get
            {
                if (inputSystem == null)
                {
                    MixedRealityServiceRegistry.TryGetService&lt;IMixedRealityInputSystem&gt;(out inputSystem);
                }
                return inputSystem;
            }
        }
`

## Describe the solution you'd like
Allow static (i.e singleton-like which was previous way) access to the MRTK services currently active at runtime. Developers would still be able to call the MixedREalityServiceRegistry directly for special requests or designs etc but this will simplify the code and process for 95% of cases.

## Describe alternatives you've considered

If we teardown MRTK services and switch out for a new MRTK input system, I'm not sure on the impact...but then the existing copy/paste paradigm would be broken regardless. If we do cross this point, it would still be better to be able to change functionality/code in one place.

## Additional context

Add any other context or screenshots about the feature request here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5019</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>5019</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Spatial Awareness meshes are likely not properly parented</Title>
    <CreatedDate>21/06/2019</CreatedDate>
    <ClosedDate>06/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5019</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>5019</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
While working on a file observer, i noticed that observations were not properly parented. Investigate if this is also true for the windows mixed reality spatial mesh observer.
</Description>
  </Issue>
  <Issue>
    <IssueID>5015</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add API on FocusProvider to override the focus point for a given pointer</Title>
    <CreatedDate>21/06/2019</CreatedDate>
    <ClosedDate>04/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5015</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5015</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Focus</Name>
        <IssueID>5015</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Pointer</Name>
        <IssueID>5015</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK usability</Name>
        <IssueID>5015</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

If a pointer is locked to a target, the point is maintained in the targeted object's local space. This allows for dragging/rotating/scaling objects via their transform.

If however the object being targeted needs to update it's content in way that is not tied to the transform, then the pointer is not adjusted:

![Before](

Here, panning the map does not mean translating the game object's transform. It means translating a lat-long center property. The focus provider has no context of this, i.e. the local space point is not changing, so while the map translates, the focus point remains fixed instead of tracking along with the map.

## Describe the solution you'd like

By adding an API on FocusProvider to set a focus point for a given pointer, the correct behavior can be achieved:

![After](

 This API could be pulled into the IFocusProvider interface, but that may be more of a breaking change. Even having this API on the default implementation would be helpful.

## Describe alternatives you've considered

I think it would be possible to achieve this behavior in a very roundabout way with the current system, using invisible colliders and carefully timing when the pointer is locked. That solution seems more complicated and prone to script ordering issues though, so having a direct API to set the focus point would be ideal.
</Description>
  </Issue>
  <Issue>
    <IssueID>5013</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>5013</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5013</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add Interactable event via script</Title>
    <CreatedDate>21/06/2019</CreatedDate>
    <ClosedDate>04/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5013</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>5013</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5013</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK usability</Name>
        <IssueID>5013</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>5013</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

It would be useful to add events to interactables via script. Imagine cases in which we add the script at runtime.

- [x] Add OnClick from dynamically instantiated Interactable

## Describe the solution you'd like

It would be great a simple way to do that (still I can't find out how). Ok, maybe not same as OnClick event that is completely exposed, but something easy to implement.

## Describe alternatives you've considered

Use a global listener instead of interactable script

## Additional context

Same for interactable receiver script, and so on.
</Description>
  </Issue>
  <Issue>
    <IssueID>5010</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Eye tracking simulation in editor</Title>
    <CreatedDate>21/06/2019</CreatedDate>
    <ClosedDate>11/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5010</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Eye Tracking</Name>
        <IssueID>5010</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>5010</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input Simulation</Name>
        <IssueID>5010</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Right now the eye tracking simulator uses the center of the Main Camera FoV. What would have been great is having the eye tracking simulator being separate from the center of the MC FoV so we could simulate limit cases such as using eye tracking on the edge of Hololens FoV. One idea that came up to my mind is having the eye tracking following the mouse when holding the left mouse button (which if I recall correctly is not used in Play Mode) </Description>
  </Issue>
  <Issue>
    <IssueID>5008</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hand mesh is too small</Title>
    <CreatedDate>21/06/2019</CreatedDate>
    <ClosedDate>24/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5008</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

With some people, the hand mesh detected by the Hololens 2 is too small. Thus, some gesture and interactions are more difficult to perform (for exemple, the wrist button to access to the main menu appears inside the wrist, making it difficult to reach).

Note: This bug only appears on certain hands. In most cases, the mesh is well dimensioned.

## To reproduce

Steps to reproduce the behavior:

1. Start the Hololens
2. Look at left wrist
3. Try to interact with the main menu button
4. See error

## Expected behavior

The button appears on the skin, being accessible by touch.

## Screenshots

Using MRC screenshot tools, RA holograms are not well aligned with the video background, thus, it is impossible to take a screenshot of this problem.

## Your Setup (please complete the following information)

- Unity Version 2018.4.2f1
- MRTK Version 2.0.0-RC2

## Target Platform (please complete the following information)

- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>5006</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>5006</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Spawning a gameobject with boundingbox during runtime with intro scale animation will break the bounding box controls</Title>
    <CreatedDate>21/06/2019</CreatedDate>
    <ClosedDate>25/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5006</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5006</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>5006</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>5006</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK usability</Name>
        <IssueID>5006</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>5006</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Some devs were spawning bounding box gameobjects during runtime and having an intro animation that was scaling the object from 0 to original scaling. This breaks the bounding box and it will look distorted - handles will also be unusable.

Workaround: calling CreateRig() after the animation has finished.

## To reproduce
Have a gameobject with an animation that changes the scale and spawn it during runtime. Observe that the bounding box breaks.

## Expected behavior

A clear and concise description of what you expected to happen.

## Screenshots
Screenshot shows on the left the runtime spawned bounding box and on the right the same bounding box was placed in the scene before starting the simulation. Also note that the scale of 0 seems not to be handled properly
![image](


## Your Setup (please complete the following information)

- Unity Version 2018.4
- MRTK Version 2 RC2.1

</Description>
  </Issue>
  <Issue>
    <IssueID>5005</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Docs] FocusProvider not documented</Title>
    <CreatedDate>21/06/2019</CreatedDate>
    <ClosedDate>19/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5005</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>5005</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>5005</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Focus</Name>
        <IssueID>5005</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
I can't seem to find any documentation on using FocusProvider. Maybe it could be part of pointers? There definitely needs to be some guidance of how one can figure out what is in focus for a given pointer as well as how to access all the available pointers currently available. 

## Feature Area
ex: Developer should be able to easily write a line of code for "What gameobject is my right hand ray hitting?"

## Existing Doc Link
If this is about something in an existing document, please provide link 

## Additional context
Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>5004</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5004</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Can't delete select and delete pointer options in Input Profile</Title>
    <CreatedDate>21/06/2019</CreatedDate>
    <ClosedDate>03/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>5004</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>5004</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5004</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>5004</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>5004</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Has Workaround</Name>
        <IssueID>5004</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>5004</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

It's currently not possible to select and delete existing pointer options in the input profile. The button for deleting is there but we can't select any elements in the list so the button is not working.

## To reproduce
-Select the MRTK gameobject 
- navigate to Input
- inspect the pointer options
- try selecting one of them and pressing the - button for deleting them

## Expected behavior
- pointers entries should be selectable and deletable


## Your Setup (please complete the following information)

- Unity Version 2018.4
- MRTK Version 2 RC2.1
</Description>
  </Issue>
  <Issue>
    <IssueID>5003</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>5003</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK Build window causes performance drop in simulation</Title>
    <CreatedDate>21/06/2019</CreatedDate>
    <ClosedDate>25/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>5003</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>5003</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

If you have your app running in the unity editor and you open the MRTK Build window you will notice a sudden performance drop that persists until you close the build window.

## To reproduce
Open any mrtk scene with the profiler visible
Run the scene
Open the MRTK Build window
Observe the performance drop

## Expected behavior
Unity inspectors and UIs shouldn't decrease the apps performance considerably.

## Your Setup (please complete the following information)

- Unity Version 2018.4
- MRTK Version 2 RC2.1
</Description>
  </Issue>
  <Issue>
    <IssueID>4999</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Docs] Screenshot/diagram updates</Title>
    <CreatedDate>21/06/2019</CreatedDate>
    <ClosedDate>22/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4999</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
There are many outdated screenshots.

## Existing Doc Link

</Description>
  </Issue>
  <Issue>
    <IssueID>4998</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>pointers should not always raise PointerClicked on InputUp</Title>
    <CreatedDate>20/06/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4998</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4998</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4998</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4998</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

In HTK, we used to get InputClicked events in response to tap events from the gesture recognizer (for WMR/HL). Now in MRTK, it seems that the tap event isn't handled at all, and PointerClicked happens unconditionally with PointerUp (at least for BaseControllerPointer, GGVPointer, and PokePointer) whereas there used to be a distinction: tap would only happen when there's a short time between input down/up, whereas hold/manipulate happen after a long period of time (it seems like tap and hold should be mutually exclusive, but I'm not 100% certain if that is actually the case for WMR).

Often PointerUp and PointerClicked can be used interchangeably, but there are some cases where it is helpful to just respond to a click - particularly when hold and/or manipulate are also used for different functionality, in which case it is helpful to have the other gestures filtered automatically.

Note that UnityTouchController already works that way (although it's kind of weird that sometimes the event is coming from the pointer and other times from the controller) - it would be nice to see the same applied to other controller types (WMR in particular).
 
Here's the old version:


And the new one:



## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
</Description>
  </Issue>
  <Issue>
    <IssueID>4997</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>4997</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK inspector tab selection is not preserved when entering playmode</Title>
    <CreatedDate>20/06/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4997</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>4997</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When entering play mode with an MRTK instance selected, the inspector's tab selection resets.

## To reproduce

- Create a new scene
- Add an MRTK instance and select it
- Select 'Spatial Mapping' tab
- Enter play mode
- Observe tab selection default back to 'Camera'

## Expected behavior

Tab selection should be preserved when entering play mode.</Description>
  </Issue>
  <Issue>
    <IssueID>4992</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>4992</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Wireframe shader does not support transparency</Title>
    <CreatedDate>20/06/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4992</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4992</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

It is not possible to change the renderingmode and related options in the wireframe shader as these are not piped through like the MRTK Standard shader. Thus, one cannot create transparency for the wireframe faces. 

## To reproduce

Assign MRTK wireframe shader to a sphere and ensure baseColor is set to (0,0,0,0) but see that the faces are not actually transparent

## Expected behavior

Setting rendering mode to transparent should make the faces transparent or at least based off of the base color

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2018.4
- MRTK Version Latest

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>4990</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoloLens 2 hand tracking mesh and pointer direction not working in HoloLens 2 and RC2.1</Title>
    <CreatedDate>20/06/2019</CreatedDate>
    <ClosedDate>20/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4990</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Articulated hand mesh is very unstable. The joint cubes appear to always align well, but the hand mesh is either missing or at a fixed location in space (though fingers still move when the user moves their physical fingers.

The raycasts also point in the wrong direction.

Once in a while, the hand mesh will briefly superimpose perfectly on the hand. When that happens, the pointer points in the correct direction. But the hand mesh is easily lost again.


## To reproduce

Steps to reproduce the behavior:

Deploy any RC2.1 app with the default mixed reality toolkit profile to a HoloLens 2. W
We tried with two different apps.
We tried with a MRTK RC1 app, and the issue did not appear.

## Expected behavior

Hand mesh superimposed on hand.
Hand pointers pointing in the correct direction

## Screenshots

![image](


## Your Setup (please complete the following information)

- Unity Version  2018.4.2f1
- MRTK Version RC2.1

## Target Platform (please complete the following information)


- HoloLens 2


## Additional context

Running the latest build of HoloLens 2 as of 6/20/2019 - tagging @jessemcculloch 
</Description>
  </Issue>
  <Issue>
    <IssueID>4989</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Appx build inside build window does not use correct build configuration</Title>
    <CreatedDate>20/06/2019</CreatedDate>
    <ClosedDate>13/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4989</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4989</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When I'm about to build &amp; deploy on Hololens, the first appx build I try after building Unity project seems to use Master configuration while I selected Release. It then throws an error because it seems it does not find such configuration. If I retry a build, it uses the configuration.

## To reproduce

Steps to reproduce the behavior:

1. Open a Unity project and then MixedRealityToolkit&gt; Utilities &gt; Build Window
2. Make sure in Appx Build Options tab that Build Configuration is set on "Release"
3. In Unity Build Option tab, select Build Unity Project
4. When it's done, either use Build appx from popup or go in Appx Build Options tab and use "Build APPX"
5. MSBuild indicates in Unity console that build failed

## Expected behavior

MSBuild should complete successfully

## Screenshots

![image](

## Your Setup (please complete the following information)

- Unity Version 2018.3.0f2
- MRTK Version 2.0.0-RC2.1

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2

</Description>
  </Issue>
  <Issue>
    <IssueID>4988</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4988</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>AsyncCoroutineRunner triggers assertion failed on 'go.IsActive()' when GGVPointer:OnSourceLost</Title>
    <CreatedDate>20/06/2019</CreatedDate>
    <ClosedDate>27/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4988</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4988</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>4988</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4988</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK usability</Name>
        <IssueID>4988</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shutdown</Name>
        <IssueID>4988</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Assertion failed on expression: 'go.IsActive()'
UnityEngine.GameObject:Find(String)
Microsoft.MixedReality.Toolkit.Utilities.AsyncCoroutineRunner:get_Instance() (at Assets/MixedRealityToolkit/Utilities/Async/Internal/AsyncCoroutineRunner.cs:50)
Microsoft.MixedReality.Toolkit.Utilities.&lt;&gt;c__DisplayClass13_0:&lt;GetAwaiterReturnVoid&gt;b__0() (at Assets/MixedRealityToolkit/Utilities/Async/AwaiterExtensions.cs:127)
Microsoft.MixedReality.Toolkit.Utilities.AwaiterExtensions:RunOnUnityScheduler(Action) (at Assets/MixedRealityToolkit/Utilities/Async/AwaiterExtensions.cs:144)
Microsoft.MixedReality.Toolkit.Utilities.AwaiterExtensions:GetAwaiterReturnVoid(Object) (at Assets/MixedRealityToolkit/Utilities/Async/AwaiterExtensions.cs:127)
Microsoft.MixedReality.Toolkit.Utilities.AwaiterExtensions:GetAwaiter(WaitUntil) (at Assets/MixedRealityToolkit/Utilities/Async/AwaiterExtensions.cs:71)
Microsoft.MixedReality.Toolkit.&lt;Unregister&gt;d__7:MoveNext() (at Assets/MixedRealityToolkit/Services/BaseEventSystem.cs:58)
System.Runtime.CompilerServices.AsyncVoidMethodBuilder:Start(&lt;Unregister&gt;d__7&amp;)
Microsoft.MixedReality.Toolkit.BaseEventSystem:Unregister(GameObject)
Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystem:Unregister(GameObject) (at Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputSystem.cs:497)
Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalListener:OnDisable() (at Assets/MixedRealityToolkit.Services/InputSystem/InputSystemGlobalListener.cs:62)
UnityEngine.Object:DestroyImmediate(Object)
Microsoft.MixedReality.Toolkit.Input.GGVPointer:OnSourceLost(SourceStateEventData) (at Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Pointers/GGVPointer.cs:318)
Microsoft.MixedReality.Toolkit.Input.&lt;&gt;c:&lt;.cctor&gt;b__185_1(IMixedRealitySourceStateHandler, BaseEventData) (at Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputSystem.cs:711)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
Microsoft.MixedReality.Toolkit.BaseEventSystem:HandleEvent(BaseEventData, EventFunction`1) (at Assets/MixedRealityToolkit/Services/BaseEventSystem.cs:32)
Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystem:DispatchEventToGlobalListeners(BaseInputEventData, EventFunction`1) (at Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputSystem.cs:419)
Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystem:HandleEvent(BaseEventData, EventFunction`1) (at Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputSystem.cs:349)
Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystem:RaiseSourceLost(IMixedRealityInputSource, IMixedRealityController) (at Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputSystem.cs:702)
Microsoft.MixedReality.Toolkit.Input.InputSimulationService:RemoveHandDevice(Handedness) (at Assets/MixedRealityToolkit.Services/InputSimulation/Editor/InputSimulationService.cs:304)
Microsoft.MixedReality.Toolkit.Input.InputSimulationService:UpdateHandInputSource(Handedness, SimulatedHandData) (at Assets/MixedRealityToolkit.Services/InputSimulation/Editor/InputSimulationService.cs:224)
Microsoft.MixedReality.Toolkit.Input.InputSimulationService:LateUpdate() (at Assets/MixedRealityToolkit.Services/InputSimulation/Editor/InputSimulationService.cs:141)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:LateUpdateAllServices() (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:961)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:LateUpdate() (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:685)



edit
 additional error when stoping App while asynccoroutinerunner has never been created :

Some objects were not cleaned up when closing the scene. (Did you spawn new GameObjects from OnDestroy?)
The following scene GameObjects were found:
AsyncCoroutineRunner
`</Code>
    <Description>## Describe the bug
In Unity editor, during play mode,
when clicking on a button that remove a scene, the lost pointer event leads to an assertion when accessing/creating the async coroutine runner. 

``

## To reproduce

Steps to reproduce the behavior:
not really sure on the repros as lots of things are going on
but basically clicking on a button that will unload scenes (including the button itself) and load another scene (we don't unload the scene that contains the MixedRealityToolkit)
This happens in unity editor (it's related to inputsimulation)

## Expected behavior
no assertion raised...

## Your Setup (please complete the following information)

- Unity Version 2018.4.2f1
- MRTK Version v2.0 RC2.1

## Target Platform (please complete the following information)

- HoloLens


## Additional context

</Description>
  </Issue>
  <Issue>
    <IssueID>4987</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>UDP client not working on Hololens</Title>
    <CreatedDate>20/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>4987</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
#include &lt;iostream&gt;
#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;
#include &lt;WinSock2.h&gt;
#include &lt;windows.h&gt;

#pragma comment(lib,"ws2_32.lib") //Winsock Library

#define BUFLEN 512	//Max length of buffer
#define PORT 8888	//The port on which to listen for incoming data

int main()
{
	SOCKET s;
	struct sockaddr_in server, si_other;
	int slen, recv_len;	
	char buf[BUFLEN];
	WSADATA wsa;

	slen = sizeof(si_other);

	//Initialise winsock
	printf("\nInitialising Winsock...");
	if (WSAStartup(MAKEWORD(2, 2), &amp;wsa) != 0)
	{
		printf("Failed.Error Code : % d ", WSAGetLastError());
		exit(EXIT_FAILURE);
	}
	printf("Initialised.\n");

	//Create a socket
	if ((s = socket(AF_INET, SOCK_DGRAM, 0)) == INVALID_SOCKET)
	{
		printf("Could not create socket : % d", WSAGetLastError());
	}
	printf("Socket created.\n");

	//Prepare the sockaddr_in structure
	server.sin_family = AF_INET;
	server.sin_addr.s_addr = INADDR_ANY;
	server.sin_port = htons(PORT);

	//Bind
	if (bind(s, (struct sockaddr*) &amp;server, sizeof(server)) == SOCKET_ERROR)
	{
		printf("Bind failed with error code : % d", WSAGetLastError());
		exit(EXIT_FAILURE);
	}
	puts("Bind done");


	printf("Waiting for data...\n");
	fflush(stdout);

	double tab_s[6] = { 0.0, 0.0, 0.0, 4.0, 5.0, 6.0 };
	double tab_r[3];


	//keep listening for data
	while (1)
	{

		//clear the buffer by filling null, it might have previously received data
		memset(buf, 0, BUFLEN);

		//try to receive some data, this is a blocking call
		if ((recv_len = recvfrom(s, (char*)&amp; tab_r, sizeof(tab_r), 0, (struct sockaddr*) &amp; si_other, &amp;slen)) == SOCKET_ERROR)
		{
			printf("recvfrom() failed with error code : % d", WSAGetLastError());
			exit(EXIT_FAILURE);
		}

		printf("\nOn recoit:\n");
		std::cout &lt;&lt; "fx: " &lt;&lt; tab_r[0] &lt;&lt; " fy: " &lt;&lt; tab_r[1] &lt;&lt; " fz: " &lt;&lt; tab_r[2] &lt;&lt; std::endl;

		tab_s[0] = tab_s[0] - 0.1;

		printf("\nOn envoie:\n x = %f, y = %f, z = %f\n", tab_s[0], tab_s[1], tab_s[2]);
		printf("vx = %f, vy = %f, vz = %f\n", tab_s[3], tab_s[4], tab_s[5]);

		//now reply the client with the same data
		if (sendto(s,(char*)&amp;tab_s, sizeof(tab_s), 0, (struct sockaddr*) &amp;si_other, slen) == SOCKET_ERROR)
		{
			printf("sendto() failed with error code : % d", WSAGetLastError());
			exit(EXIT_FAILURE);
		}
	}

	closesocket(s);
	WSACleanup();

	return 0;
} 

`

&gt; Client.cs

``</Code>
    <Description>## Describe the bug

I'm trying to communicate with the Hololens through UDP to send and receive data: I made a C++ socket (Winsock) which is the Udp server and a C# script (the Udp client) on Unity. 
When I run the Unity scene on my local machine (my PC), it works fine. But when I deploy it on the Hololens, it seems that the UdpClient cannot find the UdpServer on the PC. 
Both are on the same wifi connection though. I can't figure out why it still doesn't work.

## To reproduce

I give below the scripts I used.
1. Launch the server (server_win.cpp) first 
2. Create an empty scene on Unity
3. Attribute the UdpClient C# script (Client.cs) on a GameObject
4. Build the project
5. Deploy the scene on Hololens

olens via Visual Studio

## Expected behavior

The server prints the received and sent data if the connection 

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

-Unity Version 2018.3.7f1
-MRTK Version v2.0.0 RC1
-Visual Studio Community 2019

## Target Platform (please complete the following information)

- HoloLens 1

## Source Code

&gt; server_win.cpp

``
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System;
using System.Net;
using System.Net.Sockets;
using System.Text;

public class Client : MonoBehaviour
{
    UdpClient udpClient;

    private Vector3 read_buff1 = new Vector3(0f, 0f, 0f);
    private Vector3 read_buff2 = new Vector3(0f, 0f, 0f);
    private Vector3 send_buff = new Vector3(1f, 2f, 3f);

    // IP du serveur
    String Ip_wifi = "192.168.43.87"; // put the IP adress of you PC here when you deploy on Hololens
    String Ip_local = "127.0.0.1"; // localhost

    int port_rcv = 11000; // port where we receive data
    int port_send = 8888; // port where we send data

    // Start is called before the first frame update
    void Start()
    {
        Connection(Ip_local); // put Ip_local or Ip_wifi here
        SendData(); // first send, in order to get in touch with the server

    }

    void Update()
    {   
        ReadData();
        SendData();
    }

    public void Connection(String Ip)
    {
        // Initialisation of the UdP Connection
        try
        {
            udpClient = new UdpClient(port_rcv);
            udpClient.Connect(Ip, port_send);
            Debug.Log("Connection established");
        }
        catch (Exception exception)
        {
            Debug.Log("Exception caught: " + exception.Message);
        }
    }

    // Synchrone read function
    public void ReadData()
    {
        try
        {
            //IPEndPoint object will allow us to read datagrams sent from any source.
            IPEndPoint RemoteIpEndPoint = new IPEndPoint(IPAddress.Any, 0);

            Byte[] receiveBytes = udpClient.Receive(ref RemoteIpEndPoint);
            this.read_buff1 = new Vector3((float)BitConverter.ToDouble(receiveBytes, 8),
                                    (float)BitConverter.ToDouble(receiveBytes, 16),
                                    -1 * ((float)BitConverter.ToDouble(receiveBytes, 0)));

            this.read_buff2 = new Vector3((float)BitConverter.ToDouble(receiveBytes, 32),
                                       (float)BitConverter.ToDouble(receiveBytes, 40),
                                       -1 * (float)BitConverter.ToDouble(receiveBytes, 24));

            Debug.Log("Received: " + this.read_buff1);
        }
        catch (Exception e)
        {
            Debug.Log(e.ToString());
        }
    }

    public void SendData()
    {
        // Formatting data to send
        byte[] dataX = BitConverter.GetBytes((double)-1 * this.send_buff.z);
        byte[] dataY = BitConverter.GetBytes((double)this.send_buff.x);
        byte[] dataZ = BitConverter.GetBytes((double)this.send_buff.y);

        byte[] dataToSend = new byte[24];
        for (int i = 0; i &lt; dataX.Length; i++)
        {
            dataToSend[i] = dataX[i];
            dataToSend[i + 8] = dataY[i];
            dataToSend[i + 16] = dataZ[i];
        }

        try
        {
            udpClient.Send(dataToSend, dataToSend.Length);
        }
        catch (Exception exception)
        {
            Debug.Log("Exception caught: " + exception.Message);
        }

        Debug.Log("Sent: " + this.send_buff);
    }
}
</Description>
  </Issue>
  <Issue>
    <IssueID>4986</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MixedRealityLineRenderer is showing an error when used with default configuration</Title>
    <CreatedDate>20/06/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4986</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4986</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4986</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>4986</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Using the MixedRealityLineRenderer in it's default configuration will cause an error during runtime because there's no material assigned to it. 

## To reproduce

Add a MixedRealityLineRenderer component to any gameobject and hit play


## Expected behavior

There shouldn't be an error when using a component in default configuration.


## Your Setup (please complete the following information)

- Unity Version 2018.4
- MRTK Version V2 RC2.1

## Target Platform (please complete the following information)

- Unity

</Description>
  </Issue>
  <Issue>
    <IssueID>4985</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>4985</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>"GetDataProvider" method causes null pointer exception in "observer" (non-descriptive error message )</Title>
    <CreatedDate>20/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4985</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4985</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue

In the "Spatial Awareness - Usage Guide" page of MRTK Docs, under the "Enumerating and accessing the meshes" section, the following code produces an error:

    IMixedRealitySpatialAwarenessMeshObserver observer =
        dataProviderAccess.GetDataProvider&lt;IMixedRealitySpatialAwarenessMeshObserver&gt;();

    foreach (SpatialAwarenessMeshObject meshObject in observer.Meshes.Values)
    {
        Mesh mesh = meshObject.Filter.mesh;
    }

When we try to call the "**GetDataProvider**" method, the error is caused because the `` is null. The reason for this was because "Windows Mixed Reality Spatial Mesh Observer" Profile platform was set to "Nothing," instead of "Windows Universal."


## Feature Area
The error message as it is now says it cannot provide an observer because the spatial awareness profile is incorrectly set.

We should add into the docs that the Spatial Awareness Profile has to be set up correctly in order to be able to access the the Spatial Mapping mesh model and send it to anchor sharing.

## Existing Doc Link


## Additional context
- Unity Version 2019.1.0f1
- MRTK Version v2 RC 2.1

![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>4983</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[MRTK Shell Parity] Follow Me behavior does not match the shell</Title>
    <CreatedDate>20/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4983</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4983</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4983</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Follow Me behavior does not match the shell.
Currently, Slate prefab has 'Follow Me' button which toggles Orbital Solver to mimic the behavior of the shell. However, the behavior is different from the shell.
The biggest difference is: current behavior with orbital solver does not provide 'lazy move' - allow the user to move/rotate a certain amount before it triggers object repositioning.

Part of #4200 UX Controls Parity with HoloLens 2 Shell

## To reproduce
In HandInteractionExamples scene, press 'Follow Me' button on the Slate example.

## Branch
mrtk_development
</Description>
  </Issue>
  <Issue>
    <IssueID>4980</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>4980</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[MRTK Shell Parity] [Cursor] Size should automatically be scaled up/down regardless of the distance (constant view size)</Title>
    <CreatedDate>19/06/2019</CreatedDate>
    <ClosedDate>29/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4980</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4980</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4980</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4980</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Cursor size should automatically be scaled up/down regardless of the distance (constant view size)

Part of #4200 UX Controls Parity with HoloLens 2 Shell

## To reproduce
With hand ray or gaze cursor, target near object then target far object (or infinite empty space)

## Expected behavior
Cursor size is maintained and visible (Reference: shell)

## Current behavior
Cursor becomes too small and invisible in the empty space targeting
Cursor becomes too big on near objects

## Branch
mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>4979</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[MRTK Shell Parity] [Button] Highlighting for far interaction not defined (hand ray or gaze + air-tap)</Title>
    <CreatedDate>19/06/2019</CreatedDate>
    <ClosedDate>05/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4979</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4979</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>4979</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Currently, there is no visual feedback on click for far interactions.(hand ray or gaze + air-tap)

Part of #4200 UX Controls Parity with HoloLens 2 Shell

## To reproduce
In HandInteractionExamples scene, target and press a button with hand ray or gaze + air-tap.

## Expected behavior
Provide visual feedback

## Branch
mrtk_development
</Description>
  </Issue>
  <Issue>
    <IssueID>4978</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[MRTK Shell Parity] [Button] Front cage should be compressed</Title>
    <CreatedDate>19/06/2019</CreatedDate>
    <ClosedDate>05/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4978</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4978</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>4978</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Button's front cage should be compressed. Currently, it moves back and penetrates through the backplate.
Part of #4200 UX Controls Parity with HoloLens 2 Shell

## To reproduce
In the HandInteractionExamples scene, press button with a finger.

## Expected behavior
Front cage is compressed on the press interaction.

![2019-06-19 14_51_53-Unity 2018 4 0f1 Personal - HandInteractionExamples unity - MRTK-Public-Microsof](

## Current behavior
![2019-06-19 14_49_50-Unity 2018 4 0f1 Personal - HandInteractionExamples unity - MRTK-Public-Microsof](

## Branch
mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>4977</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>4977</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[MRTK Shell Parity] [Button] Button's border highlighting need to be adjusted (highlight only focused one)</Title>
    <CreatedDate>19/06/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4977</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4977</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Button's border highlighting need to be adjusted (highlight only focused one)
Part of #4200 UX Controls Parity with HoloLens 2 Shell

## To reproduce
Use index finger or hand ray to highlight proximity based border visualization.
When there are multiple buttons as a group, other buttons get highlighted too.

## Expected behavior
Highlight currently targeted button only.

## Screenshots

![2019-05-21 12_04_44-Unity 2018 4 0f1 Personal - HandInteractionExamples unity - MRTK-Public-Microsof](

## Branch
mrtk_development
</Description>
  </Issue>
  <Issue>
    <IssueID>4976</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>4976</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[MRTK Shell Parity] [Bounding Box] In Flattened mode, the border visualization is too thin and almost invisible</Title>
    <CreatedDate>19/06/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4976</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4976</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
In Flattened mode, the border visualization is too thin and almost invisible
Part of #4200 UX Controls Parity with HoloLens 2 Shell

## To reproduce
In HandInteractionExamples scene, hover flattened examples (slate, MRTK plane) with hand ray or finger to make the border visible.

## Expected behavior
Shows solid border similar to the Bounding Box in the 3D objects

## Screenshots
![2019-06-19 14_40_52-Unity 2018 4 0f1 Personal - HandInteractionExamples unity - MRTK-Public-Microsof](
![2019-06-19 14_41_19-Unity 2018 4 0f1 Personal - HandInteractionExamples unity - MRTK-Public-Microsof](
![2019-06-19 09_34_42-Unity 2018 4 0f1 Personal - HandInteractionExamples unity - MRTK-Public-Microsof](


## Branch
mrtk_development
</Description>
  </Issue>
  <Issue>
    <IssueID>4971</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Local/World space setting for PressableButton should be visible with press settings</Title>
    <CreatedDate>19/06/2019</CreatedDate>
    <ClosedDate>08/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4971</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4971</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4971</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4971</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>4971</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The PressableButton component and related-prefab have absolute press setting distance values and thus when scaling the button, their position relative to the button is not maintained as seen in the buttons below. 

1) Changing pressable button from world space to local space would be a breaking change. The inspector updates for converting the plane distance values between coordinate spaces should be visible next to the press settings. Possibly also as an enum to simplify interaction and selection

2) Additionally, I would like to propose an extension for a "Fix now" button or "reset to recommended settings" similar to the approach in PR #4734 (Depth buffer sharing material warning). I understand changing the default behavior of pressablebutton to local space instead of world space could break some customers but we really need to set up future customers that drag and drop a new hololens2 button and scale/modify it for success. 

3) Also, whatever is decided, please make sure all updates are posted in: 
- Element of world space vs local space
- Also maybe point out the plane colors to each settings and elaborate on the purpose of these settings a bit and their importance 

Button as-is out of prefab:
![image](

Button homogeneously scaled
![image](

## To reproduce

Drag the pressable button prefab and apply some kind of scale, enable plane editing mode

## Expected behavior
The distance of the press planes to one another and within the button's colliders should remain the same ratio if scaled homogeneously 

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2018.4
- MRTK Version (latest mainline)

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>4969</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>README Top Navigation should be more clear in the page</Title>
    <CreatedDate>19/06/2019</CreatedDate>
    <ClosedDate>16/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4969</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4969</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Guides and API links in top navigation are hard to discover (grey on black). Why not have them more prominent on the page and explain the purpose of Guides and API.</Description>
  </Issue>
  <Issue>
    <IssueID>4968</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>4968</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>README Documentation link</Title>
    <CreatedDate>19/06/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4968</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4968</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Scrolling down the README.md there are two major buttons: Getting Started and Documentation. First one takes you to the Getting Started document in Guides. The second one takes you to  But that website shows the README again. Question is: where should this link bring you? Should this a link to the API (</Description>
  </Issue>
  <Issue>
    <IssueID>4967</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>4967</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Pressable Button in Incorrect State after getting enabled [mrtk rc2.1]</Title>
    <CreatedDate>19/06/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4967</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>4967</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK usability</Name>
        <IssueID>4967</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4967</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4967</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>4967</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
MRTK Pressable Button State is incorrect after getting enabled post disabling it.
## To reproduce

Steps to reproduce the behavior:
1. Keep a PressableRound Button in scene.
2. Add a script to disable this button when clicked on it. 
3. Enable the button using script after few seconds.
4. Button is enabled in Focused state.
5. Button goes in Pressed State or stays in focused state based on whether it's near or far interaction.
Note: Change the color in button profile to contrasting color as there is chance of mistaking state as i did.

## Expected behavior
Button should start in default/normal state when enabled.

A clear and concise description of what you expected to happen.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [2018.42f1
- MRTK Version [v2.1] aka RC2 

## Target Platform (please complete the following information)
- HoloLens 2

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>4966</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4966</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MixedRealityRaycastHit Throws Exceptions on Every Frame</Title>
    <CreatedDate>19/06/2019</CreatedDate>
    <ClosedDate>01/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4966</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Performance</Name>
        <IssueID>4966</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4966</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
[MixedRealityRaycastHit]( throws exceptions on every frame.

A [commit]( was made 7 days ago to wrap access to `hitInfo.lightmapCoord` in a Try / Catch block. Unfortunately this does not correct the actual condition that's causing the exception to be thrown in the first place. Even though the exception is being handled, it's still causing an exception on _every frame_. This introduces a significant performance hit. Exceptions are very expensive and should be avoided at all costs in the render thread.

There is a comment in the recent comment:

&gt; Accessing lightmap coord appears to throw a NullReferenceException in some cases, probably when lightmaps are not used.

Rather than catching the exception, effort should be made to determine if this is in fact the root cause and determine a way to avoid accessing the property under this condition. If we determine the condition is unavoidable, we should open a bug with Unity.

## To reproduce

Steps to reproduce the behavior:

1. Create a new Unity project
2. Import MRTK
3. Configure MRTK for HoloLens 2
4. Press play in Unity
5. Under Exception Settings in Visual Studio, set it to stop on all exceptions (even handled ones).
6. Attach Visual Studio to Unity

You will see the Visual Studio Debugger break on every frame.

## Expected behavior

An exception should not be thrown on every frame.

## Your Setup (please complete the following information)

- Unity Version: 2018.4.2
- MRTK Version: mrtk_develop as of 2019-06-19

## Target Platform (please complete the following information)

- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>4963</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Billboard Solver instead of Billboard standalone component</Title>
    <CreatedDate>19/06/2019</CreatedDate>
    <ClosedDate>19/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4963</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

I wanted to configure a component, that follows the head, while looking at something else. This is not possible at the moment as far as I know, because the component to look at something else, the Billboard script, is not part of the solver family.
If added to a orbital solver, which does the following, the rotation calculations interfere with one another.
Orbital does not handle position and rotation separately..

## Describe the solution you'd like

Convert Billboard to be a solver. This way orbital could just update the work transform and let billboard apply the final orientation.
</Description>
  </Issue>
  <Issue>
    <IssueID>4962</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>4962</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add docs for MRTK optimize tool &amp; perf doc/links</Title>
    <CreatedDate>19/06/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4962</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4962</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

No documentation for optimize tool recently added to MRTK under MRTK tab &gt; Utilities &gt; Optimize Window.

Also bring up perf docs &amp; related links in getting started or other higher level pages

## To reproduce

## Expected behavior

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>4961</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>4961</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Inherit location of Profile for it's settings</Title>
    <CreatedDate>19/06/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4961</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4961</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>When you clone a setting within a profile a dialog is shown to store the new file. The default now is always the Assets folder. It would be better if the default location of the settings file is the same as the location of the profile. This way you are enabled to have various profiles in various locations and group them with the used settings.

Of course you can manually do that now by moving files and (re)selecting the settings file. But with a small modification this could be made easier for the dev.

This issue is related to #4959. If it's made possible to name and determine the position of a profile, the addition of this issue will make the solution complete.</Description>
  </Issue>
  <Issue>
    <IssueID>4960</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Eye tracking exemple's page warning about Gaze input capabilite</Title>
    <CreatedDate>19/06/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4960</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4960</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Eye Tracking</Name>
        <IssueID>4960</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Help Wanted</Name>
        <IssueID>4960</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Eye tracking exemple's page dosn't warn you about Visual Studio's capability "Gaze Input".
It should probably have a link for the "Getting started with Eye Tracking" page (

## Existing Doc Link


</Description>
  </Issue>
  <Issue>
    <IssueID>4959</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>4959</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Copy &amp; Customize doesn't ask for location or name of the new profile</Title>
    <CreatedDate>19/06/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4959</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4959</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Currently when you use Copy &amp; Customize on the main profile, the resulting file is auto-named (MixedRealityToolkitConfigurationProfile with a sequence number to make it unique) in a predefined location (MixedRealityToolkit.Generated/CustomProfiles).

We've been working with customers that want to maintain multiple profiles for various devices or situations. Having a better naming convention and a way to determine the place to store it would be more convenient. This would require additional UI like being used for cloning various settings in the Profile and ask for a location and a name.

The work-around now is to just use Copy &amp; Customize and when it's done just move the file and/or rename the file.</Description>
  </Issue>
  <Issue>
    <IssueID>4957</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add HoverLight script settings in MRTK profile for each cursor</Title>
    <CreatedDate>19/06/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4957</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4957</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shaders / Materials</Name>
        <IssueID>4957</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4957</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Hello everyone, maybe I missed it (if yes documentation is not clear), but I would like to change the settings of the hoverlight scripts of the cursors.


## Describe the solution you'd like

Would it be possible to have the possibility to change these settings in the input profiles?

## Additional context

Specifically I want to disable it for eye tracking and set radius for hand ray. The only I found to change that is to create a script that will find the script at run time, it's quite dirty.


Thank you</Description>
  </Issue>
  <Issue>
    <IssueID>4956</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity LWRP TerrainLit material problem with WMR Headset</Title>
    <CreatedDate>19/06/2019</CreatedDate>
    <ClosedDate>19/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4956</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Maybe not an MRTK bug, and I know 2019 is not officially supported yet, but thought I report it here in case:

While testing the updates to the MRTK Standard shader to support the LWRP (which seems to work correctly), and creating shaders using Shader Graph (which also seem to work), I had a weird effect with the Unity TerrainLit material (described here: 

Specifically, the terrain appears in the left eye only in duplicate and drifts as you move your head -- as if the right eye version of the terrain is also appearing in the left eye (see screenshots). This effect occurs on Run both in the Editor Game window and on a WMR headset.

It effect does not occur in the Hololens (simulated) experience, but I'll test on the device in a bit to make sure.

## To reproduce

Steps to reproduce the behavior:
Create a LWRP Unity project, add a terrain, test in WMR headset. Close an eye, move your head.

## Expected behavior
Appears in both eyes, no drift.

## Screenshots
Screenshots are from the editor but reflects what appears in the headset. Second screenshot is a minimal install:

![terrain-separation](
![terrain-separation-2](

## Your Setup (please complete the following information)

- Unity Version: 2019.1.5f1
- MRTK Version: latest dev as of 6/18/19

## Target Platform (please complete the following information)
Testing on WMR immersive
</Description>
  </Issue>
  <Issue>
    <IssueID>4955</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Pressable buttons press begins at back of the button, not the front.</Title>
    <CreatedDate>18/06/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4955</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4955</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>DDE Partner</Name>
        <IssueID>4955</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>4955</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4955</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>4955</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When you press an MRTK button, the button begins to press and move when you reach through and touch the back of the button.
This undermines the idea of responsive interaction intended for the first moments.

## To reproduce

Attempt to push a PressableButton and notice when the movement/compression of the button actually begins.

## Expected behavior

The button should press from the front face (not the back face)

## Screenshots

If applicable, add screenshots to help explain your problem.
![image](

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2

## Additional context

We want the glow on first contact to also be when interaction begins and the button starts to push.
</Description>
  </Issue>
  <Issue>
    <IssueID>4954</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4954</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Make it easy to enable / disable hand rays/gaze cursor/other pointers at runtime</Title>
    <CreatedDate>18/06/2019</CreatedDate>
    <ClosedDate>12/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4954</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>4954</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4954</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4954</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4954</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
We have had many requests for how to disable the far interaction (line pointer, hand rays, etc) at runtime. For example, this [stackoverflow question](

The default way to do this is not obvious, and requires creating a custom mediator. Because this is such a commonly requested feature, we should just make it easy to do this when using the default MRTK input system.

It should be easy (one line of code) to enable / disable the following:
- hand rays / motion controller line pointer
- poke pointer
- grab pointer / sphere pointer.
- Gaze pointer

## Proposed solution
This would not be an interface / breaking change. It would only apply to the `DefaultPointerMediator`. If people have their own mediators, we would print a message saying "this won't work for your mediator!".

Add the following enum
``
</Description>
  </Issue>
  <Issue>
    <IssueID>4953</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>4953</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Need docs for how to configure pointer profiles</Title>
    <CreatedDate>18/06/2019</CreatedDate>
    <ClosedDate>19/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4953</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>4953</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4953</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4953</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4953</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Pointer</Name>
        <IssueID>4953</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Provide documentation on [profiles README]( for how to configure pointer profiles for the following common use cases:

1. Use GGV on HoloLens 2.
2. Use only the poke pointer, no hand rays (turn hand rays off)</Description>
  </Issue>
  <Issue>
    <IssueID>4952</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>profiles</Title>
    <CreatedDate>18/06/2019</CreatedDate>
    <ClosedDate>18/06/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview

## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>4951</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>profiles are confusing</Title>
    <CreatedDate>18/06/2019</CreatedDate>
    <ClosedDate>18/06/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview

## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>4950</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>4950</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>UnityUI sample needs touch down, touch up sounds</Title>
    <CreatedDate>18/06/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4950</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4950</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4950</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4950</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UnityUI</Name>
        <IssueID>4950</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The UnityUI canvas in HandInteractionExampleScene does not contain sounds for touch down and touch up. To ensure customers implement UnityUI interactions using appropriate feedback, we should add this to the UnityUI example.</Description>
  </Issue>
  <Issue>
    <IssueID>4949</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4949</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add docs for using MRTK with UnityUI</Title>
    <CreatedDate>18/06/2019</CreatedDate>
    <ClosedDate>03/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4949</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>4949</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4949</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UnityUI</Name>
        <IssueID>4949</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Add documentation explaining how to configure Unity UI to work with touch, far interaction. Follow the example of "[how to make a button from scratch](


For enabling near interaction in UnityUI, Hendry from MRW hit the following gotchas / undocumented requirements:

* Requires a PokePointer (we didn't have one) 
* Include CanvasUtility with "Near Interaction Touchable Unity UI"; for whatever reasons, we had Near Interaction Touchable instead. Might be a case of coming from an older build and not upgraded correctly.</Description>
  </Issue>
  <Issue>
    <IssueID>4946</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>4946</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Normals Are Incorrect on Back Faces</Title>
    <CreatedDate>18/06/2019</CreatedDate>
    <ClosedDate>22/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4946</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When rendering the back faces of triangles, the normals are flipped the opposite way which can lead to artifacts in lighting calculations and other techniques which utilize normals.

## To reproduce

Steps to reproduce the behavior:

1. Create a MRTK/Standard shader material.
2. Disable back face culling.
3. Examine the lighting on a back face.

## Expected behavior

Normals are correct on front and back faces.

## Screenshots


&lt;img width="1226" alt="Before" src="

## Your Setup (please complete the following information)

- Unity Version 2018.4.1f1
- MRTK Version RC2.1

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR
</Description>
  </Issue>
  <Issue>
    <IssueID>4945</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spatial Awareness not Enabled by Default</Title>
    <CreatedDate>18/06/2019</CreatedDate>
    <ClosedDate>20/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4945</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

In all Spatial Mapping Profiles _including_ the one referenced by **DefaultHoloLens2ConfigurationProfile**, Spatial Awareness is not enabled by default.

![image](

This easily leads to confusion when the app is run for the first time and no spatial map is generated.

## To reproduce

Steps to reproduce the behavior:

1. Create a new project
2. Import MRTK
3. Select **DefaultHoloLens2ConfigurationProfile**
4. Deploy the app
5. Run the app

## Expected behavior

The spatial mesh should appear by default. However, no spatial mesh appears.

## Your Setup (please complete the following information)

- Unity Version: 2018.4.2f1
- MRTK Version: mrtk_development (as of 2019-06-18)

## Target Platform (please complete the following information)

- HoloLens 2

## Additional context

I believe this should at least be turned on by default when selecting **DefaultHoloLens2ConfigurationProfile**. If we do not believe all HoloLens 2 applications will want spatial mapping, this is another vote for why we need #4005.
</Description>
  </Issue>
  <Issue>
    <IssueID>4944</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>4944</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Error message spam when hitting play and switching tabs in the inspector of the MRTK gameobject</Title>
    <CreatedDate>18/06/2019</CreatedDate>
    <ClosedDate>22/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4944</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4944</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

There's a constant error spam in the console whenever you hit play in unity and then switch the tabs in the property inspector of the MRTK gameobject


![image](


## To reproduce

Create a new project
add the MRTK gameobject / playspace through the menu
hit play
select the mrtk gameobject
in the inspector click eg on the Teleport tab
![image](


## Your Setup (please complete the following information)

- Unity Version 2018.4
- MRTK Version v2.0 RC2.1

## Target Platform (please complete the following information)

- Unity
</Description>
  </Issue>
  <Issue>
    <IssueID>4943</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Difficult to change button colors or icons.</Title>
    <CreatedDate>18/06/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4943</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4943</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
There is no discoverable documentation on how to do something very simple and commonplace like change button colors or icons.  

## Feature Area
We are missing information on how to change it in both the code and in the Unity Editor. 

## Existing Doc Link
 

## Additional context
Maybe add a Best Practices or Design page for sliders, slates, and button customization, etc.</Description>
  </Issue>
  <Issue>
    <IssueID>4941</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>4941</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Popup for enabling XR setting in new unity project doesn't check platform</Title>
    <CreatedDate>18/06/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4941</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4941</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Whenever someone creates a new project with MRTK we're displaying a popup telling the user to enable the XR settings, however we're not checking which platform is currently selected. So if the user is eg. on windows platform and switches over to UWP after that popup was confirmed, the setting won't be enabled in the UWP build.

## To reproduce

- create new unity project (make sure your platform is not set to UWP)
- import mrtk packages
- observe popup
- switch platform to UWP
- observe missing XR setting

# Platform
- Unity Version 2018.4
- MRTK Version v2 RC2.1


![image](



</Description>
  </Issue>
  <Issue>
    <IssueID>4940</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ExtensionTemplates folder missing in Unity Release Package</Title>
    <CreatedDate>18/06/2019</CreatedDate>
    <ClosedDate>26/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4940</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4940</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Extension</Name>
        <IssueID>4940</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4940</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK usability</Name>
        <IssueID>4940</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>
The ExtensionTemplates folder in the root of the MRTK project is missing in the release package.
The Inspector files are available because they're part of the MixedRealityToolkit folder.

If you create a new extension with the mrtk menu in unity you will get the following result:

![image](

using the github cloned version that includes the files looks like this:
![image](


## To reproduce
create / open any unity projects
import the MRTK package
try to create an extension service


## Your Setup (please complete the following information)

- Unity Version 2018.4
- MRTK Version v2 RC2.1

## Target Platform (please complete the following information)

- Unity UI
</Description>
  </Issue>
  <Issue>
    <IssueID>4939</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>4939</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Broken links in MRTK GitHub.IO, as well as docs.microsoft.com</Title>
    <CreatedDate>18/06/2019</CreatedDate>
    <ClosedDate>21/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4939</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
Broken links in MRTK GitHub.IO, as well as docs.microsoft.com, with regard to Text in Unity.

## Existing Doc Links
**Existing document: "Text Prefab" MRTK GitHub.IO** 
 
Broken: "3DTextPrefab.prefab" 

"UITextPrefab.prefab"


**Existing document: "Text in Unity" docs.microsoft.com**

Broken: 
 

## Additional context
Perhaps this is a problem with link validation, or use of absolute paths?</Description>
  </Issue>
  <Issue>
    <IssueID>4938</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Solver description is missing layer information for Surface Magnetism</Title>
    <CreatedDate>18/06/2019</CreatedDate>
    <ClosedDate>19/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4938</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4938</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
Partners I have been working with in both London and Paris have had difficulty getting the Surface Magnetism solver working.

## Feature Area
In France, the partner could confirm visual of the spatial surface mesh in the Unity editor.  The GameObject he was trying to magnetize would stay directly in front of the camera and did not appear to know about the spatial mapping mesh. We only had 3 scripts: "Surface Magnetism Script," "Radial View," and "Solver Handler." The behavior seemed like the raycast was not hitting the spatial mapping mesh.

We had to go into the MRTK Example scene called "SolverExamples.unity" to figure out why it wasn't working. There we discovered that the GameObject was on the Layer named "**0: Default**" , but it should have been on the "**2: Ignore Raycast**" layer.

## Existing Doc Link
 
These docs mention, "The surface magnetism scripts rely on a LayerMask for raycasting. As a recommendation, create a custom layer mask (the example uses Surface). Note that using default or everything will result in UI components or cursors contributing to the solver. Note that this can produce weird and unexpected behavior, for example objects lurching toward the user and so on."

But it does not specifically say, "Use Layer 2: Ignore Raycast."</Description>
  </Issue>
  <Issue>
    <IssueID>4933</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Enumerating InputActions</Title>
    <CreatedDate>18/06/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4933</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4933</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4933</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System - Input Actions</Name>
        <IssueID>4933</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>4933</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
We generatea lot of objects in code. 
We want to enumerate input action, or at least be able to get to one by name. This isn't documented that we could find.
The solution is MixedRealityToolkit.InputSystemProfile.InputActionsProfile.InputActions. The "name" is actually the Description property.

One thing that is also of interest to us is to add InputActions at runtime programatically depending on the modules we load.

## Feature Area
InputSystemProfile and InputActions

## Existing Doc Link

</Description>
  </Issue>
  <Issue>
    <IssueID>4932</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SolverHandler does not force a view</Title>
    <CreatedDate>18/06/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4932</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK usability</Name>
        <IssueID>4932</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>4932</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
We use SolverHandler to attach UI elements to the hands. However, adding SOlverHandler to an object does not warn you that at least one View is required. Without it, nothing seems to happen.

## Feature Area
Solvers

## Existing Doc Link
N/A
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>4932</IssueID>
        <PullRequestID>5514</PullRequestID>
        <Title>Solver Examples &amp; Documentation Updates</Title>
        <Description>## Overview

This change address additional issues with the Solver example scenes &amp; updates the solver documentation. There are additional minor fixes discovered for Solvers in here as well. See list below for all change details

- Redesigned Solver example scene to be functional &amp; easier to understand
- Provided example usage of InBetween in scene
- Remove SwapVolume script
- Delete outdated Solver example prefabs (most were nonfunctional)
- Updated solver text panel in example scene
- Updated SolverHandler DestroyImmediate to Destroy
- Fix SolverHandler issue in editor when destroying tracked transform unnecessarily
- Fixed inspector isssue with enum popups not working with prefabs well
- Fixed InBetween SecondTrackedTargetType to not show obsolete enum possibilites
- Added warning to SurfaceMagnetism component for the MagneticSurfaces property. One common mistake is not marking a SurfaceMagnetism gameObject as "Ignore Raycast" so it doesn't "Magnetize" against itself
- Added (Obsolete) term to TrackedObjectType summaries
- SurfaceMagnetism did not check SolverHandler.TransformTarget was not null on raycast calculation
- Add new InBetween documentation with images &amp; gif
- Added sections on Orbital &amp; RadialView &amp; SurfaceMagnetism to cover key propertise &amp; common mistakes
- Also added doc link button to SolverHandler

![image](

![SolverExampleScene](

## Changes
- Fixes: #4444 , #5091 


## Verification
Ran all playmode &amp; editmode tests
Utilize Solvers in new example scene

&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>05/08/2019</CreatedDate>
        <ClosedDate>05/08/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Example/Test Scene</Name>
            <IssueID>4932</IssueID>
            <PullRequestID>5514</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Solvers</Name>
            <IssueID>4932</IssueID>
            <PullRequestID>5514</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>Troy-Ferrell</FixedById>
            <PullRequestID>5514</PullRequestID>
            <IssueID>4932</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>4932</IssueID>
        <PullRequestID>5416</PullRequestID>
        <Title>Refactor SolverHandler to fix multiple issues</Title>
        <Description>## Overview

The solver system has many issues (most of which are posted on GitHub). One of the key limitations for the feature is involved in the SolverHandler class. This change addresses multiple issues:

- Cleaner understanding of what kind of target type is active
=&gt; Simpler types =&gt; Head, MotionController, HandJoint, &amp; CustomOverride
=&gt; Inspector now shows valid sub-properties based on the target type

- Developers can define order of solvers in code (via SetSolvers)
- Solvers can now be correctly tracked/instantiated at runtime dynamically
- Solvers can now follow any hand or motion controller (defaults to Left first if set to Both/Any)
- Removed OnValidate from Solver.cs as this is generally poor practice and give inconsistent results
- Removed nonexisting property for InBetween.cs
- Added solvertests to tests package (See verification section below for details)

- Fixed SurfaceMagnetism 
=&gt; Renamed properties to not assume always head tracked transform
=&gt; Created new inspector to make properties easier to understand &amp; group
=&gt; Updated MaxDistance for raycast default from 3m to 50m
=&gt; Updated default Raycast Direction Mode to Tracked Target Forward (ray along head gaze or hand pointer, etc)
- Fixed InBetween
=&gt; Updated names to be clearer
=&gt; Updated refresh of second solver to be accurate
=&gt; Updated tooltips to be accurate
=&gt; Modified inspector to extend from SolverInspector

**NOTE:** This changes property names and will break any existing code that tried to extend Solvers themselves

New Solver Handler Targeting
![tracked-target-type](

Hand Switching Feature:
![hand-switching](

New Editor Inspectors:
![surface-mag-inspector](

![InBetween](

New Solver Tests:
![image](

## Changes
- Fixes: #5141 , #5110 , #4642 , #4788 , #5143 

## Verification
Added Solver Tests! 

Furthermore, I will follow up this PR with another one to fix the Solver Example scene which is mostly broken.
- Test dynamic instantiation of solver (Orbital)
- Test switch hands (Orbital)
- Test switch target types at runtime (Orbital)
- Test SurfaceMagnetism (simple raycast against "wall" tracked against head*)
- Test InBetween (between two cubes &amp; modifies PartwayOffset)

Tested basic functionality manually
- VR Motion Controllers
- Editor Hands Simulation
- HL2 Hands on Device
- Custom override with transform in scene
- Dynamically add component to gameobject (both in scene editor &amp; via c# code)
- Modify SolverHandler values in Inspector at runtime

&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>24/07/2019</CreatedDate>
        <ClosedDate>01/08/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>BREAKING CHANGE</Name>
            <IssueID>4932</IssueID>
            <PullRequestID>5416</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Solvers</Name>
            <IssueID>4932</IssueID>
            <PullRequestID>5416</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>Troy-Ferrell</FixedById>
            <PullRequestID>5416</PullRequestID>
            <IssueID>4932</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>4931</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Upgrade to Unity 2019.2 causes Missing reference exceptions "Execute Events"</Title>
    <CreatedDate>18/06/2019</CreatedDate>
    <ClosedDate>19/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4931</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Duplicate</Name>
        <IssueID>4931</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Importing the MRTK into a 2019.2 project causes critical warnings to appear, noting a missing reference exception for "ExecuteEvents".
This is due to Unity removing the UI system from the core Unity engine and moving it to it's own package.

The simple resolution to this is to add a reference to "Unity.UI" to all asmdef's that require the UI system, e.g. Core and SDK.

## To reproduce

Steps to reproduce the behavior:

1. Create new project in 2019.2
2. Import MRTK
3. Observe errors

## Expected behavior

It should work

## Your Setup (please complete the following information)

- Unity Version 2019.2
- MRTK Version - all

## Target Platform (please complete the following information)

- All

## Additional context

Resolved in the XRTK here

Confirmed, it causes no backwards compatibility issues as Unity ignores references it cannot resolve.
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>4929</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>4929</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>BoundingBox UnityEvent &amp; Slider material fixes</Title>
    <CreatedDate>18/06/2019</CreatedDate>
    <ClosedDate>20/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4929</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

1) BoundingBox does not auto allocate it's UnityEvents. This makes it annoying when using BoundingBox component dynamically and subscribing via code/AddListener() because the developer needs to check if the property is null and if so, do the allocation him/herself. 

2) Pinch slider has multiple tick mark sphere balls that each have their own draw call for rendering because GPU instancing is not enabled on the material

## To reproduce
1) Try to call addlistener on boundingbox unityevent and it will be null
2) Open Frame Debugger up in Unity and see the 13 draw calls when could be 1

## Expected behavior
## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2018.4
- MRTK Version - Latest

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>4920</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>NearInteractionTouchable Default distBack has a high far interaction dead zone (~10 inches)</Title>
    <CreatedDate>17/06/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4920</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4920</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Interactions</Name>
        <IssueID>4920</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>4920</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4920</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When you approach interface, the far rays disable and switch to near interaction (controlled by InteractionTouchable.distFront, a private value)
When you move through interface, maintaining near interaction for a while makes sense. When you move far enough through, it switches to far interaction (controlled by InteractionTouchable.distBack, a public value)
distFront is 20 cm (.2), distBack is 25 cm, which is ~9.6 inches. That default is an aggressively high number.

This image should convey the problem:
![MRTKPressBug](


## To reproduce

Steps to reproduce the behavior:

Open a scene with PressableButtons/NearInteractionTouchables.
Place the NearTouchable on a RadialSolver, to be kept ~20-50 cm away from the user's face (which is the comfortable distance for persistent following menus)
Pretend you are trying to far select something that is behind the persistent near menu. Note the distance past that it takes to switch back to far rays from near touch.
This commonly results in large dead zones of interaction behind buttons (9.6 inches of dead zone). With persistent menus, this can result in having very little reachable far select space.

## Expected behavior

When you move past the content's press depth, you regain far rays at much less than 9.6 inches. A **recommended value** from our projects was between 4.5 inches and 5.5 inches (so **.11m** to **.15m**)

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2

## Additional context

We had a broad variety of prototyped interfaces that had problems with a far distBack distance (back when it was a universal value). I just want to pass along that learning and feedback from in-device prototypes and experiences that a 10 inch return to far distance is too far.</Description>
  </Issue>
  <Issue>
    <IssueID>4918</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Missing .Unitypackage?</Title>
    <CreatedDate>17/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4918</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

GettingStartedWithTheMRTK: describes importing "Microsoft.MixedRealityToolkit.Unity.Examples.unitypackage" and
"Microsoft.MixedRealityToolkit.Unity.Foundation.unitypackage"

but these seem to be missing from the download. In fact, the zipfile does not contain any .unitypackage files.


## To reproduce

Download: MixedRealityToolkit-Unity-2.0.0-RC2.1
Try to install, no .unitypackage files found inside.
What am I missing here?



## Expected behavior

Expected the zip to contain the Microsoft.MixedRealityToolkit.Unity.Foundation.unitypackage that the docs refer to.

## Your Setup (please complete the following information)

- Unity Version 2019.1.7
- MRTK Version 2.0.0-RC2.1

## Target Platform (please complete the following information)

- WMR immersive

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>4917</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4917</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>change UI raycast to allow customization similar to IMixedRealityRaycastProvider for physics</Title>
    <CreatedDate>17/06/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4917</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4917</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4917</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4917</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4917</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem
Originally in HTK, the UI raycast used distance to pick which UI element to focus on, but that was changed to work better with coplanar UI in this change:


In our case the UI is not coplanar, and it's awkward to have to reorder the UI to make raycasts work as expected, so prioritizing distance over depth makes more sense.

## Describe the solution you'd like

Reorder the UI raycast prioritization to put distance before depth, and change the distance check to bypass (and move on to depth test) if the delta is less than some epsilon. With the epsilon check, I think it would still work the same way for coplanar UI, while also allowing it to use the distance check first for non-coplanar UI. (I'm also open to suggestions for better ways to do the coplanar test, but the epsilon seems like it should work and is simple enough)

## Describe alternatives you've considered

Another solution would be to make the UI raycast prioritization overridable, and then we could just override the prioritization locally to do distance before depth.
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>4916</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Link to "MRTK Standard Shader" page is missing from MRTK Guides</Title>
    <CreatedDate>17/06/2019</CreatedDate>
    <ClosedDate>20/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4916</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
Link to "MRTK Standard Shader" page is missing from MRTK Guides.

## Feature Area
Link to "MRTK Standard Shader" page is missing from "MRTK" Guides README. None of the side bar navigation links point to "MRTK Standard Shader" or any information about shaders. 

## Existing Doc Link
Link to existing document: 

Should be linked in 
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>4916</IssueID>
        <PullRequestID>4923</PullRequestID>
        <Title>[Docs] Landing page &amp; docs left navigation improvements</Title>
        <Description>## Overview
### Landing page
- Updated landing page's **Feature Areas** section. Now each feature links to the corresponding page in the documentation portal.
- Added entry to important features such as **Profiles**, **In-Editor Simulation**, **Multi-Scene Manager(Scene System), and Experimental features**.
- Added clear entry to the **Getting Started** and **Documentation** portal.
### Docs portal left navigation menu
- Reduced unnecessary hierarchy in the Documentation page's left nav pane which makes a lot of important pages hidden in default. Since we have enough vertical space, it would be better to reduce the hierarchy, click count and expose the pages. 
- Removed **About MRTK** menu which only contained **Authors** page. Moved **Authors** menu down to the bottom of the left nav. 
- Added missing nav menus for these pages: **Scene System**, **Profile configuration**, **MRTK Standard Shader**

## Preview link


![2019-06-17 15_53_35-cre8ivepark_MixedRealityToolkit-Unity at mrtk_development_DocsUpdates](

## Changes
- Fixes: #4916 #4814 #4779 Part of #4792

## Branch
This change is based on the **mrtk_development** branch

</Description>
        <CreatedDate>17/06/2019</CreatedDate>
        <ClosedDate>19/06/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Documentation</Name>
            <IssueID>4916</IssueID>
            <PullRequestID>4923</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>4914</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Prefab and meta serialization is not up to date</Title>
    <CreatedDate>17/06/2019</CreatedDate>
    <ClosedDate>26/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4914</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4914</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>4914</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK usability</Name>
        <IssueID>4914</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
prefab, meta, and scene assets are not automatically updated in Unity.
the serialization of those files can change when:
- unity version is updated
- some code of the components used in prefab has changed on the serialization part (renaming adding,removing serialized field)

currently, if i make a change in some of the mrtk prefabs, a whole list of diffs will come up.

bonus effect: if you make a tool (see below) in the mrtk, this can be useful when people are upgrading version on their side (to reserialize their profiles and scenes for example)

## Expected behavior

when a new mrtk release is pushed, all files should be up to date regarding serialization, at least the changes regarding mrtk code. (untiy serialization changes is a subject to be discussed, i don't know the exact repercussion for retrocompatibilities).


##
this process can be automated:
(i can provide a better version that displays a progress bar)
``

</Description>
  </Issue>
  <Issue>
    <IssueID>4913</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Diagnostics panel seeing red when Profiler is fine</Title>
    <CreatedDate>17/06/2019</CreatedDate>
    <ClosedDate>17/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4913</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Starting my app, the diagnostics panel quickly went down to a complete red indication of frame performance. Interestingly enough, the profiler estimates about 200 fps, which is way more than necessary to be all green.

## To reproduce

Steps to reproduce the behavior:

I don't have any reproduction steps, because it's our project this is happening in. Any guidance here would be appreciated.

## Screenshots

If applicable, add screenshots to help explain your problem.
![image](


## Your Setup (please complete the following information)

- Unity Version 2018.4.2f1
- MRTK Version  v2.0 development_branch

## Target Platform (please complete the following information)

- WMR immersive (Simulator)

## Additional context

I am running two editors with their own clones of our project, one as server and one as client. It's only the client that shows this behavior
</Description>
  </Issue>
  <Issue>
    <IssueID>4912</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>"PressableButtonHoloLens2" suggests incompatibility with HoloLens 1</Title>
    <CreatedDate>17/06/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4912</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4912</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>4912</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>4912</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
When upgrading to MRTK v2.0.0 RC2 the name change from PressableButton to PressableButtonHoloLens2 suggests that it is no longer compatible with HoloLens 1, whereas far functionality should still function even if near does not.

## Feature Area
Assets/MixedRealityToolkit.SDK/Features/UX/Interactable/Prefabs/PressableButtonHoloLens2.prefab</Description>
  </Issue>
  <Issue>
    <IssueID>4910</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>4910</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>MenelvagorMilsom</FixedById>
        <IssueID>4910</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>ManipulationHandler uses incorrect origin when object origin is far from the object.</Title>
    <CreatedDate>17/06/2019</CreatedDate>
    <ClosedDate>02/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4910</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4910</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4910</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When manipulating an object using a ManipulationHandler and Solver it does not transform around the pointer position or the average of the two grab points. It appears to use the object origin, which in some cases will be a long way from the mesh or collider.

## To reproduce

Steps to reproduce the behavior:

1. Import MRTK
2. Import a mesh which does not have the origin in the center of the object. This would be the default when exporting as .obj or similar from a CAD platform. For example a cube from (10,10,10) to (11,11,11).
3. Attach a convex MeshCollider
4. Attach a ManipulationHandler
5. Manipulate the object and observe that it behaves unexpectedly (scales around a point a long way away, or moves in fast unexpected movements)

## Expected behavior

(5) The object would be transformed relative to the touch points, or have an option to use mesh origin or bounding box center.

## Your Setup (please complete the following information)

- Unity Version 2018.4.2f1
- MRTK Version v2.0.0 RC2.0

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2

## Additional context

Reproduced for Julia at Hack Week.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>4907</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Dealing with CS 414 in general?</Title>
    <CreatedDate>15/06/2019</CreatedDate>
    <ClosedDate>26/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4907</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>This might be considered a bug so even though it's partially a question, it might belong here instead of Stack Overflow:

Building the MRTK, a bunch of warnings appear. They are related to serialized variables that are only used in the editor and are not referenced anywhere.

I assume that the MRTK does not want to emit any irrelevant warnings. How are these warnings to be dealt with? #pragma ? pseudo usage? just keep the warnings?

EyeCalibrationChecker:
editorTestUserIsCalibrated

MixedRealitySceneSystemProfile:
editorManageBuildSettings
editorEnforceSceneOrder
editorManageLoadedScenes
editorEnforceLightingSceneTypes 
editorLightingCacheOutOfDate </Description>
  </Issue>
  <Issue>
    <IssueID>4905</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>4905</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Update DefaultMixedRealityCameraProfile's Near Clipping distance</Title>
    <CreatedDate>15/06/2019</CreatedDate>
    <ClosedDate>24/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4905</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
DefaultMixedRealityCameraProfile's near clipping distance is 0.85m
This clipping plane creates some confusion for the HoloLens (1st gen) developers since objects are abruptly disappearing from 0.85m distance. There are many apps that require content observation closer than 0.85m (e.g. viewing architectural model). 
Instead of forcing hard/abrupt clipping by the camera, we recommend using MRTK Standard Shader's Near Fade property to gradually fade out the objects in the near distance range. (~0.45m) 

## To reproduce
Build and deploy apps to HoloLens 1 with DefaultMixedRealityCameraProfile 

## Expected behavior
Gradually fade out the objects in the near distance. (~0.45m)

## Your Setup (please complete the following information)
mrtk_development branch
</Description>
  </Issue>
  <Issue>
    <IssueID>4902</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>googlan</FixedById>
        <IssueID>4902</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Analyze MRTK memory usage</Title>
    <CreatedDate>14/06/2019</CreatedDate>
    <ClosedDate>02/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4902</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4902</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4902</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>MRTK onscreen profiler reports ~285 MB of memory used running the HandInteractionExamples scene on a Master build in HoloLens 2. An empty scene with MRTK uses around 270 MB. This is running from sources with caff836f8124283df53eae84baa70fafd87be5e4.

Quoting @davidkline-ms :

&gt; By default, configuring an empty scene with the MixedRealityToolkit object starts ALL systems. We need to do some profiling to find out how much each system consumes and provide guidance / optimize the footprints.</Description>
  </Issue>
  <Issue>
    <IssueID>4901</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>4901</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>For any object with Rigid Body, Bounding Box handles are not grabbable with Hand Ray.</Title>
    <CreatedDate>14/06/2019</CreatedDate>
    <ClosedDate>23/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4901</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4901</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>4901</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4901</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>4901</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>For any object with **Rigid Body**, Bounding Box handles are not grabbable with **Hand Ray**.
You can experience this symptom with the Lunar Module in the HandInteractionExamples scene. Grabbing handles moves the object. It shows proper colliders and script order (BoundingBox.cs above ManipulationHandler.cs). When the Rigid Body is removed, handle works well.

![2019-06-14 11_43_57-Unity 2018 4 0f1 Personal - HandInteractionExamples unity - MRTK-Public-Microsof](
![2019-06-14 11_43_53-Unity 2018 4 0f1 Personal - HandInteractionExamples unity - MRTK-Public-Microsof](

## To reproduce
Open HandInteractionExamples scene.
With hand ray, grab the corner handle of the Lunar Module's bounding box
The object moves instead of scale/rotate

## Expected behavior
Scale &amp; Rotate with handles

## Your Setup (please complete the following information)
mrtk_development
Unity 2018.4
</Description>
  </Issue>
  <Issue>
    <IssueID>4900</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4900</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>4900</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Arrow keys don't work on System Keyboard</Title>
    <CreatedDate>14/06/2019</CreatedDate>
    <ClosedDate>25/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4900</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4900</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Keyboard</Name>
        <IssueID>4900</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4900</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When typing on the system keyboard, the left and right keys don't change where you are typing. While there isn't a cursor/caret, there the arrow keys don't update where you are typing.

## To reproduce

Steps to reproduce the behavior:

1. Go to HandInteractionExample scene.
2. Click on Open Keyboard
3. Type something on the keyboard
4. Press the left or arrow key
5. Type again, and see the characters are still entered on the right at the end of the string.

## Expected behavior

If I press the left arrow key and type again, I expect to type in the middle of the word instead of the very end of the word.

## Your Setup (please complete the following information)

- Unity Version 2018.3.10f1
- MRTK Version: latest dev branch

## Target Platform (please complete the following information)

- HoloLens 2

## Additional context

Most likely a Unity bug, however, it could also be an input service/system keyboard bug. </Description>
  </Issue>
  <Issue>
    <IssueID>4886</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Font size of ToolTip does not change</Title>
    <CreatedDate>14/06/2019</CreatedDate>
    <ClosedDate>14/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4886</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Font size of a ToolTip does not change when _Font Size_ in inspector is changed. _fontSize_ can't be edited from other scripts.

## To reproduce

Steps to reproduce the behavior:

1. Open Scene **TooltipExamples** / Drop a ToolTip in any scene
2. Select any ToolTip in scene
3. Change _Font Size_ in inspector
4. **ToolTip does not change**
5. Change _Tool Tip Text_ in inspector
6. Content **and** size of font changes

## Expected behavior

Changes on _Font Size_ should change the size immediately. _fontSize_ should be accessible from scripts.

## Screenshots

![tooltip_font_not_change](

## Your Setup (please complete the following information)

- Unity Version 2018.4.1f1, 2019.1.6f1
- MRTK Versionv 2.0.0 RC2.1
## Target Platform (please complete the following information)

- HoloLens
- Unity Editor

</Description>
  </Issue>
  <Issue>
    <IssueID>4885</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Manipulation handler does not rotate object.</Title>
    <CreatedDate>14/06/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4885</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4885</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4885</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - ObjectManipulator</Name>
        <IssueID>4885</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Manipulation handler script does not scale simple object.

## To reproduce

Steps to reproduce the behavior:

1. Added Cube to the scene.
2. Attached manipulation handler to the object.
![image](

3. Play the scene in unity editor.
4. Select the cube, try to rotate cube with "Q" and "E"  but does not work.

## Expected behavior


## Screenshots
Here's hands rotation setting.
![image](



## Your Setup (please complete the following information)

- Unity Version 2018.3.14f1
- MRTK Version v2.0.0 RC2.1

## Target Platform (please complete the following information)

- HoloLens 2


## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>4884</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Text/mesh distortion when moving head. </Title>
    <CreatedDate>14/06/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4884</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>When set to 16 bit depth buffers, text and meshes distort slightly when moving head side to side. Disappears when you manually calculate the gaze stabilization plane and set it using SetFocusPointForFrame.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>4883</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>slider far interaction on MRTK v2.0</Title>
    <CreatedDate>14/06/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4883</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4883</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>4883</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4883</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Slider</Name>
        <IssueID>4883</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Unity 2018.4
MRTK v2.0
Case scenario: Using slider with button next to slider
Bug: when users complete interactions on slider and move hand far from slider the system will trigger far interaction moving slider by accident.
</Description>
  </Issue>
  <Issue>
    <IssueID>4880</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>4880</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>LWRP not working in RC2</Title>
    <CreatedDate>13/06/2019</CreatedDate>
    <ClosedDate>14/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4880</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When using LWRP With MRTK V2.0.0 RC2.1 , nothing shows up in the game window when in play mode.

## To reproduce

Steps to reproduce the behavior:

1. Import &amp; Configure LWRP
2. Convert standard shader to LWRP using the MRTK Menu.
3. Open any example scene
4. Screen only show skybox

- Unity Version :  2019.1.5f1
- MRTK Version :  V2.0.0 RC2.1

## Target Platform (please complete the following information)

- Editor
- HoloLens
</Description>
  </Issue>
  <Issue>
    <IssueID>4878</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cannot run build project MRTK 2 RC 1 or RC 2</Title>
    <CreatedDate>13/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4878</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4878</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Cannot build the generated Visual Studio project. Unity gives no (unexpected) errors, but when building the project using the .NET scripting backend it gives an exception:
``

## To reproduce
Steps to reproduce the behavior:

1. Make a new project in the Unity 2018 LTS
2. Add MRTK Foundation and Examples from RC1
3. Change Scripting backend to .NET
4. Build the project, it will build successfully
5. Open the project in Visual Studio 2017
6. Select Debug and x86
7. Build the project
8. This is where the error will occur


## Expected behavior

I expect the project to build.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2018.4.2f1 and Unity Version 2018.4.1f1
- MRTK Version 2.0 RC 1

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2

</Description>
  </Issue>
  <Issue>
    <IssueID>4877</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>4877</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Shader warning on importing the MRTK RC2</Title>
    <CreatedDate>13/06/2019</CreatedDate>
    <ClosedDate>13/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4877</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4877</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Warning errors given on a fresh import of the MRTK RC2

Warning 1:
``


## To reproduce

Steps to reproduce the behavior:

1. Create a new Project
2. Import MRTK RC2
3. View warnings

## Expected behavior

No warnings or errors

## Your Setup (please complete the following information)

- Unity Version 2019.1.5f1
- MRTK Version RC2

## Target Platform (please complete the following information)

- Unity</Description>
  </Issue>
  <Issue>
    <IssueID>4874</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cloning MixedRealitySpatialMeshObserver modifies DefaultMixedRealitySpatialAwarenessSystemProfile</Title>
    <CreatedDate>13/06/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4874</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

With the DefaultMixedRealitySpatialAwarenessSystemProfile selected, cloning MixedRealitySpatialAwarenessMeshObserver causes DefaultMixedRealitySpatialAwarenessSystemProfile.asset to change

## To reproduce

Steps to reproduce the behavior:

1. `git clone  mrtk`
1. `cd mrtk`
1. `git checkout mrtk_release`
1. Launch Unity 2018.4.1f1 and open the cloned mrtk project from above
1. Select MixedRealityToolkit -&gt; Add to Scene and Configure... from the menu bar
1. Choose "Default HoloLens2ConfigurationProfile" if prompted
1. Select the "MixedRealityToolkit" GameObject in the hierarchy
1. Select "Spatial Mapping" in the inspector
1. Under "Windows Mixed Reality Spatial Mesh Observer" select "Clone"
1. `git status`

**Observe:**
``
## Expected behavior

Cloning the Spatial Mesh Observer should be disallowed until the Spatial Awareness System has been cloned.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version: 2018.4.1f1
- MRTK Version: v2.0 RC2

## Target Platform (please complete the following information)

- HoloLens 2

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>4873</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>4873</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK Standard shader issue (pink) after updating to RC2 from RC1</Title>
    <CreatedDate>13/06/2019</CreatedDate>
    <ClosedDate>13/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4873</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

After updating to RC2 from RC1, all materials using MRTK Standard Shader become pink.

## To reproduce

Steps to reproduce the behavior:
For new project:
1. Start a new project
2. Import RC2
3. Create a materials, set shader to "MRTK Standard"
4. Pink.


For RC1(including refresh) project: 
1. Follow instructions to import RC2 
4. All materials using MRTK standard shader become pink.

## Expected behavior

Materials using the shader should not be affected.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 20184.1f1
- MRTK Version v2.0.0 RC2

## Target Platform (please complete the following information)

-UWP

## Additional context

"Roll back" to RC1 (reimport RC1 back to Unity without deleting any RC2 stuff), shader starts working.
</Description>
  </Issue>
  <Issue>
    <IssueID>4871</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>4871</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Interactable OnFocus not responding after hiding GameObject</Title>
    <CreatedDate>13/06/2019</CreatedDate>
    <ClosedDate>04/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4871</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4871</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>4871</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Help Wanted</Name>
        <IssueID>4871</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4871</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>4871</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

OnFocus event of Interactable script is not responding after a GameObject was set inactive by calling OnClick from the same Interactable script and then active back from another Interactable Button

## To reproduce

Steps to reproduce the behavior:

Create new Scene
Add MRTK to the scene
Add one 3D Object cube (1)
Add another 3D Object cube (2) with MRTK Interactable script
Add OnClick Event, drag (2), select GameObject and SetActive to false
Add OnFocusReceiver event, OnFocus() drag (1) and select GameObject SetActive to false and OnFocusOff() drag (1) and select GameObject SetActive to true
Add a MRTK Button prefab and add a OnClick event, drag (2) and select GameObject SetActive to true
(1) is not showing when pointer is on (2), OnFocusEnter is not called

## Expected behavior

OnFocusEnter is called

## Screenshots

![ScreenShot1](
![ScreenShot2](


## Your Setup

Unity 2018.3.11f1
Mixed Reality Toolkit 2.0.0-RC2


## Target Platform

- HoloLens

May be related to #3577 
</Description>
  </Issue>
  <Issue>
    <IssueID>4870</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>4870</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[RC2] PressableButton planes are in wrong location after restarting Unity</Title>
    <CreatedDate>13/06/2019</CreatedDate>
    <ClosedDate>13/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4870</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4870</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>4870</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Now</Name>
        <IssueID>4870</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Some pressable buttons that have a movingVisuals with a non-zero z local position will have their planes moved way off the button when you enter play mode, even though in edit mode the buttons look fine.

## Repro steps:
1. Create empty unity project
2. Import RC2 release
3. Unzip the following folder "Scenes" into the Assets folder
4. Examine Buttons/Deep/MyButton and see planes show up correctly over button
![image](
5. Hit play and observe the planes are now completely off the button:
![image](

[Scenes.zip](

Note that the root cause seems to be that the moving button visuals object has a non-zero local space z:

![image](


</Description>
  </Issue>
  <Issue>
    <IssueID>4869</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>4869</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>PressableButtonHoloLens is missing 'make planes editable' and 'convert to local space' buttons</Title>
    <CreatedDate>13/06/2019</CreatedDate>
    <ClosedDate>13/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>4869</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Now</Name>
        <IssueID>4869</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The ‘Make Planes Editable’ check box and ‘Convert to local space’ button are missing in the ButtonHoloLens2 class.

![image](


Workaround is to add the following file which implements an inspector for PressableButtonHoloLens 2. It would be nice in the actual fix to not duplicate the code and instead just have the inpsector extend the class.

[PressableButtonHoloLens2Inspector.cs.zip](

 </Description>
  </Issue>
  <Issue>
    <IssueID>4868</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>The Slider moves slightly when "un-pinching" the Slider Handle</Title>
    <CreatedDate>13/06/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4868</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4868</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4868</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>4868</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4868</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Slider</Name>
        <IssueID>4868</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
The Slider moves slightly when "un-pinching" the Slider Handle.

The slider seems to follow either the thumb or the index fingers very briefly before the "un pinch" registers.

## To reproduce
MRTK bug

Steps to reproduce the behavior:

1. Go to '...' MRTK
2. Click on '....' Slider

- Unity Version 2018.3.11f1
- MRTK Version v2.0

## Target Platform (please complete the following information)
- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>4867</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>4867</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Performance issues rendering complex 3d objects with transparency</Title>
    <CreatedDate>13/06/2019</CreatedDate>
    <ClosedDate>13/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4867</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Trying to render complex 3D models with transparency generate performance issues.

## To reproduce

Steps to reproduce the behavior:

1. Load 3D complex objects and assign a texture with transparency. 

## Expected behavior

Low frames per second 

## Your Setup (please complete the following information)

HoloLens 2
- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Trying to improve performance with integrated unity solution for camera render.
</Description>
  </Issue>
  <Issue>
    <IssueID>4866</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Remote GLB model loading error [MR Partner Hack]</Title>
    <CreatedDate>13/06/2019</CreatedDate>
    <ClosedDate>26/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4866</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4866</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4866</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Fails to load a remote GLB model using the provided TestGlbLoading.cs script in the Glb-Loading-Demo.unity scene. We've attached the model that we tried to load. It works using the [Khronos UnityGLTF]( loader and the online [GLTF Viewer]( Link to the asset that didn't load at [Plattar Staging Server (direct link)]( Cheers!

## To reproduce

1. Open Glb-Loading-Demo.unity scene
2. Paste url ( in the url box of the TestGlbLoading.cs script
3. Run

## Expected behavior

A tap should be loaded and visible

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version Tested using Unity 2018.3.x and 2019.1.x
- MRTK Version RC2

## Target Platform (please complete the following information)

- Unity Editor
- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>4864</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Consider changing the deployed MRTK directory structure</Title>
    <CreatedDate>13/06/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4864</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4864</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>4864</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Currently when you deploy the MRTK, it creates a number of top-level directories:
- Assets/MixedRealityToolkit
- Assets/MixedRealityToolkit.Providers
- Assets/MixedRealityToolkit.SDK
- Assets/MixedRealityToolkit.Services

Consider changing the deployed structure of the MRTK to move everything under a single top-level directory, e.g.
- Assets/MRTK/MixedRealityToolkit
- Assets/MRTK/MixedRealityToolkit.Providers
- Assets/MRTK/MixedRealityToolkit.SDK
- Assets/MRTK/MixedRealityToolkit.Services

This would allow us to control the MRTK as a separate git submodule, which provides some nice benefits:
- It's more obvious if we ever make changes to the MRTK code, as opposed to our own scripts
- If we do ever make any changes, we can keep our own branch of the submodule and easily merge with new versions
- It's simpler to extract any patches we make to submit a PR upstream

Currently any user-derived profiles, etc that are created go under a different top-level directory:
- Assets/MixedRealityToolkit.Generated

It would probably make most sense for these to remain at this level, so that user-generated files don't clutter up the directory with the original MRTK code in it.</Description>
  </Issue>
  <Issue>
    <IssueID>4863</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Adding MRTK to scene with colliders reduces framerate even when input system not used</Title>
    <CreatedDate>13/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4863</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4863</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Adding MRTK v2 to scene, despite not integrating features or doing additional work, caused perf to be eaten up by toolkit. 

Notes:
* MRTKv2 input system active in scene, not being used for anything
* Hand mesh and joints off
* Scene has large number of colliders. However, in HoloLens 1 the raycast against those colliders are not impacting perf that much.

## Screenshots

&lt;img width="951" alt="Capture1" src="


&lt;img width="951" alt="Capture2" src="

Setup:

- Unity Version 2019.1
- MRTK Version v2

Target Platform:

- HoloLens 2


</Description>
  </Issue>
  <Issue>
    <IssueID>4862</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>4862</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>HandInteractionExamples Scene Performance Issues</Title>
    <CreatedDate>12/06/2019</CreatedDate>
    <ClosedDate>22/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4862</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The HandInteractionExamples scene currently falls below 60fps on HoloLens 2 when the entire scene is in view. This is likely due to the complexity of the scene (too many draw calls). We should spend some time to reduce the complexity of the scene by increasing batching and instancing usage.

## To reproduce

Steps to reproduce the behavior:

1. Launch HandInteractionExamples on HoloLens 2
2. Walk away from the scene content until all of it is in view.
3. Examine the frame rate.

## Expected behavior

Frame rate is 60fps at all viewing locations.

## Screenshots

![59370524-8bb1b200-8cf7-11e9-9bad-5b5143b8c463](

![20190612_163641_HoloLens](


## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>4861</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4861</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Guidance for upgrading build to build</Title>
    <CreatedDate>12/06/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4861</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4861</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4861</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
Difficult to know the steps for importing from various versions.  Are there steps to take in various cases?  Should I remove existing MRTK and import or import side by side?  What happens with file directory changes?  Is it the same if I'm going from HTK to MRTKv2?  RC1 &gt; RC2?  etc

## Feature Area
Docs

## Existing Doc Link



## Additional context
Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>4860</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Initial setup of Hololens2, typing very hard as calibration not an option till registered.</Title>
    <CreatedDate>12/06/2019</CreatedDate>
    <ClosedDate>13/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4860</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4860</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When first setting up the Hololens2 and logging into to your profile, entering Wifi pasword etc it is quite hard to type on the keyboard due to no calibration app running so it being at the default IPD.

You are unable to run the calibration app as it is locked behind in the normal windows menu screen which you can't access until you have registered. Basically a catch 22.

Would be ideal to first have the calibration app run as default before the setup screen, and then it saves this information and assigns it to the first user.

A secondary less preferred option is to run the calibration app, have it assign a temporary IPD to the user, finish the setup and then rerun the calibration to assign a permanent IPD.

Either way will allow for a more easier starting experience. 

## To reproduce

1) Flash a device
2) Enter the registration mode
3) Type in your email/wifi password to bring up the keyboard

## Expected behavior

Would expect to be able to type easily on the first menu screen.

## Screenshots

n/a

## Your Setup (please complete the following information)

- Unity Version  2018.4.2.f1
- MRTK Version  v2.0 RC1 refresh

## Target Platform (please complete the following information)


- HoloLens 2


## Additional context

Bug discovered at Melbourne MR Hololens 2 hack.</Description>
  </Issue>
  <Issue>
    <IssueID>4859</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Switch to ARM caused silent breaking changes</Title>
    <CreatedDate>12/06/2019</CreatedDate>
    <ClosedDate>13/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4859</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4859</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Trace found cause was casting negative float to uint, which is handled differently in ARM: 

Undefined result raised no error but cause breaking changes in app. 

Problem affected two partners.

Setup:

- Unity Version 2019.1
- MRTK Version v2.0 

Target Platform:

- HoloLens 2
</Description>
  </Issue>
  <Issue>
    <IssueID>4857</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4857</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Multiple click events raised from a single in-Editor click</Title>
    <CreatedDate>12/06/2019</CreatedDate>
    <ClosedDate>25/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4857</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4857</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4857</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4857</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Using default MRTK configuration, in at least some situations a single click within the Unity editor (performed by holding left-shift and clicking the mouse on a click-responsive control) causes three click events to be raised within the input system, in my case on the _Left_PokePointer_, the _Left_DefaultControllerPointer_ and the _Left_GrabPointer_.

## To reproduce

Set up a clickable surface (e.g. a Unity button) and add a script that implements IMixedRealityPointerHandler. In play mode, hold left-shift, point the controller ray at the button and click the left mouse button.
Break execution in the click handler and trace through to see repeated events.

## Expected behavior

A single click on the part of the user should only raise a single Click event from the pointer deemed active.

## Your Setup

- Unity 2018.4.1f1
- MRTK RC1 Refresh

## Target Platform

- HoloLens 1/2 (n/a, as behaviour is in-Editor)

## Additional context

I'm guessing that reproduction may be inconsistent due to the interactable components used (e.g. graphic raycaster vs physics) and their structuring, though once you have it, repro is 100%. In my case the behaviour was highlighted because the clicked control activates new UI including a fallback listener that would immediately fire and close the UI up again, all in the same frame. My first control (a simple IMixedRealityPointerHandler implementer) fired on the DefaultControllerPointer's click. My fallback listener fired on the GrabPointer's click.

May relate to #3652 </Description>
  </Issue>
  <Issue>
    <IssueID>4855</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>4855</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Enable GPU Instancing on Standard Materials</Title>
    <CreatedDate>12/06/2019</CreatedDate>
    <ClosedDate>12/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4855</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Now that Unity will automatically instance renderers (Unity priorities Static Batching, then GPU Instancing, then Dynamic Batching) we should mark the MRTK Standard materials (see the StandardMaterials scene) to use GPU instancing when available, which could improve draw call count for many user scenarios.

## Describe the solution you'd like

Check the "Enable GPU Instancing" checkbox on all standard materials.

## Describe alternatives you've considered

N/A

## Additional context


</Description>
  </Issue>
  <Issue>
    <IssueID>4852</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4852</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add actual MRTK Architecture documentation</Title>
    <CreatedDate>12/06/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4852</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4852</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Everything in the architecture section is currently pretty lacking and pretty random, more of a function of who had time to write some docs more so that an actual planned out approach.I've been writing up an overview doc which I want to use to replace the current architecture docs. The goal of this isn't to go into implementation-detail level information </Description>
  </Issue>
  <Issue>
    <IssueID>4849</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4849</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>EyeTrackingTarget does not properly override methods from InputSystemGlobalListener</Title>
    <CreatedDate>12/06/2019</CreatedDate>
    <ClosedDate>12/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4849</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The class EyeTrackingTarget does not override Start and OnDisable properly (Throwing warnings when compiled). The correct implementation of this would mean that the base class InputSystemGlobalListener changes its Start methods return type to Task as it's async resulting in futher code changes in other classes.
OnDisable can be corrected just fine.
</Description>
  </Issue>
  <Issue>
    <IssueID>4847</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>googlan</FixedById>
        <IssueID>4847</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Clean up usages of old IMixedRealityEventSystem API (Register/Unregister)</Title>
    <CreatedDate>12/06/2019</CreatedDate>
    <ClosedDate>24/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4847</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4847</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
This task is a follow up for PR #4716  and related to task #4187 .
After API improvement done in PR #4716 , Register/Unregister methods of IMixedRealityEventSystem should be marked as obsolete and, eventually, removed. To do this, references to these methods in Mrtk code base should be replaced with new RegisterHandler/UnregisterHandler.
`InputSystemGlobalListener` should remain in-place for backward compatibility and replaced in Mrtk code base with similar component, which uses registerHandler/unregisterHandler (or not replaced, but removed completely).

Need to cache check of handler's parent object being in EventListeners collection (in `HandleEvent`).
Need to measure performance of `HandleEvent`.</Description>
  </Issue>
  <Issue>
    <IssueID>4843</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4843</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Porting guide incorrectly says to use radialsolver for billboard </Title>
    <CreatedDate>12/06/2019</CreatedDate>
    <ClosedDate>25/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4843</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4843</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The porting guide says to replace Billboard with Solver but the solver doesn't implement billboard behavior. MRTK alread contains a billboard script so there's no need to have this row.</Description>
  </Issue>
  <Issue>
    <IssueID>4837</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Typing after Speech Dictation doesn't register key presses</Title>
    <CreatedDate>11/06/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4837</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4837</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4837</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Keyboard</Name>
        <IssueID>4837</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>4837</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When I open the keyboard in the example scene with OpenKeyboard.cs, the keyboard opens successfully and I can type. Then I try to use the Speech Dictation. When the speech to text is entered correctly. Then, I attempt to go back to type again, however, the keyboard does not register the key events anymore until I restart the app.

## To reproduce

Steps to reproduce the behavior:

1. Go to the example scene.
2. Click on open keyboard button
3. Type some characters.
4. Start the speech to text dictation, say some words.
5. Stop dictation.
6. Type some more words.
4. See error (the user can no longer type with the keyboard).

## Expected behavior

After speech dictation, the user should be able to continue typing.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2018.3.10f1
- MRTK Version vNext Lastest Master

## Target Platform 
- HoloLens 2


## Additional context

Note, that you can still delete text in the text box and you can still use Speech Dictation to enter text, but you can't type.

Probably not related, but this includes the workaround for the Unity keyboard closing issue.
(
</Description>
  </Issue>
  <Issue>
    <IssueID>4832</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>4832</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>4832</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Non-core services have their Enable() function called twice</Title>
    <CreatedDate>11/06/2019</CreatedDate>
    <ClosedDate>10/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4832</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4832</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Services</Name>
        <IssueID>4832</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Non-core services (such as the WindowsMixedRealityDeviceManager) have their Enable() functions invoked twice.

From what I can see, this was a regression from this PR, which started invoking the registrar:



And the registrar would internally also end up calling Enable() on the service as well as part of registration.

## To reproduce

Steps to reproduce the behavior:

1) Open the hand interaction example scene.
2) Set a breakpoint on WindowsMixedRealityDeviceManager::Enable()
3) See how it hits twice.

We shouldn't be calling enable twice.
</Description>
  </Issue>
  <Issue>
    <IssueID>4831</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>4831</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>onSceneGUIDelegate warning in Unity 2019</Title>
    <CreatedDate>11/06/2019</CreatedDate>
    <ClosedDate>13/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4831</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Unity 2019</Name>
        <IssueID>4831</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Usage of onSceneGUIDelegate logs warnings in latest Unity 2019 because it's been deprecated and replaced by 

## To reproduce

1) Open latest mrtk_development on the latest Unity 2019.
2) Notice warnings.

## Expected behavior

No warnings

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2019.1.ff1]
- mrtk_development

## Additional context

We should replace this with duringSceneGui.



Conditional on 2018/2019 version checks.
</Description>
  </Issue>
  <Issue>
    <IssueID>4828</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4828</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Experimental features are missing documentation page</Title>
    <CreatedDate>11/06/2019</CreatedDate>
    <ClosedDate>12/06/2019</ClosedDate>
    <IssueLabels />
    <Description>Experimental features are described in the wiki, but most of our links point to MRTK documentation. Since most links point to documentation site and not the wiki, the experimental feature documentation will be easier to find there.</Description>
  </Issue>
  <Issue>
    <IssueID>4827</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>lukastoenneMS</FixedById>
        <IssueID>4827</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Editor Hand Simulation Mesh Collapsing to a single point</Title>
    <CreatedDate>10/06/2019</CreatedDate>
    <ClosedDate>13/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4827</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4827</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

A few of us are hitting an issue where the joints in the editor hand simulation appears all on the exact same point. We are consuming the v2.0.0-20190521.3 MRTK nuget package via MSBuild (not nuget for unity). We can't debug the issue because there are no debug symbols, which makes this rather challenging to solve on our own. Does anyone have any ideas about what is causing this and how to fix it?

## To reproduce

Steps to reproduce the behavior:

1. Make any scene and add MRTK to the scene and configure
2. Press Play
3. Press whatever key shows the hand sim
4. See error

## Expected behavior

A full hand mesh. Instead there is the 3d gizmo and a bunch of small cubes collapsed into a single point

## Screenshots

![image](

![image](

![image](

## Your Setup (please complete the following information)

- Unity Version 2018.4.1f1
- MRTK Version v2.0.0-20190521.3 

## Target Platform (please complete the following information)

This is during the editor step, by the target will be Hololens 2

## Additional context


</Description>
  </Issue>
  <Issue>
    <IssueID>4825</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>4825</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>ServiceInspectors assembly has dependencies on individual service binaries</Title>
    <CreatedDate>10/06/2019</CreatedDate>
    <ClosedDate>18/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4825</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4825</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Core assemblies should not have dependencies on service, platform or feature assemblies.

The new service inspectors assembly directly references
- services.boundary
- services.input
- services,scenesystem
- services.spatialawarenss
- services.teleport</Description>
  </Issue>
  <Issue>
    <IssueID>4647</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>sostel</FixedById>
        <IssueID>4647</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add sample for determining if a user is ET calibrated and show a notification</Title>
    <CreatedDate>30/05/2019</CreatedDate>
    <ClosedDate>12/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Eye Tracking</Name>
        <IssueID>4647</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4647</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem
Based on customer feedback, it is not clear to the user when or for which apps Eye Tracking (ET) is relevant and whether the user should be ET calibrated. In case the user skipped the Eye Tracking calibration initially, it would be nice to show a notification to the user to indicate that the user would have a better experience in this app if being ET calibrated. 

## Describe the solution you'd like
Easy example to allow developers to check if a user is calibrated and if not to trigger a notification.</Description>
  </Issue>
  <Issue>
    <IssueID>4644</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4644</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>CI Pipeline debuggability improvements</Title>
    <CreatedDate>30/05/2019</CreatedDate>
    <ClosedDate>25/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4644</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4644</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>4644</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4644</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The latest set of CI breakages were somewhat challenging to debug because the set of logs that are published aren't fully comprehensive - you can't see the following logs:

%localappdata%/Unity/Editor/editor.log
$ArtifactLocationPlaceThing/build/build.log

There's some really useful information in both, which have so far required us to remote into the build machines in order to debug further. Ideally these should be published in the build step so that we can at least get access to them (so that we don't need to remote into build machines to look at logs)

In addition, we need to update the build YAML to indicate that SDK_18362 == True - some of the machines were set up without the latest SDK, which didn't become apparent until we remoted in to look at the logs.
</Description>
  </Issue>
  <Issue>
    <IssueID>4642</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>4642</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Solver to follow any hand (not one or the other)</Title>
    <CreatedDate>30/05/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4642</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4642</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4642</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>4642</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Solver forces you to choose either left or right hand, but not "any" of the two. 
- Developers would like solvers to follow any hand that's available.
- Solver component should address accessibility issues, like not knowing what hands users will use for their work.
- Currently to work around the missing feature we have to check the Handedness, then change the target.

</Description>
  </Issue>
  <Issue>
    <IssueID>4641</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Documentation should include code samples of how to use properties and methods</Title>
    <CreatedDate>30/05/2019</CreatedDate>
    <ClosedDate>19/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4641</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4641</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Documentation ( should include code examples, just like the Unity ScriptingReference.

Many times developers are looking for code snippets to accomplish a task. Properties and methods should always include a small snippet of code showing how to use them and when.

Great example below:

![unity](
</Description>
  </Issue>
  <Issue>
    <IssueID>4640</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>NearInteractableTouchable and NearInteractionGrabbable interplay</Title>
    <CreatedDate>30/05/2019</CreatedDate>
    <ClosedDate>30/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4640</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>DDE Partner</Name>
        <IssueID>4640</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Possibly related issues


## Describe the bug

When a NearInteractableTouchable and a NewInteractableGrabbable are near each other (&lt; ~10 inches), the Grabbable object isn't grabbable from the side (ie, baby shark works but cup grip doesn't).

## To reproduce

Steps to reproduce the behavior:

1. Create a Cube that is NearInteractionGrabbable.
2. Place a PressableButton on the Cube.
3. Try to grab the Cube from the side.

## Expected behavior

Cube should be grabbable from the side.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2019.3.0a2
- MRTK Version v2.0.0.rc1.refresh_stabilization

## Target Platform (please complete the following information)

- HoloLens 2

## Additional context

- We changed the value of the Sphere Cast Radius of the PokePointer prefab from 0.15 to 0.0015, which increased the precision of the PokePointer.

- Updating the DistFront value of the PokePointer prefab down to 0.01 (I believe the default value was 0.25) resolved the issue (lowering the value down to 0.0025 also works, but then press events no longer work).
</Description>
  </Issue>
  <Issue>
    <IssueID>4639</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4639</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Lack of Gaze documentation</Title>
    <CreatedDate>30/05/2019</CreatedDate>
    <ClosedDate>13/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4639</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4639</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Eye Tracking</Name>
        <IssueID>4639</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Documentation on handling Gaze with HoloLens 2 is missing.
Developers have to parse how the new GazeProvider works by going through the code.

A lot of the documentation around Gaze says "HoloLens 2 guidance coming soon" - Gaze has some major changes in HL2 and there is confusion when there are multiple hands/head in the scene. Partner code designed for HL1 has some odd behavior/breaks when hands enter/exit, and because the GazeProvider isn't documented thoroughly it was hard to divine what to do to fix the problem.</Description>
  </Issue>
  <Issue>
    <IssueID>4638</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>4638</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Set Spatial Mapping Observer Names</Title>
    <CreatedDate>30/05/2019</CreatedDate>
    <ClosedDate>02/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4638</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4638</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4638</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4638</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>4638</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Partner wanted to get the name of the default Observer as part of their Spatial Mapping/Awareness code, but couldn't find the name until searching the MRTK for where it was manually hard coded. Would have liked to have the option to tweak it and/or find it easier.

Developer had to search through the MRTK code to find the default name and copy/pasted that string value, instead of using a constant.

Another option would be to have the option to set the Default Observer name value on the Spatial Awareness profile.
</Description>
  </Issue>
  <Issue>
    <IssueID>4636</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spatial mapping simulation in Editor</Title>
    <CreatedDate>30/05/2019</CreatedDate>
    <ClosedDate>06/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4636</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>4636</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>When developing/designing apps that use spatial mapping, it is required to deploy in order to test. So developers would like to do some easy spatial map simulation in editor.

Ideally dragging a prefab in the scene to test a sample spatial mesh and ensure their renderers are working correctly/right material, basic hit / raytest tests to make sure it works, etc. Without having to build to device.

Ideally we can simulate:
- Refresh rate
- Renderers
- Office room, small/medium/large areas
- Spatial understanding
- Use developer-generated meshes

</Description>
  </Issue>
  <Issue>
    <IssueID>4631</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InteractionSourceLocation.TryGetPosition Bug! Obsolete public bool TryGetPosition(out Vector3 position);</Title>
    <CreatedDate>30/05/2019</CreatedDate>
    <ClosedDate>13/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4631</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4631</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>4631</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Hi guys, I tried to run one project code and met one problem which may be caused by the difference among different version of Holotoolkit. The bug is as shows:
	CS0619	“InteractionSourceLocation": InteractionSourceLocation is deprecated, and will be removed in a future release. Use InteractionSourcePose instead. (UnityUpgradable) -&gt; InteractionSourcePose”	

![image](


Actually, this code using HoloToolKit (very old versions of  Hololens SDK), I found there were some incompatible problems. The original code is:

![image](


And the latest version does not support the function "state.properties.location.TryGetPosition(out pos);". Thus I have to change it into: "InteractionSourceLocation.TryGetPosition(out pos, XXXX)". And I do not know what should be filled into XXXX. Thus I just used InteractionSourceLocation. And this function is Obsolete either. I am exhausted.....Does anybody know how to fix this problem? Many thanks!!!!!! This file is under: Assets/Holotoolkit/Input/Scripts/Handmanager.cs The most terrible thing is that there are only a few docs about Holotoolkit (The previous version).


## Your Setup (please complete the following information)

- Unity Version 2018.3.11f1
-VS Version 2017

## Target Platform (please complete the following information)

- HoloLens


</Description>
  </Issue>
  <Issue>
    <IssueID>4629</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>4629</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Manipulation Handler not working right for Two hand only manipulation </Title>
    <CreatedDate>30/05/2019</CreatedDate>
    <ClosedDate>12/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4629</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4629</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>4629</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4629</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - ObjectManipulator</Name>
        <IssueID>4629</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4629</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>may be related to this (which is not fixed)
TwoHandsManipulation acts weird when One Hand Movement disabled. #2797 

Scenario: Have a steering wheel model which I want to make it rotate just like a real wheel when user grabs it with two hands. Wheel should not rotate when grabbed with one hand only. 

Settings:
Manipulation Type: two handed only 
Two Handed Manipulation type: rotate 
Allow Far manipulation: yes
One hand Roation Mode Near: maintain original rotation 
Release Behavior: None 

Constraints on Rotation: Z axis only

Expected Behavior:
Wheel rotates when grabbing with both hands 
Wheel stop rotating when any hand is released 
Wheel doesnt do anything when grabbed with one hand

Actual behavior:
Wheel rotates as expected when grabbing with two hands. 
I release one hand, now wheel is moving with the other grabbed hand. 


</Description>
  </Issue>
  <Issue>
    <IssueID>4617</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>4617</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>How to enable real time shadows on the Mixed Reality Standard Shader?</Title>
    <CreatedDate>29/05/2019</CreatedDate>
    <ClosedDate>30/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4617</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue

@Cameron-Micka How do we enable real time shadows on the Mixed Reality Standard Shader?

## Feature Area

I'm unable to figure this out and it would be nice to be able to enable this feature.
I'm understand this was done intentionally as a optimization, but would like to be able to use dynamic lights with this shader and all the awesome features that come with it.

</Description>
  </Issue>
  <Issue>
    <IssueID>4615</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Type-o in PressableBUttonHoloLens2.cs</Title>
    <CreatedDate>29/05/2019</CreatedDate>
    <ClosedDate>31/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4615</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Upper case 'M' rather than lower case 'movingButtonIconText' will crash.

The getter for MovingButtonIconText returns "MovingButtonIconText", rather than the correct "movingButtonIconText". Simple type-o, but if called will crash the app with an infinite loop.

</Description>
  </Issue>
  <Issue>
    <IssueID>4613</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[RC2 Stabilization] Warning message  'FollowMeToggle.visualizationObject' is never assigned to, and will always have its default value null</Title>
    <CreatedDate>29/05/2019</CreatedDate>
    <ClosedDate>01/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4613</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
When you delete the library folder and fresh open rc2_stabilization branch, you will see the warning message:
Assets\MixedRealityToolkit.SDK\Features\UX\Scripts\Slate\FollowMeToggle.cs(13,28): warning CS0649: Field 'FollowMeToggle.visualizationObject' is never assigned to, and will always have its default value null

## To reproduce
Delete the library folder and open Unity with rc2_stabilization branch

## Expected behavior
No warning message.

## Screenshots
![2019-05-29 10_00_53-Unity 2018 3 8f1 Personal - Untitled - MRTK-Public-Microsoft - Universal Windows](

## Branch
**prerelease/2.0.0.rc2_stabilization**</Description>
  </Issue>
  <Issue>
    <IssueID>4611</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>killerantz</FixedById>
        <IssueID>4611</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Interactable Component only applies to host GameObject</Title>
    <CreatedDate>29/05/2019</CreatedDate>
    <ClosedDate>10/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4611</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4611</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>4611</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'm using a prefab object, composed of sub-objects that I can individually manipulate. 

At some point, I would like to make the whole prefab interactable, in order to select it. So I figured I could use an interactable component that I could enable/disable at the root of the prefab instance.

Problem is, it expects everything to be  set up at its host gameobject and does not seem to care about its children. 

What would be nice is if the interactable component could be applied to the whole hierarchy of objects.
</Description>
  </Issue>
  <Issue>
    <IssueID>4610</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4610</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[RC2 Stabilization] Interactable says 'Mixed Reality Toolkit is missing', PressableButtonExamples scene is not working</Title>
    <CreatedDate>29/05/2019</CreatedDate>
    <ClosedDate>30/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4610</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Now</Name>
        <IssueID>4610</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Interactable says 'Mixed Reality Toolkit is missing' even though it is in the Hierarchy.
PressableButtonExamples scene is not working.

![2019-05-29 09_49_29-Unity 2018 3 8f1 Personal - HandInteractionExamples unity - MRTK-Public-Microsof](


![2019-05-29 09_47_15-Unity 2018 3 8f1 Personal - PressableButtonExample unity - MRTK-Public-Microsoft](

![2019-05-29 09_47_24-Unity 2018 3 8f1 Personal - PressableButtonExample unity - MRTK-Public-Microsoft](

![2019-05-29 10_17_34-Interactable cs - Microsoft Visual Studio](


## To reproduce
Open HandInteractionExamples scene or PressableButtonExamples scene
Select PressableButton from the Hierarchy panel. See inspector panel.

## Branch
**prerelease/2.0.0.rc2_stabilization**
</Description>
  </Issue>
  <Issue>
    <IssueID>4608</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[RC2 Stabilization] Wrong scale handle size - HandInteractionExamples scene</Title>
    <CreatedDate>29/05/2019</CreatedDate>
    <ClosedDate>30/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4608</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Wrong scale handle size - HandInteractionExamples scene

![2019-05-28 20_53_22-Unity 2018 3 13f1 Personal - HandInteractionExamples unity - MRTK-GitHub - Unive](

![2019-05-28 20_49_45-Unity 2018 3 13f1 Personal - HandInteractionExamples unity - MRTK-GitHub - Unive](

## Expected scale handle size
![2019-05-28 20_54_44-Unity 2018 3 13f1 Personal - HandInteractionExamples unity - MRTK-GitHub - Unive](
![2019-05-28 20_55_48-Unity 2018 3 13f1 Personal - HandInteractionExamples unity - MRTK-GitHub - Unive](

# Branch
**prerelease/2.0.0.rc2_stabilization**</Description>
  </Issue>
  <Issue>
    <IssueID>4607</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4607</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Error when the number of hand mesh vertices decreases</Title>
    <CreatedDate>29/05/2019</CreatedDate>
    <ClosedDate>27/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4607</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4607</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Cross Platform</Name>
        <IssueID>4607</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>4607</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4607</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Mesh.vertices is too small. The supplied vertex array has less vertices than are referenced by the triangles array.
UnityEngine.Mesh:set_vertices(Vector3[])
Microsoft.MixedReality.Toolkit.Input.BaseHandVisualizer:OnHandMeshUpdated(InputEventData`1) (at Assets/MixedRealityToolkit/Providers/Hands/BaseHandVisualizer.cs:151)
Microsoft.MixedReality.Toolkit.Input.&lt;&gt;c:&lt;.cctor&gt;b__174_40(IMixedRealityHandMeshHandler, BaseEventData) (at Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputSystem.cs:1412)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
Microsoft.MixedReality.Toolkit.BaseEventSystem:HandleEvent(BaseEventData, EventFunction`1) (at Assets/MixedRealityToolkit/Services/BaseEventSystem.cs:32)
Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystem:DispatchEventToGlobalListeners(BaseInputEventData, EventFunction`1) (at Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputSystem.cs:357)
Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystem:HandleEvent(BaseEventData, EventFunction`1) (at Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputSystem.cs:287)
Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystem:RaiseHandMeshUpdated(IMixedRealityInputSource, Handedness, HandMeshInfo) (at Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputSystem.cs:1421)
Microsoft.MixedReality.Toolkit.WindowsMixedReality.Input.LeapMotionHand:UpdateHandMesh(HandMeshInfo) (at Assets/LeapMotionInputSimulation/Providers/LeapMotionHand.cs:171)
Microsoft.MixedReality.Toolkit.WindowsMixedReality.Input.LeapMotionService:OnUpdateFrame(Frame) (at Assets/LeapMotionInputSimulation/Providers/LeapMotionService.cs:112)
Leap.Unity.LeapProvider:DispatchUpdateFrameEvent(Frame) (at Assets/LeapMotion/Core/Scripts/LeapProvider.cs:51)
Leap.Unity.LeapServiceProvider:Update() (at Assets/LeapMotion/Core/Scripts/LeapServiceProvider.cs:302)
Leap.Unity.LeapXRServiceProvider:Update() (at Assets/LeapMotion/Core/Scripts/LeapXRServiceProvider.cs:231)


## To reproduce
https://github.com/HoloLabInc/LeapMotionInputForMRTK/tree/feature/support-hand-mesh

## Expected behavior
No errors

## Your Setup

- Unity Version: 2018.3.14f1
- MRTK Version: v2.0.0-RC1-Refresh

## Target Platform

- Unity Editor

## Solution
BaseHandVisualizer.cs l.147-


            if (handMeshFilter != null)
            {
                Mesh mesh = handMeshFilter.mesh;

                if((mesh.vertices?.Length ?? 0) != 0 &amp;&amp; 
                    mesh.vertices?.Length != eventData.InputData.vertices?.Length)
                {
                    mesh.Clear();
                }
                mesh.vertices = eventData.InputData.vertices;
                mesh.normals = eventData.InputData.normals;
                mesh.triangles = eventData.InputData.triangles;

                if (eventData.InputData.uvs != null &amp;&amp; eventData.InputData.uvs.Length &gt; 0)
                {
                    mesh.uv = eventData.InputData.uvs;
                }

                mesh.RecalculateBounds();

                handMeshFilter.transform.position = eventData.InputData.position;
                handMeshFilter.transform.rotation = eventData.InputData.rotation;
            }
`</Code>
    <Description>## Describe the bug
I'm using MixedRealityToolkit.InputSystem?.RaiseHandMeshUpdated method.
HandMeshInfo data is created based on Leap Motion hand mesh data.

When the number of vertices decreases, the following error occured.
``
</Description>
  </Issue>
  <Issue>
    <IssueID>4602</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>4602</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>4602</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[RC2 Stabilization] Piano sharp keys are not working</Title>
    <CreatedDate>29/05/2019</CreatedDate>
    <ClosedDate>29/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4602</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Piano sharp keys are not pressable 
![2019-05-28 21_28_56-Unity 2018 3 13f1 Personal - PressableButtonExample unity - MRTK-GitHub - Univer](

## To reproduce
In **HandInteractionExamples** scene or **PressableButtonExamples** scene, try the piano's sharp/flat keys.

## Expected behavior
Sharp/Flat keys can be pressed and generate sound.

## Branch
**prerelease/2.0.0.rc2_stabilization**

</Description>
  </Issue>
  <Issue>
    <IssueID>4601</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>4601</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Input Simulation Does not work on Mac</Title>
    <CreatedDate>29/05/2019</CreatedDate>
    <ClosedDate>04/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4601</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input Simulation</Name>
        <IssueID>4601</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
If you open an MRTK-Enabled scene on Mac OSX and hit play, the camera will not move when you WASD and hands do not show up.

The expected behavior is that input simulation should work as it does on Windows

I was able to work around this by checking "Mac Standalone" in the Platforms for Input Simulation Service Input Providers: 

![image](


## Your Setup (please complete the following information)

- Unity Version 2018.3.14f1
- MRTK Version mrtk_development

## Target Platform (please complete the following information)

- Mac OSX Editor
</Description>
  </Issue>
  <Issue>
    <IssueID>4600</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>4600</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[RC2 Stabilization] Pressable Button moves unexpected way when parented by Solver</Title>
    <CreatedDate>29/05/2019</CreatedDate>
    <ClosedDate>30/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4600</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
When PressableButton is placed under an object that has Solver (e.g. Radial View Solver), the button's front cage can be separated by the Solver's movement. It seems like while the finger is on the button, Solver’s transform is not applied to the button and makes it broken.

![MRTK_PressableButton_Bug2](
![MRTK_PressableButton_Bug0](
![MRTK_PressableButton_Bug1](


## To reproduce
Open HandInteractionExample scene
Try the 'Follow Me' button on the slate with direct finger press
Try the 'Pin' button on the toggle profiler/hand mesh/joint panel with direct finger press

## Expected behavior
The front cage should not break

## Branch
**prerelease/2.0.0.rc2_stabilization**</Description>
  </Issue>
  <Issue>
    <IssueID>4598</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>killerantz</FixedById>
        <IssueID>4598</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Interactable Voice Command feature is confusing</Title>
    <CreatedDate>29/05/2019</CreatedDate>
    <ClosedDate>25/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4598</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4598</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>4598</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Interactable has a field for Voice Command, but entering a value there does nothing when running the experience. Older versions of Interactable had the ability to setup a voice command directly from Interactable. Now voice commands need to be setup using the Speech Commands Profile. This should be documented.

Now the Voice Command field just filters the Speech Command that are spoken while the Interaction has focus. This is nice, but should be a drop down instead of a string field to avoid typo bugs.

The Requires Focus property is not hooked up to anything. The ISpeechInputHandler in Interactable does check if Requires Focus is checked and if the Interactable has Focus, but the ISpeechInputHandler does not receive any events unless the Interactable has focus anyway. This property used to let make the Interactable listen globally for a speech commands, but this functionality is not working any more, even with IsGlobal checked. Is there a way to register as a global listener for SpeechCommands?

## To reproduce

1. Create an object with an Interactable.
2. Add a string to the Voice Commands field.
3. observe the voice command does not work.
4. Go to the SpeedCommandsProfile and add a new voice command
5. Enter the voice command from the profile as a string in the Voice Command field of Interactable
6. Observe the Voice Command does work with focus.
7. Uncheck Requires Focus on the Interactable.
8. Observe that the voice command still requires focus.

## Expected behavior

It's clear where and how to setup voice commands
Voice Commands should be a drop down if they are setup in the Speed Command Profile
Change name to Speech Commands for consistency
Requires Focus property should enable a global listener for speed commands if unchecked.

## Screenshots

![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>4596</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>sostel</FixedById>
        <IssueID>4596</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Eye Tracking docs out-of-date</Title>
    <CreatedDate>29/05/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4596</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4596</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
After recent profile changes, the eye tracking docs and in particular the screenshots are not up-to-date anymore.
Additional information to get started more easily is missing.

## Existing Doc Link
</Description>
  </Issue>
  <Issue>
    <IssueID>4590</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>4590</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK Standard Shader - Enable "_MainTex" by default</Title>
    <CreatedDate>28/05/2019</CreatedDate>
    <ClosedDate>30/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4590</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4590</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shaders / Materials</Name>
        <IssueID>4590</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Currently, the MRTK Standard shader only enables keywords when the fields are manually enabled on the material. This makes sense with "Rendering Options".

I assumed the "Main Maps" are enabled by default as there is no check box to _enable_ the fields.

Unfortunately, Albedo's `Color` is the only keyword enabled by default. It was quite a process to figure out why I wasn't able to set a texture on a MRTK standard shader material.

## To reproduce

Try setting the "_MainTex" directly with `renderer.material.mainTexture = ...`

or via `MaterialPropertyBlock`:

`MaterialPropertyBlock materialPropertyBlock = new MaterialPropertyBlock();
 obj.Renderer.GetPropertyBlock(materialPropertyBlock);
 int MainTexID = Shader.PropertyToID("_MainTex");
 materialPropertyBlock.SetTexture(MainTexID, );
 obj.Renderer.SetPropertyBlock(materialPropertyBlock);`

## Expected behavior

As mentioned above, I'd expect the more basic "Main Maps" keywords to be enabled be default.

## The fix

A single but not intuitive line to add:
`obj.Renderer.material.EnableKeyword("_MainTex");`

## Setup

- Unity Version - 2018.3.11f1
- MRTK Version - pulled MRTK_development from last week.

## Target Platform
- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR</Description>
  </Issue>
  <Issue>
    <IssueID>4586</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ReflectionTypeLoadException in MRTK</Title>
    <CreatedDate>28/05/2019</CreatedDate>
    <ClosedDate>28/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4586</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Duplicate</Name>
        <IssueID>4586</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When I import MRTK in unity, this error will occur, how can I fix it?

## To reproduce
Steps to reproduce the behavior:

Create an empty project in unity 2018.3.11f
Change platform to UWP
Enable VR with Mixed Reality Toolkit
Import MRTK v2 RC1
Click "Add to scene and configure"
Launch project

## Expected behavior

No error

## Screenshots

ReflectionTypeLoadException: Exception of type 'System.Reflection.ReflectionTypeLoadException' was thrown.
System.Reflection.Assembly.GetExportedTypes () (at &lt;d7ac571ca2d04b2f981d0d886fa067cf&gt;:0)
System.Reflection.Assembly.get_ExportedTypes () (at &lt;d7ac571ca2d04b2f981d0d886fa067cf&gt;:0)
Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerMappingProfile.CollectControllerTypes () (at Assets/MixedRealityToolkit/Definitions/Devices/MixedRealityControllerMappingProfile.cs:43)
Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerMappingProfile.get_ControllerMappingTypes () (at Assets/MixedRealityToolkit/Definitions/Devices/MixedRealityControllerMappingProfile.cs:30)
Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerMappingProfile.AddMappings () (at Assets/MixedRealityToolkit/Definitions/Devices/MixedRealityControllerMappingProfile.cs:68)
Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerMappingProfile.Awake () (at Assets/MixedRealityToolkit/Definitions/Devices/MixedRealityControllerMappingProfile.cs:62)

## Your Setup (please complete the following information)

- Unity Version 2018 3.11f
- MRTK Version MRTK V2.0.0 RC1

## Target Platform (please complete the following information)

- HoloLens

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>4584</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>4584</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Force release manipulated object</Title>
    <CreatedDate>28/05/2019</CreatedDate>
    <ClosedDate>04/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4584</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>4584</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4584</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - ObjectManipulator</Name>
        <IssueID>4584</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

It's more of a question than a feature. Also, it is my first one on Git Community so I apologize if it's not how questions should be asked here.

I can't figure out how to release currently manipulated object by ManipulationHandler. There may be some easy way, but I can't see one.

## Describe the solution you'd like

I can see what's the current HostTransform object, but I'd like to be able to remove it (or force release it).

## Describe alternatives you've considered

In my problem I need to make sure that manipulated object can't be moved outside of specific collider. Currently I disable ManipulationHandler from the manipulated gameobject OnTriggerExit, reset the position of manipulated gameobject back to just before entering the collider and then enable ManipulationHandler again so the object can be moved/manipulated again. I believe I could ommit enabling/disabling ManipulationHandler overall, but it would not solve the current problem, as the object is still manipulatable.

## Additional context

Feel free to remove my question if Git is a place to only report bugs or propose features. Just let me know before you do so, so that I know for the future. Thanks
</Description>
  </Issue>
  <Issue>
    <IssueID>4583</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can't build HoloToolkit in Unity 2018.4 (LTS)</Title>
    <CreatedDate>28/05/2019</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4583</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>4583</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The latest HoloToolkit (not Mixed Reality Toolkit!) doesn't work in Unity 2018.4 (LTS).
There are errors after exporting the Visual Studio project.

![image](

## To reproduce

Steps to reproduce the behavior:

1. Create new project in Unity 2018.4
2. Import HoloToolkit-Unity-2017.4.3.0.unitypackage
3. Switch to UWP
4. Build project
5. Open Visual Studio project and build

## Expected behavior

Successful VS build without error. Instead there are errors about missing references.

## Screenshots


## Your Setup (please complete the following information)

- Unity Version 2018.4.0f1
- HT Version 2017.4.3.0

## Target Platform (please complete the following information)

- HoloLens

## Additional context
</Description>
  </Issue>
  <Issue>
    <IssueID>4582</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>sostel</FixedById>
        <IssueID>4582</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>ET demo texture size is too big.</Title>
    <CreatedDate>28/05/2019</CreatedDate>
    <ClosedDate>06/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4582</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Eye Tracking</Name>
        <IssueID>4582</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
There are two large files under Eye Tracking examples folder. 36MB and 15MB.
Not sure if the PSD file is used. Map example texture needs optimization.

![2019-05-27 20_27_28-Textures](

## Branch
mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>4579</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>4579</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>unregistering core system does not change associated private member</Title>
    <CreatedDate>27/05/2019</CreatedDate>
    <ClosedDate>31/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4579</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4579</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Services</Name>
        <IssueID>4579</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

member spatialAwarenessSystem in MixedRealityToolkit (and other core services) are not set to null when the associated service is unregistered.

This force to reset the whole configuration with ResetConfiguration to have the cache properties cleared.

## To reproduce

i'm trying to change spatial awareness profile by code without changing whole mrtk profil configuration.

so i first disable the current spatailawareness
`MixedRealityToolkit.Instance.UnregisterService&lt;IMixedRealitySpatialAwarenessSystem&gt;()`

then i register my new profile this way:

``

## Your Setup (please complete the following information)

- Unity Version2018.3.11f1
- MRTK Version 2.0 RC1 Refresh


## Additional context


</Description>
  </Issue>
  <Issue>
    <IssueID>4577</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>TouchScreenKeyboard does not work in editor/simulator</Title>
    <CreatedDate>27/05/2019</CreatedDate>
    <ClosedDate>30/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4577</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4577</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Won't Fix</Name>
        <IssueID>4577</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When running a scene in the editor, opening the TouchScreenKeyboard, no keyboard is displayed; the keyboard status is immediately set to TouchScreenKeyboard.Status.Done.

## To reproduce

Steps to reproduce the behavior:

1. In the MRTK examples, open Demos/HandTracking/Scenes/HandInteractionExamples
2. Press play to start simulation in editor
3. Click button to enable keyboard interaction (left of scene)
4. See: no keyboard; OpenKeyboard.cs sets the debug message to "typed " (the completion message)

## Expected behavior

Keyboard should be displayed and allow user input.

## Your Setup (please complete the following information)

- Unity Version 2018.3.5f1
- Microsoft Mixed Reality Toolkit v2.0.0 RC1 Refresh
</Description>
  </Issue>
  <Issue>
    <IssueID>4575</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4575</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Exceptions thrown when playing via Holographic Remote Player</Title>
    <CreatedDate>27/05/2019</CreatedDate>
    <ClosedDate>05/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4575</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4575</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>4575</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Holographic Remoting</Name>
        <IssueID>4575</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>4575</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## NullReferenceException in GGVPointer.OnPreSceneQuery

When following the 'getting started with MRTK Guide' and opening the HandInteractoinExamplesScene or any other scene, an exception is thrown when gazing upon an Item. Playing the Scene via Holographic Remoting Player.

## To reproduce

**Prequesites**

- download and import MRTK Foundation and Examples packages (v2.0.0 RC1 Refresh)
- download and insall Holographic Remoting Player on HoloLens 1
- Set Unity Target Platform to UWP
- In XR settings, enable Virtual Reality, add MRTK to list

**Steps**

1. Create a new Scene in Unity
2. Top Panels &gt; Mixed Reality Toolkit &gt; Add to Scene and Configure
3. Add a Cube GameObject
4. Properly scale and place the object in the scene
translation: `x: 0; y: 0; z:2;`
scale: `x: 0.2; y: 0.2; z: 0.2;`
5. Create and add a script containing the following:
`using Microsoft.MixedReality.Toolkit.Input;`
`public class CubeSelector : MonoBehaviour, IMixedRealityInputHandler`
`void IMixedRealityInputHandler.OnInputDown(InputEventData eventData){/*any simple functionality*/}`
`void IMixedRealityInputHandler.OnInputUp(InputEventData eventData){/*any simple functionality*/}`

## Expected behavior

When gazing upon a selectable item (Cube in custom scene or any object in the HandInteractionExamples demo scene) and selecting it by gesture, the defined selection behaviour should apply.

## Screenshots

![image](

![image](

In GGVPointer.cs:

![image](


## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.14f1]
- MRTK Version [e.g. v2.0.0 RC1 Refresh]

## Target Platform (please complete the following information)

- HoloLens

## Additional context

I am just getting started with HoloLens development (moreover I'm completely alone so noone can help me with their experience). When running examples in the editor everything works as expected (except that I have to click 2-3 times before the interaction is recognized. When using the holographic remoting player, and playing any scene via HoloLens(1), I get a crash either upon gaze or AirTap Gesture.
</Description>
  </Issue>
  <Issue>
    <IssueID>4573</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to attach an object to a hand joint</Title>
    <CreatedDate>27/05/2019</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4573</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4573</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>One team built a hand-locked menu using a customized solver. Would have helped to have a minimal template for this scenario and leave it to devs to build on top.
	Hand tracking docs talk about polling vs. events, but don’t include source detected/lost handling.
	ControllerFinder excludes hand controllers, it only works for motion controllers.
	Existing solvers have a lot of additional settings that obfuscate behaviour.
</Description>
  </Issue>
  <Issue>
    <IssueID>4572</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to use Unity UI with MRTK v2</Title>
    <CreatedDate>27/05/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4572</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4572</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>4572</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UnityUI</Name>
        <IssueID>4572</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Many people want to keep using the Unity UI system to build buttons instead of MRTK Interactables. This is actually possible, but not covered by our docs afaik.</Description>
  </Issue>
  <Issue>
    <IssueID>4571</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to make a basic button from scratch</Title>
    <CreatedDate>27/05/2019</CreatedDate>
    <ClosedDate>29/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4571</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4571</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>4571</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>How to make a basic button from scratch! 
The docs start with the prefab and then lists all the components. IMO would be more helpful to build up a button with minimal needed parts, like:
	Add a PressableButton to get interaction with pointers
	Add Interactable to define button states
	Add PhysicalPressEventRouter to let PressableButton change the states
</Description>
  </Issue>
  <Issue>
    <IssueID>4570</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity 2018.4.0f1+Vuforia MTG8.1.8+MRTK v2+Hololens1 How to start?</Title>
    <CreatedDate>26/05/2019</CreatedDate>
    <ClosedDate>22/07/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I am beginner in AR. Recently I want to using Unity 2018.4.0f1+Vuforia MTG8.1.8+MRTK v2+Hololens1 to recognize a real object.

## Expected Behavior
Using Unity 2018.4.0f1+Vuforia MTG8.1.8+MRTK v2+Hololens1 to recognize a real object.

## Actual Behavior
Vuforia Hololens Sample  can be deployed and run successfully. But it is using HoloToolkit, now I am using MRTK, my project can be deployed in hololens but when I open this app, it is black...

## Steps to reproduce
First, I imported the .obj file to the Vuforia Model Target Generator(MTG) and download the dataset file .unitypackage to unity.
Secondly, I imported the MRTK example and foundation those two .unitypackages to unity.
Thirdly, I set the setting conditions followed the instruction  and 
Fourthly, I compiled it in vs2017 and deployed it in hololens.

The finnal result is the app icon can be see in hololens ,but it is show nothing when I open it. And there are some errors in Unity, such as:  Origin doesnt exist in target framework.It is referenced from MRTK..
I was wondering maybe there are some mistakes in Unity setting condition. But conditions in HoloToolkit and MRTK is different. So I dont know which step is wrong, MRTK or Vuforia AR camera setting?

## Unity Editor Version
Unity 2018.4.0f1 
Vuforia 8.1.11 Vuforia MTG 8.1.8
Windows SDK 10.18362/17134

## Mixed Reality Toolkit Release Version
MRTK v2

The main question is I was confused with so many software and their multifarious softwera vision.
I cannot find a Specific Tutorial for beginner. Is there a Specific Tutorial on how to recognize a 3D object by using the latest softwera vision? 
 Thanks a lot!
</Description>
  </Issue>
  <Issue>
    <IssueID>4568</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4568</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>BoundingBox does not look at descendants when computing bounds</Title>
    <CreatedDate>24/05/2019</CreatedDate>
    <ClosedDate>03/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4568</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>By Design</Name>
        <IssueID>4568</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4568</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>4568</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Bounding box only looks at its immediate children when computing its bounds, it does not look deeper in the hierarchy.

A good way to reproduce this is to modify the Gltf example at .\Assets\MixedRealityToolkit.Examples\Demos\Gltf\Scripts\TestGltfLoading.cs to the following (modify the Start method):

``

The bounding box will incorrectly create a bounds that does not encapsulate the lamp:

![image](

</Description>
  </Issue>
  <Issue>
    <IssueID>4566</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>4566</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>PressableButton back press logic prevents fast hands from pressing buttons</Title>
    <CreatedDate>24/05/2019</CreatedDate>
    <ClosedDate>01/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>4566</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4566</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4566</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4566</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>4566</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Now</Name>
        <IssueID>4566</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Modify back-press filter logic to work if interaction point enters press depth, without having entered interactable zone on a previous frame (touch has started on this frame), by storing and providing access to PokePointer’s previous position.  Might be able to pass the pointer single-frame velocity along with the input event to achieve the same thing.</Description>
  </Issue>
  <Issue>
    <IssueID>4565</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>4565</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>PressableButton does not send release events when touches end</Title>
    <CreatedDate>24/05/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4565</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>4565</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4565</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4565</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>4565</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Now</Name>
        <IssueID>4565</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Add option to “send release event when touches end, if pressed”, to match Shell behavior.</Description>
  </Issue>
  <Issue>
    <IssueID>4564</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>4564</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Button 'splash visual' needs to trigger not on touch but on button press</Title>
    <CreatedDate>24/05/2019</CreatedDate>
    <ClosedDate>05/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4564</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>4564</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The splash visual currently triggers when the finger touches the button, but the button activates on press. The splash visual should trigger when the button actually gets pressed.</Description>
  </Issue>
  <Issue>
    <IssueID>4563</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>4563</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>MenelvagorMilsom</FixedById>
        <IssueID>4563</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Proximity Shader GlobalProximityAssigner should use point of interaction (pokepointer position) instead of fingertip joint</Title>
    <CreatedDate>24/05/2019</CreatedDate>
    <ClosedDate>24/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4563</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4563</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4563</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Bug #4559 says that the poke pointer position needs to actually be in front of the index finger slightly. We need to make the values that the finger proximity shader uses match the point of interaction, not the index finger position.</Description>
  </Issue>
  <Issue>
    <IssueID>4562</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>4562</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Compressible button visuals tuning</Title>
    <CreatedDate>24/05/2019</CreatedDate>
    <ClosedDate>05/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4562</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4562</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4562</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>4562</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
- Scale the button visuals transform along Z as press depth changes.
    - Requires a ‘visuals depth’ or similar parameter to map press-depth to scale.
- Also ensure that the front plane of visuals is the point at which depressing begins.

Need to follow up with Joshua Neff for more explanation.
</Description>
  </Issue>
  <Issue>
    <IssueID>4561</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MenelvagorMilsom</FixedById>
        <IssueID>4561</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Fingertip cursor should convergs at point of activation for buttons</Title>
    <CreatedDate>24/05/2019</CreatedDate>
    <ClosedDate>29/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4561</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4561</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4561</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Fingertip cursor should converge at the point of activation for buttons. 
- Placement should match near interaction point, which is PokePointer’s position.
- Updated logic to determine distance to near interactable.
- If the nearest point is clamped to front face of the interactable, it will be ignored, unless it is the nearest interactable.
- Ignore disabled box colliders.
</Description>
  </Issue>
  <Issue>
    <IssueID>4559</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MenelvagorMilsom</FixedById>
        <IssueID>4559</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Poke pointer position does not match shell</Title>
    <CreatedDate>24/05/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4559</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4559</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
Placement of near interaction point should follow the same position as Shell fingertip cursor: (fingertip joint pos) + (tip radius) * (dir from knuckle to fingertip).

The fingertip “pose” was modified in both WindowsMixedRealityArticulatedHand and SimulatedArticulatedHand to return this pose, refactored to a single utility function.
</Description>
  </Issue>
  <Issue>
    <IssueID>4557</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4557</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>BoundingBox doesn't recompute bounds when boundsOverride is modified</Title>
    <CreatedDate>24/05/2019</CreatedDate>
    <ClosedDate>20/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>4557</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4557</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4557</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4557</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>4557</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

BoundingBox reacts to transform changes of the Target object to recompute bounds. However, if a BoxCollider is used for boundsOverride to take the bounds values from, changes to the BoxCollider will not trigger a bounds update.

There is no equivalent "hasChanges" flag on BoxCollider, as there is on Transform (aside from the questionable practice of resetting the Target.transform.hasChanged flag from BoundingBox). Quick hack solution was to add a custom "HasDirtyBounds" flag that can be set externally to force a bounds update.

Problematic code:


## To reproduce

1. Open the HandInteractionExamples scene
1. Select one of the bounding box examples, e.g. "ActivateByProximityAndPointer"
1. Go into play mode
1. Press T to show the left hand, hold shift, move the hand over the object so the bounding box is shown
1. Select the scene tab so you can see the bounds
1. Change the scale of the target object, observe how the bounds adapt
1. Change the size of the box collider, observe how the bounds _don't_ adapt

## Expected behavior

BoundingBox also works with a boundsOverride collider set.

## Screenshots

Initial bounds:
![image](

Changing Target transform works:
![image](

Changing BoxCollider size does not work:
![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>4555</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>slate sample interaction can't work on hololens 1</Title>
    <CreatedDate>24/05/2019</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4555</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Slate</Name>
        <IssueID>4555</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
can't not scroll the ContentQuad content on hololens1.

## Expected behavior

The ContentQuad content window can be scrolled via articulated hand input.



## Your Setup (please complete the following information)

- Unity Version 2018.3.14f1
- MRTK Version v2.0

## Target Platform (please complete the following information)

- HoloLens 1


</Description>
  </Issue>
  <Issue>
    <IssueID>4554</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>killerantz</FixedById>
        <IssueID>4554</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>InteractableAudioTheme needs to be smarter in the way it plays audio clips</Title>
    <CreatedDate>24/05/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4554</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4554</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Interactions</Name>
        <IssueID>4554</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>4554</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>4554</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
InteractableAudioTheme plays audio clips that are assigned to each state when the interactable changes state.

- The Default state clip will play on object enable. It should only play on Focus Off or when we transition to that Default state.
- The Focus clip should only play once on first focus, not after the press state. After a click or release Interactable goes into the focus state again, it should not play the focus state at this point.

## To reproduce

1. Create an gameObject with an Interactable
2. Add the object as a Target in a new profile
3. Create a new theme
3. Select the Audio Theme option from the drop down.
4. Place audio clips in the theme
5. observe the audio clips play at weird times. Focus plays a lot and Default plays on enable.

## Expected behavior

- Default clip does not play on enable, only plays when focus is off
- Focus only plays once while focused

## Screenshots

![image](

</Description>
  </Issue>
  <Issue>
    <IssueID>4551</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4551</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>InteractableColorTheme does not support TextMeshPro</Title>
    <CreatedDate>24/05/2019</CreatedDate>
    <ClosedDate>13/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4551</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4551</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Interactions</Name>
        <IssueID>4551</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4551</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>4551</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
InteractableColorTheme supports coloring UI Text and TextMesh components, but does not include support for coloring TextMeshPro objects.

## To reproduce

1. Create an empty with a collider and add the Interactable component.
2. Create a TextMeshPro object
3. Add the TextMeshPro object as a profile target on the Interactable
4. Add a theme that effects color, like InteractableColorTheme or ScaleOffsetColorTheme.
5. Observe that the theme displays the shader property dropdown "_Color", but TextMeshPro does not have a _Color property. It will cause an error when running and not update any colors.

## Expected behavior
The color themes should work on Text, TextMesh, TextMeshPro, TextMeshProUGUI, as well as renderers with materials.

## Screenshots

![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>4549</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>4549</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>RogPodge</FixedById>
        <IssueID>4549</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add Oculus Quest Support for MRTK </Title>
    <CreatedDate>23/05/2019</CreatedDate>
    <ClosedDate>25/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Android</Name>
        <IssueID>4549</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Cross Platform</Name>
        <IssueID>4549</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Current Iteration</Name>
        <IssueID>4549</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4549</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Oculus</Name>
        <IssueID>4549</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Oculus Quest is a great wireless VR experience that has potential to be adopted en masse by consumers. It would be great if MRTK could support this platform, to enable developers to build applications that can reach a broad audience.

## Expected Behavior
Oculus would be supported either through the OpenVR data provider. Since Oculus Quest is an Android platform, the MRTK project needs to compile and deploy for Android. Finally, we need to add a controller mapping and type for the oculus quest controllers to appropriately map the inputs. We may actually be able to re-use the oculus touch controller mapping.
</Description>
  </Issue>
  <Issue>
    <IssueID>4546</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4546</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>BoundingBox needs to print error if maniphandler is above BoundingBox</Title>
    <CreatedDate>23/05/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4546</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4546</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4546</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>4546</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
This bug is a follow up issue #4393. That bug was closed by design and the requirement is devs always put the bounding box component before manipulation handler on a game object if they are on the same object.

To prevent people from accidentally putting manipulation handler above bounding box, we should have some validation to check that manipulation handler component comes after bounding box on a game object.

</Description>
  </Issue>
  <Issue>
    <IssueID>4545</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Namespace EventSystem not found</Title>
    <CreatedDate>23/05/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4545</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

I have been trying to get started with the MixedRealityToolkit-Unity and am noticing a bug in the setup process. After importing the MixedRealityToolkit 90+ compiler errors pop up. Most of them say "type or namespace 'Evensystems' could not be found", but it appears for other namespaces aswell like: BaseEventData, IEventSystemHandler, RaycastResult and a couple others. I am using Unity 2019.3.0a3 and have setup a project with buildsettings for the Hololens (v1)

## To reproduce

Steps to reproduce the behavior:

1. Create a new Unity Project.
2. Click on Assets -&gt; Import Package
3. Import the MixedRealityToolkit.
4. See the errors pop up in the console.

## Expected behavior

The MixedRealityToolkit is loaded in Assets. A dropdown menu for the toolkit should appear (among other setting changes).

## Screenshots

## Your Setup (please complete the following information)

- Unity Version [2019.3.0a3]
- MRTK Version [ v2.0.0-RC1-Refresh ]

## Target Platform (please complete the following information)

- HoloLens
</Description>
  </Issue>
  <Issue>
    <IssueID>4542</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Question] Will MRTK support standalone VR headset running on Android?</Title>
    <CreatedDate>23/05/2019</CreatedDate>
    <ClosedDate>24/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4542</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Headset like Oculus Quest is running on Android and Open VR hasn't supported Android yet.
Is there any plan to have MRTK supported Android platform?</Description>
  </Issue>
  <Issue>
    <IssueID>4541</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Infinite loop caused by InscribedRectangle ctor</Title>
    <CreatedDate>23/05/2019</CreatedDate>
    <ClosedDate>24/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4541</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## To reproduce

This was reported by a customer, and means the following configuration occured:
1) Tracking space is room scale
2) UnityBoundary.TryGetGeometry returns true
3) The boundary point array is empty

When this happens, the do-while loop inside of the InscribedRectangle ctor never returns.

It should be straight forward enough to add some some input checking to prevent getting into this state. 

- Unity Version: 2018.3
- MRTK Version: RC1 Refresh
</Description>
  </Issue>
  <Issue>
    <IssueID>4539</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Services may not run in the order given by their priority</Title>
    <CreatedDate>23/05/2019</CreatedDate>
    <ClosedDate>26/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4539</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4539</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Services</Name>
        <IssueID>4539</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shutdown</Name>
        <IssueID>4539</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Thousand Cuts</Name>
        <IssueID>4539</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

I haven't hit this in practice but it seems that we're relying on Dictionary iterating over its elements in the same order they were inserted for correct service execution order:  see service registration in `MixedRealityToolkit.InitializeServiceLocator()` and execution via `MixedRealityToolkit.ExecuteOnAllServices()`.

[`Dictionary`]( doesn't guarantee this: 

&gt; For purposes of enumeration, each item in the dictionary is treated as a KeyValuePair&lt;TKey,TValue&gt; structure representing a value and its key. The order in which the items are returned is undefined. </Description>
  </Issue>
  <Issue>
    <IssueID>4537</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Type or Namespace not found errors in 2 script</Title>
    <CreatedDate>23/05/2019</CreatedDate>
    <ClosedDate>24/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4537</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Got 4 error about namepsace not found (see screenshots)

## To reproduce

Steps to reproduce the behavior:

1. Updated a project by updating to the last ver of the mixed reality toolkit (v2.0.0 RC1 Refresh)
2. See error

## Expected behavior

No Namespace error, would allow me to compile my project in unity

## Screenshots



## Your Setup (please complete the following information)

- Unity Version [2019.1.3f1]
- MRTK Version [v2.0.0 RC1 Refresh]

## Target Platform (please complete the following information)

- HoloLens

## Additional context

Doing an internship, teacher asked me to reopen a project made with Unity 2017.4.24f1 so i could update it to last unity and Toolkit version. Might end up modifying it and with this problem i can't really work :/
</Description>
  </Issue>
  <Issue>
    <IssueID>4535</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>luis-valverde-ms</FixedById>
        <IssueID>4535</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Support pointer event handlers that are not scripts</Title>
    <CreatedDate>23/05/2019</CreatedDate>
    <ClosedDate>19/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4535</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4535</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4535</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Trying to implement a bit of logic that runs as part of the focus provider I bumped into the issue that I couldn't listen for pointer down events without implementing the `IMixedRealityPointerHandler` interface and registering as an event system listener. You can only register game objects as event system listeners, so effectively you can only handle pointer events from a script, which focus provider is not.

## Describe the solution you'd like

I'd like to be able to use the standard C# event+delegate mechanism for consuming pointer events.</Description>
  </Issue>
  <Issue>
    <IssueID>4534</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>lukastoenneMS</FixedById>
        <IssueID>4534</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Hand visualizer shows a box for the "None" joint</Title>
    <CreatedDate>23/05/2019</CreatedDate>
    <ClosedDate>11/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>1 - Planning</Name>
        <IssueID>4534</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4534</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4534</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4534</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The "None" hand joint is a dummy joint and should not be visualized.

## To reproduce

1. Start in editor
2. Hold shift to show hand.
3. Observe a scattered box for the "None" joint.

## Expected behavior

None joint is not visualized.
</Description>
  </Issue>
  <Issue>
    <IssueID>4531</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hand Constained UI</Title>
    <CreatedDate>22/05/2019</CreatedDate>
    <ClosedDate>01/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4531</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Many users have requested guidance and examples of UI constrained to the articulated hands. This is an area which could include a lot of caveats and design guidance.

## Describe the solution you'd like

It would be great if the MRTK contained behaviors and examples to aide in development of hand constrained UI.

## Additional context

Many of the requests have come from partners and HoloLens 2 hacks.
</Description>
  </Issue>
  <Issue>
    <IssueID>4530</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>4530</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>The MRTK does not support being unloaded and destroyed</Title>
    <CreatedDate>22/05/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4530</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4530</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Currently, if I use SceneManager.LoadScene to change scenes, the MRTK does not get properly disposed, and many errors surface when entering the new scene. This further means that all the memory allocated by the mrtk is not cleaned up when destroyed, which means that it leaks.

If the new scene contains an MRTKInstance, then errors prevent the scene from running properly.
If it does not and I instantiate an instance, the same errors appear.

If I set the MRTK instance to DontDestroyOnLoad, then objects the MRTK Instance created will have been destroyed, and cause errors. Notably created pointers will have been destroyed, and code using them will throw missing references exceptions.


Without using DontDestroyOnLoad, which I understand to be unsupported, I get the following errors:

`ArgumentNullException: Value cannot be null.

Parameter name: _unity_self
Microsoft.MixedReality.Toolkit.Windows.Input.GestureRecognizerExtensions.UpdateAndResetGestures (UnityEngine.XR.WSA.Input.GestureRecognizer recognizer, UnityEngine.XR.WSA.Input.GestureSettings gestureSettings) `

in GestureRecognizerExtensions.cs on line 11
`bool reset = recognizer.IsCapturingGestures();`

This seems to be due to the fact that the gesture recognizers are static instances, and when they are disposed they are never set to null, in order to be cleaned up by the garbage collector.


Next we have 
`NullReferenceException: Object reference not set to an instance of an object
Microsoft.MixedReality.Toolkit.Input.BaseGenericInputSource..ctor (System.String name, Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] pointers, Microsoft.MixedReality.Toolkit.Input.InputSourceType sourceType` on line 25

It seems the GazeProvider's Gazepointer instance is null, and is never properly recreated.

This error appears twice consecutively. When I did some debugging, it seems this is related to Speech and Dictation providers not being properly cleaned up.


## To reproduce

Steps to reproduce the behavior:

1. Open a scene with an MRTK instance
2. Load a new scene with a different MRTK instance (or even a copy of the same one)
2 ALT. Load a new scene and then at some later time instantiate an MRTK instance
3. Watch the errors poor in, which will mean nothing works.

## Expected behavior

It should be possible to destroy the MRTK instance, when the MRTK instance is destroyed by a scene change, it should be fully cleaned up and not leak anything into the new scene.

It should be possible to change scenes and make use of different MRTK instances in each scene without having to keep a base scene with a persistent MRTK instance, and then carefully manage loading/unloading of scenes.

## Your Setup (please complete the following information)

- Unity Version 2018.3.8f1 &amp;&amp; 2019.1.3f1
- MRTK Version 2 - latest dev branch

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR
</Description>
  </Issue>
  <Issue>
    <IssueID>4528</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>4528</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>PressableButton gets stuck in touched/pressed state if disabled while touched/pressed</Title>
    <CreatedDate>22/05/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4528</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4528</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>DDE Partner</Name>
        <IssueID>4528</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4528</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4528</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>4528</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

In my project, we have buttons that, when pressed, end up causing themselves to be disabled.  For example, we have a TextMeshPro explaining what kind of test the user is about to go through, and there's a "Begin" button under it.  When the user presses "Begin", the parent game object of all that UX gets set inactive to hide it, and the user goes through the testing process.

Later, we reenable the UX to give the user a break and explain what the next test will be.  When the UX is reenabled, the "Begin" button still has stale touchPoints in it from when it got disabled, so it thinks it's still currently touched and pressed.

If the user has kept his/her hand up the whole time and interacts with the button again, the button can recover, since it sees the new touches as updates to the old one, but if the user has lowered and raised his/her hand, MRTK and the button will consider the new touches as though they're coming from a unique controller, and the old touch will be stuck in the button forever, so it will stay in the pressed state forever, and can't trigger its pressed events again.

I worked around the issue by adding the following code to PressableButton, but I didn't test it exhaustively, and I don't know if it's the right fix given the bigger picture of MRTK input:

``

## Expected Behavior

I would expect PressableButton to come back without any touch state when it's reenabled.

## Actual Behavior

PressableButton gets stuck in the touched/pressed state and can't be pressed again.

## Steps to reproduce

1. Make a PressableButton in a scene.
2. Hook it up so that when you press the pressable button, it or its parent game object gets set inactive thereby hiding the button.
3. Press the button with your finger (ie: direct manipulation touch)
4. While the button is hidden, lower your hand.
5. Do something to reenable the button (like make it automatically reenable after a period of time or use a Bluetooth mouse or keyboard or voice command to set the game object active again. [BUG] If you have logging or a debugger attached, you'll see that it's in the touched/pressed state when it comes back, even though nothing is touching it.
6. Now raise your hand and try to touch the button again.  [BUG] It won't be pressable anymore, because it's already stuck in the pressed state.

## Unity Editor Version

Same steps as above, but use the editor simulation hand.  Remember "raising" and "lowering" your editor hand is done by pressing or releasing the right keyboard button (e.g. the Shift button).

## Mixed Reality Toolkit Release Version

v2.0.0-RC1-Refresh
</Description>
  </Issue>
  <Issue>
    <IssueID>4522</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Doc bug: The main page says Windows SDK "Fall Creators Update" and "18362+"</Title>
    <CreatedDate>22/05/2019</CreatedDate>
    <ClosedDate>24/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4522</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
The main page says Windows SDK Fall Creators Update and 18362+. Those don't match - Fall Creators Update is 16299 and 18362 is the May 2019 update. One of those has to change to match the other.

## Existing Doc Link
Main page ([README.MD](
</Description>
  </Issue>
  <Issue>
    <IssueID>4520</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpeechInputHandlerInspector broken</Title>
    <CreatedDate>22/05/2019</CreatedDate>
    <ClosedDate>05/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4520</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4520</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>4520</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>4520</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Speech</Name>
        <IssueID>4520</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The SpeechInputHandlerInspector does not show the keyword responses any longer, making it useless:
![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>4519</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>sostel</FixedById>
        <IssueID>4519</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Eye gaze and far interaction don't work together</Title>
    <CreatedDate>22/05/2019</CreatedDate>
    <ClosedDate>12/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>1 - Planning</Name>
        <IssueID>4519</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4519</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4519</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Eye Tracking</Name>
        <IssueID>4519</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4519</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4519</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bugThe gaze pointer gets disabled when far-interaction hand pointers are created. This works ok for the default head-gaze, but it breaks the concept of combining eye tracking with hand interactions.## To reproduce1. Enable eye tracking simulation  - Enable "Simulate eye position" in the input simulation profile  - Check "Use eye tracking" (formerly "Prefer eye tracking") on the main camera's GazeProvider2. Enter play mode3. Notice the gaze pointer dot in the center of the screen3. Bring up hand by holding spacebar4. Gaze pointer is disabled## Expected behaviorGaze pointer stays active when using eye tracking.</Description>
  </Issue>
  <Issue>
    <IssueID>4518</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>build.ps1 build script not running locally</Title>
    <CreatedDate>22/05/2019</CreatedDate>
    <ClosedDate>25/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4518</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4518</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>4518</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>
## Describe the bug

Running the build script locally generates errors and fails to generate .unitypackage files.

## To reproduce

Steps to reproduce the behavior:

Here are full steps I took to perform the build:
1. Start from clean copy of mrtk_development branch.
2. Load project into Unity
3. Open HandInteractionExamples scene.
3.5 Import TextMeshPro Essentials
3.6 Restart Unity
4. Open File &gt; Build Settings
5. Select:
a. Platform =&gt; PC, Mac, &amp; Linux Standalone
b. Architecture =&gt; x86
c. All other settings default.
6. Hit Build button
7. Check that build completed successfully.
8. Change to:
a. Platform =&gt; UWP
b. Development Build check
c. Script Debugging check
9. Hit Build button
10. Check that build completed successfully
11. Run Assets &gt; Retarget to DLL
12. Check that retarget completed successfully.
13. On command line, run powershell .\build.ps1 -OutputDirectory .\MyDir -Version 0.3.1 -UnityVersion 2018.3.7f1 &gt;buildlog_0.txt

## Expected behavior

build.ps1 to run without errors, and generate .unitypackage and .nupkg files in MyDir.

## Actual behavior

See attached buildlog_0.txt. Errors generated for all .unitypackage output files, and NO .unitypackage files were generated. Also errors for the .nupkg files, but the .nupkg files were generated. Unfortunately, I can't currently consume the .nupkg files to verify that they were generated correctly.

## Your Setup (please complete the following information)

- Unity Version [2018.3.7f1]
- MRTK Version [mrtk_develop branch at commit 9abf0a1eac906c7ffae688ffd5b5d125202f4ca7]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2

## Additional context

See attached logs. buildlog_0.txt is output from build.ps1. 

[buildlog_0.txt](

Editor_bx86_buwp_retarget.log is Unity Editor log from session building the x86 standalone, the UWP solution, and then running the Retarget to DLL.

[Editor_bx86_buwp_retarget.log](
</Description>
  </Issue>
  <Issue>
    <IssueID>4516</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>4516</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>PressableButtonInspector marks the asset as "dirty" on every draw</Title>
    <CreatedDate>22/05/2019</CreatedDate>
    <ClosedDate>07/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4516</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4516</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>4516</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>4516</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The PressableButtonInspector flags the target asset as dirty in every OnInspectorGUI draw call:


## Expected behavior

Inspector should only mark the asset dirty when it actually changes settings. Apart from that it is also recommended by Unity to use Undo.RecordObject instead: 
</Description>
  </Issue>
  <Issue>
    <IssueID>4515</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>4515</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>4515</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Port over Tap-to-Place feature from HoloToolkit</Title>
    <CreatedDate>22/05/2019</CreatedDate>
    <ClosedDate>21/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4515</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>4515</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4515</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>HTK Parity</Name>
        <IssueID>4515</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Interactions</Name>
        <IssueID>4515</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4515</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

HoloToolkit has a Tap-to-Place feature that is missing in MRTK:


## Describe the solution you'd like

Reimplement the Tap-to-Place feature in MRTK.
</Description>
  </Issue>
  <Issue>
    <IssueID>4513</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[MRTK Shell Parity] [Slate] Touch point affordance</Title>
    <CreatedDate>22/05/2019</CreatedDate>
    <ClosedDate>01/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Epic</Name>
        <IssueID>4513</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4513</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4513</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Part of #4200 UX Controls Parity with HoloLens 2 Shell</Description>
  </Issue>
  <Issue>
    <IssueID>4512</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>4512</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>How to set Disable State of PressableButtonPlated at runtime</Title>
    <CreatedDate>22/05/2019</CreatedDate>
    <ClosedDate>08/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>4512</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4512</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4512</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>4512</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Disable state of the button are not working. When PressableButtonPlated interactable.isenabled = false.  After applying this, when gaze/finger over the button front plate highlight get's active

## Expected behavior

Button shouldn't get highlight when it in disabled state. 

## Your Setup 

- Unity Version : Unity 2018.4 / 2019.1
- MRTK Version : v2

## Target Platform 

- HoloLens 2

## Additional context

Need additional documentation for adding different types of profiles to the PressableButtonPlated.

Thanks!
</Description>
  </Issue>
  <Issue>
    <IssueID>4511</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MenelvagorMilsom</FixedById>
        <IssueID>4511</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[Cursor] Cursor does not represent proper input state</Title>
    <CreatedDate>22/05/2019</CreatedDate>
    <ClosedDate>13/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>1 - Planning</Name>
        <IssueID>4511</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4511</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4511</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4511</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4511</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The cursor does not show proper input state visual on both HoloLens 1 and 2.
It seems like some of the updates in the input do not trigger a proper state change. (DefaultCursor prefab has not changed from HoloToolkit)

## Describe the bug
**HoloLens 1 (GGV)**
- Default: Dot cursor is displayed (OK)
- On hand detected (ready gesture): the cursor is updated to ring cursor (OK)
- On pinch: the cursor is updated to bigger dot (OK)
- On pinch release: the cursor is updated to ring (OK)
- **On source lost (move the hand out of GFOV): the cursor stays as ring cursor (BUG: Cursor should return to Dot)**


**HoloLens 2 (At the end of the Hand Ray)**
- Default hand ray: Dot cursor is displayed (OK)
- On pinch: the cursor is updated to dot (OK)
- **On pinch release: the cursor is updated to ring but a few seconds later, it changes to dot (BUG: Cursor should stay as a ring)**

## Expected behavior
HoloLens 1
![2019-05-21 17_34_44-YoonPark_UnityUniteBerlin2018_MixedRealityToolkit_20180621 pptx - PowerPoint](

HoloLens 2
Hand ray's default cursor should be a ring. On pinch = big dot.

## Blocking
Without the fix, it would be difficult to properly test out implementations for these items
#4418 and #4417 

## To reproduce
1. Clone mrtk_release branch (or download and import RC1 Refresh)
2. Build and deploy HandInteractionExample scene

## Target Platform (please complete the following information)
- HoloLens


</Description>
  </Issue>
  <Issue>
    <IssueID>4510</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4510</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[Cursor] No cursor displayed in HoloLens 1 (mrtk_development)</Title>
    <CreatedDate>22/05/2019</CreatedDate>
    <ClosedDate>24/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4510</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4510</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4510</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Now</Name>
        <IssueID>4510</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
No cursor displayed in HoloLens 1. (for all gesture states idle, ready, air-tap)
The cursor only briefly shows up for the speech command "Select".

## To reproduce
1. Clone mrtk_development branch
2. Build and deploy HandInteractionExample scene

## Expected behavior
Proper cursor display

- Unity Version 2018.3.9f1
- MRTK Version mrtk_development branch (as of 5/21/2019)

## Target Platform (please complete the following information)
- HoloLens

## Additional context
This could be related to #4720
</Description>
  </Issue>
  <Issue>
    <IssueID>4509</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4509</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>HoloToolkit's WorldAnchorManager does not exist in MRTK and the Porting Guide doesn't offer any guidance for replacing it</Title>
    <CreatedDate>22/05/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>1 - Planning</Name>
        <IssueID>4509</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4509</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4509</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4509</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Package Management</Name>
        <IssueID>4509</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4509</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4509</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

We are currently using the WorldAnchorManager provided in HoloToolkit, and it's not clear how to replace it as we transition to MRTK.

## Expected behavior

Either MRTK contains a version of WorldAnchorManager, or the Porting Guide gives an explanation of how it can be replaced.

## Target Platform

HoloLens
HoloLens 2
WMR immersive

## Additional context

Admittedly WorldAnchorManager does not provide a lot beyond Unity's WorldAnchor/AnchorStore, but I think it does add a bit of convenience - and I think we'd end up duplicating/re-implementing some of the same code otherwise so it's nice to have it in shared code.</Description>
  </Issue>
  <Issue>
    <IssueID>4508</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4508</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>HoloToolkit's StabilizationPlaneModifier does not exist in MRTK and the Porting Guide doesn't offer any guidance for replacing it</Title>
    <CreatedDate>21/05/2019</CreatedDate>
    <ClosedDate>03/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4508</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4508</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4508</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>HTK Parity</Name>
        <IssueID>4508</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4508</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

We are currently using the StabilizationPlaneModifier provided in HoloToolkit, and it's not clear how to replace it as we transition to MRTK.

## Expected behavior

Either MRTK contains a version of StabilizationPlaneModifier, or the [Porting Guide]( gives an explanation of how it can be replaced.

## Target Platform

- HoloLens
- HoloLens 2
- WMR immersive
</Description>
  </Issue>
  <Issue>
    <IssueID>4499</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>WorldAnchor doesn't change GameObject location after load</Title>
    <CreatedDate>21/05/2019</CreatedDate>
    <ClosedDate>12/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4499</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4499</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Description

The WorldAnchorStore doesn't seem to do anything. The related objects are not moving after loading the anchor from the store.

## To reproduce

Steps to reproduce the behavior:

1. Setup the environment (
2. Load HandInteractionExamples
3. Create new GameObject and add attached script (WorldAnchorsSetup) to it
4. Drag&amp;drop Tree from the scene to WorldAnchorsSetup.theGameObjectsIWantAnchored
5. Setup events to Pressable Button 1, 2 (and optionally 3) to trigger WorldAnchorPersist: SaveAnchors, LoadAnchors (and optionally ClearAnchors)
6. Deploy app to HoloLens 1
7. Run the app and move the tree
8. Save the anchors (Pressable Button 1)
9. Restart the app
10. Load the anchors (Pressable Button 2)
11. Tree is still at it's starting position

## Expected behavior

I expect that after load the Tree should be relocated to the position that was set at previous instance of the app.

## Setup

- Unity Version: 2018.4.0f1
- MRTK Version 2.0.0-RC1

## Target Platform

- HoloLens

[WorldAnchorsSetup.zip](
</Description>
  </Issue>
  <Issue>
    <IssueID>4497</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>"Dirty flag" in Scene is not set correctly when modifying MixedRealityToolkit configuration profiles</Title>
    <CreatedDate>21/05/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4497</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4497</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>4497</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When opening an example scene from MRTK v2.0.0 in Unity 2018.3.14f1 and changing the configuration of the MixedRealityToolkit, the scene is not marked as dirty from the custom Inspector UI ( 
Without further changes in the scene, Unity does not realize the changes in the scene, and therefore does not ask the user to save the changes. If the user reloads the scene, the changes have to be done again.

## To reproduce

Steps to reproduce the behavior:

1. Open an MRTK v2 Eye Tracking Demo scene in Unity 2018.3 (Reproducible with Assets/MixedRealityToolkit.Examples/Demos/EyeTracking/Scenes/mrtk_eyes_05_Visualizer.unity)
2. Configure a Mixed Reality Toolkit Configuration Profile 
3. Select a configuration profile
4. See the fact that Unity does not set a "*" flag indicating that changes have been made.
5. Switching to a different scene will not prompt the user to save changes.
6. Only workaround is changing something else in the scene unrelated to the profile to set the dirty flag.

## Expected behavior

The dirty flag should be set correctly to indicate a change has been made after configuring the profile.

## Your Setup

- Unity Version 2018.3.11f1
- MRTK Version v2.0

## Target Platform 

- HoloLens 2</Description>
  </Issue>
  <Issue>
    <IssueID>4496</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>sostel</FixedById>
        <IssueID>4496</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK Demo Scenes not preconfigured with Profiles</Title>
    <CreatedDate>21/05/2019</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4496</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>By Design</Name>
        <IssueID>4496</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Eye Tracking</Name>
        <IssueID>4496</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Opening any MRTK v2 Eye Tracking example demo scene, (reproducible with the Assets/MixedRealityToolkitExamples/Demos/EyeTracking/Scenes/mrtk_eyes_02_TargetSelection.unity, or MRTK_eyes_03_Navigation.unity, or any other demo scene) opens a dialog that says "No Active Toolkit Found." You must select the correct Configuration Profile for the Eye Tracking scene, in this case, "EyeTrackingDemoConfigurationProfile," if it is in the list. If it is not in the list, you can clone a preconfigured Default configuration, but with this configuration, the scene will not build to a working demo, because the configuration does not fulfill all requirements. 

## To reproduce

Steps to reproduce the behavior:

1. With Unity Hub, create a New Project, name it and give it a location, select Unity 2018.3.14f1
2. Import the MRTK v2 Foundation as a custom package (v2.0.0-RC1-Refresh) 
3. Import MRTK v3 Example as a custom package (v2.0.0-RC1-Refresh)
4. Navigate to Assets/MixedRealityToolkitExamples/Demos/EyeTracking/Scenes and open "mrtk_eyes_02_TargetSelection.unity"
5. Press the import button on the dialog about Text Mesh Pro
6. See error dialog about "No Active Toolkit Found" "There is no active Mixed Reality Toolkit in your scene. Would you like to create one now?" 
7. You must circle-select a Configuration Profile that is the correct profile for your scene, in this case "EyeTrackingDemoConfigurationProfile," if it is in the list. 
8. Alternatively: If the MRTK v2 packages are imported in the wrong order (Examples before Foundation), the profiles will not show up in this list. Then the developer must clone and configure a new Input System Settings / Input System Profile.


## Expected behavior

Mixed Reality Toolkit should already be in the Eye Tracking demo scenes with "EyeTrackingDemoConfigurationProfile" already configured.

## Screenshots

![image](

## Your Setup

- Unity Version: 2018.3.14f1
- MRTK Version: v2.0.0

## Target Platform

- HoloLens 2</Description>
  </Issue>
  <Issue>
    <IssueID>4494</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>can not see any thing whitout cursor.</Title>
    <CreatedDate>21/05/2019</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4494</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4494</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>4494</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
It's ok when unity remote connected hololens, but i can not see any thing after deploy to hololen
 

## To reproduce

Steps to reproduce the behavior:

1.Build scene InputManagerTest by unity Build;
2.visual studio open genereated .sln file;
3.deploy to hololens by USB;
4.open app in hololens but I can not see anything whitout cursor;

 

## Screenshots
![image](

![image](

![image](

 
![image](

![image](


## Your Setup (please complete the following information)

-Unity Version [e.g. 2018.3.12f1 ,2018.3.09f1 , 2018.4 ]
-HoloToolkit 2017.4.3.0 - Refresh

## Target Platform (please complete the following information)

- HoloLens
 


</Description>
  </Issue>
  <Issue>
    <IssueID>4493</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>can not see any thing whitout cursor</Title>
    <CreatedDate>21/05/2019</CreatedDate>
    <ClosedDate>21/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4493</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
It's ok when unity remote connected hololens, but i can not see any thing after deploy to hololen 
 

## To reproduce

Steps to reproduce the behavior:

1. Build scene InputManagerTest by SDK "Build all";
2. install .Appx and Dependencies by ip ;
3. run app in hololens;
4. can not  See anything whitout cursor;


## Screenshots

 
![image](


## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.12f1 ,2018.3.09f1 , 2018.4 ]
- HoloToolkit 2017.4.3.0 - Refresh

## Target Platform (please complete the following information)

- HoloLens 1

</Description>
  </Issue>
  <Issue>
    <IssueID>4492</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4492</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Interactable not receiving input from Grip Press or Menu Button on an MR Controller</Title>
    <CreatedDate>21/05/2019</CreatedDate>
    <ClosedDate>10/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4492</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4492</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Interactions</Name>
        <IssueID>4492</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4492</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>4492</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4492</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>When testing a controller grip button or the menu button, it does not trigger any state or events on the Interactable. Sometimes I use an Interactable with IsGlobal set to true, then set the Mixed Reality Input Action to Menu, so the menu button on the controller will trigger an action.

1. Place an Interactable on a gameObject.
2. Add a collider
3. Set the Input Action drop down to Menu or Grip Press.
4. Test in Unity with a MR Headset
5. Press the menu button

![Interactable Inspector Menu action](

![Interactable Inspector Grip Press action](

## Intended Behavior

MR Controller buttons other than the trigger (select) can send input into and Interactable.

## Your Setup (please complete the following information)

- Unity Version [2018.3.9f1]
- MRTK Version [v2.0]

## Target Platform (please complete the following information)
- WMR immersive

## Additional context

@julenka did a test with the Xbox Controller, it worked mapping buttons from the Xbox controller to an custom action, there may be an issue with existing actions?

</Description>
  </Issue>
  <Issue>
    <IssueID>4491</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>andreiborodin</FixedById>
        <IssueID>4491</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4491</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[nuget] configuration profile UI missing default types when consuming MRTK as nuget package</Title>
    <CreatedDate>21/05/2019</CreatedDate>
    <ClosedDate>15/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4491</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4491</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4491</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Package Management</Name>
        <IssueID>4491</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>4491</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4491</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When consuming MRTK as a nuget package, the configuration profile inspector doesn't seem to be able to locate the default MRTK system types (e.g. MixedRealityCameraSystem) and so the dropdowns are not populated.

## To reproduce

Steps to reproduce the behavior:

1. Create a new project, and add MRTK as a nuget package.
2. From the MRTK menu -&gt; Add to Scene and Configure
3. Clone the MRTKConfigurationProfile
4. Select the Camera configuration and clone it
5. Note that Camera System Type is "MixedRealityCameraSystem {Missing}"
6. Click "Try Repair" -&gt; error "No types with the name 'MixedRealityCameraSystem' were found"
7. Try to select a type with the dropdown -&gt; "None" is the only option

This also happens with input providers in the input system configuration (and probably others, but those are all I've tried).

## Expected behavior

Default/built-in MRTK system types are selectable through the configuration profile inspector.

## Screenshots
![image](
![image](
![image](


## Your Setup (please complete the following information)

- Unity 2018.4.0f1
- Microsoft.MixedReality.Toolkit/2.0.0-20190517.1

## Target Platform (please complete the following information)

- Unity editor
</Description>
  </Issue>
  <Issue>
    <IssueID>4489</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cloning items and saving prefabs periodically causes file lock errors to pop up in Unity. </Title>
    <CreatedDate>20/05/2019</CreatedDate>
    <ClosedDate>20/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4489</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4489</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4489</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Duplicate</Name>
        <IssueID>4489</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Ported to github, reference 21413012

When cloning items, or saving prefabs, periodically an error stating "Saving from &lt;TempPath&gt;\RandomUnrelated.pfb to &lt;LibraryPath&gt;\RandomUnrelated.pfb failed". This is more easily reproable when cloning profiles based on the default profile (though I also suspect that this is enabled even further by having a project where a lot of editor script modifying files are running). It seems to be related to the nature of the editor scripts running in background that modify prefabs periodically and saves them.

MRTK Nuget version:
2.0.0-190425005

Repro Rate:
30%-50%

Repro Steps:
Open a larger project (preferably not a sample project or an empty one) and bring MRTK in; and add it to the main scene. This repros quite a bit in the RA project, so using that might be a good idea when trying to repro.
Use the default settings at first, and then try to clone the main MRTK profile to generate a custom one.
Watch the gears spin as it tries to do so when contested for editor resources. Eventually, an error similar to the one below might appear in relation to a prefab or dll:
![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>4488</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>andreiborodin</FixedById>
        <IssueID>4488</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>When upgrading the MRTK nuget package or local version of the MRTK souce, previously defined custom profiles are no longer identified or visible for selection</Title>
    <CreatedDate>20/05/2019</CreatedDate>
    <ClosedDate>04/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4488</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4488</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4488</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Package Management</Name>
        <IssueID>4488</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>4488</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Ported to github, reference 21424435

Right now, if you create custom profiles in MRTK  and bring in a new version of the nuget package, it no longer recognizes previously-defined profiles.

MRTK Nuget Versions (2.0.0-190425005/2.0.0-190425007)

Repro Rate (60-80%)

Repro Steps:
Create a test project and pull in the MRTK nuget package (not through the Unity Nuget tool).
Then create several custom profiles based on the default profiles. Afterwards, modify several properties within them.
Then, close Unity and update the nuget package to a newer version and bring it into the project. 
Open the project again, and try to find the custom profiles that were previously defined.
Observations:
 
-It seems like the BaseMixedRealityInspector isn't seeing them when the GetProfileTypesForService function is called. 
-I looked at a diff between my old profile and the new one I was forced to generate (an hour later), and it seems like they're different. When I then create a new new profile (new profile #2}, the GUIDs are the same; making me assume that the GUID lookup might be causing this behavior to occur. </Description>
  </Issue>
  <Issue>
    <IssueID>4487</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Apps that use WindowsSpeechInputProvider can't start in noisy environments</Title>
    <CreatedDate>20/05/2019</CreatedDate>
    <ClosedDate>20/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4487</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4487</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Duplicate</Name>
        <IssueID>4487</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Ported to github, reference 21521102

This is unconfirmed, but seems to be highly likely based on other recent observations, so we wanted to get it on the radar. The problem is that Windows.Media.SpeechRecognition.SpeechRecognizer can block for up to 20 seconds while processing audio input, and this can happen during instantiation. SpeechRecognizer is wrapped by Unity's KeywordRecognizer, which is initialized on the Unity main thread, and in turn instantiates SpeechRecognizer on the Unity main thread. If you launch an app that uses Unity's KeywordRecognizer in a noisy environment, the app "hangs" on SpeechRecognizer, and PLM will kill the app as it appears to be unresponsive.

Ideally, this would be fixed in SpeechRecognizer, but this work isn't currently planned.

The next best place to have this fixed is in Unity's wrapper (KeywordRecognizer), but as far as I can tell Unity does not intend to implement a workaround for the underlying Windows API bug. We could try to push on this more, but I don't think it is currently being considered.

In the meantime, it would probably make sense to work around the problem in MRTK's WindowsSpeechInputProvider. The recommendation from Unity is to asynchronously instantiate the SpeechRecognizer explicitly on a background thread, and delay instantiation of KeywordRecognizer until instantiation is complete (see ** Presumably this works because there is some global/singleton underlying state for SpeechRecognizer that all instances use, not sure.

I think in MRTK this would mean speech input might not work in a noisy environment until 20+ seconds after launching the app, but this might be the best we can do if the underlying Windows bug is not addressed.</Description>
  </Issue>
  <Issue>
    <IssueID>4486</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>andreiborodin</FixedById>
        <IssueID>4486</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK NuGet package should provide a simple debugging solution</Title>
    <CreatedDate>20/05/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4486</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4486</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4486</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Package Management</Name>
        <IssueID>4486</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4486</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Now</Name>
        <IssueID>4486</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>(ported to github, reference 21556516)

If you consume MRTK via NuGet and need to debug, there doesn't seem to be a straight forward way to do this. We need an easy way to access both the debug symbols and the source. One option would be to just embed the symbols and source in the package. It might also be possible to leverage source linking.

Even if we don't use source linking, we should ensure the repo url and commit id are included in the package metadata. This last part can easily be achieved by putting tokens in the nuspec files for repo url and commit id, then passing those in as parameters in the build definition.

@ryantrem can provide more context</Description>
  </Issue>
  <Issue>
    <IssueID>4485</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4485</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Can't build UWP APPX from MRTK Build Window in Unity</Title>
    <CreatedDate>20/05/2019</CreatedDate>
    <ClosedDate>31/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4485</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4485</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>4485</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Can't build UWP APPX from MRTK Build Window in Unity

## To reproduce

Steps to reproduce the behavior:

1. Create a new project and import MRTK; go to MRTK Build Window
2. Click on Unity Build Options and build
3. When build succeeds click on 'Build Appx' in the dialog
4. See error: The specified solution configuration "master|" is invalid. Please specify a valid solution configuration using the Configuration and Platform properties
5. Change configuration to Release
6. See error MSB4019: The imported project "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\Microsoft\WindowsXaml\v15.0\Microsoft.Windows.UI.Xaml.Cpp.targets" was not found. Confirm that the path in the &lt;Import&gt; declaration is correct, and that the file exists on disk.

## Expected behavior

Expect the project to build and manage own dependencies or be clear if a dependency is missing
Expect MRTK to not contain build configurations that are not supported

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2018.3.11f1
- MRTK Version v2.0-RC1-Refresh

## Target Platform (please complete the following information)

- UWP/APPX
</Description>
  </Issue>
  <Issue>
    <IssueID>4483</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[MRTK Shell Parity] [Cursor] Hand ray's default cursor should be a ring</Title>
    <CreatedDate>20/05/2019</CreatedDate>
    <ClosedDate>12/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4483</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4483</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4483</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4483</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Hand ray's default cursor should be a ring. Currently, a dot is shown as default. On tap(click), the cursor changes to the ring but changes back to the dot after a few seconds. 

## Expected behavior
Hand ray's default cursor should show a ring cursor. It should display a dot cursor on tap/grab.
* Refer to the latest build on the device.

Current MRTK cursor behavior:
![MRTK_Cursor](
</Description>
  </Issue>
  <Issue>
    <IssueID>4481</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>CDiaz-MS</FixedById>
        <IssueID>4481</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Interactables pointer clearing</Title>
    <CreatedDate>20/05/2019</CreatedDate>
    <ClosedDate>26/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4481</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4481</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Interactions</Name>
        <IssueID>4481</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>4481</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

If the gameObject that the Interactable script is put on is set inactive while a pointer is still focused or pressed on the object, the script does not clean up the pointer from its list of pointers, so it will always think the Interactable has focus or is pressed since the pointer will always be stuck in the list.

## To reproduce

Steps to reproduce the behavior:

1. Hover a pointer on the Interactable (gaze, pointer, or far beam)
2. Deactivate the gameObject for the Interactable
3. Move pointer away and reactivate the gameObject for the Interactable
4. Notice that its pointer list has a pointer stuck in the list that can't be removed and that it is stuck in the Focused state.

## Expected behavior

OnDisable: should clear out any pointers on the Interactable.

## Screenshots

## Your Setup (please complete the following information)

- Unity Version: 2018.3.7f1
- MRTK Version: R9

## Target Platform (please complete the following information)

- HoloLens 2

## Additional context

Not sure if this bug is still present, porting over my bug report from VSO
</Description>
  </Issue>
  <Issue>
    <IssueID>4479</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ScriptableObject serialization error reported in player</Title>
    <CreatedDate>20/05/2019</CreatedDate>
    <ClosedDate>21/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4479</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4479</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Duplicate</Name>
        <IssueID>4479</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Dev console in player reports ScriptableObject serialization error.

## To reproduce

- Build MRTK project with the Development Build option checked.
- Run built app.
- Observe error in dev console.

## Screenshots

![SerializationError](

This looks like an incorrect diagnosis since MixedRealityInputSimulationProfile has no `#if UNITY_EDITOR` blocks.

## Your Setup (please complete the following information)

- Unity 2019.1.1.
- MRTK Version 2.0 mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>4477</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>luis-valverde-ms</FixedById>
        <IssueID>4477</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Handler for gesture events with data receives events with no data</Title>
    <CreatedDate>20/05/2019</CreatedDate>
    <ClosedDate>07/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>1 - Planning</Name>
        <IssueID>4477</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4477</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4477</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>4477</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

`IMixedRealityGestureHandler&lt;T&gt;` derives from `IMixedRealityGestureHandler` causing it to receive events (calls to the base interface methods) for gesture events with no data. We should do the same we do for the `IMixedRealityInputHandler` interface and keep the two versions separate.

## To reproduce

Steps to reproduce the behavior:

1. Add a cube with a `GestureTester` script to an empty scene setup for MRTK
2. Set Hand Simulation Mode to 'Gestures' in the Input Simulation Settings profile 
3. In play mode, focus the cube and left click while pressing space. Observe how `OnGestureStarted` in `GestureTester` is called with a gesture event with no data even though it is a `IMixedRealityGestureHandler&lt;Vector3&gt;`

## Expected behavior

Gesture handlers for specific data types should only receive events of those types. </Description>
  </Issue>
  <Issue>
    <IssueID>4472</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>4472</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[MRTK Shell Parity] [AppBar] Add carry mode button</Title>
    <CreatedDate>19/05/2019</CreatedDate>
    <ClosedDate>23/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4472</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Epic</Name>
        <IssueID>4472</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4472</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4472</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4472</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Part of #4200 UX Controls Parity with HoloLens 2 Shell 
</Description>
  </Issue>
  <Issue>
    <IssueID>4471</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>4471</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>MenelvagorMilsom</FixedById>
        <IssueID>4471</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[MRTK Shell Parity] [Cursor] Replace current MRTK cursor with shell-parity cursor</Title>
    <CreatedDate>19/05/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4471</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4471</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Epic</Name>
        <IssueID>4471</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4471</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4471</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Part of #4200 UX Controls Parity with HoloLens 2 Shell
Logic or AnimationController has to be updated to assign new cursor assets.</Description>
  </Issue>
  <Issue>
    <IssueID>4470</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4470</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Vive Pro Defaults OpenVr Generic Device causing one hand operation errors due to missing Spatial Grip Input Action</Title>
    <CreatedDate>18/05/2019</CreatedDate>
    <ClosedDate>01/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4470</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4470</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
When using the default MRTK profile provided with Vive Pro hardware you cannot use one hand interactions with the controllers.

## To reproduce
**This happens when using Vive Pro hardware**
Steps to reproduce the behavior:
1.) SteamVR added to the Project
2.) Make sure you have all of the other XR settings on as suggested by the generic toolkit setup.
3.) Run the HandInteractionExample scene and try to pick up an item with one controller
4.) Error 'InvalidOperationException': Sequence contains no matching element' --&gt; ManipulationHandler.cs the line in the code that generates the error is 
`return controller.Interactions?.First(x =&gt; x.InputType == DeviceInputType.SpatialGrip);`


## Expected behavior

I would expect the one hand interaction to work with the trigger as I am using the default provided MRTK profiles.

## Screenshots
Slack thread image of the error --&gt; 


## Your Setup (please complete the following information)

- Unity Version 2019.1.3f1
- MRTK Version 2.0.0-RC1

## Target Platform (please complete the following information)

-Windows Standard Build
- OpenVR
-Vive Pro Hardware
## Additional context
**Solution**
One solution, update the Generic Open VR Left/Right Hand Controller Input Action Assignment to include _Spatial Grip_
Slack thread solution--&gt; 

</Description>
  </Issue>
  <Issue>
    <IssueID>4456</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add an example of how to instantiate Interactable at runtime</Title>
    <CreatedDate>17/05/2019</CreatedDate>
    <ClosedDate>21/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4456</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4456</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>4456</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Filed in response to #4433.

In that PR, I updated the change to no longer use Resources folder. I think it would be useful in future to provide an example of how to instantiate Interactable at runtime, since even though the null ref is fixed, the resulting interactable is not very useful.

The task is to create an example of the following:

- Create a game object at runtime
- Add Interactable component to it
- Configure the component so it behaves like default interactable, as if it were added in the editor.


Here is some example starter code:

``
</Description>
  </Issue>
  <Issue>
    <IssueID>4454</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Feature Request: Assign services an auto-incremented ID so they're easier to track</Title>
    <CreatedDate>17/05/2019</CreatedDate>
    <ClosedDate>10/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4454</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4454</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>4454</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Services</Name>
        <IssueID>4454</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

It can be hard to tell which instance of a service you're dealing with when debugging.

## Describe the solution you'd like

An auto-incremented ID would make it easier to verify / track the identity of a service instance.

Since this ID would only be used for diagnostics we could add the property to `BaseCoreSystem` or even `BaseService` instead of `IMixedRealityService` to avoid a breaking change, and assignment could happen inside the constructor.</Description>
  </Issue>
  <Issue>
    <IssueID>4453</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>4453</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[Proposal] Reduce the number of core assemblies</Title>
    <CreatedDate>17/05/2019</CreatedDate>
    <ClosedDate>25/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>1 - Planning</Name>
        <IssueID>4453</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>DDE Partner</Name>
        <IssueID>4453</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>4453</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem
We have received customer feedback that the number of MRTK core assemblies is overwhelming (in VS, etc). They have requested that we combine them into a single core assembly and a single core-editor assembly.

This _may_ also have the desired effect of reducing the number of instances of Unity reporting a failed dll copy on project (re)load.

## Describe the solution you'd like

Ultimate goal is to reduce the core assembies to the following:
- Microsoft.MixedReality.Toolkit
- Microsoft.MixedReality.Toolkit.Editor

This would eliminate:
- Microsoft.MixedReality.Toolkit.Core.Build
- Microsoft.MixedReality.Toolkit.Core.Definitions.Utilities.Editor
- Microsoft.MixedReality.Toolkit.Core.Extensions.EditorClassExtensions
- Microsoft.MixedReality.Toolkit.Core.Inspectors.ServiceInspectors
- Microsoft.MixedReality.Toolkit.Core.Inspectors
- Microsoft.MixedReality.Toolkit.Core.Utilities.Async
- Microsoft.MixedReality.Toolkit.Core.Utilities.Editor 
- Microsoft.MixedReality.Toolkit.Player
- Microsoft.MixedReality.Toolkit.Utilities.Gltf
- Microsoft.MixedReality.Toolkit.Utilities.Gltf.Importers


</Description>
  </Issue>
  <Issue>
    <IssueID>4452</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>4452</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Configuration profile inspector doesn't constrain profile types for camera and diagnostics systems.</Title>
    <CreatedDate>17/05/2019</CreatedDate>
    <ClosedDate>25/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4452</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4452</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>4452</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When selecting profiles for the camera system and diagnostics system the object picker doesn't constrain available profile types.

## To reproduce

- Select a MixedRealityToolkit instance
- Try to select a CameraSystem profile
- Observe that all scriptable objects are available

## Expected behavior

Profiles should be constrained to service type.

## Your Setup

- MRTK Version 2.0 mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>4450</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>4450</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK doesn't deterministically select a MainCamera / EventSystem.</Title>
    <CreatedDate>17/05/2019</CreatedDate>
    <ClosedDate>04/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4450</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4450</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Multi-Scene</Name>
        <IssueID>4450</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>4450</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When multiple scenes with MixedRealityToolkit instances and MainCameras are loaded, warnings  and errors are issued about event systems. At runtime, selection of a MainCamera is non-deterministic.

## To reproduce

- Create and save two scenes containing a MixedRealityToolkit instance, MixedRealityPlayspace and MainCamera.
- Open both scenes in editor simultaneously.
- Switch between sections in MixedRealityToolkit inspector or toggle services.
- Observe warnings / errors about multiple EventSystems.

`Too many event systems in the scene. The Teleport System requires only one.`

`Found an existing event system in your scene. The Mixed Reality Toolkit requires only one, and must be found on the main camera.`

`For Mixed Reality Toolkit input to work properly, please remove your other input module(s) and add a MixedRealityInputModule to your main camera.`

## Expected behavior

The toolkit should deterministically select a MainCamera and an accompanying EventSystem without displaying errors. Devs should not be expected to delete anything.

- Unity Version 2019.1.1
- MRTK Version 2.0 mrtk_development branch</Description>
  </Issue>
  <Issue>
    <IssueID>4449</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>4449</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Clean up MRTK inspector dependencies</Title>
    <CreatedDate>17/05/2019</CreatedDate>
    <ClosedDate>25/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4449</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4449</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>4449</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Prior to merging the new UI, it was possible to edit MRTK profiles without an MRTK instance in the scene.

This is no longer the case since  was merged yesterday
![image](


## To reproduce

Try to edit and MRTK profile without an active instance in the scene.

## Expected behavior

It should be possible to edit MRTK profiles without having an instance in the scene.


## Your Setup (please complete the following information)

- Unity Version 2018.3f1
- MRTK Version v2 latest dev

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

</Description>
  </Issue>
  <Issue>
    <IssueID>4448</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>lukastoenneMS</FixedById>
        <IssueID>4448</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Articulated hand pose loading is broken is broken in editor if MRTK not in Assets root</Title>
    <CreatedDate>17/05/2019</CreatedDate>
    <ClosedDate>21/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4448</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4448</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4448</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input Simulation</Name>
        <IssueID>4448</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4448</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

ArticulatedHandPose.cs is expects the hand poses to be stored in "Assets/MixedRealityToolkit.Services/InputSimulation/ArticulatedHandPoses/"

That said, I stored the MRTK in a sub folder so as to not clutter my project with all the MRTK folders at the root. Because of this, the articulated hands fail to load.

Moreover, `private static ArticulatedHandPose LoadGesturePose(GestureId gesture, string filePath)` does not consider the possibility that the file might not exist, and so an error is thrown while that could be avoided by checking if the file it's trying to open exists in the specified path.


## To reproduce

1. Move the MRTK root folder to a sub folder
2. Try and load a scene where the articulated hand joints should appear, like the hand interaction scene.
3. Articulated hand pose loading will throw an error, and hand joints will not appear in the editor.

## Expected behavior

Articulated hand poses should not have a hardcoded path to loading the json with the hand data.

Rather, StreamingAssets should be used, as it allows you to specify a path relative to the it, without preloading anything into memory. StreamingAssets can be arbitrarily nested in hierarchies, and you can have more than one such folder. It is the preferred method for dynamically loading in non-unity assets at runtime.

Here is the documentation on streaming assets


## Your Setup (please complete the following information)

- Unity Version 2018.3.81
- MRTK Version v2.0 latest dev as of May 17 2019

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

</Description>
  </Issue>
  <Issue>
    <IssueID>4447</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>4447</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Tooltips rendering grey plane in scene</Title>
    <CreatedDate>17/05/2019</CreatedDate>
    <ClosedDate>02/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4447</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4447</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4447</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4447</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When using any of the ToolTip prefabs, a grey plane is displayed in the scene rendering the tooltips useless. It works fine when playing the scene in the editor, but broken when testing on device. This happens when using tooltips in a custom scene as well as when testing the TooltipExamples demo scene in the MRTK examples.

## To reproduce

Steps to reproduce the behavior:

1. Load TooltipExamples demo scene found here: MixedRealityToolkit.Examples/Demos/UX/Tooltips/Scenes/TooltipExamples.unity
2. Build
3. Deploy to device and start app
4. See grey plane

## Expected behavior

Regular tooltip functionality without the grey plane

## Screenshots

![20190517_004015_HoloLens](

![20190517_003950_HoloLens](

![20190517_003929_HoloLens](

## Your Setup (please complete the following information)

- Unity Version 2018.4.0f1, 2018.3.14f1
- MRTK Version v2.0.0-RC1-Refresh

## Target Platform (please complete the following information)

- HoloLens

## Additional context

 
</Description>
  </Issue>
  <Issue>
    <IssueID>4445</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Runtime error when build mixed reality project with unity and visual studio (LOG FILE ATTACHED )</Title>
    <CreatedDate>17/05/2019</CreatedDate>
    <ClosedDate>21/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4445</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Duplicate</Name>
        <IssueID>4445</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>4445</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Overview

When we have built the solution, a runtime error appears in one eye on a corner. Is imposible to read and we are tested in debug, release, master... and the error persist. In editor mode on Unity, the error dont appear. The experience is the same but is a little annoying. Any solution ?

Expected Behavior

No runtime error

Actual Behavior

Runtime error

Steps to reproduce

Create project on Unity 2019
Build for Windows Universal Platform on VR
Open the solution in Visual Studio 2017
Compile and play or compile and make a appx

Unity Editor Version

2019.1.0f2

Mixed Reality Toolkit Release Version

v2.0.0-RC1

########### LOG FILE ###############

``
########### LOG FILE ###############

Same with master version... other way would be disable runtime errors in headset screen... any way to do this ?

thanks !


</Description>
  </Issue>
  <Issue>
    <IssueID>4444</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>gejohnst</FixedById>
        <IssueID>4444</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Solver documentation is sparse</Title>
    <CreatedDate>17/05/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4444</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4444</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4444</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>4444</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>4444</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
Solver model is too convoluted for ease of understanding, and the documentation doesn't help.

## Feature Area
It is hard to leverage the Solver script, and its implementations.
1. Some of the solvers exhibit too many settings. The tooltips on those are not very helpful and can be more descriptive.
2. It would be great if the Solver implementations that come with MRTK have separate documentation pages. The number of settings exposed in them can be a little overwhelming and not all settings inherited from SolverBase.cs are applicable to all types it seems. 

A little more focus on usage of the scripts rather than intent would be helpful. 

## Existing Doc Link


## Additional context
Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>4440</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>andreiborodin</FixedById>
        <IssueID>4440</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK assemblies are built against the "split" Unity assemblies</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4440</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4440</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4440</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Package Management</Name>
        <IssueID>4440</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4440</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Now</Name>
        <IssueID>4440</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Ported to Github, reference 21543183

MRTK assemblies are built against the split Unity assemblies, such as UnityEngine.CoreModule.dll. I believe these are only supposed to be used at runtime so that Unity can load smaller assemblies. At compile time, it seems that the intention is that you reference the top level UnityEngine.dll. The following pages suggest this is the case:




This is what we did in MRW, but what that means is that our code thinks things like MonoBehaviour is the type defined in UnityEngine.dll, while MRTK code thinks it is defined in UnityEngine.CoreModule.dll, which at compile time are effectively two different types, which makes MRTK code incompatible with MRW code when compiling from the context of MSBuild.

I believe the right change here is to ensure that MRTK is built against UnityEngine.dll.</Description>
  </Issue>
  <Issue>
    <IssueID>4436</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>4436</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>MenelvagorMilsom</FixedById>
        <IssueID>4436</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add min/max scaling value field to the ManipulationHandler</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>29/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4436</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>4436</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>DDE Partner</Name>
        <IssueID>4436</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4436</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Interactions</Name>
        <IssueID>4436</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4436</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - ObjectManipulator</Name>
        <IssueID>4436</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem
Currently, Bounding Box has min/max scaling values that developers can set. However, ManipulationHandler does not have these limits and the user can scale up/down without constraints. ManipulationHandler is frequently used together with the BoundingBox on the same object. 

For the content developer, there is no way to limit the scaling min/max for the two-handed manipulation.
There should be a way to limit min/max scale on ManipulationHandler(for the two handed-scaling) too.

## Describe the solution you'd like
Add min/max scaling value field to the ManipulationHandler

</Description>
  </Issue>
  <Issue>
    <IssueID>4434</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4434</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Bounding box scaling varies based on whether the box is directly on the target/collider or parented to it</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>27/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4434</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>DDE Partner</Name>
        <IssueID>4434</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4434</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4434</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>4434</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4434</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The scaling of the bounding box is inconsistent depending on whether it is applied directly to the target or to a parent of the target. While the scaling starts out the same, if the bounding box is on the target, the handles will shrink to be unusably small.

This example shows a set of two of the same model:
The left one has no target and the overridden BoxCollider on the same object as the BoundingBox
The right one has the BoundingBox on a parent with a disabled BoxCollider, and the overridden BoxCollider + Target referencing the child.

![boundingboxes0](

You can see they both start out the same:

![boundingboxes1](

However, upon scaling down, the handles for the unparented one also scale down to become tiny. The parented one maintains handle sizes consistent with the set handle size in the editor properties and remain usable.

![boundingboxes2](

Expected behavior is that either the developer controls this (fixed vs scaling size), potentially able to change the fixed size programmatically if the model gets too small.</Description>
  </Issue>
  <Issue>
    <IssueID>4431</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4431</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Eye targeting not working with near hand pointers enabled anymore</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>21/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4431</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4431</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Eye Tracking</Name>
        <IssueID>4431</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Now</Name>
        <IssueID>4431</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Describe the bug

Hand focus breaks BaseEyeFocusHandler in Unity Editor (did not test on device).

**Edit**: I noticed that after I remove all of the "Articulated Hand" pointers, namely PokePointer and GrabPointer, the expected behavior would work again: Look at a target and use airtap to select it. I had already removed the DefaultPointer (causing the hand ray to show up) a while ago, because it interferred with eye targeting as soon as a hand would be detected. However, so far, it was still possible to use "Look &amp; tap" for far and poke and grab for near interactions. This is not possible anymore.

## To reproduce

Steps to reproduce the behavior:

1. Load EyeTrackingDemo-00-RootScene
2. Hit play
3. Move eye cursor over a gem by pressing right mouse button and moving mouse. The gem should start rotating.
4. Press Space to show hands. The rotation stops. An airtap does not cause the gem to be selected.
5. Release Space to hide hands. Eye targeting via BaseEyeFocusHandler remains broken. 

## Expected behavior

Look at a gem and select it via airtap.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.4.0f1]
- MRTK Version [e.g. last updated 05/16/19 - 1:43 PM]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Current Input Profile setting that seems to work for "look &amp; tap": 
![image](
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>4431</IssueID>
        <PullRequestID>4270</PullRequestID>
        <Title>Gaze cursor activation behavior that matches the shell</Title>
        <Description>## Overview
Implement gaze cursor activation behavior that matches the HoloLens 2 and Windows Mixed Reality (WMR) shell:

- Head cursor appears when app start
- Cursor disappears when articulated hands or motion controllers show up (but NOT GGV hands as for hololens 1, or for mouse / gamepad).
- Gaze cursor only appears again when voice wake word has been used (for WMR this is the word 'select').

## Changes
- Fixes: #4176
- Add speech command "select" to the speech commands profile, activatable by Alpha1
- Remove "toggle diagnostics" and "toggle profiler" speech commands because they are never used.
- **Small Breaking Change** IFocusProvider implements IMixedRealitySpeechHandler. I don't expect that anybody has built a custom focusprovider yet, and if they have the compile error provides obvious solution (implement the interface). I couldn't think of any other way to listen for a speech command that wouldn't result in adding extra game objects that I could listen to events for. 


## Verification
Tested in editor the following cases:
- Articulated hands
- GGV Hands
- Gamepad
- Mouse

Need to still test:
- HL1 device
- HL2 Device
- Using WMR controllers (after voice mode, clicking controller should move back to controller input)

&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>10/05/2019</CreatedDate>
        <ClosedDate>14/05/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>BREAKING CHANGE</Name>
            <IssueID>4431</IssueID>
            <PullRequestID>4270</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>julenka</FixedById>
            <PullRequestID>4270</PullRequestID>
            <IssueID>4431</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>4426</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>4426</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>4426</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Assert failing in MixedRealityToolkitInspector.CreateMixedRealityToolkitGameObject()</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>22/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4426</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4426</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>4426</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4426</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Assertion failed
UnityEngine.Debug:Assert(Boolean)
Microsoft.MixedReality.Toolkit.Editor.MixedRealityToolkitInspector:CreateMixedRealityToolkitGameObject() (at Assets/MixedRealityToolkit/Inspectors/MixedRealityToolkitInspector.cs:130)'
`</Code>
    <Description>## Describe the bug
The following assert is getting hit, presumably, due to the initialization changes brought in as part of #4382 or #4035.

``

This appears to be a benign assert.

## To reproduce

1. Create a new scene
2. Mixed Reality Toolkit &gt; Add to Scene and Configure

## Expected behavior

Free of asserts :)

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2018.4.0f1]
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>4426</IssueID>
        <PullRequestID>4382</PullRequestID>
        <Title>Prevents multiple MRTK instance initializations on enter playmode</Title>
        <Description>## Overview
- Fixes: #4381</Description>
        <CreatedDate>15/05/2019</CreatedDate>
        <ClosedDate>15/05/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Bug</Name>
            <IssueID>4426</IssueID>
            <PullRequestID>4382</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Urgency-Now</Name>
            <IssueID>4426</IssueID>
            <PullRequestID>4382</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>Railboy</FixedById>
            <PullRequestID>4382</PullRequestID>
            <IssueID>4426</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>4426</IssueID>
        <PullRequestID>4035</PullRequestID>
        <Title>Feature: multiple MRTK instances</Title>
        <Description>Overview
---
Adds support for multiple MRTK instances as well as hot-swapping of instances.

First step of the scene-related plan laid out in #3987. This is an alternative to the approach in #3941. The final result may be a blend of the two. We should discuss.

Changes
---
- `DontDestroyOnLoad` is no longer used to protect instances.

- `MixedRealityToolkit.IsInitialized` simply checks if `activeInstance` is null. It no longer generates an instance.

- `MixedRealityToolkit.Instance` will generate an instance if none is found. If the active instance is null and multiple instances exist in the loaded scene(s), one is arbitrarily chosen as the active instance. All other instances are disabled and renamed. These inactive instances can be deleted / duplicated / whatever to no effect.

![MultipleInstances](

- An inactive instance displays an inspector letting you know you're looking in the wrong place.

![InactiveMessage](

- Destroying the active instance results in the next available inactive instance being set active. If all instances are destroyed, all services are disabled. (Note that this doesn't necessarily mean the services handle this well or clean up after themselves.)

- Newly detected instances (eg from an additive load) will be disabled in favor of the active instance.

Issues
---
- We're assuming each instance will be using the same configuration profile. I suppose it's possible to detect newly loaded instances with a different profile, shut down existing services, then re-initialize with the new profile. But I doubt we want to go there.

- This setup suffers from the CameraCache and MixedRealityPlayspace issues we're working out in #3890

Testing Requirements
---
We want to try destroying / creating MRTK instances in every possible combination. Multiple instances loaded via multiple additive scenes, multiple instances in one scene, unloading, deleting manually, duplicating manually - every permutation we can think of.

In all cases there should be uninterrupted continuity of services provided at least one instance exists and has a configuration profile.

We also need to be testing for race conditions during instance initialization.

---
- First step in fixing: #3987</Description>
        <CreatedDate>19/04/2019</CreatedDate>
        <ClosedDate>15/05/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Editor</Name>
            <IssueID>4426</IssueID>
            <PullRequestID>4035</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Feature Request</Name>
            <IssueID>4426</IssueID>
            <PullRequestID>4035</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Urgency-Soon</Name>
            <IssueID>4426</IssueID>
            <PullRequestID>4035</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>Railboy</FixedById>
            <PullRequestID>4035</PullRequestID>
            <IssueID>4426</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>4425</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Saving Unity AssetDatabase automatically adds MRTK Playspace to scene</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4425</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4425</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>4425</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>For whatever reason, saving the asset database in the unity editor automatically adds the mrtk playspace to a scene. This makes for a bad development experience for scenes that don't use the mrtk.</Description>
  </Issue>
  <Issue>
    <IssueID>4422</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Playmode tests fail if you run edit mode tests first</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>26/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4422</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4422</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Tests</Name>
        <IssueID>4422</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

If you run edit mode tests before PlayMode tests, all the PlayMode tests will fail. The workaround is to kill unity, and then run the PlayMode tests first.

## To reproduce

1. Open Test Runner Window (Window-&gt;General-&gt;Test Runner)
2. Run all edit mode tests in the edit mode tests tab
3. Run the play mode test sin the play mode tests teab

The play mode tests should pass, but instead they fail with error (to be filled in after I sync and edit mode tests are passing).

## Target Platform (please complete the following information)
- Editor
</Description>
  </Issue>
  <Issue>
    <IssueID>4420</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[MRTK] Cloning items and saving prefabs periodically causes file lock errors to pop up in Unity. </Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>29/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4420</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4420</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4420</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>4420</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4420</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## OverviewWhen cloning items, or saving prefabs, periodically an error stating "Saving from &lt;TempPath&gt;\RandomUnrelated.pfb to &lt;LibraryPath&gt;\RandomUnrelated.pfb failed". This is more easily reproable when cloning profiles based on the default profile (though I also suspect that this is enabled even further by having a project where a lot of editor script modifying files are running). It seems to be related to the nature of the editor scripts running in background that modify prefabs periodically and saves them.## Expected BehaviorNo Errors.## Actual BehaviorFile lock error preventing a copy, requiring a reimport of the AsmDef associated with this dll/pfb.## Steps to reproduce_(Links to sample github project preferred)_## Unity Editor Version2018.3.11f1## Mixed Reality Toolkit Release Version2.0.0-*</Description>
  </Issue>
  <Issue>
    <IssueID>4419</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>luis-valverde-ms</FixedById>
        <IssueID>4419</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>'Select' input action in 'Select' speech command does not match the one in the input actions profile</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>20/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4419</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input Simulation</Name>
        <IssueID>4419</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Using the default profiles, the speech command events raised on response to 'Select' contain a "Toggle Diagnostics" input action even though the speech commands profile show it as "Select". This is caused by the default speech commands profile containing outdated input action information (an example of #4083 ). Fix coming soon.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>4418</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>4418</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[MRTK Shell Parity] [Cursor] Asset: Contextual cursor icons</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>05/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Epic</Name>
        <IssueID>4418</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4418</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Part of #4200 UX Controls Parity with HoloLens 2 Shell</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>4418</IssueID>
        <PullRequestID>4446</PullRequestID>
        <Title>[MRTK Shell Parity] [Cursor] Asset: Cursor and Contextual icons</Title>
        <Description>## Overview
Adding new shell cursor and contextual icon assets &amp; prefabs.

## Changes
- Fixes: #4417 #4418 

## Note
We need a code update to properly display contextual icons and new cursor assets. #4332 
e.g.) Object with ManipulationHandler should display **CursorMoveArrowsMove.prefab** icon around the cursor
e.g.) Bounding Box's upper right corner's scale handle should display **CursorMoveArrowsNortheastSouthwest** icon around the cursor

![2019-05-17 00_07_00-Unity 2018 3 13f1 Personal - Untitled - MRTK-GitHub - Universal Windows Platform](

![2019-05-17 00_10_48-Unity 2018 3 13f1 Personal - Untitled - MRTK-GitHub - Universal Windows Platform](

### Example of contextual icons displayed around the cursor
![2019-05-17 00_09_49-Unity 2018 3 13f1 Personal - Untitled - MRTK-GitHub - Universal Windows Platform](

### Cursor and icon prefabs
![2019-05-17 00_10_33-Unity 2018 3 13f1 Personal - Untitled - MRTK-GitHub - Universal Windows Platform](

### Cursor and icon assets - Mesh, materials
![2019-05-17 00_11_58-Unity 2018 3 13f1 Personal - Untitled - MRTK-GitHub - Universal Windows Platform](

</Description>
        <CreatedDate>17/05/2019</CreatedDate>
        <ClosedDate>22/05/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Epic</Name>
            <IssueID>4418</IssueID>
            <PullRequestID>4446</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Shell Parity</Name>
            <IssueID>4418</IssueID>
            <PullRequestID>4446</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>4417</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>4417</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[MRTK Shell Parity] [Cursor] Asset: Replace current MRTK cursor with shell-parity cursor</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>05/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Epic</Name>
        <IssueID>4417</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4417</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Part of #4200 UX Controls Parity with HoloLens 2 Shell</Description>
  </Issue>
  <Issue>
    <IssueID>4416</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>4416</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[MRTK Shell Parity] [Bounding Box] Visual fit &amp; finish: proximity light intensity, distance, handle color, etc.</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>05/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Epic</Name>
        <IssueID>4416</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4416</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>4416</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Part of #4200 UX Controls Parity with HoloLens 2 Shell</Description>
  </Issue>
  <Issue>
    <IssueID>4415</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4415</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>4415</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>johnppella</FixedById>
        <IssueID>4415</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[MRTK Shell Parity] [Bounding Box] Handles should be scaled up on hand proximity</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4415</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4415</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4415</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>4415</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Part of #4200 UX Controls Parity with HoloLens 2 Shell</Description>
  </Issue>
  <Issue>
    <IssueID>4414</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Visual Profiler Warning in Player Builds</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>20/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4414</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4414</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Diagnostics / Tools</Name>
        <IssueID>4414</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

In player builds this warning is reported in the Unity.log: "A shader supporting instancing could not be found for the VisualProfiler, falling back to traditional rendering. This may impact performance."

## To reproduce

Play a scene with the Visual Profiler in use and check the Unity.log

## Expected behavior

The VisualProfiler finds a shader to utilize instanced and improve rendering performance.
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>4414</IssueID>
        <PullRequestID>4388</PullRequestID>
        <Title>Diagnostics Visual Profiler Improvements</Title>
        <Description>## Overview
- The Visual Profiler now supports user defined colors for performance thresholds on the frame info panel. Defaults to green when at 95%+ of the target framerate, yellow when at 75%+ of the target framerate, and red otherwise. (A request from multiple users.)

- Portions of the profiler can be dynamically toggled on/off, such as the frame info panel and memory stats.

![VisualProfilerChange](

- Fixed an issue where required shader permutations for rendering the frame info items using instancing were not included in player builds. This will result in improved rendering performance for the Visual Profiler.

## Verification
Verify the Visual Profiler displays in editor and player .

Fixes: 
</Description>
        <CreatedDate>15/05/2019</CreatedDate>
        <ClosedDate>20/05/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>BREAKING CHANGE</Name>
            <IssueID>4414</IssueID>
            <PullRequestID>4388</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>4413</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>4413</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[MRTK Shell Parity] [Slate] Fingertip ring shadow on surface needed</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>24/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Epic</Name>
        <IssueID>4413</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4413</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4413</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Slate</Name>
        <IssueID>4413</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Part of #4200 UX Controls Parity with HoloLens 2 Shell</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>4413</IssueID>
        <PullRequestID>4836</PullRequestID>
        <Title>Finger Tip Cursor Pairity</Title>
        <Description>## Overview
Part of #4200 UX Controls Parity with HoloLens 2 Shell
This pull request introduces a finger tip "shadow" using the ProximityLight system. Proximity lights can now have per material color overrides and a "subtractive light" option. The finger tip cursor has also been updated to mimic the behavior found in the shell (size, shape, color, movement, etc.).

![ShellCursor](
[Better quality video link.](

![OverrideColor](


## Changes
- Fixes:  &amp; 

## Verification
To test these changes the slate found in the HandInteractionExamples scene best demonstrates the new changes.
&gt;
&gt; git fetch origin pull/4836/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>11/06/2019</CreatedDate>
        <ClosedDate>17/06/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Bug</Name>
            <IssueID>4413</IssueID>
            <PullRequestID>4836</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Release Blocker</Name>
            <IssueID>4413</IssueID>
            <PullRequestID>4836</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Shell Parity</Name>
            <IssueID>4413</IssueID>
            <PullRequestID>4836</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>4412</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>4412</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[MRTK Shell Parity] [Slate] Audio feedback on touch/release is missing</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>05/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Epic</Name>
        <IssueID>4412</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4412</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Part of #4200 UX Controls Parity with HoloLens 2 Shell</Description>
  </Issue>
  <Issue>
    <IssueID>4411</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>4411</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[MRTK Shell Parity] [Fingertip visualization] Match the final shell design spec. (distance, ring size, alignment behavior)</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>15/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4411</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4411</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Epic</Name>
        <IssueID>4411</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4411</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4411</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Part of #4200 UX Controls Parity with HoloLens 2 Shell</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>4411</IssueID>
        <PullRequestID>4836</PullRequestID>
        <Title>Finger Tip Cursor Pairity</Title>
        <Description>## Overview
Part of #4200 UX Controls Parity with HoloLens 2 Shell
This pull request introduces a finger tip "shadow" using the ProximityLight system. Proximity lights can now have per material color overrides and a "subtractive light" option. The finger tip cursor has also been updated to mimic the behavior found in the shell (size, shape, color, movement, etc.).

![ShellCursor](
[Better quality video link.](

![OverrideColor](


## Changes
- Fixes:  &amp; 

## Verification
To test these changes the slate found in the HandInteractionExamples scene best demonstrates the new changes.
&gt;
&gt; git fetch origin pull/4836/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>11/06/2019</CreatedDate>
        <ClosedDate>17/06/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Bug</Name>
            <IssueID>4411</IssueID>
            <PullRequestID>4836</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Release Blocker</Name>
            <IssueID>4411</IssueID>
            <PullRequestID>4836</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Shell Parity</Name>
            <IssueID>4411</IssueID>
            <PullRequestID>4836</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>4410</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>4410</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[MRTK Shell Parity] [Button] Fit &amp; finish: proximity light intensity, distance, pulse effect polish, etc...</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>05/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Epic</Name>
        <IssueID>4410</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4410</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Part of #4200 UX Controls Parity with HoloLens 2 Shell
</Description>
  </Issue>
  <Issue>
    <IssueID>4408</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>radicalad</FixedById>
        <IssueID>4408</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Loading UX: Indeterminate loader</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>14/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4408</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4408</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem
Looking through our list of UX controls, we currently have no loading state.

## Describe the solution you'd like
We should have a Loader library. Both simple indeterminate loaders as well as loaders that use the scene transition service.

## Additional context
This is a gap from HTK UX.
</Description>
  </Issue>
  <Issue>
    <IssueID>4407</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>4407</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[MRTK Shell Parity] [Pointer] Tether line visual fit &amp; finish</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>05/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Epic</Name>
        <IssueID>4407</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4407</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Part of #4200 UX Controls Parity with HoloLens 2 Shell
## Describe the bug
Match the shell design: Thickness, line style, color

- Display white sphere on the grab point
- Display dash line to the fingertip

![2019-05-19 16_47_55-ScreenToGif - Editor](

![2019-05-19 16_53_10-ScreenToGif - Editor](

</Description>
  </Issue>
  <Issue>
    <IssueID>4406</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4406</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Getting started docs don't mention recommended build settings.</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>14/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4406</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4406</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4406</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I am trying to build a simple scene for Hololens v1 using MRTK v2. After solving a few problems I am facing the deployment issue on the side of Visual Studio. I am getting the error saying, "DEP3321: To deploy this application, your deployment target should be running Windows Universal Runtime version 10.0.18362.0 or higher. You currently are running version 10.0.17763.502. Please update your OS, or change your deployment target to a device with the appropriate version."

I am not familiar on how to update the OS on the Hololens to make it to the version required by the MRTKv2.


</Description>
  </Issue>
  <Issue>
    <IssueID>4405</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4405</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Cursor disappears when you bring up articulated hands set to GGVPointer</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>21/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4405</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4405</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4405</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
If you set up articulated hands to use V1 GGV pointer, when you bring up your hands, the cursor will disappear.


Fix is to use the following code in GazePointerVisisbiiltyStateMachine.cs:

``</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>4405</IssueID>
        <PullRequestID>4270</PullRequestID>
        <Title>Gaze cursor activation behavior that matches the shell</Title>
        <Description>## Overview
Implement gaze cursor activation behavior that matches the HoloLens 2 and Windows Mixed Reality (WMR) shell:

- Head cursor appears when app start
- Cursor disappears when articulated hands or motion controllers show up (but NOT GGV hands as for hololens 1, or for mouse / gamepad).
- Gaze cursor only appears again when voice wake word has been used (for WMR this is the word 'select').

## Changes
- Fixes: #4176
- Add speech command "select" to the speech commands profile, activatable by Alpha1
- Remove "toggle diagnostics" and "toggle profiler" speech commands because they are never used.
- **Small Breaking Change** IFocusProvider implements IMixedRealitySpeechHandler. I don't expect that anybody has built a custom focusprovider yet, and if they have the compile error provides obvious solution (implement the interface). I couldn't think of any other way to listen for a speech command that wouldn't result in adding extra game objects that I could listen to events for. 


## Verification
Tested in editor the following cases:
- Articulated hands
- GGV Hands
- Gamepad
- Mouse

Need to still test:
- HL1 device
- HL2 Device
- Using WMR controllers (after voice mode, clicking controller should move back to controller input)

&gt; As a reviewer, it is possible to check out this change locally by using the following
&gt; commands (substituting {PR_ID} with the ID of this pull request):
&gt;
&gt; git fetch origin pull/{PR_ID}/head:name_of_local_branch
&gt;
&gt; git checkout name_of_local_branch
</Description>
        <CreatedDate>10/05/2019</CreatedDate>
        <ClosedDate>14/05/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>BREAKING CHANGE</Name>
            <IssueID>4405</IssueID>
            <PullRequestID>4270</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>julenka</FixedById>
            <PullRequestID>4270</PullRequestID>
            <IssueID>4405</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>4401</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>v2.0.0 RC1 Refresh doesn't work with HoloLens 1 and loads of other issues</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>10/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4401</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4401</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

**Quick disclaimer: This post may look a bit ranty but I'm simply struggling with a lot of issues that I'd like to get resolved. So please if someone has an answer to what I'm doing wrong let me know**

I've been struggling with loads of issues the last few days on getting anything deployed to the HoloLens 1 we have.

I first tried version v2.0.0 RC1 Refresh of MRTK and imported this in a clean Unity 2018.3.14f1 project on a laptop running Windows 10 1803 (17134).

``

I switched the SDK version around to this:
![image](

And tried again. I then found out that apparently the "Build All" button does all kinds of things but never actually produces a working build.

It usually crashes somewhere on an error that it tries to build |Master as configuration.

**Issue 2:
Build all tries to build some strange non existant configurations like |Master.**

I also forgot to mention that since Visual Studio 2019 the MSBuild.exe file was moved.

**Issue 3:
The path of MSBuild is hardcoded and has moved with VS2019, this means it can't find it anymore.**

While we're talking about VS2019, another issue is that it also seems the MRTK can't be satisfied with the build tools of VS2019,

**Issue 4:
MRTK needs to have the old Visual Studio 2017 installed (which is in fact quite hard to even download nowadays), simply installing the 2017 build tools from the 2019 installer doesn't work**

Ok back to where we were, we can now click on the other build button that does usually work:

![image](

**Issue 5:
After a few minutes of building we now sometimes get a folder with the dependencies in it and sometimes we don't**
![image](

I haven't really been able to pinpoint when it does create the dependencies and when it doesn't, but it seems to help to sometimes click that other build all button in between, wait till that fails, and the build the real stuff with the "good" button.

Ok, so now we have an appx file with dependencies. Let's now try to deploy this.

![image](

**Issue 6:
When we click on connect an error pops up that doesn't give any information on what is actually wrong:**
![image](

It seems to have something to do with the HTTPS certificate not being accepted from the HoloLens but when I try to install that it also doesn't go smoothly as there doesn't seem to be a way to install a certificate without a valid issuer:

![image](

**Issue 7:
No clear documentation on how to install the HoloLens certificate to avoid issue 6 (if this is even the right thing to do**

I then started fiddler, enabled HTTPS decrypting and by doing that fiddler seems to accept the certificate and Unity can now connect to the HoloLens.

**Issue 8:
The deploy button doesn't do anything, but yeah basically at this point I gave up diving into this and went directly to the web UI to deploy**

I selected the package to deploy:
![image](

Added the VCLib stuff as a dependency:
![image](

And started deploying

**Issue 9:
An application with the name Template3D already exists, due to the project name not changing when creating a new Unity project**

This took quite some investigation as well but apparently in the project settings file in unity the newly created project was still named Template3D:
![image](
![image](

Ok, I changed this and tried to rebuild the project again.

**Issue 10:
You have to delete all the generated project files as any output from the build will still internally be named Template3D**

After simply deleting everything, and re-cloning the project we were moving forward again. I built the solution into an appx + dependencies and uploaded them to the HoloLens.

**Issue 11:
Now the created packages is built using an SDK too high for my HoloLens:**
![image](

## Summary

Don't issue as much as a rant as it might sound, but I'm simply stuck in getting my project build and running into issues everywhere I go.

Am I simply using the wrong versions for deploying to the HoloLens or is something else in my procedure going wrong? I'd like to know.

## Target Platform (please complete the following information)

- HoloLens 10.0.17763.438

</Description>
  </Issue>
  <Issue>
    <IssueID>4400</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Runtime error when build mixed reality project with unity and visual studio</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>16/05/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When we have built the solution, a runtime error appears in one eye on a corner.  Is imposible to read and we are tested in debug, release, master... and the error persist. In editor mode on Unity, the error dont appear. The experience is the same but is a little annoying. Any solution ?

## Expected Behavior
No runtime error
## Actual Behavior
Runtime error
## Steps to reproduce
Create project on Unity 2019
Build for Windows Universal Platform on VR
Open the solution in Visual Studio 2017
Compile and play or compile and make a appx

## Unity Editor Version
2019.1.0f2
## Mixed Reality Toolkit Release Version
v2.0.0-RC1</Description>
  </Issue>
  <Issue>
    <IssueID>4399</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>4399</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>ManipulationHandler ignores pointer rotation when moving with one hand</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>12/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4399</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>4399</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4399</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Interactions</Name>
        <IssueID>4399</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4399</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - ObjectManipulator</Name>
        <IssueID>4399</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

To match Shell behavior, ManipulationHandler should take into account the pointer rotation when moving objects. Right now only the translation is used.

## To reproduce

Steps to reproduce the behavior:

1. Using a WMR controller, grab an object with a ManipulationHandler in the HandInteractionExamples scene.
2. Observe how rotating the controller does not move the grabbed object. There will be a slight movement caused by small changes in controller position.</Description>
  </Issue>
  <Issue>
    <IssueID>4397</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4397</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Box collider should not be required on BoundingBox script</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>29/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4397</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4397</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Interactions</Name>
        <IssueID>4397</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>BoxCollider is "required" by the BoundingBox script, but it isn't strictly needed since it can reference another object. 

To reproduce, add a bounding box which references a different box collider not on the game object. I expect that I can do this, but actually because the component requires box collider component, I cannot do this without also adding a dummy box collider component.
</Description>
  </Issue>
  <Issue>
    <IssueID>4396</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MenelvagorMilsom</FixedById>
        <IssueID>4396</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>The ManipulationHandler script settings seem to imply that there is a “onehanded scale operation”</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>27/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4396</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4396</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>4396</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4396</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Interactions</Name>
        <IssueID>4396</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>4396</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - ObjectManipulator</Name>
        <IssueID>4396</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
The ManipulationHandler script settings seem to imply that there is a “onehanded scale operation”. Allowing configuration if Scale mode supporting manipulations in onehanded manipulation mode is confusing. From the code it seems that the only intended operation for onehanded manipulation is Move. This applies to any ManipulationType setting that contains Scale.
![image](

This can be very confusing for the developers trying to consume this script. 

Either  MRTK should do the following two things - 
1. The script/ document should clarify that some of the TwoHandedManipulationTypes settings only work with 2 handed manipulation. (eg - Scale only works 2 handed)  
2. The script needs an On Validate  to prevent users from incorrectly configuring the script, resulting in unintended results.  (eg - i set my script to "OneHandedOnly" "Scale" mode, but my pointer is still able to move the gameobject which is not what i wanted in my app)


or

Start supporting some sort of OneHanded Scale operation.

Update the ManipulationHandler documentation accordingly.

</Description>
  </Issue>
  <Issue>
    <IssueID>4395</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Setting ManipulationHandler script to “RotateScale” mode doesn't prevent Move operation from happening</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>16/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4395</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4395</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4395</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Interactions</Name>
        <IssueID>4395</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Setting the script to “RotateScale” mode doesn't prevent Move operation from happening
. If that is intended behavior, what is the purpose of constraining these manipulation Modes?

## To reproduce

Steps to reproduce the behavior:
1. Create a simple cube in the unity scene
2, Add the ManipulationHandler script to the gameobject.
Configure the script in the following manner:
![image](
3. Build and deploy to device. 
4. the user is able to move the gameobject

## Expected behavior

The object should not move since the developer has configured the options to only RotateScale for the manipulation.


## Your Setup (please complete the following information)

- Unity Version  2018.3.10f1
- MRTK Version 2.0

## Target Platform (please complete the following information)
Hololens
Hololens2

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>4394</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4394</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Having the setting to toggle bounding box visualization enabled in editor will be helpful in debugging</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>28/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4394</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4394</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4394</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>4394</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

While using the bounding box, it would be helpful to have the rigidbody created for bounding box to be visible in inspector and the hierarchy. (I had my collider configuration messed up and so i was not able to get bounding box working, since it used to pop up at a different location in the 3d space.  Enabling this property helped me debug this issue faster)

## Describe the solution you'd like

set the 
hideElementsInInspector  property to be configurable in the inspector.
</Description>
  </Issue>
  <Issue>
    <IssueID>4393</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4393</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>BoundingBox script doesn't work  when ManipulationHandler is above bounding box component</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>23/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4393</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4393</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4393</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Interactions</Name>
        <IssueID>4393</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>4393</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

I attempted leveraging the Bounding Box + ManipulationHandler capabilities. Turns out BoundingBox doesn’t work reliably when ManipulationHandler is also active in the same hierarchy. 

## To reproduce

Steps to reproduce the behavior:
1. Create an object in the MRTK enabled scene
2. Add the ManipulationHandler script to the gameobject.
3. Add the BoundingBox script to the gameobject. (script order is important)
4. Hit play in unity editor
5. try to use the bounding box handles. - Nothing happens.

## Expected behavior
Bounding Box works as expected and allows rotation and scale operations based on handles.

## Screenshots

![image](

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.10f1]
- MRTK Version [e.g. v2.0 - RC1-Refresh]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- UnityEditor

## Additional context
I tracked down the reason to the pointer event that BoundingBox receives has been marked “used” by manipulation handler sometimes.</Description>
  </Issue>
  <Issue>
    <IssueID>4392</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>4392</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>In-Editor input simulation is not working</Title>
    <CreatedDate>16/05/2019</CreatedDate>
    <ClosedDate>16/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4392</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Now</Name>
        <IssueID>4392</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Pressing Play in MRTK scene and then pressing space bar does not bring up hands.

Using mouse to move camera around does not work.
</Description>
  </Issue>
  <Issue>
    <IssueID>4381</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>4381</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK instance can be initialized twice in editor</Title>
    <CreatedDate>15/05/2019</CreatedDate>
    <ClosedDate>16/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4381</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4381</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4381</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

MRTK instance can be initialized twice in quick succession when entering playmode in editor. This can cause a null reference exception in GazeProvider, which cascades into a series of errors about missing cursors.

## Steps to Reproduce

- Open HandInteractionExamples scene, or any scene with a main camera that already has a GazeProvider component.
- Hit Play.
- Observe errors.

## Expected behavior

MRTK instance should be initialized once. No errors should occur.</Description>
  </Issue>
  <Issue>
    <IssueID>4379</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Extensible FocusProvider to add custom raycast</Title>
    <CreatedDate>15/05/2019</CreatedDate>
    <ClosedDate>10/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>DDE Partner</Name>
        <IssueID>4379</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Duplicate</Name>
        <IssueID>4379</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4379</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4379</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>In our application, we are performing a custom raycast for objects without colliders. So, in order to show pointers based on the custom raycast hit, we would need to add the custom raycast in QueryScene method of FocusProvider.

I tried to extend the FocusProvider's QueryScene method, but it is not virtual. So, I copy pasted the whole script and updated the necessary code.

Please provide solutions to extend FocusProvider or make QueryScene method virtual.
</Description>
  </Issue>
  <Issue>
    <IssueID>4378</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>No hyperlinks for some base interfaces in DocFX API documentation</Title>
    <CreatedDate>15/05/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4378</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4378</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4378</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>4378</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Ported to Github, reference 20998110

Go to the documentation for LinePointer: 
Observe how some of the interfaces have no hyperlinks to their doc pages

![9f0ec396-96e5-405d-8d1f-6d772678dadb](

It doesn't seem to be related to the specific interfaces, as IMixedRealityInputHandler, which has hyperlink in LinePointer, doesn't have it in the BoundingBox page.</Description>
  </Issue>
  <Issue>
    <IssueID>4377</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4377</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Rays do not turn off when hand are facing you</Title>
    <CreatedDate>15/05/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>1 - Planning</Name>
        <IssueID>4377</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4377</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4377</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4377</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shell Parity</Name>
        <IssueID>4377</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Ported to Github, reference 20978095

In the shell, hand rays turn off when hands are facing you. This is encoded in MRTK via the pointer IsInPointingPose bool. Hand rays are currently not turning off when the hands are facing you.</Description>
  </Issue>
  <Issue>
    <IssueID>4376</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Interactable setting IsGlobal to true makes nothing else movable clickable in the scene</Title>
    <CreatedDate>15/05/2019</CreatedDate>
    <ClosedDate>17/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4376</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4376</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>By Design</Name>
        <IssueID>4376</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Interactions</Name>
        <IssueID>4376</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Ported to Github, reference 20963951

Find an interactable in HandInteractionAllExample scene
Check IsGlobal so it is true

![](


Run the scene, and try to move something with hand rays
Expected: I can move things around with hand rays
Actual: I can't moving anything around, the interactable is stealing all input
</Description>
  </Issue>
  <Issue>
    <IssueID>4373</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4373</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Cannot re-invoke keyboard after closing</Title>
    <CreatedDate>15/05/2019</CreatedDate>
    <ClosedDate>24/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>4373</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4373</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>DDE Partner</Name>
        <IssueID>4373</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Example/Test Scene</Name>
        <IssueID>4373</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4373</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4373</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Now</Name>
        <IssueID>4373</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Ported to Github, reference 20960938

Bring up keyboard
type, then press "x" on upper right to close
Try to bring up keyboard again
Expected: I can bring up keyboard
Actual: I cannot bring up keyboard

From what I can tell, this looks to actually be a unity bug:


Given that we don't have any keyboard abstractions, this  might also just be an update to the examples to show how people can work around this.</Description>
  </Issue>
  <Issue>
    <IssueID>4372</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>GGV cursor does not stick to object during manipulation</Title>
    <CreatedDate>15/05/2019</CreatedDate>
    <ClosedDate>19/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4372</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4372</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4372</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Cursors</Name>
        <IssueID>4372</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Ported to Github, reference 20823387

Use HoloLens 1 gestures to move an object in HandInteractionExamples scene. You can use either in-editor simulation or go to an actual HoloLens device. For in-editor simulation set Hand Simulation Mode in InputSimulationProfile to Gestures:

![66739081-02a9-4a87-9924-ca0604dca01c](

Expected:
when you grab and move an object, the cursor sticks to the object like in the HoloLens 1 shell

Actual:
The cursor does not stick to the object being manipulated.
</Description>
  </Issue>
  <Issue>
    <IssueID>4371</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>radicalad</FixedById>
        <IssueID>4371</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>luis-valverde-ms</FixedById>
        <IssueID>4371</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Default grab radius is too large</Title>
    <CreatedDate>15/05/2019</CreatedDate>
    <ClosedDate>19/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4371</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4371</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Fixed</Name>
        <IssueID>4371</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4371</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Ported to Github, reference 20800672

During our work with ISVs over the past few weeks we have always lowered the grab radius on the GrabPointer. By default objects can be grabbed within a 15 cm (with an additional 0.5 cm constant) radius sphere. A 5 to 10 cm radius seems more appropriate.

![01750420-175e-4dda-8596-07dad8e7b315](
</Description>
  </Issue>
  <Issue>
    <IssueID>4370</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Prevent back-poking</Title>
    <CreatedDate>15/05/2019</CreatedDate>
    <ClosedDate>16/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4370</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4370</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4370</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Buttons</Name>
        <IssueID>4370</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Ported to Github, reference 20798609

This issue was reported a few months ago that it's possible to press buttons from the back with the PokePointer - it's unclear if this is actually a button thing (or if it's just a fix to the way the poke pointer interacts with things)</Description>
  </Issue>
  <Issue>
    <IssueID>4369</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>4369</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Nested Prefabs work poorly with MRTK custom inspectors</Title>
    <CreatedDate>15/05/2019</CreatedDate>
    <ClosedDate>03/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4369</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4369</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4369</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Interactions</Name>
        <IssueID>4369</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>4369</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The new Nested Prefabs have extensive inspector functionality to allow you to apply selective updates to prefabs.
If working directly in a scene on prefabs, you can apply changes piecemeal to the prefabs.

However the custom inspector is nonfunctional or just decently frustrating to work with when using prefabs:

Examples:
The blue line on the left here indicates that there is a pending change that can be applied.
Normally in the inspector you can right click and individually apply changes.
For Unity Events the hitbox is small to nonexistent. I have succeeded occasionally, but I need to apply ~20 changes and it takes 4-12 attempts to hit the TINY hitbox for applying the change. This particular problem could be an issue with out-of-the-box UnityEvents, I haven't looked into whether that is the case.

![19b9591f-7992-42b4-9367-28c14a879fe2](
![441c9683-09bd-498e-a3c2-fd48d17d76b5](


Some fields do not even indicate that there are pending changes. See the following two images for an example:
![786fd616-d8b3-480a-b7da-e48251571d02](


The first one has the pending change. This is a straight hostile nonfunctionality that will create significant interaction errors.
![c6cbf497-9399-41bd-b14d-648b5aa9b959](


Finally, many fields don't even actively display and allow you to apply those prefab changes. If you put the Inspector in Debug Mode, you can see the extent of changes (this is from our custom inspectors which have 0 blue fields unapplied)


The pervasiveness to which this is a problem heavily encourages a developer to never use the inspector in scene, or to constantly switch to debug inspectors to check to make sure they understand the state of their objects (which is a severe problem)

This is likely a widespread issue across ALL custom inspectors and we need a solid solution for our developers.f their objects (which is a severe problem)

![f3b0b5e7-7363-44f4-a302-e3f2a027c7c8](

This is likely a widespread issue across ALL custom inspectors and we need a solid solution for our developers.

![f98d0d3b-7017-44eb-98c3-adc39cd02f22](
</Description>
  </Issue>
  <Issue>
    <IssueID>4368</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpeechInputHandler gets triggered twice when "Is Focus Required" is disabled</Title>
    <CreatedDate>15/05/2019</CreatedDate>
    <ClosedDate>16/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4368</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Speech</Name>
        <IssueID>4368</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When the "Is Focus Required" toggle on SpeechInputHandler is off it gets triggered as a global listener. However, when it gets focused with the gaze cursor it **also** is triggered as the focused handler, leading to two invocations on the same command.

## To reproduce

Steps to reproduce the behavior:

1. Create a scene with a basic cube.
2. Add a SpeechInputHandler component to the cube.
3. Uncheck the "Is Focus Required" box.
4. Add a keyword to the handler, set it to "Menu" (default speech command in MRTK).
5. Add a custom script component with a simple void function, e.g.:
``
6. Optional: add a text component to a child object of the cube to show invocation count.
7. Make sure "Microphone" is enabled in Build Settings &gt; Player Settings &gt; Publishing Settings &gt; Capabilities &gt; Microphone
8. Enter play mode
9. Say "Menu" (or press tab key to simulate speech command)

## Expected behavior

Speech test function gets invoked once, but gets invoked twice.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.14f1]
- MRTK RC1 Refresh


## Additional context

This behavior is easily overlooked if the speech command does the same state change twice, but causes a bug when e.g. toggling a menu on and off with the same command. Toggling won't work because the command toggles twice.
</Description>
  </Issue>
  <Issue>
    <IssueID>4366</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>luis-valverde-ms</FixedById>
        <IssueID>4366</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Xbox thumb sticks raise input changed events even though I'm not touching them</Title>
    <CreatedDate>15/05/2019</CreatedDate>
    <ClosedDate>16/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4366</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4366</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4366</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>This is happening because the Unity input axes created by MRTK that are used to read the thumb stick values have a dead zone of 0.001 instead of the default of 0.19 used by Unity for the pre-created Horizontal and Vertical axes. See `ControllerMappingLibrary.UnityInputManagerAxes` and `XboxController.DefaultInteractions`.

I'd like to have those axes created with the Unity dead zone value instead.</Description>
  </Issue>
  <Issue>
    <IssueID>4365</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>lukastoenneMS</FixedById>
        <IssueID>4365</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Input Simulation: Persistent hands only visible when previously moved</Title>
    <CreatedDate>15/05/2019</CreatedDate>
    <ClosedDate>21/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>1 - Planning</Name>
        <IssueID>4365</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4365</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input Simulation</Name>
        <IssueID>4365</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Hands in input simulation can be toggled on/off using T/Y keys for left/right hand. This keeps hands visible at all times, even when they are not actively controlled (shift/space keys).

However, the hands are not visible if they shift/space keys have not yet been pressed before toggling the persistent mode with T/Y.

## To reproduce

1. Open the example scene
2. Start play mode
3. Press T
4. Hold shift and move the mouse

## Expected behavior

Left simulated hand should show up and follow the mouse.

By contrast, if you press shift once _before_ pressing Y it brings up the simulated hand. When making it persistent with Y key after that it shows up as expected.

## Target Platform (please complete the following information)

- Unity Editor
</Description>
  </Issue>
  <Issue>
    <IssueID>4361</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>luis-valverde-ms</FixedById>
        <IssueID>4361</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Bounding box ignores pointer rotation when scaling or rotating</Title>
    <CreatedDate>15/05/2019</CreatedDate>
    <ClosedDate>20/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4361</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>4361</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Unlike in the Shell, only the pointer position is used to drive the scaling or rotation.</Description>
  </Issue>
  <Issue>
    <IssueID>4359</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>NullReferenceException when disabling GazeProvider</Title>
    <CreatedDate>15/05/2019</CreatedDate>
    <ClosedDate>26/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4359</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4359</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Eye Tracking</Name>
        <IssueID>4359</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
NullReferenceException: Object reference not set to an instance of an object
Microsoft.MixedReality.Toolkit.Input.BaseGenericInputSource..ctor (System.String name, Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] pointers, Microsoft.MixedReality.Toolkit.Input.InputSourceType sourceType) (at Assets/MixedRealityToolkit/Providers/BaseGenericInputSource.cs:23)
Microsoft.MixedReality.Toolkit.Input.GazeProvider.get_GazeInputSource () (at Assets/MixedRealityToolkit.Services/InputSystem/GazeProvider.cs:106)
Microsoft.MixedReality.Toolkit.Input.GazeProvider.OnDisable () (at Assets/MixedRealityToolkit.Services/InputSystem/GazeProvider.cs:431)

`</Code>
    <Description>## Describe the bug

``
when OnDisable is called, it's calling `InputSystem?.RaiseSourceLost(GazeInputSource);` which access the get property for GazeInputSource which tries to recreate the gazeInputSource.
(and in BaseGenericInputSource, constructor access InputSystem,that may have been destryoed before)

=&gt; simple ugly solution could jsut be to test if InputSystem is not null MixedRealityToolkit.InputSystem?.GenerateNewSourceId()
=&gt; a better solution would be to not recreate gaze if this is during destroy/disable process

## To reproduce

Steps to reproduce the behavior:
- play in editor
- stop 
may have some other setup, but nothing in particular that i can think of
[EDIT] may be related to multiscene loading with single option :p

## Expected behavior

no exception when disabling (mostly quitting the app)


## Your Setup (please complete the following information)

- Unity Version 2018.3.11f1
- MRTK Version v2.0 RC1 refresh

## Target Platform (please complete the following information)

- Unity Editor
- HoloLens

## additional info
may be related to #2744
</Description>
  </Issue>
  <Issue>
    <IssueID>4351</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add a default HoloLens 2 profile</Title>
    <CreatedDate>14/05/2019</CreatedDate>
    <ClosedDate>05/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>2 - Ready</Name>
        <IssueID>4351</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4351</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>4351</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4351</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>A common ask from a number of customers is to have a common HL2 profile, which does things like disabling boundaries, disabling hand visualizations (for perf), etc.</Description>
  </Issue>
  <Issue>
    <IssueID>4349</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>4349</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK's Appx Build Options tab on the build menu doesn't list "ARM64" as a choice</Title>
    <CreatedDate>14/05/2019</CreatedDate>
    <ClosedDate>16/12/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4349</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>4349</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4349</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Unity 2019</Name>
        <IssueID>4349</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Ported to github, reference 20430683</Description>
  </Issue>
  <Issue>
    <IssueID>4347</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK should have different hand mesh/marker settings based on transparent or opaque displays</Title>
    <CreatedDate>14/05/2019</CreatedDate>
    <ClosedDate>17/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4347</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Controller Visualization</Name>
        <IssueID>4347</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Duplicate</Name>
        <IssueID>4347</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4347</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>In VR you always want hand visualizations, even if you only use it in the editor, but in AR there's a good chance you don't want the hand visualizations. You should be able to determine which to use based on display type.</Description>
  </Issue>
  <Issue>
    <IssueID>4346</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Error "There's already a UIRaycastCamera in the scene. It will be ignored" when opening HandInteractionAll scene</Title>
    <CreatedDate>14/05/2019</CreatedDate>
    <ClosedDate>14/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4346</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Ported to Github, reference 20337078

Open HandInteractionAll scene.
2. Error window shows the following error:

There's already a UIRaycastCamera in the scene. It will be ignored, so please delete it to avoid confusion.
UnityEngine.Debug:LogError(Object, Object)
Microsoft.MixedReality.Toolkit.Services.InputSystem.FocusProvider:Initialize() (at Assets/MixedRealityToolkit.Services/InputSystem/FocusProvider.cs:329)
Microsoft.MixedReality.Toolkit.Core.Services.MixedRealityToolkit:InitializeAllServices() (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:907)
Microsoft.MixedReality.Toolkit.Core.Services.MixedRealityToolkit:InitializeServiceLocator() (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:293)
Microsoft.MixedReality.Toolkit.Core.Services.MixedRealityToolkit:InitializeInstance() (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:453)
Microsoft.MixedReality.Toolkit.Core.Services.MixedRealityToolkit:get_Instance() (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:387)
Microsoft.MixedReality.Toolkit.Core.Services.MixedRealityToolkit:ConfirmInitialized() (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:486)
Microsoft.MixedReality.Toolkit.Core.Services.MixedRealityToolkit:OnValidate() (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:543)
UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)

It looks like just deleting the UIRaycastCamera from the hand interactions scene should handle this.
</Description>
  </Issue>
  <Issue>
    <IssueID>4345</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4345</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Slate feature is buried in Examples package.</Title>
    <CreatedDate>14/05/2019</CreatedDate>
    <ClosedDate>09/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4345</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4345</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4345</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4345</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Slate</Name>
        <IssueID>4345</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Slate feature is cool, but the documentation doesn't lead you to any prefab to use. After some investigation it turns out that the prefab exists inside the Examples. Core features that are surfaced in the README should not be inside the Examples package.

## Describe the solution you'd like

Move the Slate out of examples and into the core package. Update the Slate docs to link to the prefab in the source to get started with.
</Description>
  </Issue>
  <Issue>
    <IssueID>4344</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4344</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>4344</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Slate is missing sounds on touch down and on touch up. These should be configurable via OnTouchDown and OnTouchUp events in the slate contents, like we do for manipulation.</Title>
    <CreatedDate>14/05/2019</CreatedDate>
    <ClosedDate>13/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4344</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4344</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4344</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Slate</Name>
        <IssueID>4344</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Ported to Github, reference 21090800.

Slate is missing sounds on touch down and on touch up. These should be configurable via OnTouchDown and OnTouchUp events in the slate contents, like we do for manipulation.</Description>
  </Issue>
  <Issue>
    <IssueID>4342</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>4342</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Missing Controllers on build</Title>
    <CreatedDate>14/05/2019</CreatedDate>
    <ClosedDate>06/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4342</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4342</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When I build my application/game or whatever I cant see the controllers. I can when im on editor mode, but not when built. But if I have something happening when i press a button it works, so the problem its that i cant see or track the controllers. (Last time I tested it they spawned on the ground and wont move).

## To reproduce

Steps to reproduce the behavior:

1. Make a project
2. Build it
3. Convert into an executable with Visual Studio
4. Open it

## Expected behavior

You should be able to see your hands, but it wont work. They wont be or will be on the ground

## Screenshots

I cant sorry

## Your Setup (please complete the following information)

- Unity Version [latest 2019]
- MRTK Version [v2.0]

## Target Platform (please complete the following information)
- WMR

## Additional context

If I start the application, on the right eye in one corner there is a console with red text and the options close and clear. I cant read what it says because its on the edge. I cant interact with it neither.

On capabilities I have Bluetooth on, i dont know if im missing something else

Im building on release and debug, I tested this both</Description>
  </Issue>
  <Issue>
    <IssueID>4341</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>NullReferenceException in editor on play when Mixed Reality Portal is closed</Title>
    <CreatedDate>14/05/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4341</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4341</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>4341</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>VR</Name>
        <IssueID>4341</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

In the Unity editor, hitting Play when a VR device is plugged in when the Mixed Reality Portal is closed causes a NullReferenceException in WindowsSpeechInputProvider.cs.

## To reproduce

- Plug in a VR device
- Ensure Mixed Reality Portal is closed
- Open Unity project
- Create a new scene
- Click Mixed Reality Toolkit -&gt; Add to Scene and Configure... and select your config profile
- Select MixedRealityToolkit instance so inspector is visible (doesn't happen when not selected)
- Hit Play
- Observe Mixed Reality Portal launch and NullReferenceException a moment later

## Your Setup (please complete the following information)

- Unity Version 2018.4.0 / 2019.1.1
- MRTK Version 2 (mrtk_development branch)</Description>
  </Issue>
  <Issue>
    <IssueID>4340</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>4340</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>andreiborodin</FixedById>
        <IssueID>4340</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Building .NET Master (.NET Native) flavor to HL2 Breaks Hands</Title>
    <CreatedDate>14/05/2019</CreatedDate>
    <ClosedDate>01/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>.NET Backend</Name>
        <IssueID>4340</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4340</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4340</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>4340</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4340</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Now</Name>
        <IssueID>4340</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## OverviewWhen you build Release version of .NET, everything works on latest MRTK as of today. However, the Master version (.NET Native) compiler breaks the hands.## Expected BehaviorHands to work.## Actual BehaviorHands don't work.## Steps to reproduce1. Take latest MRTK2. Switch to .NET Scripting Runtime3. Build UWP4. Build and deploy to device the Master flavor (.NET Native enabled)## Unity Editor Version2018.3.11f1## Mixed Reality Toolkit Release Version2.0.0-RC1RefreshSample of the log:ArgumentException: Arg_ArgumentException   at SharedLibrary!&lt;BaseAddress&gt;+0x3f5e3b​   at HelloAR U3D!&lt;BaseAddress&gt;+0x141fdbb​   at HelloAR U3D!&lt;BaseAddress&gt;+0x141fc3b​   at Microsoft.MixedReality.Toolkit.WindowsMixedReality.Input.WindowsMixedRealityArticulatedHand.UpdateControllerData(XR.WSA.Input.InteractionSourceState interactionSourceState)​   at Microsoft.MixedReality.Toolkit.WindowsMixedReality.Input.WindowsMixedRealityArticulatedHand.UpdateController(XR.WSA.Input.InteractionSourceState interactionSourceState)​   at Microsoft.MixedReality.Toolkit.WindowsMixedReality.Input.WindowsMixedRealityDeviceManager.InteractionManager_InteractionSourceDetected(XR.WSA.Input.InteractionSourceDetectedEventArgs args)​   at HelloAR U3D!&lt;BaseAddress&gt;+0x2154629​   at UnityEngine.XR.WSA.Input.InteractionManager.SourceEventHandler.Invoke(XR.WSA.Input.InteractionSourceState state)​   at UnityEngine.XR.WSA.Input.InteractionManager.OnSourceEvent(XR.WSA.Input.InteractionManager.EventType eventType, IntPtr statePtr, XR.WSA.Input.InteractionSourcePressType pressType)​   at UnityEngine.XR.WSA.Input.InteractionManager.$Invoke19(Int64 instance, Int64* args)​   at UnityEngine.Internal.$MethodUtility.InvokeMethod(Int64 instance, Int64* args, IntPtr method) ​(Filename: &lt;Unknown&gt; Line: 0)[</Description>
  </Issue>
  <Issue>
    <IssueID>4339</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>4339</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MixedRealityToolkit object does not properly unregister services on destroy</Title>
    <CreatedDate>14/05/2019</CreatedDate>
    <ClosedDate>31/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4339</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4339</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Services</Name>
        <IssueID>4339</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4339</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When the MixedRealityToolkit object is destroyed, it does not remove the registered service instances from the static registry class. This results in destroyed objects being registered as well as the potential for client application confusion due to multiple instances of the same service existing unexpectedly.

## Your Setup (please complete the following information)

- Unity Version 2018.3+
- MRTK Version v2.0 RC1 Refresh
</Description>
  </Issue>
  <Issue>
    <IssueID>4337</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>PlayModeTests: MRTK does not get destroyed when unloading / loading a new scene</Title>
    <CreatedDate>14/05/2019</CreatedDate>
    <ClosedDate>27/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4337</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4337</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Tests</Name>
        <IssueID>4337</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
For playmode tests we need to be able to unload a scene, unload MRTK, and then load a new MRTK in a fresh / unmodified state. Currently after unloading a scene and then loading a new scene, MRTK does not reset its state.

This is blocking many play mode test behaviors which rely on MRTK scene being in a consistent state when the test starts. For example, since the MRTK object persists between tests, the currently focused object will not get cleared between tests. This means that we cannot ensure that a focus enter event will get sent in a brand new test when it is put in front of the camera, because MRTK might already be focusing some other (now destroyed) object.

To reproduce, import the unity package in this zip file into your MRTK branch.

[TestSceneLoadUnload.zip](

Then run the new "TestSceneLoadUnload" test in PlayModeTests.

## Expected Behavior
TestSceneLoadUnload test passes because in Test02 we ensure that 1) the previous scene unloads, 2) the new scene loads WITHOUT adding mrtk, and therefore that 3) MRTK is not already initialized.

## Actual Behavior
TestSceneLoadUnload test fails because after step 2) above, MRTK is already initialized (even though we have not yet added MRTK to the scene).
</Description>
  </Issue>
  <Issue>
    <IssueID>4335</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>4335</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>PROPOSAL: Add service profile accessor property to core system interfaces.</Title>
    <CreatedDate>14/05/2019</CreatedDate>
    <ClosedDate>17/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4335</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>4335</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4335</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK Approved</Name>
        <IssueID>4335</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>By strict definition, this is a breaking change (any custom system implementation would be required to update). For application code, this provides a new option for gaining access to the profiles.

## Describe the problem

Currently, application code is required to call MixedRealityToolkit.Instance.ActiveProfile.&lt;system&gt;Profile to access profile data at runtime. The work related to #3545 enables developer customers to use a custom registration path for systems which does not gurantee that the MixedRealityToolkit object will be instantiated.

## Describe the solution you'd like

Add an accessor property to each core system that exposes the profile to application code, similar to the following:

``

## Describe alternatives you've considered

Considering many (most?) systems provide individual profile settings as properties of their interfaces, one option is to disallow application code from directly accessing the profiles.

</Description>
  </Issue>
  <Issue>
    <IssueID>4334</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>4334</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK &gt; Add to Scene and Configure menu does not add MixedRealityPlayspace</Title>
    <CreatedDate>14/05/2019</CreatedDate>
    <ClosedDate>14/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>4334</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4334</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>4334</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
MRTK &gt; Add to Scene and Configure menu does not add MixedRealityPlayspace

## To reproduce

1. File &gt; New Scene
2. Mixed Reality Toolkit &gt; Add to Scene and Configure

![2019-05-15 00_49_40-Unity 2018 3 13f1 Personal - Untitled - MRTK-GitHub - PC, Mac   Linux Standalone](

## Result
Only **MixedRealityToolkit** is added. **MixedRealityPlayspace** is missing.

![2019-05-15 00_50_02-Unity 2018 3 13f1 Personal - Untitled - MRTK-GitHub - PC, Mac   Linux Standalone](

## Expected behavior
**MixedRealityPlayspace** should be added together with **MixedRealityToolkit** just like other existing example scenes.

![2019-05-15 00_53_15-Unity 2018 3 13f1 Personal - HandInteractionExamples unity - MRTK-GitHub - PC, M](

## Setup 

- Unity Version: 2018.3.13f1
- MRTK: mrtk_development branch</Description>
  </Issue>
  <Issue>
    <IssueID>4129</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Pressable buttons interfering with grab pointer</Title>
    <CreatedDate>30/04/2019</CreatedDate>
    <ClosedDate>02/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4129</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4129</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>DDE Partner</Name>
        <IssueID>4129</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
When placing grabbable buttons near a bounding box that is grabbable, the buttons interfere with the bounding box's grabbability.


## To reproduce

Place a pressable button near a bounding box. 
The ways in which you can grab the bounding box are heavily restricted, and most fist clamping gestures no longer work.

## Expected behavior

It should be possible to grab a bounding box easily while being near a pressable button.

## Screenshots


## Your Setup (please complete the following information)

- Unity Version 2018.3.8f1
- MRTK Version v2.0 latest dev

## Target Platform (please complete the following information)

- HoloLens 2

## Additional context


</Description>
  </Issue>
  <Issue>
    <IssueID>4128</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Manipulation Handler: "Rotate Around Grab Point" Rotates around palm position not Grab Point</Title>
    <CreatedDate>30/04/2019</CreatedDate>
    <ClosedDate>30/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4128</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4128</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>DDE Partner</Name>
        <IssueID>4128</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When setting to "manipulation handler" to "rotate around grab point" seems to rotate around the palm position, and not the actual grab point.  This could be causing this issue as well.... 

## To reproduce

Steps to reproduce the behavior:

0. Assuming issue 4126 is fixed
1. Apply "Manipulation Handler" to an object that has a box collider
2. Set the following properties on the "Manipulation Handler"
   a. Manipulation Type = One and Two Handed
   b. Two Handed Manipulation = Move Rotate
   c. Allow Far Manipulation = false
   d. One Hand Rotation Mode Near/Far = Rotate About Grab Point
   e. Release Behavior = Nothing
   f. Constraint On Rotation = Y Axis Only
  g. Constraint on Movement = Fix Distance From Head
  h. Smoothing Active = true
  i. Smoothing Amount = 0.01
3. Build and Deploy App
4. Pinch object with one hand, so palm is not within the collider
5. Rotate hand

## Expected behavior

Rotation to be around pinch point, not palm


## Your Setup (please complete the following information)

- Unity Version - 2018.3.8
- MRTK Version - rc1

## Target Platform (please complete the following information)

- HoloLens 2

</Description>
  </Issue>
  <Issue>
    <IssueID>4126</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>lukastoenneMS</FixedById>
        <IssueID>4126</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Manipulation Handler : Rotate About Grab Point does not behave as expected, when grabbing at edges of collider</Title>
    <CreatedDate>30/04/2019</CreatedDate>
    <ClosedDate>19/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4126</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4126</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>DDE Partner</Name>
        <IssueID>4126</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4126</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - ObjectManipulator</Name>
        <IssueID>4126</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

If you set "One Hand Rotation Mode" to "Rotate About Grab Point" and grab near the collider's edge, the rotation also applies an unexpected translation along the Y axis. 

## To reproduce

Steps to reproduce the behavior:

1. Apply "Manipulation Handler" to an object that has a box collider
2. Set the following properties on the "Manipulation Handler"
   a. Manipulation Type = One and Two Handed
   b. Two Handed Manipulation = Move Rotate
   c. Allow Far Manipulation = false
   d. One Hand Rotation Mode Near/Far = Rotate About Grab Point
   e. Release Behavior = Nothing
   f. Constraint On Rotation = Y Axis Only
   g. Constraint on Movement = Fix Distance From Head
   h. Smoothing Active = true
   i. Smoothing Amount = 0.01
3. Build and Deploy App
4. Grab object with one hand, at the edge of the collider.
5. Rotate hand

## Expected behavior

Object to stay attached to the hand, as you rotate

## Actual behavior

As you rotate, object translates up or down along y-axis.  Detaching from hand

## Your Setup (please complete the following information)

- Unity Version - 2018.3.8
- MRTK Version - RC1

## Target Platform (please complete the following information)

- HoloLens 2

## Additional context

Ping me for a repo if needed
</Description>
  </Issue>
  <Issue>
    <IssueID>4125</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>lukastoenneMS</FixedById>
        <IssueID>4125</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Simulated hands do not produce correct joint rotations </Title>
    <CreatedDate>30/04/2019</CreatedDate>
    <ClosedDate>13/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4125</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>DDE Partner</Name>
        <IssueID>4125</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4125</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The joints on the simulated hands do not produce the same rotations as the ones in the detected hands on device.

Notably, the right and forward vectors from the palm transform generated by simulated hand are not representative of what's produced by the system.

## To reproduce

Display the transforms returned by the simulated hands.
They will be different in a build on device.

## Expected behavior

Simulated hands produce accurate transforms.

## Screenshots



## Your Setup (please complete the following information)

- Unity Version 018.3.8f1]
- MRTK Version v2.0 (latest dev branch)

## Target Platform (please complete the following information)

- HoloLens 2

## Additional context


</Description>
  </Issue>
  <Issue>
    <IssueID>4123</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>4123</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>killerantz</FixedById>
        <IssueID>4123</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Toggle button has design and feature bugs</Title>
    <CreatedDate>30/04/2019</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4123</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4123</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>DDE Partner</Name>
        <IssueID>4123</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>4123</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4123</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

The Interactable component can be utilized for Toggle button functionality and there is a toggle prefab available. However, there are two bugs: a design bug and a feature bug. 

Design:
To create a toggle button, one has to modify the dimensions to "2" and then they will get the "Can select" and "Can deselect" options available. Also it is not obvious that the additional theme field provided for the 2nd dimensions corresponds to the "selected" dimension state. 

Feature:
In order to validate whether the button is in the toggled state, one would think to use the "Interactable.IsToggled" property but this is only set by "Interactable.SetToggled" which is never called. Instead, the developer must call "Interactable.GetDimensionIndex == 1" which is not obvious.

## To reproduce

Steps to reproduce the behavior:
Look at Interactable.cs and the inspector

## Expected behavior

1) Configuring a button to be "toggleable" should be easier
2) SetToggled and IsToggled should be set as the user clicks on the button and selects/deselects

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2018.3 or 2019.1
- MRTK Version RC1

## Target Platform (please complete the following information)

- HoloLens 2

## Additional context

Microsoft =&gt; trferrel
</Description>
  </Issue>
  <Issue>
    <IssueID>4121</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Play mode not starting, highlighting MixedRealityToolkit gameobject instead</Title>
    <CreatedDate>30/04/2019</CreatedDate>
    <ClosedDate>13/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4121</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4121</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>4121</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
It sometimes happens that I want to go into play mode, which I can't enter (exits immediately) and MixedRealityToolkit gets a ping.
I dug into where that comes from and it seems that the Active Profile is null then. I have to restart Unity for this to be fixed. Since this is a SerializedField with a proper value in it, I'm puzzled how this can happen.

## To reproduce

I do not have steps to reproduce it yet

## Expected behavior

The Active Profile never goes null

## Screenshots

![image](


## Your Setup (please complete the following information)

- Unity Version 2018.3.13f1
- MRTK Version v2.0

## Target Platform (please complete the following information)

- Editor</Description>
  </Issue>
  <Issue>
    <IssueID>4117</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Null reference exception when clicking on manipulation handler with gaze pointer</Title>
    <CreatedDate>29/04/2019</CreatedDate>
    <ClosedDate>01/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4117</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4117</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
NullReferenceException: Object reference not set to an instance of an object
Microsoft.MixedReality.Toolkit.UI.ManipulationHandler.GetPointersVelocity () (at Assets/MixedRealityToolkit.SDK/Features/Input/Handlers/ManipulationHandler.cs:232)
`</Code>
    <Description>Steps to reproduce the behavior:

1. Open HandInteractionExamples scene
2. Play scene with an Xbox controller connected
3. Look at an object with a manipulation handler and press the A button in the controller
4. Observe following error:

``

This is happening because manipulation handler assumes that all pointers have a valid controller, which is not the case for the gaze pointer.</Description>
  </Issue>
  <Issue>
    <IssueID>4115</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HL1 opens MRTK 2 RC1 sample project in "window mode" instead of full screen</Title>
    <CreatedDate>29/04/2019</CreatedDate>
    <ClosedDate>08/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4115</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4115</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

I am testing the MRTK 2 RC 1, I made a build with the HandInteractionExamples and installed it on a Hololens 1. However when I start the application it creates a holographic 2D window (like a UWP application) where the camera is rendered and no interactions are captured.

## To reproduce

Create a blank project with only the MRTK 2 RC 1 foundation and exemples then create a build with the HandInteractionExamples scene.

## Expected behavior

When the app starts, all app holograms should disappear and the app should be rendered in 3D with all interactions working.

## Screenshots

Please ask if needed.

## Your Setup (please complete the following information)

- Unity Version 2019.1
- MRTK Version 2 RC 1

## Target Platform (please complete the following information)

- HoloLens 1
</Description>
  </Issue>
  <Issue>
    <IssueID>4114</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Some Vector2 input changes are not reported correctly </Title>
    <CreatedDate>29/04/2019</CreatedDate>
    <ClosedDate>15/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4114</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4114</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The code used to set Vector2 values in interaction mappings (MixedRealityInteractionMapping.Vector2Data setter) performs the following check:
``
Which only returns true if both x and y components have changed.</Description>
  </Issue>
  <Issue>
    <IssueID>4113</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Updating with Windows Insider destroyed my Windows Installation beyond repair</Title>
    <CreatedDate>29/04/2019</CreatedDate>
    <ClosedDate>30/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4113</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I wanted to try out the new MRTK and as instructed in the documentation, opted into the Windows Insider Program so I could get the latest Windows SDK required.
While the update installed fine, a lot of errors starting popping up like "the application was unable to start correctly". Turns out, the cumulative update for the may update completely removed everything related to the .NET Framework as well as left me unable to reinstall any .NET Framework.

Please see more detail on the issue [here]( and [here](

I now have no other option other than to do a complete new install of my windows installation.
A complete day of work is wasted, and this is unacceptable.

Just as a caution to people who want to checkout the latest MRTK - do it in a VM. At least that way it won't screw up your primary work computer and put you out of work for a whole day.</Description>
  </Issue>
  <Issue>
    <IssueID>4109</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Copy &amp; Customize of MRTK settings should dirty the scene so that profile change is saved</Title>
    <CreatedDate>28/04/2019</CreatedDate>
    <ClosedDate>29/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4109</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When MRTK applies changes via *Copy &amp; Customize*, it should dirty the scene so that the scene can be saved.

## To reproduce

Steps to reproduce the behavior:

1. Create new project, add MRTK foundation .unitypackage
2. Click on Mixed Reality Toolkit &gt; Add to Scene and Configure
3. Save scene
4. Select MixedRealityToolkit game object
5. In Inspector, click Copy &amp; Customize button
6. View MixedRealityToolkit game object in inspector, notice that Active Profile = MixedRealityToolkitConfigurationProfile (the settings that you just cloned)
7. Exit Unity
8. Reopen project

## Actual behavior
MixedRealityToolkit game object Active Profile = DefaultMixedRealityToolkitConfigurationProfile.

## Expected behavior
* After step 5, asterisk (*) is shown in the Unity title bar, indicating that the scene is dirty
* As part of step 7, you are prompted to save changes to the scene before exiting
* After step 8, MixedRealityToolkit game object Active Profile = MixedRealityToolkitConfigurationProfile (the settings that you just cloned)

## Your Setup (please complete the following information)

- Unity Version 2019.1.0f2
- MRTK Version v2.0.0 RC1

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR
</Description>
  </Issue>
  <Issue>
    <IssueID>4108</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SharingServices.exe is missing</Title>
    <CreatedDate>27/04/2019</CreatedDate>
    <ClosedDate>30/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4108</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>By Design</Name>
        <IssueID>4108</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hello,

in your repository last year ago, the folder  "External/Holotoolkit/Sharing/Server" contained a cool file called "SharingService.exe". You could connect several Hololenses with that server and you could use them for Multiplayer.

Was that "SharingService.exe" moved to another folder? I can't find it anymore :(</Description>
  </Issue>
  <Issue>
    <IssueID>4104</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>4104</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Feature Request: Move all service management out of MixedRealityToolkit and into MixedRealityServiceRegistry</Title>
    <CreatedDate>26/04/2019</CreatedDate>
    <ClosedDate>20/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4104</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4104</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Services</Name>
        <IssueID>4104</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

With the introduction of the MixedRealityServiceRegistry (#4099) our registration story has become a bit muddled.

## Describe the solution you'd like

Turn the MixedRealityToolkit instance into a front-end for the service registry so we clean up our story without breaking existing services.

The ONLY place services are actually registered / stored is in the MixedRealityServiceRegistry class.

And the ONLY thing the MixedRealityToolkit instance would be responsible for is relaying MonoBehaviour events to the registered services (which is the one thing a static class can't do).

``</Description>
  </Issue>
  <Issue>
    <IssueID>4097</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Pressable Buttons are invisible</Title>
    <CreatedDate>26/04/2019</CreatedDate>
    <ClosedDate>30/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4097</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
I wanted to check the new buttons out, but their body is invisible.

## To reproduce

check out the PressableButtonExample scene

## Expected behavior

All buttons look like buttons

## Screenshots

![image](

## Your Setup (please complete the following information)

- Unity Version 2018.3.13f1
- MRTK Version v2.0

## Target Platform (please complete the following information)

- Editor
- WMR immersive
</Description>
  </Issue>
  <Issue>
    <IssueID>4095</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Orbital needs a little redesign</Title>
    <CreatedDate>26/04/2019</CreatedDate>
    <ClosedDate>21/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4095</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>4095</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4095</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>4095</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Orbital provides two offsets in the inspector (LocalOffset and WorldOffset). The tooltip prohibits the use of both at the same time.
This should be reduced to just an offset and an enum distinguishing between local and world mode for that. Nothing really prevents you from screwing this up.

The difference between these two is just that worldOffset uses yawOnly. They have nothing to to with wether they follow a "LocalPosition" or a "WorldPosition" (static position) as I would have expected.

Futhermore, there is the orientationType yawOnly, which explicitly uses the TransformTarget. it cannot be combined with all the other orientations which could use this "keep it up right" option.

yaw Only should be a boolean used with all other options.</Description>
  </Issue>
  <Issue>
    <IssueID>4094</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hololens Emulation: Cursor stops working after first air-tap on Hololens (Gen 1) using RC1</Title>
    <CreatedDate>26/04/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4094</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4094</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Emulator</Name>
        <IssueID>4094</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>4094</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>4094</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When using RC1 on hololens emulator, air-tapping does stop working after first tap.
After the cursor animates to a circle, the cursor stays as a circle and objects cannot be selected.

## Steps to reproduce
1. Create new unity project
2. Pull newest commit from mrtk_development
3. Copy Asset folder into unity project root folder =&gt; Wait until assets are loaded
4. Configure scene: Mixed Reality Toolkit --&gt; Add to scene and configure... --&gt; Select default configuration
5. Switch build settings to UWP
6. Change Player settings: Project Settings --&gt; Player --&gt; XR Settings --&gt; Virtual Reality Supported
7. Build using Utilites: Mixed Reality Tookit --&gt; Utilities --&gt; Build Window --&gt; Build Unity Project
8. Deploy to emulator: Open Visual Studio Solution --&gt; Switch to x86 --&gt; Select Hololens Emulator --&gt; Click Start
9. Perform an air-tap

## Expected behavior

Scene starts, white dot indicating gaze is seen. When air-tapping, the cursor should animate from dot to circle to dot. The object being selected should also recognize that its being selected.

## Setup

- Unity Version 2018.3.7f1
- MRTK Version v2.0 RC1 and also the latest commit on development

## Target Platform

- HoloLens Emulator

## Additional context

This problem is similar to the bug described [here]( @wiwei suggested to file another issue.
</Description>
  </Issue>
  <Issue>
    <IssueID>4093</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4093</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Spelling mistake in ManipulationHandler.md </Title>
    <CreatedDate>26/04/2019</CreatedDate>
    <ClosedDate>26/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4093</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
Spelling mistake in README_ManipulationHandler.md in the "Events" topic: Manupulation 

## Existing Doc Link
Unity/Documentation/README_ManipulationHandler.md</Description>
  </Issue>
  <Issue>
    <IssueID>4092</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>QR Tracking and ArUco markers</Title>
    <CreatedDate>26/04/2019</CreatedDate>
    <ClosedDate>30/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4092</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Hello i wan't to try QR Tracking for my WMR headset in unity but if i run the project and i print QRTrackerStartResult i show 
``</Description>
  </Issue>
  <Issue>
    <IssueID>4089</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Feature Request: SceneSystem Service</Title>
    <CreatedDate>25/04/2019</CreatedDate>
    <ClosedDate>10/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>1 - Planning</Name>
        <IssueID>4089</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4089</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4089</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

Unity suggests using a [base manager scene]( and additively loading / unloading content on top of that. In theory we recommend this approach but in practice our story is muddled.

## Describe the solution you'd like

A SceneSystem core service to facilitate scene loading and unloading.

-	Additive scene loading will be as simple as passing a scene name or names to an async method.
-	‘Single’ scene loading will mimic Unity’s single scene loading – just pass a scene name and all current scenes will be automatically unloaded.
-	You will be able to control which scenes are required to have an MRTK instance and which aren’t.
-	You will be able to open / play multiple scenes (with multiple MRTK instances) in the editor.
-	The service will help you spot and automatically resolve common mismatches between scene settings (lighting, navmeshes, etc.)
-	Like all services, the scene system can be disabled and devs can use Unity’s SceneManager exclusively, if desired.

## Describe alternatives you've considered

Updating our docs with detailed guidance and leaving it to devs to implement their own solutions.

## Additional context

Initial Proposal: #3987
Related PRs: #4047, #4035, #3890, #3961</Description>
  </Issue>
  <Issue>
    <IssueID>4084</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4084</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Misordered MixedRealityInputModule and OnSourceDetected invocation</Title>
    <CreatedDate>25/04/2019</CreatedDate>
    <ClosedDate>07/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4084</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>We've seen a couple of instances now where the MixedRealityInputModule and various providers (i.e. GazeProvider) are getting initialized in non-deterministic fashion. If the GazeProvider starts first, it will raise its source detected, and then when MixedRealityInputModule::ActivateModule is invoked, it re-invokes OnSourceDetected, which tries to add the same pointer to the pointer dictionary.

This throws an exception (bad). We want to update the OnSourceDetected function to only try to add it to the dictionary if it doesn't exist, but at the same time we don't want to lose track of what appears to be a relatively interesting (and possibly with other ramifications) issue.</Description>
  </Issue>
  <Issue>
    <IssueID>4083</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Input action references are ill-defined</Title>
    <CreatedDate>25/04/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4083</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4083</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4083</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>4083</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Input actions are created by adding an entry to the table of input actions in the input actions profile. On creation, they get their ID set to their index in the table. When a user sets an input action in a script property, e.g. the pose action in a pointer, the ID gets serialized with it. This is problematic because:

1. Removing and adding entries in the actions table may yield actions with the same ID
2. Assuming that IDs are unique within an input actions profile, they don't uniquely identify actions across profiles. As we don't serialize a reference to the profile with the ID, when loading it you don't really know which action it originally referred to.

My preferred solution for this is to make actions assets (scriptable objects), so they can referred to from any scene in a well defined manner.</Description>
  </Issue>
  <Issue>
    <IssueID>4080</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>AnimatedCursor jumps back and forth infront of the MotionController</Title>
    <CreatedDate>25/04/2019</CreatedDate>
    <ClosedDate>29/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4080</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
Just pointing into nowhere results in the Cursor switching position like crazy, bewteen linerenderer tip and somewhere along that line.

## To reproduce

Steps to reproduce the behavior:

Just watch your UWP Motion Controller cursor

## Expected behavior

Pointer is stable at the linerenderer tip

## Your Setup (please complete the following information)

- UNITY Version 2018.3.13f1
- MRTK Version v2.0

## Target Platform (please complete the following information)

- WMR immersive
</Description>
  </Issue>
  <Issue>
    <IssueID>4079</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InputSimulationProfile does not exist...</Title>
    <CreatedDate>25/04/2019</CreatedDate>
    <ClosedDate>29/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4079</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem
I'm using the release candidate downloaded directly from git. The documentation say there should be something like a InputSimulationProfile, to controll the app in the Unity Editor (working for HoloLens 1). Well, it's not there. This worked perfectly in the HLTK and really should be enabled by default. 

## Describe the solution you'd like
This whole profile editing and adding stuff is a little much in my opinion. Most of that stuff could be just set with a toggle on/off. I would love  to just toggle a thingy that disables all the stuff I don't need when using the HL1...

## Describe alternatives you've considered

I coded the camera controlls myself, but no way to grab or even click something the Holo-way
</Description>
  </Issue>
  <Issue>
    <IssueID>4072</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Oculus Touch controller won't send an action when trigger is pressed</Title>
    <CreatedDate>24/04/2019</CreatedDate>
    <ClosedDate>23/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4072</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4072</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4072</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Oculus Touch controller won't send an action when trigger button is fully pressed. Action has "Digital" axis constraint.

## To reproduce

Steps to reproduce the behavior:

1. Make new scene using a clone of DefaultMixedRealityToolkitConfigurationProfile
2. Clone and apply DefaultMixedRealityInputSystemProfile, DefaultMixedRealityInputActionProfile, and DefaultMixedRealityControllerMappingProfile
3. Make sure the is "Select" action with "Digital" axis constraint in the MixedRealityInputActionProfile.
4. In the MixedRealityControllerMappingProfile, map the "Select" action to Oculus Touch controller under Axis1D.PrimaryIndexTriggerPress and Axis1D.SecondaryIndexTriggerPress

## Expected behavior

"Select" action is supposed to be fired when the trigger button is fully pressed.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version 2018.3.9f1
- MRTK Version RC1

## Target Platform (please complete the following information)

- Oculus running on OpenVR

</Description>
  </Issue>
  <Issue>
    <IssueID>4068</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can't add anythig to the InputSystemProfile</Title>
    <CreatedDate>24/04/2019</CreatedDate>
    <ClosedDate>25/04/2019</ClosedDate>
    <IssueLabels />
    <Description>It's essential for me to use mouse and keyboard to test my Application. The documentation says, I sould add Input Simulation Service ( but there is no option for that.

This worked so good in the old HLTK...
</Description>
  </Issue>
  <Issue>
    <IssueID>4067</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4067</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Changing MRTK folder paths results in problems with Controller Mapping</Title>
    <CreatedDate>24/04/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4067</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4067</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>4067</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Moving the MRTK folders to another folder than Assets (My path was in this case Assets/Libs/MRTK/MixedRealityToolkit... etc) results in issues with Controller Mapping, as the EditorWindow (ControllerWindowPopup.cs) is hardcoded to open up directly from Assets folder. 

## Expected Behavior
My idea would be one or more of potential scenarios:
- Controller Mapping working no matter where MRTK folders are placed
- Easily readable LogErrors when attempting to open the ControllerMapping from wrong path
- Highlighted in documentation that moving the project to a different folder creates issues (Like it is highlighted with changing the camera position) 

## Actual Behavior
NullPointerReference saying it couldn't close the window because it is null from the ControllerWindowPopup.cs

## Steps to reproduce
-Download MRTK RC1
-Generate Custom Profiles (Particularly ControllerMapping profile) 
-Move all folders into a new folder called MRTK 
-Open any of the EditorWindows from the ControllerMapping profile


## Unity Editor Version
2018.3.13f

## MRTK Version
MRTK RC1</Description>
  </Issue>
  <Issue>
    <IssueID>4066</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Error - HoloLensWorldManager failed to return a world coordinate system!</Title>
    <CreatedDate>24/04/2019</CreatedDate>
    <ClosedDate>30/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I get the error down below when I play my scene. 

## Expected Behavior

Preferably this should not occur.

## Actual Behavior

Full error 

HoloLensWorldManager failed to return a world coordinate system!
UnityEngine.XR.WSA.SurfaceObserver:SetVolumeAsAxisAlignedBox(Vector3, Vector3)
Microsoft.MixedReality.Toolkit.WindowsMixedReality.SpatialAwareness.WindowsMixedRealitySpatialMeshObserver:ConfigureObserverVolume() (at Assets/MixedRealityToolkit.Providers/WindowsMixedReality/WindowsMixedRealitySpatialMeshObserver.cs:523)
Microsoft.MixedReality.Toolkit.WindowsMixedReality.SpatialAwareness.WindowsMixedRealitySpatialMeshObserver:CreateObserver() (at Assets/MixedRealityToolkit.Providers/WindowsMixedReality/WindowsMixedRealitySpatialMeshObserver.cs:300)
Microsoft.MixedReality.Toolkit.WindowsMixedReality.SpatialAwareness.WindowsMixedRealitySpatialMeshObserver:Initialize() (at Assets/MixedRealityToolkit.Providers/WindowsMixedReality/WindowsMixedRealitySpatialMeshObserver.cs:82)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:RegisterServiceInternal(Type, IMixedRealityService) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:842)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:RegisterServiceInternal(IMixedRealitySpatialAwarenessObserver) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:858)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:RegisterService(Type, SupportedPlatforms, Object[]) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:199)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:RegisterDataProvider(Type, SupportedPlatforms, Object[]) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:280)
Microsoft.MixedReality.Toolkit.SpatialAwareness.MixedRealitySpatialAwarenessSystem:Enable() (at Assets/MixedRealityToolkit.Services/SpatialAwarenessSystem/MixedRealitySpatialAwarenessSystem.cs:85)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:EnableAllServices() (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:973)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:OnEnable() (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:772)

The error ticks while the scene is being played
![image](
 

## Steps to reproduce

This is the scene hierarchy 
![image](
There is also an ARCamera for my script (which is on the main camera) to handle. 

How the game scene looks like 
![image](



## Unity Editor Version
2019.1.0f2

## Mixed Reality Toolkit Release  
MRTK v2 RC1</Description>
  </Issue>
  <Issue>
    <IssueID>4065</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MainCamera in MixedRealityPlayScene does not accept made changes when being reloaded</Title>
    <CreatedDate>24/04/2019</CreatedDate>
    <ClosedDate>24/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4065</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

MainCamera in MixedRealityPlayScene does not accept made changes when being reloaded. When changing the Clear Flags from the standard SkyBox to Solid Color for example, I save the scene with the new set-up. When opening the project again after it has been closed the changes has gone back to the standard.  

Also noticed now that this also occurs when playing the scene. It is the Sky box that shows not the Solid Color black which is what the HoloLens is compatible with.

## To reproduce

Steps to reproduce the behavior:

1. Create new project
2. Add MRTK v2 RC1 to your project
3. Do the exampled change above to your mainCamera in the MixedRealityPlayScene
4. Save changes

5. Close project
6. Open it again to see if the changes still remain

Alternatively...

5. Play scene
6. See if the changes is intact

## Expected behavior

Changes made to an object in MixedRealityPlayScene should be saved.  

## Your Setup (please complete the following information)

- Unity Version 2019.1.0f2
- MRTK Version v2 RC1

## Target Platform (please complete the following information)

- HoloLens

## Additional context

Maybe this is how the MixedRealityPlaySpace should work, with these exact settings. But as mentioned above - is it not vital for HoloLens development to have the Clear Flags Solid Color set to black? 
</Description>
  </Issue>
  <Issue>
    <IssueID>4064</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Diagnostics appear in MixedRealityPlaySpace when project is being played</Title>
    <CreatedDate>24/04/2019</CreatedDate>
    <ClosedDate>24/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4064</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Diagnostics appear in MixedRealityPlaySpace when project is being played. 

## To reproduce

Steps to reproduce the behavior:

1. Create new project
2. Add MRTK v2 RC1
3. Play the project
4. See diagnostics object in game scene

## Expected behavior

The diagnostics object should not to pop up in game scene if I have not manually set it to do so.

## Screenshots

If applicable, add screenshots to help explain your problem.

How diagnostics appears in the hierarchy.

![image](

How diagnostics appear in game scene being played.

![image](


## Your Setup (please complete the following information)

- Unity Version 2019.1.0f2
- MRTK Version  v2.0 RC1

## Target Platform (please complete the following information)

- HoloLens

## Additional context

Is this built in in the MixedRealityPlaySpace? It is able to delete the diagnostics object while playing but it appears again next time I play the scene.
</Description>
  </Issue>
  <Issue>
    <IssueID>4052</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>4052</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>Yoyozilla</FixedById>
        <IssueID>4052</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Manipulation handler constraints not applied when set in code</Title>
    <CreatedDate>22/04/2019</CreatedDate>
    <ClosedDate>02/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4052</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4052</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When modifying the constraints of a manipulation handler via code, the default settings are still applied.

## To reproduce

Steps to reproduce the behavior:

1. Add a manipulation handler to the scene
2. At runtime, try and change the constraints.
3. The manipulation handler will be effectively unchanged.

## Expected behavior

The manipulation handler should adapt to the changed constraints.

## Screenshots

## Your Setup (please complete the following information)

- Unity Version 2018.3.8f1
- MRTK Version v2 RC1

## Target Platform (please complete the following information)

- HoloLens 2

## Additional context


</Description>
  </Issue>
  <Issue>
    <IssueID>4046</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Yoyozilla</FixedById>
        <IssueID>4046</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>"Add to Scene and Configure" doesn't gracefully fail when no camera is present in the scene.</Title>
    <CreatedDate>22/04/2019</CreatedDate>
    <ClosedDate>30/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4046</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4046</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Fixed</Name>
        <IssueID>4046</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

When the "Mixed Reality Toolkit-&gt;"Add to Scene and Configure..." menu item is selected in a scene **without** a camera a handful of null reference exceptions occur and the MRTK is not configured correctly.

The project we are seeing this occur in loads a camera dynamically at runtime based on certain project restrictions.

## To reproduce

Select "Mixed Reality Toolkit-&gt;"Add to Scene and Configure..." in a scene without a camera.

## Expected behavior

All exceptions are gracefully handled. Optionally, anything relying on the Camera or Camera Cache could automatically setup a main camera for the user.</Description>
  </Issue>
  <Issue>
    <IssueID>4045</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>4045</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>I build UWA and install in PC,but don't connect to local unity server.Please help.</Title>
    <CreatedDate>22/04/2019</CreatedDate>
    <ClosedDate>23/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>4045</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Windows UWP</Name>
        <IssueID>4045</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Hi , 
     1. I build UWA app and install it in windows 10.
     2. I build local server by unity.
     3. I open unity server and UWA app. But the app don't connect to unity server.
Can you help me?I search lots of questions,but i don't resolve this question.
## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>4043</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>4043</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>No Active Toolkit Found Dialog shows up during build</Title>
    <CreatedDate>21/04/2019</CreatedDate>
    <ClosedDate>23/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4043</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
For awhile now when attempting to build in Unity, it will create and open an empty scene. When the build is complete it will return to the scene that was open when the build started and the temporary scene will vanish. 

Now, in addition to this odd behavior, while the build is ongoing, for this empty scene the MRTK will open up a No Active Toolkit Found dialog (see screenshot below).



This dialog does not automatically close when the build is done and it returns to the original scene. It does not seem to impact anything, it doesn't stop the build. It is just odd / annoying.

## To reproduce
?

## Expected behavior
Assuming the empty scene is some Unity bug, this dialog seems overly aggressive in any case, though maybe it is ncessary? 

## Screenshots
[

## Your Setup (please complete the following information)
- Unity Version: 2018.3.12f1
- MRTK Version: latest MRTK_developmernt

## Target Platform (please complete the following information)
- HoloLens
- WMR immersive

## Additional context

</Description>
  </Issue>
  <Issue>
    <IssueID>8457</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>'EditorUserBuildSettings' does not contain a definition for 'wsaGenerateReferenceProjects'</Title>
    <CreatedDate>21/04/2019</CreatedDate>
    <ClosedDate>02/09/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>8457</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi,

I tried to import HoloToolkit 2017.4 into a new unity project (Unity 2019.1), and I have this error: error CS0117: 'EditorUserBuildSettings' does not contain a definition for 'wsaGenerateReferenceProjects'

Any suggestions to solve this?
</Description>
  </Issue>
  <Issue>
    <IssueID>4040</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Bug when installing MRTK and MRTK examples</Title>
    <CreatedDate>20/04/2019</CreatedDate>
    <ClosedDate>21/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4040</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>4040</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>So I've installed the latest version: HoloToolkit 2017.4.3.0 - Refresh, and its example on my project and it introduced me to new issues.

This is what's happening now...

Either I install it by drag-and-drop into the Assets folder of my project, or I just double-click on the MRTK files themselves, it is the exact same scenario.

This is the latest error I'm getting...

Assets\HoloToolkit-Examples\SpectatorView\Scripts\SpectatorViewNetworkManager.cs(4,25): error CS0234: The type or namespace name 'Preview' does not exist in the namespace 'HoloToolkit.Unity' (are you missing an assembly reference?)

Assets\HoloToolkit-Examples\SpectatorView\Scripts\SpectatorViewNetworkManager.cs(19,13): error CS0246: The type or namespace name 'SpectatorView' could not be found (are you missing a using directive or an assembly reference?)

I don't know when am I ever going to complete this project? I have been doing this for the past 3-4 weeks to NO avail!
Every time I attempt to install MRTK and MRTK-Examples on my project--even new projects--
Errors. Nothing but errors. This is FRUSTRATING with all letters in capital!</Description>
  </Issue>
  <Issue>
    <IssueID>4038</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Error after adding apply configuration</Title>
    <CreatedDate>19/04/2019</CreatedDate>
    <ClosedDate>21/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4038</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>3 error after adding MRTK configuration to a new scene. 

RC1</Description>
  </Issue>
  <Issue>
    <IssueID>4037</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>4037</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4037</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Guide Needed for Script Debugging on HoloLens 2</Title>
    <CreatedDate>19/04/2019</CreatedDate>
    <ClosedDate>17/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>4037</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4037</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>HoloLens 2</Name>
        <IssueID>4037</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>IL2CPP</Name>
        <IssueID>4037</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4037</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
This issue was discussed in [PR 3964](3964), but it's too important to lose.

Currently it is difficult (if not impossible) to debug Unity behavior scripts after they've been deployed as IL2CPP to HoloLens 2. We need a step-by-step guide on how to debug scripts on device in order to track down bugs that only occur outside the editor.

**From the previous discussion:**

- .Net  backend is still available in Unity 2018 but removed in 2019.

- There was a disussion (April 3 through 9th) about debugging on Holo 2. Early in that discussion there was a suggestion to use .Net backend and check the "Unity C# Projects" checkbox. It was mentioned as a temporary workaround until we had "improved debugging for 2019", though no information was provided about the improvement coming at that time. (In addition, currently MRTK is not working with Unity 2019.)

- Someone mentioned [this article]( as a guide for debugging IL2CPP at runtime, but someone else mentioned this approach is not currently working on HoloLens 2. (It was never explained why this approach isn't currently working on HoloLens 2.)

## Additional context
If at possible, it's critical that we get this guidance published by 5/1/2019 to support global events starting at that time.
</Description>
  </Issue>
  <Issue>
    <IssueID>4036</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Error on import MRTK RC1</Title>
    <CreatedDate>19/04/2019</CreatedDate>
    <ClosedDate>21/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4036</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>
![image](

- Unity Version [e.g. 2018.3.9]
- MRTK Version [RC1]
</Description>
  </Issue>
  <Issue>
    <IssueID>4034</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>lukastoenneMS</FixedById>
        <IssueID>4034</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>HoloLens2 MRTK visualizer for hands is enabled by default</Title>
    <CreatedDate>19/04/2019</CreatedDate>
    <ClosedDate>17/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>2 - Ready</Name>
        <IssueID>4034</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4034</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Controller Visualization</Name>
        <IssueID>4034</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Duplicate</Name>
        <IssueID>4034</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4034</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Keeping hands enabled by default is a perf hit when enabled and deployed to device. This should be disabled so developers don't forget to turn it off. Not to mention it is 3 layers deep into profiles and if you are not familar with them, you will never find it.

Ideally you have a configuration on the profile so you can enable it in the editor only.
</Description>
  </Issue>
  <Issue>
    <IssueID>4033</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4033</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>AttachToController Functional?</Title>
    <CreatedDate>19/04/2019</CreatedDate>
    <ClosedDate>15/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4033</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4033</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>4033</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>We have a code file ([AttachToController]( )that contains substantial ammount of commented code with a TODO. Not sure whether the functionality actually works.

Opening the issue to track fixing it, cleaning up the commented code or removal.</Description>
  </Issue>
  <Issue>
    <IssueID>4031</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>4031</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Proposal: Create a core camera management service which can be disabled / configured to work with AR</Title>
    <CreatedDate>19/04/2019</CreatedDate>
    <ClosedDate>29/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>4031</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4031</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Services</Name>
        <IssueID>4031</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

The MRTK exercises a great deal of control over the main camera. This can lead to problems when using ARKit / ARCore / ARFoundation.

## Describe the solution you'd like

A camera management service should be written. The default service should mimic the toolkit's current functionality. Alternate versions can be written to accommodate AR solutions and/or more complex camera setups. And like any core service, it should be possible to disable camera control altogether.

This has the added benefit of making it easier to use the toolkit as a pure service provider, if desired.

Related issues: #3616, #3948, #3762</Description>
  </Issue>
  <Issue>
    <IssueID>4030</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK 2 RC1 UWP Unity 2019.2.0a11 Multiple Build errors on examples: WindowsMixedRealityArticulatedHand.cs</Title>
    <CreatedDate>19/04/2019</CreatedDate>
    <ClosedDate>19/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4030</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

In Unity 2019.2.0a11 with MRTK 2 RC1

## To reproduce

First I had to resolve an issue in MixedRealityPreferences.cs:

I added the SettingsScope.Project arg into line 70:

![MixedRealityPreferencesIssues](

to get past this error:

![MixedRealityPreferencesError](



Then I tried to build out:

![SolverExamples](

And received the following build errors:

![MRTK2_RC1_BuildIssues](






## Expected behavior

Should build a project.

## Screenshots

See above.

## Your Setup (please complete the following information)

- Unity Version 2019.2.0a11
- MRTK Version v2.0 RC1

## Target Platform (please complete the following information)

- HoloLens


## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>4029</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Yoyozilla</FixedById>
        <IssueID>4029</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[HTK] Problems with MicStream on Hololens</Title>
    <CreatedDate>19/04/2019</CreatedDate>
    <ClosedDate>30/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4029</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4029</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>4029</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Hello, I am experiencing several problem with the Microphone on the Holotoolkit.

Here what I try to achieve: Record the voice input and send it to Azure Speech-To-Text, the only way I found to do this is to use the MicStream class, save the data in a file then upload the file to Azure.

Here are my problems:

1. When I try to to stop de record, if I call MicStream.MicStopRecording, the app crashs despite the fact the file is well saved on the Music folder. However calling MicStream.MicStopStream seems to work. Is this normal and a viable solution? I was not able to catch any error since the application totally crashes.

2. I cannot read the file once created, the path is ?/Music/MicStreamRecordings/... , I enabled the application capabilities to access audio library. I don't have the full path since I did not use MicStream.MicStopRecording, I tried 
``

And here how I read the file:
`byte[] data = File.ReadAllBytes(microphoneRecorder.GetFileLocation());`

## Expected behavior

MicStream.MicStopRecording does not make the application crash and return the file path that should be accessible.


## Your Setup (please complete the following information)

- Unity Version 2019.1
- MRTK Version 2017.4.2

## Target Platform (please complete the following information)

- HoloLens

</Description>
  </Issue>
  <Issue>
    <IssueID>4027</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>luis-valverde-ms</FixedById>
        <IssueID>4027</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>"Look rotation viewing vector is zero" message when moving a pointer</Title>
    <CreatedDate>19/04/2019</CreatedDate>
    <ClosedDate>19/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4027</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Look rotation viewing vector is zero
UnityEngine.Quaternion:LookRotation(Vector3, Vector3)
Microsoft.MixedReality.Toolkit.Input.BaseCursor:UpdateCursorTransform() (at Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Cursors/BaseCursor.cs:402)
Microsoft.MixedReality.Toolkit.Input.BaseCursor:Update() (at Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Cursors/BaseCursor.cs:288)
`</Code>
    <Description>## Describe the bug

The following message appears in the Console panel:

``

## To reproduce

Steps to reproduce the behavior:

1. Open HandInteractionExamples scene
2. Play scene and using hand simulation grab and move one of the One/Two-handed manipulations objects to the right.

</Description>
  </Issue>
  <Issue>
    <IssueID>4026</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>lukastoenneMS</FixedById>
        <IssueID>4026</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Input simulation doesn't work if speech is not supported on dev machine</Title>
    <CreatedDate>19/04/2019</CreatedDate>
    <ClosedDate>23/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4026</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Camera controls (rotation, movement) is not working in editor despite Emulation Mode being set no "none".

## To reproduce

Steps to reproduce the behavior:

1. Create an empty project in unity 2018.3.12
2. Change platform to UWP
3. Enable VR with Mixed Reality Toolkit
4. Import MRTK v2 Core
5. Click "Add to scene and configure"
6. Launch project
7. Hold right mouse button and move 

## Expected behavior

Instead of camera rotating, nothing happens. 


## Your Setup (please complete the following information)

Windows 10 Pro
Unity 2018.3.x (not working on any version)
MRTK v2 RC

## Additional context

This is however working on my home machine. The only difference is my work computer (the one it's not working on) I don't have speech recognition, and thus get an error on play.

&gt; UnityException: Speech recognition is not supported on this machine.
&gt; UnityEngine.Windows.Speech.KeywordRecognizer..ctor (System.String[] keywords, UnityEngine.Windows.Speech.ConfidenceLevel minimumConfidence) (at C:/buildslave/unity/build/Runtime/Export/Windows/Speech.cs:221)
&gt; Microsoft.MixedReality.Toolkit.Windows.Input.WindowsSpeechInputProvider.Enable () (at Assets/MixedRealityToolkit.Providers/WindowsVoiceInput/WindowsSpeechInputProvider.cs:95)
&gt; Microsoft.MixedReality.Toolkit.MixedRealityToolkit.RegisterServiceInternal (System.Type interfaceType, Microsoft.MixedReality.Toolkit.IMixedRealityService serviceInstance) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:843)
&gt; Microsoft.MixedReality.Toolkit.MixedRealityToolkit.RegisterServiceInternal[T] (T serviceInstance) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:858)
&gt; Microsoft.MixedReality.Toolkit.MixedRealityToolkit.RegisterService[T] (System.Type concreteType, Microsoft.MixedReality.Toolkit.Utilities.SupportedPlatforms supportedPlatforms, System.Object[] args) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:199)
&gt; Microsoft.MixedReality.Toolkit.MixedRealityToolkit.RegisterDataProvider[T] (System.Type concreteType, Microsoft.MixedReality.Toolkit.Utilities.SupportedPlatforms supportedPlatforms, System.Object[] args) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:280)
&gt; Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystem.Enable () (at Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputSystem.cs:219)
&gt; Microsoft.MixedReality.Toolkit.MixedRealityToolkit.EnableAllServices () (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:973)
&gt; Microsoft.MixedReality.Toolkit.MixedRealityToolkit.OnEnable () (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:772)
&gt; 

Is a speech recognition mandatory to emulate the input in edior?
</Description>
  </Issue>
  <Issue>
    <IssueID>4025</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4025</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Write RC2 Release Notes</Title>
    <CreatedDate>19/04/2019</CreatedDate>
    <ClosedDate>30/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>4025</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4025</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
This is where we track the things we need to include in RC2 release notes. 

## Breaking changes

- Added OnPointerDragged() method to IMixedRealityPointerHandler. Will cause a build error on all custom implementations of the interface that can be safely fixed adding an empty implementation for the new method.</Description>
  </Issue>
  <Issue>
    <IssueID>4023</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK v2/Manipulation Handler - how to make rectangle around coffee cup?</Title>
    <CreatedDate>19/04/2019</CreatedDate>
    <ClosedDate>19/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4023</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Fixed</Name>
        <IssueID>4023</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the Issue
Hi. I'm following the Manipulation Handler in MRTK v2.0 documentation.
(Environment - MRTK v2.0 RC1)
I copied existing "HandInteractionExamples" scene and deleted couple of object to make it simple. Then i imported coffee cup prefab on the scene and applied the same manipulation handler with same properties of original scene.
But when i run it, i don't see boudingbox like rectangle around coffee cup.
![image](

But when i run the original scene, i can clearly see the rectangle from the beginning.
![image](

Because i cannot see the rectangle, i cannot scale and rotate it. The only thing i can do is dragging.  Can you give me some hint on this?

## Feature Area
What's incorrect? What's missing?

## Existing Doc Link


## Additional context
Here are the Inspector properties of coffee cup.
![image](

</Description>
  </Issue>
  <Issue>
    <IssueID>4020</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>my Speech Demo in MRTK v2 donnot work(unity or HoloLens(1st)),but other demo perform well </Title>
    <CreatedDate>19/04/2019</CreatedDate>
    <ClosedDate>19/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4020</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

A clear and concise description of what the bug is.

## To reproduce

Steps to reproduce the behavior:

1. Go to '...'
2. Click on '....'
3. Scroll down to '....'
4. See error

## Expected behavior

A clear and concise description of what you expected to happen.

## Screenshots

If applicable, add screenshots to help explain your problem.

## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>4015</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4015</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Additional Parameter to construct SettingsProvider on 2019.1</Title>
    <CreatedDate>18/04/2019</CreatedDate>
    <ClosedDate>18/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4015</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Fixed</Name>
        <IssueID>4015</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Source file MixedRealityPreferences.cs (around line 70) constructs a SettingsProvider with a single parameter. It looks like in Unity 2019 the second (scope parameter) is required so you get a compilation failure there.

## To reproduce

Source file MixedRealityPreferences.cs (around line 70) constructs a SettingsProvider with a single parameter. It looks like in Unity 2019 the second (scope parameter) is required.

## Expected behavior

N/A

## Screenshots

N/A

## Your Setup (please complete the following information)

- Unity Version 2019.1.0f1
- MRTK Version V2.0.0-RC1

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2

## Additional context

N/A</Description>
  </Issue>
  <Issue>
    <IssueID>4014</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>4014</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Cloning a Sub-Profile in the Editor Results in the Wrong Name</Title>
    <CreatedDate>18/04/2019</CreatedDate>
    <ClosedDate>18/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4014</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Fixed</Name>
        <IssueID>4014</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

It seems like the name that I enter for a cloned sub-profile isn't used.

## To reproduce

If I add a new Scene in Unity, configure the MRTK in the scene, configure a profile for the MRTK and then use the UI to 'clone' one of the sub-profile then it seems like the name that I enter for the new profile isn't used.

For example - try cloning the camera profile, call your new profile FOO and you end up with a profile called 'Mixed Reality Camera Profile' or similar

## Expected behavior

I'd expect the name from the dialog to be used.

## Screenshots

N/A
## Your Setup (please complete the following information)

- Unity Version [e.g. 2018.3.11f1]
- MRTK Version [e.g. v2.0.0 RC1]

## Target Platform (please complete the following information)

- HoloLens 2

## Additional context

N/A</Description>
  </Issue>
  <Issue>
    <IssueID>4011</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>killerantz</FixedById>
        <IssueID>4011</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Intermittent GUILayout: Mismatched LayoutGroup.repaint when opening Interactable</Title>
    <CreatedDate>18/04/2019</CreatedDate>
    <ClosedDate>27/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4011</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4011</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>4011</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>4011</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4011</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>4011</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
After I import MRTK v2 RC1, created a scene. 
Simply drag PressableButton.prefab and hit run button.. i received the following Error.

"ArgumentException: GUILayout: Mismatched LayoutGroup.repaint"

## To reproduce
Steps to reproduce the behavior:

1. Import MRTK v2 RC1
2. create new scene and click MRTK&gt; add to scene and config
3. Click play button in unity. 
4. See error

## Expected behavior

A clear and concise description of what you expected to happen.

## Screenshots

If applicable, add screenshots to help explain your problem.
![image](

![image](

## Your Setup (please complete the following information)
- MRTK V2 RC1
- Unity 2018.3.10f1

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>4009</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>killerantz</FixedById>
        <IssueID>4009</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Need documentation on how to trigger interactables from code</Title>
    <CreatedDate>17/04/2019</CreatedDate>
    <ClosedDate>15/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4009</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>4009</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4009</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4009</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem
A couple of patterns for Interactables need documentation:
a) How to change state in code: 
- Example use case: Checking a checkbox triggers an OnClick Event set up in Inspector and hides an object. Tapping the object also hides it, and should cause the checkbox to show as checked. How would this be done in code?

b) Setting / changing defaults at start. Ideally this would be done by exposing some settings in the Inspector (see #3603), but alternately an explanation of how to accomplish this either in code, or by changing the Profile templates.</Description>
  </Issue>
  <Issue>
    <IssueID>4008</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>4008</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Interactables Not Triggerd by Input Action Voice</Title>
    <CreatedDate>17/04/2019</CreatedDate>
    <ClosedDate>29/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4008</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>4008</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Speech</Name>
        <IssueID>4008</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>4008</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>4008</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Interactables, like PressableButton, are not triggered by Input Action voice commands. However, they _are_ triggered by their own voice commands, which causes confusion.

## To reproduce

Under MRTK Input configuration, create an action:

![image](

Under speech commands, create a command that will trigger the action:

![image](

Add a **PressableButton** to the scene and subscribe to the OnClick event:

![image](

Under the **Interactable** section, select the same action defined above but _do not_ define a voice command.

![image](

Run the app and notice that the OnClick handler doesn't fire even when the voice command is spoken. 

If you return to the editor and supply a voice command within the Interactable section it _will_ fire. However it's confusing why this extra voice command exists in the first place.

## Your Setup (please complete the following information)

- Unity Version 2018.3.12f1
- MRTK Version RC1

## Target Platform (please complete the following information)

- HoloLens 2

## Additional context

**IMPORTANT:** We highly recommend that this be resolved using a generic handler such as the one described in #4006 
</Description>
  </Issue>
  <Issue>
    <IssueID>4006</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Generic Input Action Handler</Title>
    <CreatedDate>17/04/2019</CreatedDate>
    <ClosedDate>27/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4006</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>4006</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>4006</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

On the surface, Input Actions _appear_ to be a centralized place for defining user intents. For example, the application may have actions for things like 'Fire', 'Save' and 'Add a Note'. 

Inside the MRTK configuration settings, actions can be triggered by any number of input sources. For example, the 'Fire' intent can be triggered by speaking the word "Fire" as well as by pressing the 'X' button on a controller. 

Conceptually, a developer would then assume that they could handle the Action (the intent) regardless of the source that triggered it. However, in the current design that is not the case.

In the current design, in order to handle the 'Fire' intent the developer must handle each source event type. In this example they would need to handle the Speech Recognized event and check the event payload for the action as well as handle the Controller Pressed event and check the event payload for the action. This not only requires each intent handler to implement many interfaces, but it means that new sources added via  configuration won't trigger until code is added to the handler.


## Describe the solution you'd like

We would like a generic way to handle an Action regardless of the source that triggered it. Since many of the current sources have "starting" and "ending" events, this should be reflected too. The generic action handler would have **Action_Started** and **Action_Ended**. These would map to source events like **Button_Pressed** and **Button_Released**. A strategy would need to be defined for sources that do not provide both events. For example, a voice command would obviously trigger the **Started** event, but what should be done about **Ended**? 

## Describe alternatives you've considered

The alternate, as described above, requires implementing each and every source event type interface.

## Additional context

Add any other context or screenshots about the feature request here.
</Description>
  </Issue>
  <Issue>
    <IssueID>4005</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Yoyozilla</FixedById>
        <IssueID>4005</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Better Initial Setup, Especially for HoloLens</Title>
    <CreatedDate>17/04/2019</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>4005</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>4005</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem
When MRTK first initializes some important steps can be missed based on the current target platform. For example, if targeting HoloLens it does not change the project platform to UWP. We understand this is because MRTK is wanting to be more cross-platform, however this does cause significant confusion, especially for first-time developers.

During this first-run "initialization phase", MRTK does set up XR settings but only for the current platform. If UWP is not the current platform at the time, for example, these steps are never applied. There is no way to run this initialization phase again once it's completed

## Describe the solution you'd like

What I really want to see is a return of the "Apply Project Settings" and "Apply Capability Settings" dialogs. Those dialogs clearly stated why they were doing certain tasks and each step could be skipped by simply unchecking the box.

## Describe alternatives you've considered

The only alternative is manually applying each of the changes, however currently there is no good "getting started" guide that documents _all_ of the required steps. 

For HoloLens alone, here are some of the most critical steps that can easily be missed:

- Platform must target UWP
- XR must be enabled
- Shared Depth Buffer must be enabled (for depth-based LSR)
- Ideally rendering should be single-path instanced. What problems might arise and how can they be resolved?
- Microsoft HRTF should be set as the audio spatializer
- What should the depth buffer format be?
- What are some basic guidelines on the graphics quality settings and Unity Lightweight Rendering Path? 
- Which capabilities need to be set? Camera? Microphone? Internet?

## Additional context

We totally understand the desire to be platform independent and we support that. However, HoloLens does have a number of very important steps that can easily be missed and need to be done right for apps to work correctly. While MRTK design goals should absolutely focus on cross-platform, we also want to make make sure to help HoloLens developers get things right "out of the box". And as MRTK grows and improves the cross-platform story, these same principals can be applied to Immersive, ARCore, ARKit, and beyond.</Description>
  </Issue>
  <Issue>
    <IssueID>3999</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can't build with MRTK 2RC1</Title>
    <CreatedDate>17/04/2019</CreatedDate>
    <ClosedDate>18/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>.NET Backend</Name>
        <IssueID>3999</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'm not able to build any example to HoloLens, neither using standard Unity Build nor the MRTK Build Window. I've also tried IL2CPP and .NET.

When trying to build with .NET using the normal build window from Unity (Unity C# Project, see Screenshot for build settings)
![Bildschirmfoto 2019-04-17 um 11 38 09](

I got these errors in VS2017:
![Bildschirmfoto 2019-04-17 um 11 46 31](

If I try to build it with IL2CPP (same settings except Unity C# Project) I got these errors in Unity, but the build succeeded:
![Bildschirmfoto 2019-04-17 um 11 55 54](

In VS2017 I get these errors
![Bildschirmfoto 2019-04-17 um 11 53 01](

![Bildschirmfoto 2019-04-17 um 11 54 29](


Using the MRTK build window and .NET I get these errors, but the build succeeded:
![Bildschirmfoto 2019-04-17 um 12 02 05](
Trying to build the Appx these errors occur:
![Bildschirmfoto 2019-04-17 um 12 03 12](

I don't get it, I've used an older beta version of the MRTK 2 and I do not have any problems so far, but after switching to the RC1, nothing works for me anymore.

## To reproduce
1. Download MRTK V2 RC1 (source)
2. Open it with Unity 2018.3.12f1
3. Open any Example and add it to the builds
4. Try to build it

## Expected behavior
The build should be working

## Your Setup
- Windows 10 Version 1903 Build 18875.1000
- Windows_InsiderPreview_SDK_en-us_18362
- Unity Version 2018.3.12f1
- MRTK Version v2.0 RC1

## Target Platform (please complete the following information)
- HoloLens</Description>
  </Issue>
  <Issue>
    <IssueID>3997</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>3997</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>killerantz</FixedById>
        <IssueID>3997</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Interactable Profile Theme text at incorrect indentation?</Title>
    <CreatedDate>16/04/2019</CreatedDate>
    <ClosedDate>28/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>3997</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3997</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>3997</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug
I'm not sure this is a bug, but in the Interactable script (for a checkbox) under the Profiles for each of Background, Button, Label, CheckBoxCheck there are four items. 

    CheckboxCheck
        Target
        Theme
        &gt; ToggleSomething
           Theme
        &gt;ToggleSomethingElse

    

Visually I find this confusing: either 
a) , the two toggles and the second theme are meant to be in some sort of nested relationship with the first theme, and the toggle buttons icon (&gt;) are offset to the left of the (otherwise) similarly indented items, or
b) there is no nested relationship, and so the toggle button icon (&gt;) is at the same level as the first Theme, but then the second Theme is incorrectly indented to the right

If (a) the nature of the nested relationship is unclear. If (b) the second Theme needs to be moved left.

## To reproduce
See in Inspector window

Steps to reproduce the behavior:

## Expected behavior
?

## Your Setup (please complete the following information)

- Unity Version 2018.3.12f1
- MRTK Version v2.0 latest

## Target Platform (please complete the following information)
Unity Editor
</Description>
  </Issue>
  <Issue>
    <IssueID>3994</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>3994</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Motion Controller button assignment changed in new MRTK version</Title>
    <CreatedDate>16/04/2019</CreatedDate>
    <ClosedDate>29/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>3994</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>3994</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the problem

A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]

Working with past version of the MRTK and used this guide ( to determine with buttons and axies to track for my user interface. All of a sudden, after installing Unity 2019.1.0f2 and latest commit of MRTK ( 9c57fbb ) the button assignment do not work the same.

## Describe the solution you'd like

Either change the button assignment to the original documented version, or provide documentation on what the new assignment are.

A clear and concise description of what you want to happen.

In the mean time, a time saver for developers would be to know which button changed where instead of forcing us to search blindly for it.

## Describe alternatives you've considered

A clear and concise description of any alternative solutions or features you've considered.

## Additional context

Add any other context or screenshots about the feature request here.
</Description>
  </Issue>
  <Issue>
    <IssueID>3993</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Missing SettingsProviders scope in MixedRealityPreferences</Title>
    <CreatedDate>16/04/2019</CreatedDate>
    <ClosedDate>16/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3993</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Describe the bug

Unity 2019.1.0f2 Personal: 

Unity compile error: "Assets\MixedRealityToolkit-Unity-mrtk_release\Assets\MixedRealityToolkit\Inspectors\MixedRealityPreferences.cs(70,32): error CS7036: There is no argument given that corresponds to the required formal parameter 'scopes' of 'SettingsProvider.SettingsProvider(string, SettingsScope, IEnumerable&lt;string&gt;)"


A clear and concise description of what the bug is.

Missing argument on line 70 of MixedRealityPreferences: SettingsScope.Project

## Expected behavior
MRTK Would just compile after importing


- Unity Version [e.g. 2019.1.0f2]
- MRTK Version [e.g. v2.0]

## Target Platform (please complete the following information)

- HoloLens
- HoloLens 2
- WMR immersive
- OpenVR

## Additional context

Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>3987</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>3987</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>Yoyozilla</FixedById>
        <IssueID>3987</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Proposal: Require / enforce additive scene loading via scene service</Title>
    <CreatedDate>16/04/2019</CreatedDate>
    <ClosedDate>10/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>3987</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3987</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Unity suggests using a [base manager scene]( and additively loading / unloading content on top of that. In theory we recommend this approach but in practice our story is muddled.

Docs and editor prompts should make it clear that single-scene loading is **not officially supported** and that MRTK instances / services will be (gracefully) destroyed by single loads. DontDestroyOnLoad should never be used in any case by core services or scripts.

## Scene service / Manager vs Content scenes
A scene management core service should be created to enforce this convention. Like all core services it should be possible to disable and ignore, but using it would make loading / unloading additive scenes simpler both at runtime and in editor.

The profile for this service would require devs to specify a 'Manager' scene - the presence of an MRTK instance would be enforced in this scene.

All other scenes would be considered 'Content' scenes - these can contain MRTK instances if devs want to quickly test them in isolation, but those instances would be ignored when additively loaded.

The service should also help devs avoid common multi-scene gotchas like enforcing lighting settings across multiple scenes, navmesh settings, etc.

## Multiple MRTK instances in editor
To avoid confusion in cases where multiple MRTK instances are loaded across multiple scenes in the editor, one instance would be visibly 'active' (either an arbitrary instance or the Manager instance if present) while the rest would be visibly 'disabled.'

## Add 'OnSceneAdded / OnSceneRemoved' to service interfaces
Services should be able to handle the loading and unloading of content gracefully. Adding these methods to the base service interface would set that expectation.

Related: #3639, #3601, #3599, #3261, #3246, #3941</Description>
  </Issue>
  <Issue>
    <IssueID>3979</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3979</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Project Settings &gt; MRTK should be Project Settings &gt; Mixed Reality Toolkit</Title>
    <CreatedDate>16/04/2019</CreatedDate>
    <ClosedDate>17/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>3979</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>All other instances of MRTK being referenced in the Unity UI is by the full name of Mixed Reality Toolkit. The Project Settings dialog should match (for consistency and user understanding).

## Unity Editor Version
2018.3.12f1

## Mixed Reality Toolkit Release Version
v2 RC1</Description>
  </Issue>
  <Issue>
    <IssueID>3978</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3978</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Default settings dialog should say "would like" instead of "needs" wrt il2cpp</Title>
    <CreatedDate>16/04/2019</CreatedDate>
    <ClosedDate>17/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Duplicate</Name>
        <IssueID>3978</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>3978</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When running on Unity 2018, there is no requirement to use IL2CPP (.NET backend still exists, MRTK is compatible with the .NET backend), so _technically_ MRTK does not _need_ to switch backends.

This will also make the language more consistent with the prompt at the bottom of the dialog ("Would you like to make this change?").

When 2019 is detected, this dialog should not be shown as that version of Unity does not contain the .NET backend.

## Unity Editor Version
2018.3.12f1

## Mixed Reality Toolkit Release Version
v2 RC1</Description>
  </Issue>
  <Issue>
    <IssueID>3971</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3971</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Problem with MixedRealityInputSimulationProfile serialization</Title>
    <CreatedDate>15/04/2019</CreatedDate>
    <ClosedDate>16/04/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3971</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input Simulation</Name>
        <IssueID>3971</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Profile and Inspectors</Name>
        <IssueID>3971</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>3971</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>3971</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The error message below is showing up on a deploy to the WMR Headset (but not on HoloLens on the in the Unity editor). I've separated it from #3944.

From @lukastoenneMS's comment in #3944 

The problem with the MixedRealityInputSimulationProfile seems to be that the data providers in InputSystem use a generic BaseMixedRealityProfile. When the standalone app is built the InputSimulation assembly is excluded since it's editor-only. The final type of the data provider's profile asset (MixedRealityInputSimulationProfile, 300 bytes) is then missing and the serialization interprets the asset as a BaseMixedRealityProfile (76 bytes).

@davidkline-ms is looking into it.

---

From #6054:

&gt;The DefaultMixedRealityInputSimulationProfile is part of the the simulation data provider in the MRKT input profile. But at the same time it's AMSDEF is Editor and UWP only, causing a deserialization problem on all other platforms.
Since it's the only service (I think) that's only being used in Editor and the fact that it also compiles for UWP makes me believe that either this could very well be just compiled for all platforms and we're done with it, or the profile needs to be extracted out, which I tried and stopped after the 3rd file.

## Expected Behavior
No error

## Actual Behavior
Error message:

A scripted object (probably Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile?) has a different serialization layout when loading. (Read 76 bytes but expected 300 bytes)
Did you #ifdef UNITY_EDITOR a section of your serialized properties in any of your scripts?

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
2018.3.12f1

## Mixed Reality Toolkit Release Version
MRTK latest
</Description>
  </Issue>
  <Issue>
    <IssueID>3970</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>3970</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Unity UI text edit field should make virtual keyboard appear</Title>
    <CreatedDate>15/04/2019</CreatedDate>
    <ClosedDate>25/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>3970</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3970</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>3970</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Hack Week</Name>
        <IssueID>3970</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>3970</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Open the _HandInteractionExamples_ scene and select a text edit control. This should cause a virtual keyboard to show up by default.

## Mixed Reality Toolkit Release Version
MRTK v2</Description>
  </Issue>
  <Issue>
    <IssueID>3969</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Windows SDK 18362 on Hololens 1 (build with MRTKv2 RC1)</Title>
    <CreatedDate>15/04/2019</CreatedDate>
    <ClosedDate>15/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>3969</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
In order to build with Unity and  MRTKv2 RC1, we need to install the Windows SDK 18362  which we get from windows insider program, that's OK. but when deploying from VS I get an error that my Hololens 1 can't receive it since its Windows SDK is 17x.
doesn't anyone know what's the trick?.. updating the Hololens SDK is never mention in here or docs, and it can be kind of a problem since its Hololens 1.
anyone can advise? []-)


## Steps to reproduce
build any scene, target UWP,
Windows SDK 18362 (development PC) 
Windows SDK 1.7x (Hololens) 

## Unity Editor Version
2018.3 12f
## Mixed Reality Toolkit Release Version
MRTKv2RC1</Description>
  </Issue>
  <Issue>
    <IssueID>3968</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Who I can select or interact the objects or buttons using hololens1 ?</Title>
    <CreatedDate>14/04/2019</CreatedDate>
    <ClosedDate>16/04/2019</ClosedDate>
    <IssueLabels />
    <Description>Press WASD keys to fly / move.
Press and hold right mouse to look around.
Press and hold space bar to use a simulated hand.

"Above input are work but who I can select or interact the objects or buttons using hololens1"

</Description>
  </Issue>
  <Issue>
    <IssueID>3967</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>When I build the MixedRealityToolkit-Unity sample project, I faced the following error </Title>
    <CreatedDate>13/04/2019</CreatedDate>
    <ClosedDate>15/04/2019</ClosedDate>
    <IssueLabels />
    <Description>Assets\MixedRealityToolkit.Providers\WindowsMixedReality\WindowsMixedRealityArticulatedHand.cs(418,73): error CS0246: The type or namespace name 'HandJointKind' could not be found (are you missing a using directive or an assembly reference?)

Assets\MixedRealityToolkit.Providers\WindowsMixedReality\WindowsMixedRealityArticulatedHand.cs(111,17): error CS0246: The type or namespace name 'HandMeshObserver' could not be found (are you missing a using directive or an assembly reference?)

Assets\MixedRealityToolkit.Providers\WindowsMixedReality\WindowsMixedRealityArticulatedHand.cs(382,33): error CS0246: The type or namespace name 'HandJointKind' could not be found (are you missing a using directive or an assembly reference?)

Assets\MixedRealityToolkit.Providers\WindowsMixedReality\WindowsMixedRealityArticulatedHand.cs(412,26): error CS0246: The type or namespace name 'JointPose' could not be found (are you missing a using directive or an assembly reference?)
</Description>
  </Issue>
  <Issue>
    <IssueID>3966</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>3966</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Custom button on AppBar is not visible</Title>
    <CreatedDate>13/04/2019</CreatedDate>
    <ClosedDate>18/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3966</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>3966</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

When you add custom buttons to AppBar object they are not enabled. By initializing them, they are set to invisible and only those that are Adjust, Hide or Remove are visible. It can be seen in InitializeButtons and Updatebuttons methods from AppBar.cs.

I have enabled them in a script that I have created, but I think that they should enable by default.

## Expected Behavior

Visible custom buttons by default.

## Actual Behavior

Custom buttons are invisible.

## Steps to reproduce

Copy one of the buttons from AppBar.
![example](

Then, set Button type to custom (this script is attached at the end of button GameObject).
![example2](

## Unity Editor Version

2018.3.12f1

## Mixed Reality Toolkit Release Version

v2.0.0 RC1
</Description>
  </Issue>
  <Issue>
    <IssueID>3960</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Yoyozilla</FixedById>
        <IssueID>3960</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Uniy LTS crash with MRTK</Title>
    <CreatedDate>12/04/2019</CreatedDate>
    <ClosedDate>12/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Hello hello, I wanted to try the MRTK for a project and I have to use a LTS version of Unity but unity crash (I mean the application quit and an unity bug reporter window appear).

## Expected Behavior
Unity not crash.

## Actual Behavior
Unity crash and bug reporter window appear.

## Steps to reproduce
_(Links to sample github project preferred)_
Right click, import package, custom package

## Unity Editor Version
Unity 2017.4.25f1 LTS.

## Mixed Reality Toolkit Release Version
Microsoft Mixed Reality Toolkit v2.0.0 RC1

Thank you, I hope it will be fix for a LTS version.</Description>
  </Issue>
  <Issue>
    <IssueID>3959</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>3959</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Some upcoming process changes.</Title>
    <CreatedDate>12/04/2019</CreatedDate>
    <ClosedDate>15/04/2019</ClosedDate>
    <IssueLabels />
    <Description>This issue describes some of the upcoming process changes that we will be adopting, and is filed as an issue to give some transparency before it happens, to give some of the rationale behind the changes, and to gather data and feedback on things that we may not have thought of. Overall the philosophy behind these changes are that we want to take incremental steps toward improving pain points that we've had (these are not set in stone and will change over time so that we can improve our processes).

### Usage of Code Owners

Code owners was a feature introduced to [github several years back]( which allows for people to specify 'owners' for specific paths, extensions, etc. We want to start using this for areas where the area clear area experts so that the act of issuing PRs will automatically add them for review. As our team has grown and areas of expertise have formed around specific parts of the code (i.e. input, prefabs, etc), we'd like to reduce the cognitive burden associated with "who should actually review this code" and have some automatic help when issuing a PR.

### Release Cadence

In the aspiration of going to a monthly cadence, we're proposing a specific pattern for how and when we snap releases:

#### Week 1
PRs issued against mrtk_development

#### Week 2
PRs issued against mrtk_development
End of week 2 we'll do a build call to look at the overall quality of the build.

#### Week 3
PRs issued against mrtk_development
At the end of week 3, we will snap a stabilization branch for that month's release. After that point mrtk_development will only be for future releases)

Naming of stabilization branch tentatively looking like:
prerelease/2.0.0.rc1_stabilization

#### Week 4
Stabilization PRs issued against stabilization branch, build calls during this week and at the end of the week stabilization branch merges into mrtk_release.

Being as though we're already halfway into this month we have to see whether or not this is actually going to happen for April, but this is being called out here to give some clarity on our thoughts. 

A major reason for wanting to declare this process up front was the lack of clarity (both internally and externally) around when things were happening, what branches you had to work out of, what the actual deadlines were for getting fixes in for specific releases, and so on. While it's not expected that this process (or any process) will fix all issues, the hope is the the increase in predictability should help both people working on the project and also consuming it.

### Build Quality

One of the difficulties we dealt with was around integrating large sets of changes all up into one branch - with our limited test coverage, it is extremely easy for issues to get introduced that aren't discovered until much later in the process, at which point teasing out original regressions were really challenging. 

A couple of things we're going to be doing to try to help with that:
1) Ongoing build calls (as described in the release cadence)
2) A recommendation that for features that are well isolated and reasonably short in duration (i.e. &lt;1 month) to put the changes into a feature branch, and when changes are ready to be brought into mrtk_development, to do a build call against the feature branch to ensure that the changes being brought in there don't regress the overall usage of MRTK. There isn't a specific set or rules governing this, and is mostly left up to the judgement of the folks working on the areas. However, there are some examples of what would be a good candidate vs. not:

- If you are working on changes to the way that the input system works or other core features, working out of a feature branch isn't recommended because it's not isolated (people who need to use your changes would either need to wait for yours or start working out of your branch, at which point your branch might become the defacto development branch)
- If you are working on some new prefabs that are well isolated form the rest of the MRTK and require ~2 weeks of work consider spinning up a feature branch.

### Code Review

#### Number of required reviewers per pull request
For mrtk_development, changed from 2 -&gt; 1.
For mrtk_release, remaining at 2.

#### Resetting reviews when new commits are pushed
For mrtk_development, this will no longer be enabled.
For mrtk_release, this will still be enabled.

There's been feedback around the heaviness of process for reviews, where both the number is necessary (i.e. a particular person is an expert in an area and you don't need to get another token reviewer), and resetting the reviews is a pain (because of the distributed nature of this project, having to re-acquire approval after fixing a spelling nit is a huge pain).

One more restriction that will be added, however, is that only core team members will be able to merge into the mrtk_development or mrtk_release branches. As we move to make our release and branching process more predictable we want to make sure that those who are coordinating the release and stabilization have the ability to direct changes in at the right time and to the right place.

#### Draft PRs
When sending out a PR for the purpose of getting feedback (i.e. it's a prototype idea or we want to send out code to have a more educated discussion) that isn't intended to be submitted yet, use the [Draft PR feature](  
</Description>
  </Issue>
  <Issue>
    <IssueID>3958</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SetFocusPointForFrame not updating Stabilization Plane</Title>
    <CreatedDate>12/04/2019</CreatedDate>
    <ClosedDate>16/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The Stabilization Plane does not update upon calling SetFocusPointForFrame within the *StabilizationPlaneSetting.unity* or any other project. I am verifying that the stabilization plane actually updates using the Windows Device Portal and qualitatively, but noticing the color bleeding/jitter does not improve upon setting the focus point. In both my projects and the provided  *StabilizationPlaneSetting.unity*, I am deselecting *Enable Depth Buffer Sharing* under the Windows Mixed Reality toolkit settings.

## Expected Behavior
Stabilization plane updates, which should cause stabilization.

## Actual Behavior
Stabilization plane does not move.

## Steps to reproduce


## Unity Editor Version
2018.2.171f

## Mixed Reality Toolkit Release Version
2017.4.3.0</Description>
  </Issue>
  <Issue>
    <IssueID>3957</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>luis-valverde-ms</FixedById>
        <IssueID>3957</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Proposal: Make it easier to obtain the position of the primary active cursor</Title>
    <CreatedDate>12/04/2019</CreatedDate>
    <ClosedDate>21/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>3957</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>DDE Partner</Name>
        <IssueID>3957</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3957</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3957</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>3957</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Currently, it is rather difficult to obtain the position of the active cursor in the scene. 

The focus handler system provides many pointers, and it is unclear which one is driving the active cursor. Further, there is no obvious means of gaining access to the active cursor in the scene.

Given that only one UIRayCasting camera is active at once in the scene, so it would make sense to be able to at least obtain information about the pointer driving that camera's position and orientation.

## Expected Behavior
MixedRealityToolkit.InputSystem should contain an easy getter for obtaining information about the primary cursor in the scene. If there are two active cursors (one for each hand), it should return the cursor drawn by the dominant hand.

## Actual Behavior
The MixedRealityToolkit.InputSystem can provide a list of many pointers and does not provide any information about the active cursor.
## Unity Editor Version
Unity 2018.3.8f1

## Mixed Reality Toolkit Release Version
v2 RC1
</Description>
  </Issue>
  <Issue>
    <IssueID>3954</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK v2 Release Candidate 1 How can i delete the status bar for CPU fps, peak, used, Limit ?</Title>
    <CreatedDate>12/04/2019</CreatedDate>
    <ClosedDate>15/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Diagnostics / Tools</Name>
        <IssueID>3954</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>3954</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I am developing a project for HoloLens. When I run my project, a status bar appears, showing FPS, memory usage, and so on. How can I delete this status bar or not display it?
![微信图片_20190412154417](

## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
2018.3.11f
## Mixed Reality Toolkit Release Version
MRTK v2 Release Candidate 1</Description>
  </Issue>
  <Issue>
    <IssueID>3953</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>3953</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Mr. Teekay's Standard.shader shows up as pink (without issues) in Unity 2019.2.0a11 (LWRP)</Title>
    <CreatedDate>12/04/2019</CreatedDate>
    <ClosedDate>06/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>3953</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3953</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shaders / Materials</Name>
        <IssueID>3953</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The newest **LightweightRenderPipelineAsset** is incompatible with the shader. **Removing** the _reference_ to **it** in **_Project Settings &gt; Graphics &gt; Scriptable Render Pipeline Settings_** makes it return to _normal._
## Expected Behavior
A nice feel of **_hologrammatic_** shade.
## Actual Behavior
Plain **_pink._**
## Steps to reproduce
1. Import **MRTK v2 RC1** into the specified version of _Unity._
2. Make _sure_ that the **Scriptable Render Pipeline Settings** in **_Project Settings &gt; Graphics &gt; Scriptable Render Pipeline Settings_** is _set_ to **LWRP_Asset(LightweightRenderPipelineAsset)**
3. Open a **scene** and use the **_Standard.shader_** on a _material on an object_ on the **scene.**
4. It's hereby _pink._

## Unity Editor Version
**Unity** _2019.2.0a11_
## Mixed Reality Toolkit Release Version
**MRTK** _v2_ RC**1**</Description>
  </Issue>
  <Issue>
    <IssueID>3951</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>No formal parameter for scope in Unity 2019.2.0a11 with DOTS</Title>
    <CreatedDate>12/04/2019</CreatedDate>
    <ClosedDate>15/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When inporting the latest MRTK-release from here:


...the sole console puts out this:

Assets\MixedRealityToolkit\Inspectors\MixedRealityPreferences.cs(70,32): error CS7036: There is no argument given that corresponds to the required formal parameter 'scopes' of 'SettingsProvider.SettingsProvider(string, SettingsScope, IEnumerable&lt;string&gt;)'

## Expected Behavior
This should just work. No issues at all.

## Actual Behavior
Can't do anything because this is a compiler error.

## Steps to reproduce
0. Install Unity 2019.2.0a11.

1. Import:


2. Import:


## Unity Editor Version
Unity 2019.2.0a11

## Mixed Reality Toolkit Release Version
MRTK v2 RC1
</Description>
  </Issue>
  <Issue>
    <IssueID>3950</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>julenka</FixedById>
        <IssueID>3950</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Adding and configuring components like BoundingBox, ManipulationHandler at runtime?</Title>
    <CreatedDate>12/04/2019</CreatedDate>
    <ClosedDate>24/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>3950</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3950</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>3950</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>3950</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Adding a behaviour like BoundingBox or ManipulationHandler to an object in the designer seems pretty good - I can simply drag/drop and then I can change 'properties' such as BoundingBox.activation or ManipulationHandler.allowFarManipulation.

However, I am creating objects dynamically and adding these behaviours from code and I find that the various properties that I need to set to 'configure' the behaviour are all private fields.

Is this by design or am I just missing the right way to do this? In the previous toolkit scripts like TwoHandManipulatable.cs had public access to properties to change behaviour when dynamically adding the script and I was making use of them.

## Expected Behavior
I'd like to be able to add components like BoundingBox, ManipulationHandler and there could perhaps be others dynamically to an object created at runtime.

If the fields were protected, I could just derive and I'd be happy with that but, right now, they are private.

## Actual Behavior
I don't seem to be able to dynamically change much on these types if I have added them through code rather than through the editor.

## Steps to reproduce
N/A

## Unity Editor Version
2018.3.11f1

## Mixed Reality Toolkit Release Version
2.0.0-RC1
</Description>
  </Issue>
  <Issue>
    <IssueID>3949</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>3949</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Slow in Stopping Playback in Unity</Title>
    <CreatedDate>12/04/2019</CreatedDate>
    <ClosedDate>10/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>3949</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3949</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When Pressing Play Button in Unity, Application starts really fast (3 seconds).
But when stopping in Unity, it takes about 20 seconds until I can use Unity again.

## Expected Behavior
When stopping in Unity, Editor needs 3 seconds to stop playback.

## Actual Behavior
When stopping in Unity, Editor needs 10 to 15 seconds to stop playback and be usable again.

## Steps to reproduce
1. Create empty Scene.
2. Go Mixed-Reality-Toolkit -&gt; Add to Scene and Configure
3. Start in Unity, and press Stop

## Unity Editor Version
2018.3.12f1
## Mixed Reality Toolkit Release Version
2.0.0 RC1</Description>
  </Issue>
  <Issue>
    <IssueID>3948</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Main Camera is changing Clear Flags during runtime</Title>
    <CreatedDate>12/04/2019</CreatedDate>
    <ClosedDate>15/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When I change the Clear Flags of the Main Camera to Solid Color, and press Play in Unity, the Main Camera set Clear Flags on "Skybox" again.

## Expected Behavior
MainCamera should keep Clear Flags on "Solid Color" during runtime

## Actual Behavior
Main Camera sets Clear Flags to Skybox during runtime

## Steps to reproduce
1. Insert Main Camera using Mixed-Reality-Toolkit -&gt; Add to Scene and Configure
2. Set Main Camerea's Clear Flags from Skybox to Solid Color
3. Press Play in Unity, and check Main Camera's Clear Flags.
## Unity Editor Version
Unity 2018.3.12f1

## Mixed Reality Toolkit Release Version
2.0.0 RC1</Description>
  </Issue>
  <Issue>
    <IssueID>3945</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3945</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Activating / deactivating core services causes errors</Title>
    <CreatedDate>11/04/2019</CreatedDate>
    <ClosedDate>14/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>3945</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3945</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Services</Name>
        <IssueID>3945</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
There's already a UIRaycastCamera in the scene. It will be ignored, so please delete it to avoid confusion.
UnityEngine.Debug:LogError(Object, Object)
Microsoft.MixedReality.Toolkit.Input.FocusProvider:Initialize() (at Assets/MixedRealityToolkit.Services/InputSystem/FocusProvider.cs:427)



ArgumentNullException: Value cannot be null.
Parameter name: _unity_self
Microsoft.MixedReality.Toolkit.Windows.Input.GestureRecognizerExtensions.UpdateAndResetGestures (UnityEngine.XR.WSA.Input.GestureRecognizer recognizer, UnityEngine.XR.WSA.Input.GestureSettings gestureSettings) (at Assets/MixedRealityToolkit/Extensions/GestureRecognizerExtensions.cs:11)



MissingReferenceException: The object of type 'Camera' has been destroyed but you are still trying to access it.
Your script should either check if it is null or you should not destroy the object.
Microsoft.MixedReality.Toolkit.Input.MixedRealityInputModule.GetMousePointerEventDataForMrtkPointer (Microsoft.MixedReality.Toolkit.Input.MixedRealityInputModule+PointerData pointerData) (at Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputModule.cs:176)


- Starting with all services activated and deactivating InputSystem in particular causes the following errors:


Unable to find IMixedRealityInputSystem service.
UnityEngine.Debug:LogError(Object)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:GetService(String, Boolean) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:258)



NullReferenceException: Object reference not set to an instance of an object
Microsoft.MixedReality.Toolkit.Input.BaseCursor.UpdateCursorTransform () (at Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Cursors/BaseCursor.cs:360)
Microsoft.MixedReality.Toolkit.Input.BaseCursor.Update () (at Assets/MixedRealityToolkit.SDK/Features/UX/Scripts/Cursors/BaseCursor.cs:288)


- Starting with all core services deactivated causes the following errors:


Unable to find IMixedRealityInputSystem service.
UnityEngine.Debug:LogError(Object)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:GetService(String, Boolean) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:258)



NullReferenceException: Object reference not set to an instance of an object
Microsoft.MixedReality.Toolkit.Input.GenericPointer..ctor (System.String pointerName, Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource inputSourceParent) (at Assets/MixedRealityToolkit/Providers/GenericPointer.cs:23)


- Starting with all services deactivated and then re-activating the InputSystem causes the following error:


NullReferenceException: Object reference not set to an instance of an object
Microsoft.MixedReality.Toolkit.Input.MixedRealityInputModule.GetMousePointerEventDataForMrtkPointer (Microsoft.MixedReality.Toolkit.Input.MixedRealityInputModule+PointerData pointerData) (at Assets/MixedRealityToolkit.Services/InputSystem/MixedRealityInputModule.cs:176)
`</Code>
    <Description>## Overview
Activating and deactivating core MRTK services causes errors.

## Expected Behavior
Services should be able to handle when they or other services are activated / deactivated.

## Actual Behavior
- Starting with all services activated and deactivating _any_ service causes the following errors:

``

There may be other combinations which cause additional errors.

## Steps to reproduce
Add MRTK to a scene. Hit Play. Start activating and deactivating services.

## Unity Editor Version
2018.3.3f1

## Mixed Reality Toolkit Release Version
Development branch</Description>
  </Issue>
  <Issue>
    <IssueID>3944</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>luis-valverde-ms</FixedById>
        <IssueID>3944</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>An item with the same key has already been added</Title>
    <CreatedDate>11/04/2019</CreatedDate>
    <ClosedDate>15/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3944</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>3944</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I'm getting the below error message only on a deploy to a WMR Headset with controllers. 

It is not happening when running on a WMR headset from the Unity IDE, in Holographic Emulation or on HoloLens.

## Expected Behavior
No error

## Actual Behavior
App stops recognizing input devices. Small error window appears in one eye only and partially out of view (top left). 

Exception thrown at 0x74EC33D2 in ...: Microsoft C++ exception: Il2CppExceptionWrapper at memory location 0x04BFF0FC.
ArgumentException: An item with the same key has already been added. Key: 595646772
  at System.Collections.Generic.Dictionary`2[TKey,TValue].TryInsert (TKey key, TValue value, System.Collections.Generic.InsertionBehavior behavior) [0x00000] in &lt;00000000000000000000000000000000&gt;:0 
  at System.Collections.Generic.Dictionary`2[TKey,TValue].Add (TKey key, TValue value) [0x00000] in &lt;00000000000000000000000000000000&gt;:0 
  at Microsoft.MixedReality.Toolkit.Input.MixedRealityInputModule.OnSourceDetected (Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource inputSource) [0x00000] in &lt;00000000000000000000000000000000&gt;:0 
  at Microsoft.MixedReality.Toolkit.Input.MixedRealityInputModule.ActivateModule () [0x00000] in &lt;00000000000000000000000000000000&gt;:0 
  at UnityEngine.EventSystems.EventSystem.ChangeEventModule (UnityEngine.EventSystems.BaseInputModule module) [0x00000] in &lt;00000000000000000000000000000000&gt;:0 
  at UnityEngine.EventSystems.EventSystem.Update () [0x00000] in &lt;00000000000000000000000000000000&gt;:0 

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
2018.3.12f1

## Mixed Reality Toolkit Release Version
MRTK v2 RC1
</Description>
  </Issue>
  <Issue>
    <IssueID>3939</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>3939</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Unity UWP Build: Reference Rewriter found some errors</Title>
    <CreatedDate>11/04/2019</CreatedDate>
    <ClosedDate>19/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>3939</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3939</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

When Building Unity Project for UWP through the Mixed Reality Toolkit&gt;Build Window, the build succeed, but some errors are displayed at the end : 


&gt; Error: field `System.Numerics.Vector3 Windows.Perception.People.HandMeshVertex::Position` doesn't exist in target framework. It is referenced from Microsoft.MixedReality.Toolkit.Providers.WindowsMixedReality.dll at System.Void Microsoft.MixedReality.Toolkit.WindowsMixedReality.Input.WindowsMixedRealityArticulatedHand::UpdateControllerData(UnityEngine.XR.WSA.Input.InteractionSourceState).
Error: field `System.Numerics.Vector3 Windows.Perception.People.HandMeshVertex::Position` doesn't exist in target framework. It is referenced from Microsoft.MixedReality.Toolkit.Providers.WindowsMixedReality.dll at System.Void Microsoft.MixedReality.Toolkit.WindowsMixedReality.Input.WindowsMixedRealityArticulatedHand::UpdateControllerData(UnityEngine.XR.WSA.Input.InteractionSourceState).
Error: field `System.Numerics.Vector3 Windows.Perception.People.HandMeshVertex::Normal` doesn't exist in target framework. It is referenced from Microsoft.MixedReality.Toolkit.Providers.WindowsMixedReality.dll at System.Void Microsoft.MixedReality.Toolkit.WindowsMixedReality.Input.WindowsMixedRealityArticulatedHand::UpdateControllerData(UnityEngine.XR.WSA.Input.InteractionSourceState).
Error: field `System.Numerics.Quaternion Windows.Perception.People.JointPose::Orientation` doesn't exist in target framework. It is referenced from Microsoft.MixedReality.Toolkit.Providers.WindowsMixedReality.dll at System.Void Microsoft.MixedReality.Toolkit.WindowsMixedReality.Input.WindowsMixedRealityArticulatedHand::UpdateControllerData(UnityEngine.XR.WSA.Input.InteractionSourceState).
Error: field `System.Numerics.Vector3 Windows.Perception.People.JointPose::Position` doesn't exist in target framework. It is referenced from Microsoft.MixedReality.Toolkit.Providers.WindowsMixedReality.dll at System.Void Microsoft.MixedReality.Toolkit.WindowsMixedReality.Input.WindowsMixedRealityArticulatedHand::UpdateControllerData(UnityEngine.XR.WSA.Input.InteractionSourceState).
Error: field `System.Numerics.Vector3 Windows.Perception.Spatial.SpatialRay::Origin` doesn't exist in target framework. It is referenced from Microsoft.MixedReality.Toolkit.Providers.WindowsMixedReality.dll at System.Void Microsoft.MixedReality.Toolkit.WindowsMixedReality.Input.WindowsMixedRealityEyeGazeDataProvider::Update().
Error: field `System.Numerics.Vector3 Windows.Perception.Spatial.SpatialRay::Direction` doesn't exist in target framework. It is referenced from Microsoft.MixedReality.Toolkit.Providers.WindowsMixedReality.dll at System.Void Microsoft.MixedReality.Toolkit.WindowsMixedReality.Input.WindowsMixedRealityEyeGazeDataProvider::Update().

&gt; PostProcessWinRT:RunReferenceRewriter() (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/PostProcessWinRT.cs:1062)
PostProcessWinRT:Process() (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/PostProcessWinRT.cs:217)
UnityEditor.BuildPipeline:BuildPlayer(String[], String, BuildTarget, BuildOptions)
Microsoft.MixedReality.Toolkit.Build.Editor.UnityPlayerBuildTools:BuildUnityPlayer(IBuildInfo) (at Assets/MixedRealityToolkit/Utilities/BuildAndDeploy/UnityPlayerBuildTools.cs:115)
Microsoft.MixedReality.Toolkit.Build.Editor.&lt;BuildPlayer&gt;d__2:MoveNext() (at Assets/MixedRealityToolkit/Utilities/BuildAndDeploy/UwpPlayerBuildTools.cs:108)
System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1:Start(&lt;BuildPlayer&gt;d__2&amp;)
Microsoft.MixedReality.Toolkit.Build.Editor.UwpPlayerBuildTools:BuildPlayer(UwpBuildInfo, CancellationToken)
Microsoft.MixedReality.Toolkit.Build.Editor.&lt;BuildPlayer&gt;d__1:MoveNext() (at Assets/MixedRealityToolkit/Utilities/BuildAndDeploy/UwpPlayerBuildTools.cs:89)
System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1:Start(&lt;BuildPlayer&gt;d__1&amp;)
Microsoft.MixedReality.Toolkit.Build.Editor.UwpPlayerBuildTools:BuildPlayer(String, Boolean, CancellationToken)
Microsoft.MixedReality.Toolkit.Build.Editor.&lt;BuildUnityProject&gt;d__68:MoveNext() (at Assets/MixedRealityToolkit/Utilities/BuildAndDeploy/BuildDeployWindow.cs:1016)
System.Runtime.CompilerServices.AsyncVoidMethodBuilder:Start(&lt;BuildUnityProject&gt;d__68&amp;)
Microsoft.MixedReality.Toolkit.Build.Editor.BuildDeployWindow:BuildUnityProject()
UnityEditor.EditorApplication:Internal_CallDelayFunctions()

## Expected Behavior
No errors

## Actual Behavior
Build succeed but erros are displayed

## Steps to reproduce
- Create a Project, add MRTK v2RC1, switch to UWP platform, target Hololens x86, backend IL2CPP, Virtual Reality Supported
- Open Mixed Reality Toolkit &gt; Build Window
- click on Build Unity Project

## Unity Editor Version
2018.3.11f1
## Mixed Reality Toolkit Release Version
v2.0.0 RC1

Visual Studio 2017
Microsoft SDK 10.0.18362</Description>
  </Issue>
  <Issue>
    <IssueID>3729</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3729</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Spatial awareness works in Remote, doesn't on deploy</Title>
    <CreatedDate>29/03/2019</CreatedDate>
    <ClosedDate>29/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>3729</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3729</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>3729</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
New project, Remote from Unity works perfect, the project builds and deploys, but deployed app fails to use spatial awareness.

What could I be doing wrong?
## Expected Behavior
Spatial awareness should work
## Actual Behavior
It doesn't
## Steps to reproduce
Create a new Scene, import MRTK, import Examples, open spatial awareness demo, optionally add a rigid body cube, launch remote to see it working, build the project, deploy with VS2017, see it not working and cube falling to the abyss.

## Unity Editor Version
2018.3.10f1
## Mixed Reality Toolkit Release Version
2.0 Beta 2</Description>
  </Issue>
  <Issue>
    <IssueID>3728</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity 2018.3.10 works in Remote, but has clear screen on deploy</Title>
    <CreatedDate>29/03/2019</CreatedDate>
    <ClosedDate>29/03/2019</ClosedDate>
    <IssueLabels />
    <Description>I'm building an app for Hololens, using Unity 2018.3 and Beta 2 MRTK, it runs fine using Holographic Remoting. 

It also builds and deploys successfully using VS2017, but deployed app renders nothing.

Can someone suggest what could I do wrong?

## Unity Editor Version
2018.3.10f1

## Mixed Reality Toolkit Release Version
2.0 Beta 2</Description>
  </Issue>
  <Issue>
    <IssueID>3727</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>3727</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>How to add interactivity to custom scripts?</Title>
    <CreatedDate>28/03/2019</CreatedDate>
    <ClosedDate>30/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>3727</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3727</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3727</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>3727</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I feel like an idiot for having to ask this, but I can't find any documentation to help me anywhere; understandable, though, for such a fresh toolkit. How do I write a C# script that reads when I get user input? Like if I needed to spin a cube whenever a user was holding forward on a joystick or pressing a trigger, how would I do that? I understand that the controllers have to be mapped to "actions", but what function is getting called whenever the action is committed? At the moment MRTK isn't letting me add or change the default actions, the window for each controller is failing to open, but I don't think this is specifically my current issue, as I can deal with the default key-bindings for now.

Cheers</Description>
  </Issue>
  <Issue>
    <IssueID>3722</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>luis-valverde-ms</FixedById>
        <IssueID>3722</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Input System raises OnInputChanged every frame for pressed buttons</Title>
    <CreatedDate>28/03/2019</CreatedDate>
    <ClosedDate>04/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3722</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

It seems that IMixedRealityInputSystem.RaiseOnInputPressed() is meant to be raised every frame a binary input (e.g. binary button) is down: see MouseController.Update and GenericJoystickController.UpdateButton. The event it is triggering though should only be raised on input changes.

I don't think we should be broadcasting the current state of an input every frame. Users should instead rely on the input down/up events and access directly the input source/controller if they need to know the current state. 

We should substitute the input pressed interface with something like RaiseOnFloatInputChanged() that is called to report changes to float input values. Note that WindowsMixedRealityController is already using RaiseOnInputPressed to report changes to trigger button values.
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>3715</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Question: Status of TouchDeviceManager on Android</Title>
    <CreatedDate>27/03/2019</CreatedDate>
    <ClosedDate>28/03/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Android</Name>
        <IssueID>3715</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>3715</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I tried the Toolkit on my Android phone with Unity Remote in the Editor. I was wondering if that kind of support is still in development as it does not really work:

- A pointer is spawned and only on the second screen touch, which renders a black line along the surface normal of it objects and stays there after lifting the finger. For touch, you don't really need a pointer at all.

- The "controller" is updated twice during one Update which results in the cursor to jump around in the scene, probably toggling between two position values

- Clicking on interactables does not work, OnClick does not seem to be implemented

## Unity Editor Version
2018.3.9f1

## Mixed Reality Toolkit Release Version
mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>3710</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>chrisfromwork</FixedById>
        <IssueID>3710</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>3710</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>ControllerVisualizationProfile is not multi platform capable</Title>
    <CreatedDate>27/03/2019</CreatedDate>
    <ClosedDate>04/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3710</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When running the MRKT on a mobile phone and touching the screen, an error is thrown:

&gt; No controller model available. Failed to add controller game object to scene

This happens, because the DefaultMixedRealityControllerVisualizationProfile is queried for controllers. By default, it provides 2 controllers for UWP basically.
It is queried from the DefaultMixedRealityRegisteredServiceProvidersProfile, which CAN distinguish between platforms and uses the UnityTouchDeviceManager, which actually fits the platform.

## Expected Behavior
- Touch devices do not try to instantiate a controller
- Each platform provides its set of controllers

## Actual Behavior
- error because for every platform UWP Controllers are tried to be used
differentiation is currently only possible when exchanging the ControllerVisualizationProfile altogether.

## Unity Editor Version
2018.3.9f1

## Mixed Reality Toolkit Release Version
mrtk_development</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>3709</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Proposal: Controller method mapping instead of Update switch</Title>
    <CreatedDate>27/03/2019</CreatedDate>
    <ClosedDate>01/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>3709</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3709</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3709</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Most of the MRTK controllers do have code in their update loops like this:

``
The differentiation could very well be moved to the initialization phase, mapped once and then just be called each frame. There's no need to do this every frame since it does not change.

MixedRealityInteractionMapping knows the required TouchPhase, it can also be assigned the corresponding method. This can happen in the SetupDefaultInteractions.</Description>
  </Issue>
  <Issue>
    <IssueID>3699</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>MenelvagorMilsom</FixedById>
        <IssueID>3699</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Visual Studio projects cannot be loaded after a second build.</Title>
    <CreatedDate>26/03/2019</CreatedDate>
    <ClosedDate>30/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3699</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>3699</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>External</Name>
        <IssueID>3699</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Player.csproj
C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Services.SpatialAwarenessSystem.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Services.SpatialAwarenessSystem.Player.csproj
C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Unity.TextMeshPro.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Unity.TextMeshPro.Player.csproj
C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.SDK.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.SDK.Player.csproj
C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Utilities.Gltf.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Utilities.Gltf.Player.csproj
C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Unity.Analytics.DataPrivacy.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Unity.Analytics.DataPrivacy.Player.csproj
C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Services.InputSystem.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Services.InputSystem.Player.csproj
C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Unity.XR.WindowsMR.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Unity.XR.WindowsMR.Player.csproj
C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Services.DiagnosticsSystem.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Services.DiagnosticsSystem.Player.csproj
C:\Users\jowitt\Source\MixedRealityToolkit-Unity\MixedRealityToolkit.Examples.Demos.Utilities.InspectorFields.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\Users\jowitt\Source\MixedRealityToolkit-Unity\MixedRealityToolkit.Examples.Demos.Utilities.InspectorFields.Player.csproj
C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Core.Utilities.Async.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Core.Utilities.Async.Player.csproj
C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Examples.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Examples.Player.csproj
C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Examples.Demos.Gltf.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Examples.Demos.Gltf.Player.csproj
C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Providers.WindowsMixedReality.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Providers.WindowsMixedReality.Player.csproj
C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Providers.WindowsVoiceInput.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Providers.WindowsVoiceInput.Player.csproj
C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Services.TeleportSystem.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Services.TeleportSystem.Player.csproj
C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Services.BoundarySystem.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\Users\jowitt\Source\MixedRealityToolkit-Unity\Microsoft.MixedReality.Toolkit.Services.BoundarySystem.Player.csproj
C:\Users\jowitt\Source\MixedRealityToolkit-Unity\MixedRealityToolkit.Examples.Demos.UX.Interactables.Player.csproj : error  : The project file could not be loaded. The 'ExceptIterator' start tag on line 36 position 1859 does not match the end tag of 'DefineConstants'. Line 36, position 1969.  C:\Users\jowitt\Source\MixedRealityToolkit-Unity\MixedRealityToolkit.Examples.Demos.UX.Interactables.Player.csproj

### In Unity

XmlException: The 'ExceptIterator' start tag on line 25 position 2024 does not match the end tag of 'DefineConstants'. Line 25, position 2101.
System.Xml.XmlTextReaderImpl.Throw (System.Exception e) (at &lt;7fd195060d8c41448694ab221d3b56ca&gt;:0)
System.Xml.XmlTextReaderImpl.Throw (System.String res, System.String[] args) (at &lt;7fd195060d8c41448694ab221d3b56ca&gt;:0)
System.Xml.XmlTextReaderImpl.ThrowTagMismatch (System.Xml.XmlTextReaderImpl+NodeData startTag) (at &lt;7fd195060d8c41448694ab221d3b56ca&gt;:0)
System.Xml.XmlTextReaderImpl.ParseEndElement () (at &lt;7fd195060d8c41448694ab221d3b56ca&gt;:0)
System.Xml.XmlTextReaderImpl.ParseElementContent () (at &lt;7fd195060d8c41448694ab221d3b56ca&gt;:0)
System.Xml.XmlTextReaderImpl.Read () (at &lt;7fd195060d8c41448694ab221d3b56ca&gt;:0)
System.Xml.Linq.XContainer.ReadContentFrom (System.Xml.XmlReader r) (at &lt;428ab70c13974bd0bcd1eeafc00ea3e2&gt;:0)
System.Xml.Linq.XContainer.ReadContentFrom (System.Xml.XmlReader r, System.Xml.Linq.LoadOptions o) (at &lt;428ab70c13974bd0bcd1eeafc00ea3e2&gt;:0)
System.Xml.Linq.XDocument.Load (System.Xml.XmlReader reader, System.Xml.Linq.LoadOptions options) (at &lt;428ab70c13974bd0bcd1eeafc00ea3e2&gt;:0)
System.Xml.Linq.XDocument.Parse (System.String text, System.Xml.Linq.LoadOptions options) (at &lt;428ab70c13974bd0bcd1eeafc00ea3e2&gt;:0)
System.Xml.Linq.XDocument.Parse (System.String text) (at &lt;428ab70c13974bd0bcd1eeafc00ea3e2&gt;:0)
SyntaxTree.VisualStudio.Unity.Bridge.ProjectFilePostprocessor.OnGeneratedCSProject (System.String path, System.String content) (at &lt;843b7c5ab4d34b2491669c24f4d94522&gt;:0)
System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) (at &lt;d7ac571ca2d04b2f981d0d886fa067cf&gt;:0)
Rethrow as TargetInvocationException: Exception has been thrown by the target of an invocation.
System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) (at &lt;d7ac571ca2d04b2f981d0d886fa067cf&gt;:0)
System.Reflection.MethodBase.Invoke (System.Object obj, System.Object[] parameters) (at &lt;d7ac571ca2d04b2f981d0d886fa067cf&gt;:0)
UnityEditor.AssetPostprocessingInternal.CallOnGeneratedCSProject (System.String path, System.String content) (at C:/buildslave/unity/build/Editor/Mono/AssetPostprocessor.cs:189)
UnityEditor.VisualStudioIntegration.SolutionSynchronizer.SyncProjectFileIfNotChanged (System.String path, System.String newContents) (at C:/buildslave/unity/build/Editor/Mono/VisualStudioIntegration/SolutionSynchronizer.cs:344)
UnityEditor.VisualStudioIntegration.SolutionSynchronizer.SyncProject (UnityEditor.Scripting.MonoIsland island, System.Collections.Generic.Dictionary`2[TKey,TValue] allAssetsProjectParts, System.Collections.Generic.IEnumerable`1[T] responseFilesData, System.Collections.Generic.List`1[T] allProjectIslands) (at C:/buildslave/unity/build/Editor/Mono/VisualStudioIntegration/SolutionSynchronizer.cs:337)
UnityEditor.VisualStudioIntegration.SolutionSynchronizer.GenerateAndWriteSolutionAndProjects (UnityEditorInternal.ScriptEditorUtility+ScriptEditor scriptEditor) (at C:/buildslave/unity/build/Editor/Mono/VisualStudioIntegration/SolutionSynchronizer.cs:238)
UnityEditor.VisualStudioIntegration.SolutionSynchronizer.Sync () (at C:/buildslave/unity/build/Editor/Mono/VisualStudioIntegration/SolutionSynchronizer.cs:215)
UnityEditor.SyncVS.SyncVisualStudioProjectIfItAlreadyExists () (at C:/buildslave/unity/build/Editor/Mono/SyncProject.cs:161)



## Steps to reproduce

Unity.exe -executeMethod Microsoft.MixedReality.Toolkit.Build.Editor.UnityPlayerBuildTools.StartCommandLineBuild -logfile build.txt -buildTarget WSAPlayer -batchmode -quit -release -projectPath .\MixedRealityToolkit-Unity\
Start-Process .\MixedRealityToolkit-Unity.sln
`</Code>
    <Description>## Overview
After executing a second build (so that the csproj and sln exists) many of the visual studio projects cannot be loaded.

## Expected Behavior
The projects would not be corrupted and would open correctly.

## Actual Behavior
The VS projects are corrupted and I get these errors:

### In VS
``

Open the Unity project.
Observe the errors reported above in VS and Unity.

## Unity Editor Version
2018.3.9f1

## Mixed Reality Toolkit Release Version
mrtk_development@b02b2faae871e57d06c1cae4b406aece387f873d</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>3697</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Question: Missing MRTK Settings</Title>
    <CreatedDate>26/03/2019</CreatedDate>
    <ClosedDate>26/03/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>3697</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>
Hey, i hope someone can help me.

First of all i'm new to this all (started yesterday).
I'm trying to build a hologram for the hololens. So i installed everything: Visual Studio (with Universal  Windows and Unity), Unity (with .NET).
When i load the MRTK in my unity project, i cant find some settings. 
For example "Apply Mixed Reality Project Settings" is not there.
I already reinstalled everything and tried it even on another pc.



## Unity Editor Version
Unity 2018.3.10f
## Mixed Reality Toolkit Release Version
The latest one</Description>
  </Issue>
  <Issue>
    <IssueID>3695</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>3695</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>Yoyozilla</FixedById>
        <IssueID>3695</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Proposal: UWP services enable their Capabilities themselves</Title>
    <CreatedDate>26/03/2019</CreatedDate>
    <ClosedDate>04/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Building the MRTK just like that throws 2 errors on UWP by default. Microphone and Spatial Perception are not part of the default PlayerSettings configuration, one has to manually edit this file.
It would be much nicer if available services would toggle these settings themselves, using the API
``

## Expected Behavior
There is no need to manually adjust needed capabilities if services depend on them anyways

## Actual Behavior
You run and check for errors prior to building

## Steps to reproduce
Build the InteractablesGallery scene for UWP desktop in development mode and see errors about missing capabilities thrown.

## Unity Editor Version
2018.3.9f1

## Mixed Reality Toolkit Release Version
mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>3694</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>3694</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>NullReferenceException in editor when hitting "Copy &amp; customize"</Title>
    <CreatedDate>26/03/2019</CreatedDate>
    <ClosedDate>03/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>3694</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>3694</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
In the MRTK component I click "Copy &amp; customize"
## Expected Behavior
A new profile is available that can be customized

## Actual Behavior
Console gives 100s of errors that won't ever stop again:
NullReferenceException: Object reference not set to an instance of an object
Microsoft.MixedReality.Toolkit.Core.Services.MixedRealityToolkit.EnsureMixedRealityRequirements () (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:294)
Microsoft.MixedReality.Toolkit.Core.Services.MixedRealityToolkit.InitializeServiceLocator () (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:169)
Microsoft.MixedReality.Toolkit.Core.Services.MixedRealityToolkit.ResetConfiguration (Microsoft.MixedReality.Toolkit.Core.Definitions.MixedRealityToolkitConfigurationProfile profile) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:109)
Microsoft.MixedReality.Toolkit.Core.Services.MixedRealityToolkit.set_ActiveProfile (Microsoft.MixedReality.Toolkit.Core.Definitions.MixedRealityToolkitConfigurationProfile value) (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:85)
Microsoft.MixedReality.Toolkit.Core.Inspectors.Profiles.BaseMixedRealityProfileInspector+&lt;CreateCopyProfileValues&gt;d__10.MoveNext () (at Assets/MixedRealityToolkit/Inspectors/Profiles/BaseMixedRealityProfileInspector.cs:147)


## Steps to reproduce
Get latest MRTK2 unitypackage
in the MRTK copmponent, press "Copy &amp; customize"

## Unity Editor Version
2018.3.8
## Mixed Reality Toolkit Release Version
feb. 2019</Description>
  </Issue>
  <Issue>
    <IssueID>3693</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>3693</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>3693</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>chrisfromwork</FixedById>
        <IssueID>3693</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Changing namespaces breaks System.Type serialization</Title>
    <CreatedDate>26/03/2019</CreatedDate>
    <ClosedDate>30/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>3693</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3693</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
System.Type cannot be serialized on its own, this is usually done by serializing the AssemblyQualifiedName. This is based on the namespace a type is in. Every time the namespace changes, serializations break. This happens for using ASMDEFs at all as well.
There should be a mechanism that somehow reserializes those in case of such changes or make the type namespace independent.

I found by running the InteractionsGallery scene and in particular InteractableReceiverList with its List&lt;InteractableEvent&gt; Events is affected, but I'm pretty sure this is not the only place this will happen.

## Expected Behavior
serialized types do not break

## Actual Behavior
they break

## Steps to reproduce
run InteractionsGallery on UWP with XR, attach a debugger prior to starting if you will. The scene will throw two NullReferences.
![stacktrace](


## Unity Editor Version
2018.3.9f1

## Mixed Reality Toolkit Release Version
mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>3692</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>3692</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>3692</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Input Simulation does not work for Desktop Standalone (disable VR support)</Title>
    <CreatedDate>26/03/2019</CreatedDate>
    <ClosedDate>17/01/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>3692</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>3692</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3692</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input Simulation</Name>
        <IssueID>3692</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3692</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Windows</Name>
        <IssueID>3692</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Building the Toolkit for Windows, be it Standalone or UWP, it's not possible to interact with any of the Interactable objects in the InteractablesGallery. It's also not possible to move the camera in any way. Seems as if there is no default implementation for desktop.

## Expected Behavior
At least the interaction should work with the mouse

## Actual Behavior
no interaction possible at all

## Steps to reproduce
build the InteractablesGallery for Standalone or Desktop without XR support

## Unity Editor Version
2018.3.9f1

## Mixed Reality Toolkit Release Version
mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>3689</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>3689</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>chrisfromwork</FixedById>
        <IssueID>3689</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Latest MRTK-Development doesn't compile in Unity</Title>
    <CreatedDate>25/03/2019</CreatedDate>
    <ClosedDate>23/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>GLTF</Name>
        <IssueID>3689</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Unity doesn't compile with the current implementation on MRTK-Development
## Expected Behavior
Unity should compile and build for both il2cpp and .NET
## Actual Behavior
The commit below does not work, but there is a commit that will compile and build
mrtk_development: 580c7a8a2d29ce417fc0838e4e78c61ccd502bd7 

## Steps to reproduce
Open Unity
Compile project and look at the console

![MRTK-Development](

## Unity Editor Version
Unity 2018.3.1f1
## Mixed Reality Toolkit Release Version
mrtk_development commit: 90941f812eb07d828db06a9f2fdd0bf306716182 
</Description>
  </Issue>
  <Issue>
    <IssueID>3688</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>3688</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>latest MRTK-Release doesn't compile in unity</Title>
    <CreatedDate>25/03/2019</CreatedDate>
    <ClosedDate>29/03/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Updating Externals/MRTK points to a commit that doesn't compile in Unity
## Expected Behavior
MRTK should be runnable within the editor and build with both il2cpp and .NET backends.
## Actual Behavior
The current status of MRTK-Release doesn't compile in Unity.
## Steps to reproduce
Opening your project in unity and try to compile project.
Console shows errors with the MixedRealityControllerVisualizationProfileInspector.cs 
![MRTK-Release](

## Unity Editor Version
Unity 2018.3.1f1
## Mixed Reality Toolkit Release Version
mrtk-release commit: acd338ae68059076485b828bd9cb1fb193732a25
</Description>
  </Issue>
  <Issue>
    <IssueID>3687</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Xbox controller left thumbstick not controlling movement in Holographic Emulation</Title>
    <CreatedDate>25/03/2019</CreatedDate>
    <ClosedDate>26/03/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Not sure what changed, but in Holographic Emulation (Simulate in Editor), the left thumbstick no longer controls movement in the scene. The dpad still seems to control head roll rotation and the right thumbstick still controls yaw and pitch rotation. 

## Expected Behavior
Default configuration should alllow Left Thumbstick to move in your scene while running in Holographic Emulation (Simulate in Editor)

## Actual Behavior
Can't move location, only head rotation.

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
2018.3.10f1

## Mixed Reality Toolkit Release Version
vNext latest code using default Toolkit Profile.</Description>
  </Issue>
  <Issue>
    <IssueID>3685</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>chrisfromwork</FixedById>
        <IssueID>3685</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>thalbern</FixedById>
        <IssueID>3685</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>No controller model available. Failed to add controller game object to scene</Title>
    <CreatedDate>25/03/2019</CreatedDate>
    <ClosedDate>04/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
In the last few days an update has caused the error below to start showing up. I tested this on a brand new project pulling in the latest code with the default MixedRealityToolkit profile.

It breaks the Xbox controller in the Holographic Emulation modes (Simulate Error).

It seems that ControllerHandedness is not getting set, or at least if I force this in BaseController.cs (around line 177)

    var controllerHandedness = ControllerHandedness;
    controllerHandedness = Handedness.Right;

And then replace instances of ControllerHandeness after this with controllerHandedness the error disappears.

I don't understand all the interactions so maybe there is something upstream of ControllerHandedness that is the actual problem.

## Expected Behavior
No error.

## Actual Behavior
No controller model available. Failed to add controller game object to scene
UnityEngine.Debug:LogError(Object)
Microsoft.MixedReality.Toolkit.Input.BaseController:TryRenderControllerModel(Type) (at Assets/MixedRealityToolkit/Providers/BaseController.cs:202)
Microsoft.MixedReality.Toolkit.Input.BaseController:SetupConfiguration(Type) (at Assets/MixedRealityToolkit/Providers/BaseController.cs:92)
Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager:GetOrAddController(String) (at Assets/MixedRealityToolkit/Providers/UnityInput/UnityJoystickManager.cs:160)
Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager:RefreshDevices() (at Assets/MixedRealityToolkit/Providers/UnityInput/UnityJoystickManager.cs:111)
Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager:Update() (at Assets/MixedRealityToolkit/Providers/UnityInput/UnityJoystickManager.cs:47)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:UpdateAllServices() (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:987)
Microsoft.MixedReality.Toolkit.MixedRealityToolkit:Update() (at Assets/MixedRealityToolkit/Services/MixedRealityToolkit.cs:769)

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
2018.10.f1

## Mixed Reality Toolkit Release Version
vNext latest code</Description>
  </Issue>
  <Issue>
    <IssueID>3681</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK should not assume every scene requires the toolkit</Title>
    <CreatedDate>25/03/2019</CreatedDate>
    <ClosedDate>26/03/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
MRTK issues a warning whenever you're working in a scene that doesn't have an instance of the toolkit.

For complex projects Unity recommends using a multi-scene setup where managers / toolkits / etc. are loaded in a base scene, then content is loaded additively on top of that base scene. In this scenario it's expected that devs will be working in scenes without a toolkit.

Given this expectation the warning is an unnecessary nuisance. It should either be removed, or it should have a '_dont' show this again_' checkbox.</Description>
  </Issue>
  <Issue>
    <IssueID>3675</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Errors in 2017.4.3.0 relating to C# 7</Title>
    <CreatedDate>24/03/2019</CreatedDate>
    <ClosedDate>23/04/2019</ClosedDate>
    <IssueLabels />
    <Code>
2&gt;D:\unity projects\mos\Assets\HoloToolkit\Utilities\Scripts\ApplicationViewManager.cs(54,62,54,64): error CS8059: Feature 'out variable declaration' is not available in C# 6. Please use language version 7.0 or greater.
2&gt;D:\unity projects\mos\Assets\HoloToolkit\Utilities\Scripts\ApplicationViewManager.cs(90,22,90,50): error CS8059: Feature 'local functions' is not available in C# 6. Please use language version 7.0 or greater.
`</Code>
    <Description>## Overview

While working on c# scripts in VS I like to use Ctrl+Shift+B to do a quick check if my project's code compiles correctly. This is with the VS instance launched by Unity on double-clicking a script (so this is different from compiling the IL2CPP generated code). 

With MRTK 2017.4.3.0 and VS 2017 15.9.9 I get errors in certain MRTK files that indicate they need C# 7:

``

From what I understand c# 7 is [only supported from Unity 2018.3 upward]( These files are also not directly used in my project, and I don't see the same errors in the IL2CPP generated code (presumably because the code isn't exactly used and therefore no c++ is generated for it).

This issue is mostly a nuisance, as the IL2CPP generated code compiles without errors. However, in the current situation I need to ignore 2 errors from the build output in order to find actual errors in my own code.

## Expected Behavior

MRTK code compiling without errors

## Actual Behavior

Errors during MRTK compilation, but only in the script-editing instance of VS

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

2017.4.24f1

## Mixed Reality Toolkit Release Version

2017.4.3.0
</Description>
  </Issue>
  <Issue>
    <IssueID>3672</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>3672</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>AssemblyQualifiedName addition breaks existing local themes</Title>
    <CreatedDate>21/03/2019</CreatedDate>
    <ClosedDate>27/03/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
This change:


Which adds an AssemblyQualifiedName field to default Interactable themes in MixedReality.SDK.Features.UX.Interactable.Themes breaks any currently configured local copies of themes.

Not a problem to fix, as it just requires the addition of 

AssemblyQualifiedName: [matching assembly name here]

In actual code this looks something like adding:
    AssemblyQualifiedName: Microsoft.MixedReality.Toolkit.SDK.UX.Interactable.Themes.InteractableAnimatorTheme,
      Microsoft.MixedReality.Toolkit.SDK

to your existing theme files, such as:

    Name: 
    Settings:
    - Name: ScaleOffsetColorTheme
     AssemblyQualifiedName: [assembly name]
     Properties:
     - Name: Scale
     ....

You need to get the correct Assembly name from the original theme source file (this is the MSFT assembly name unless you have also cloned the cs script associated with it).

Just filing this in case anyone else hits this issue.

## Expected Behavior
NA

## Actual Behavior
NA

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
2018.3.9f1

## Mixed Reality Toolkit Release Version
vNext latest</Description>
  </Issue>
  <Issue>
    <IssueID>3669</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK (actual release) can't create a MixedRealityPlayspace on new project</Title>
    <CreatedDate>21/03/2019</CreatedDate>
    <ClosedDate>21/03/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview

On a new project, I try to use MRTK but I can do the step "Configure...". I have an error

## Expected Behavior

Click on "Configure..." item menu and have the prefab MixedRealityPlayspace create.

## Actual Behavior

Click on "Configure..." and the console display : 
![img problem](

## Steps to reproduce

* Create a new project.
* Import the package of MRTK
* Configure Unity (use IL2CP, check "Virtual Reality Supported")
* Click on "Configure..."

## Unity Editor Version
2018.3.9f1

## Mixed Reality Toolkit Release Version
v2.0.0-beta2
</Description>
  </Issue>
  <Issue>
    <IssueID>3657</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3657</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>UnityJoystickManager fails to recognize Xbox controller, returns generic controller</Title>
    <CreatedDate>19/03/2019</CreatedDate>
    <ClosedDate>25/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3657</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3657</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Running a project with default code, and UnityJoystickManager is logging lots of warning messages and then returning the (presumably) wrong type for an Xbox controller.

The issue is in this code in UnityJoystickManager.cs:

    if (joystickName.StartsWith("Xbox"))
    {
        return SupportedControllerType.Xbox;
     }

However, the joystickName getting passed in is actually:

    "Controller (Xbox One For Windows)"

Thus fails the StartsWith if comparison. Changing this to a contains "Xbox", or StartsWith("Controller (Xbox" works.

## Expected Behavior
    return SupportedControllerType.Xbox;

## Actual Behavior
Debug.Log message
Controller (Xbox One For Windows does not have a defined controller type, falling back to generic controller.

    return SupportedControllerType.GenericUnity;

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
2018.3.9f1
## Mixed Reality Toolkit Release Version
vNext latest build (as of today)</Description>
  </Issue>
  <Issue>
    <IssueID>3656</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>3656</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add .NET Backend validation build to CI</Title>
    <CreatedDate>19/03/2019</CreatedDate>
    <ClosedDate>05/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>3656</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>3656</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3656</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>3656</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Most developers use IL2CPP on their day to day work. This means .NET backend is easy to break.
Add an additional build configuration to CI that uses the .NET backend (instead of IL2CPP). CI should fail if that configuration fails.
</Description>
  </Issue>
  <Issue>
    <IssueID>3655</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Question: How to deal with large changes?</Title>
    <CreatedDate>19/03/2019</CreatedDate>
    <ClosedDate>26/03/2019</ClosedDate>
    <IssueLabels />
    <Description>I just went into the DeviceManager and BaseController structures and cleaned them up. There was a lot of redundancy in there, different approaches that could be equalized etc.
This change consists of 650 lines changed and 600 removed, basically reducing the touched code by half.

Is this something that would even make it into the kit and if so under which circumstances?
Most pull requests are not more than 20 lines of code and are already handled like uncooked eggs.

Can someone give some advice on this?</Description>
  </Issue>
  <Issue>
    <IssueID>3653</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK v2 , taptoplace and tagalone</Title>
    <CreatedDate>19/03/2019</CreatedDate>
    <ClosedDate>21/03/2019</ClosedDate>
    <IssueLabels />
    <Description>Could we add the taptoplace and tagalong scripts from the old toolkit into the new one?

These are very useful for prototyping. 
</Description>
  </Issue>
  <Issue>
    <IssueID>3652</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>radicalad</FixedById>
        <IssueID>3652</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Extra click event raised on HoloLens airtap only</Title>
    <CreatedDate>19/03/2019</CreatedDate>
    <ClosedDate>18/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3652</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3652</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Need More Info</Name>
        <IssueID>3652</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>No Repro</Name>
        <IssueID>3652</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>3652</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I'm getting an odd behavior only on an actual HoloLens deployment. 

In a class that inherits:

    IMixedRealityPointerHandler

In the function that handles the click:

    public void OnPointerClicked(MixedRealityPointerEventData eventData)
        {
            DebugText.text += " clicked: " + Time.time;
            ...

On airtap this gets called twice. So, in the DebugText.text I see the text "clicked: someTime clicked someTime" and the someTime timestamp is identical.

This does not happen in the Unity holographic emulator (Simulate in Editor nor Remote to Device), nor does it happen on a WMR headset where the event is raised only once. In all those cases a single text entry and timestamp is recorded, and a second click (xbox controller or WRM controllers), adds a new timestamp.

## Expected Behavior
Event raised only once.

## Actual Behavior
Event raised twice

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
2018.3.9f1

## Mixed Reality Toolkit Release Version
vNext, latest as of a few days ago</Description>
  </Issue>
  <Issue>
    <IssueID>3645</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>UI Raycast takes precedence over 3D objects in front</Title>
    <CreatedDate>18/03/2019</CreatedDate>
    <ClosedDate>26/03/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When aiming at a 3D interactable while UI elements are behind it, the targeting ray goes straight through and interacts with the UI elements instead

## Expected Behavior
Whatever comes first in terms of z index should be handled first

## Actual Behavior
The UI comes first no matter the 3D objects

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
2018.3.8f1

## Mixed Reality Toolkit Release Version
mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>3644</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>luis-valverde-ms</FixedById>
        <IssueID>3644</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Air tap action not recognized on HoloLens device / holographic remoting</Title>
    <CreatedDate>18/03/2019</CreatedDate>
    <ClosedDate>30/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>3644</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3644</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Fixed</Name>
        <IssueID>3644</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The air tap gesture is not recognised on a HL1 device or if using Holographic Remoting in Unity. Using the emulator, everything seems to work fine, but as soon as the app is deployed to the device or run in Holographic Remoting mode in Unity, the "click" Unity event does not seem to be fired. Strangely, the cursor animation works fine, i.e. when air tapping (pressing down), the cursor gets smaller and when stopping the air tap gesture (releasing, pressing up), the cursor gets bigger again.

## Expected Behavior
Air tap should correspond to "click" event

## Actual Behavior

## Steps to reproduce
Follow instructions of community-written step-by-step guide linked in the official [Docs]( Link to step-by-step guide: [here]( Here's a [link]( to the Github repository from the step-by-ste guide.

## Unity Editor Version
I tried with both 2018.3.8f1 and 2018.3.6f1

## Mixed Reality Toolkit Release Version
Microsoft Mixed Reality Toolkit v2.0.0 Beta 2 (0c0152f)</Description>
  </Issue>
  <Issue>
    <IssueID>3641</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>andreiborodin</FixedById>
        <IssueID>3641</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>chrisfromwork</FixedById>
        <IssueID>3641</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Updated Spectator View for Mobile for MRTK V2.</Title>
    <CreatedDate>15/03/2019</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>3641</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3641</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>SpectatorView</Name>
        <IssueID>3641</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Adding spectator view mobile support for V2 with basic doc. </Description>
  </Issue>
  <Issue>
    <IssueID>3639</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>3639</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>3639</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>Yoyozilla</FixedById>
        <IssueID>3639</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Issues During Upgrade to vNext Part 2</Title>
    <CreatedDate>15/03/2019</CreatedDate>
    <ClosedDate>30/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>3639</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>3639</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>3639</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I have been keeping track of issues upgrading a project to the new MRTK, and to Unity 2018.3.n version. I'm posting it in case it may be of use to anyone.

My first project update notes are here #3596. This is the second project, built with Unity 2017.n and the last production version of the previous MRTK (still HoloToolkit). It is more complex than the previous project with many scenes, UI elements, gesture and voice interactions and much more.

At the end of this process I have a project that mostly works, except for the Manipulation Handler, which I'm still trying to sort out.

UPGRADE STEPS / SCRIPTS

1. Project Creation. This time I started with a new 2018.3.8f1 project. Imported the vNext Beta 2 assets (both Foundation and Examples)

2. Platform Settings. In Build Settings I had to change the Platform to Universal Windows Platform clicked Switch Platform. Then in Player Settings | XR Settings enable Virtual Reality Supported. Other Settings (.NET and IL2CPP) were correctly set to start. 

3. Asset Files. From my original project I selected everything from my assets folder (2.3K items) except for the HoloToolkit and the custom UX profiles I had set up for previous UI elements (things like SimpleDialogButtonTextProfile and many more) and copied it into the new project. I am uncertain if Unity Standard Assets have changed for Unity 2018 but I copied them over anyway.

4. Import. Unity updated all the files to the new version. No issues.

5. HoloToolkit. I briefly tried having both old and new MRTK in the same project, which makes sense if you want a sane transition, but it ended up being easier for me to break it all at once and fix it by resolving build errors. YMMV. Deleted all HoloToolkit Using statements:
 
    using HoloToolkit.Unity.InputModule;
    using HoloToolkit.Unity;
et.al.

6. IFocusable Updated. Replaced all instances of IFocusable with IMixedRealityFocusHandler, updated using statements, implemented interface, moved my code, fixed NotImplementedExceptions where interface method not used

7. IInputClickHandler Updated. Replaced all instances of IInputClickHandler with IMixedRealityPointerHandler, updated using statements, implemented interface, moved my code, fixed NotImplementedExceptions where interface method not used

8. IManipulationHandler Updated. Tried various replacements (IMixedRealityGestureHandler&lt;Quaternion&gt;, et.al.) and couldn't get any of them to work. Whether that is my lack of understanding or some other issue I'll test more later. This remains as unresolved and a blocker for this project.

9. Singletons! My project made exensive use of the Singleton and SingleInstance classes from the HoloToolkit. The new MRTK has a single Singleton, I believe, but I didn't want to have to rewrite my code to use IOC, so I just copied the classes over to the new project and updated using statements. 

The Singleton class also required the GetParentRool method from GameObjectExtensions. This class conflicts with a new version in Microsoft.MixedReality.Toolkit.Core.Extensions which does not have that method, so I created a new static class for just that function and referenced the new class from the Singleton.cs


    public static class MoreGameObjectExtensions {
        /// &lt;summary&gt;
        /// Gets the GameObject's root Parent object.
        /// &lt;/summary&gt;
        /// &lt;param name="child"&gt;The GameObject we're trying to find the root parent for.&lt;/param&gt;
        /// &lt;returns&gt;The Root parent GameObject.&lt;/returns&gt;
        public static GameObject GetParentRoot(this GameObject child)
        {
            if (child.transform.parent == null)
            {
                return child;
            }
            else
            {
                return GetParentRoot(child.transform.parent.gameObject);
            }
        }
    }

10. Billboards. The Billboard using statement had to be updated to a new path.

11. TapToPlace. This is missing in the new MRTK. However, as this was an used reference in my project I removed it and moved on. Maybe this functionality has moved to one of the Solvers as seen in the Examples project?

12. SpatialMappingManager. This is also missing but as I wasn't using it I didn't bother sorting out the new MRTK classes for this and just removed it.

13. TextToSpeech. This is also missing (see #3569). I copied the TextToSpeech file over as-is and updated references. It works w/o change.

14. Button. Updated the path to the new button class though this requires lots of changes on the Unity side to get working properly;

15. CompoundButtonText. Updating to new UX buttons I changed these to TextMesh and setting the button .Text == "" field becomes lowercase .text = "";

16. GetColliderBounds. This is a helper method in TransformExtensions and just needed a new using statement 
    using Microsoft.MixedReality.Toolkit.Core.Extensions

17. SpatialSoundSettings and SpatialSoundRoomSizes. This is another file that did not get included in the MRTK v2. So I copied it over and update using statements accordingly.

18. WorldAnchorManager. Seems to be gone. I don't see any replacement. Removed for now.

19. EnsureComponent. Moved to new location, updated using statement.

20. Button.OnStateChanged. Updated the reference from Button to Interactable, and OnStateChanged to SetState and ButtonStateEnum to InteractableStateEnum. We'll see if that works.

21. MixedRealityTeleport. I'm not sure which object in the new system would be a replacement. Since I'm not sure this reference is still needed in my project I removed it until I can test.

UPGRADE STEPS / UNITY

22. Configure Menu Item. This project additively loads the Mixed Reality camera and other required objects from a separate scene. The default objects, cursor, camera and input system are, as expected broken. I attempted to update them using the Menu | Mixed Reality Toolit | Configure. Only the MixedRealityToolKit comes in, not the MixedRealityPlaySpace. Not sure why, so I had to add this by hand. copying from another project.

23. Additive Loading. I decided to follow the current recommendations for multi-scene projects (#3599, #3246, #3261, #3601) and have my initial scene hold the Mixed Reality Toolkit and Playspace and additively load / unload each other scene to it (reversing my current pattern), so this require a little bit of a rewrite but works.

24. Standard Shader. As before, all the materials lost the connection to the Mixed Reality Toolkit/Standard shader and had to be reset. 

25. SceneContentAdjuster. Missing. Wasn't sure it was still needed so left it off until I test on a WMR Headset.
UPDATE: Definitely needed. Items in HL are placed based on head height. IN WMR they seem to be placed based on floor height? so about 1.8M below the start position on HL. I see there is a task list item for this #3048. I copied the SceneContentAdjuster from HoloToolkit and added it to MRTK. 

26. 3DTextPrefabs. Recreated and replaced all of these.

27. Speech Input Source. Removed script from the Inspector. Then, using the Mixed Reality Toolkit, I selected the Copy &amp; Customize Option to create a new top level profile. Navigated down and clicked on the &lt;/&gt; button to create a local copy of Input System Settings, then did the same for Speech Command Settings. That exposed a list of speech keywords that I could add to and replicate what was originally in Speech Input Source. I also had to set the Action dropdown to Select for each keyword.

28. Speech Input Handler. Pointed to new version. Re-entered keywords. A note in the code says to use Persistent Keywords the gameobject needs to be at the root.

29. Billboard. Updated component references throughout.

30. Buttons and More. Had to replace pretty much every button due to different scripts, themes, etc. I unpacked the MRTK UX Button prefab, re-prefabed it, duplicated the many button themes, modified them and updated the button with the new themes.

31. Layers &amp; Tags. Had to update my Layers and Tags as they are not stored in the Assets folder and so did not import. Copied text from ProjectSettings.TagManager.asset and pasted into the same file in the new project.

32. Camera.main. Had to use FindObjectOfType&lt;Camera&gt; and assign to a local variable to get access to the Camera.main from most scenes, as additively loaded scenes don't automatically get access to the camera in the base scene. There may be a better way to do this, but this method worked for me.

33. Particles/Additive. This is now  "Particles/Priority Additive", so had to be updated in code and also in the Edit | Project Settings | Graphics | Always Include in Project list

     = new Material(Shader.Find("Particles/Priority Additive"));

34. Spatial Mesh. When starting the app, the spatial mesh observer was running, covering the room with the mesh lines. I didn't set this and where to turn it off was non-obvious. But, from the Toolkit I created a local MixedRealityRegisteredServiceProvidersProfile and then a MixedRealitySpatialMeshObserverProfile and changed this from Auto start to Manual.
</Description>
  </Issue>
  <Issue>
    <IssueID>3546</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>andreiborodin</FixedById>
        <IssueID>3546</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[Plan of Record] Namespace simplification</Title>
    <CreatedDate>28/02/2019</CreatedDate>
    <ClosedDate>22/03/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3546</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The current set of namespaces in MRTK v2, while having the benefit of closely matching the source tree is causing significant confusion with customers.

This proposal is to change the namespaces to be laid out more feature focused (like the .NET framework) than tree location focused.

For example:
Microsoft.MixedReality.Toolkit.Core.Interfaces.InputSystem contents will move to the new Microsoft.MixedReality.Toolkit.Input namespace. The same will hold for *Core.EventDatum.InputSystem.

More complete details:

Microsoft.MixedReality.Toolkit is the root namespace underneath which the following will be parented:

- Boundary
- Diagnostics
- Editor
- Input
- Networking or Sharing (coming later)
- SpatialAwareness
- Teleport
- Utilities

There will be some (not many) child namespaces for the above.</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>3546</IssueID>
        <PullRequestID>3606</PullRequestID>
        <Title>update namespace rules to match #3546</Title>
        <Description>Coding guidelines document was requiring the old namespace pattern. With #3546, this pattern has been simplified. The guidelines have been updated to reflect the pending change.</Description>
        <CreatedDate>11/03/2019</CreatedDate>
        <ClosedDate>13/03/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Documentation</Name>
            <IssueID>3546</IssueID>
            <PullRequestID>3606</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>davidkline-ms</FixedById>
            <PullRequestID>3606</PullRequestID>
            <IssueID>3546</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>3545</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3545</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[Plan of Record] Improve MRTK ease of use: system facades, registrar interface, config ux </Title>
    <CreatedDate>28/02/2019</CreatedDate>
    <ClosedDate>06/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>3 - Working</Name>
        <IssueID>3545</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3545</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3545</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Plan of Record: Support Service Specific Scene Presence

Microsoft Mixed Reality Toolkit v2

This document describes a design change for the Microsoft Mixed Reality Toolkit v2 concerning how developer customers can choose the MRTK and its services.

## The Issue: Usability

The MRTK team has received feedback from multiple sources that the current, single object presence in the application scene is difficult to use with regards to feature discovery and modularization. Multiple customers, both internal and external, have requested an alternative to beta 2’s MixedRealityToolkit object in the form of system specific locator components (ex: MixedRealityInputLocator) that can be additively included.

One piece of feedback, heard from multiple sources, points out the promise of additive vs. subtractive consumption of MRTK. The comments largely center around two themes:

1.	It is not easy, at a glance, to see if a scene is using a specific MRTK service. Many developers from whom we heard desire an individual service presence in the scene hierarchy.
2.	The root Mixed Reality Toolkit configuration profile makes it appear that all services are present in the application, even when disabled. There is a strong desire for scoping the profile inspector to show only installed _and_ active services.

## Solution: Enable Support for Individual Services to have Scene Presence

The solution defines the following changes:

1. Provide [service registration interfaces](#service-registration-interfaces) to enable customers to create a custom service locator and/or fully stand-alone service components
2. Provide support for exposing active services and their configuration settings in the scene hierarchy _at edit time_ via [service facades](#service-facades)
3. Enable customers to create [hybrid application architectures](#hybrid-application-architecture), if desired, that use any number of service locators in conjunction with any number of stand-alone services
4. Create a [light-weight service registry](#service-registry) that maps service interfaces with the concrete type that manages service registration
5. An [updated scene hierarchy](#scene-hierarchy) to contain the service registry, service facades, etc
6. Modified MRTK [project configuration](#project-configuration-ux) flow to provide enhanced flexibility for customers when setting up their projects

Please see the [Solution Details](#solution-details) section of this document for information the described changes.

## Goals

1. Respond to direct customer feedback
2. Provide customers with a choice of how they consume MRTK services
3. Minimize required client code changes
4. Preserve as much of the MRTK service locator functionality as possible (anticipating 90% or greater equivalence)

## Non-Goals

1. Removal of the service locator pattern
2. Require developers to change how they wish to work

# Solution Details

## Service Registration Interfaces

To enable developers to create custom service locators and/or extend an existing service locator to add support for MRTK services, a set of interfaces will be created to support the registration and retrieval of service instances.

It is anticipated that there will either be one or three interfaces that will be created. The following sections describe the pros and cons of each implementation.

### Single Registrar Interface

In the single interface approach, the MRTK will define IMixedRealityServiceRegistrar. This interface would define explicit methods for supporting objects implementing the following service types (listed by interface):

- IMixedRealityService
- IMixedRealityExtensionService
- IMixedRealityDataProvider

Each method (Register, Unregister, Get, CheckRegistration) will have a version that is type safe to the listed interfaces.

| Pros | Cons |
| ---- | ---- |
| Only one interface to implement |  Implementors may be required to implement stub methods |
| Can provide a single base class supporting all service types | |

### Multiple Registrar Interfaces

In the multiple interface design, each type of service would have a corresponding registrar interface:

- IMixedRealityServiceRegistrar
- IMixedRealityExtensionServiceRegistrar
- IMixedRealityDataProviderRegistrar

This approach would allow customers to support _only_ the specific types of services necessary to build their component.

| Pros | Cons |
| ---- | ---- |
| Developers are free to implement only the required service type support | Potentially mutltiple interfaces to implement |
| Develipers do not have to implement stub methods | Cannot consume individual interface base class implementations (C# limitations)

### Base Class Implementations

As with much of the MRTK, base classes will be provided to provide robust, reusable implementations of the registrar interface(s).

### Providing the Registrar Instance to Services

When the registrar instantiates a service instance, it will provide itself as a constructor argument. The following example shows the parameter to be added to each service constructor. 

``

## Scene Hierarchy

To help keep the scene hierarchy uncluttered, the default MRTK configuration process will create a Mixed Reality Toolkit parent object. This object will be the parent for the service locator and any enabled facades. 

It is recommended that this object be the parent of objects created by registered services (ex: spatial awareness mesh objects).

The following image illustrates the default hierarchy when the MRTK service locator is used with the input and spatial awareness system facades enabled.

![Hierarchy With Facades](

## Project Configuration UX

To make it easy and intuitive for customers to configure MRTK to suit their application's requirements, the Mixed Reality Toolkit menu's Configure item will display a selection dialog similar to the following illustration.

![Configuration Dialog](

</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>3545</IssueID>
        <PullRequestID>3667</PullRequestID>
        <Title>Service Registration (#3545) - Part 2 [Breaking Change for Service Implementors]</Title>
        <Description>This part of the service registration (#3545) work includes:

- Removing the need for BaseServiceWithConstructor by updating the BaseExtensionService and BaseDataProvider classes
- Add BaseCoreSystem class and inherit from it for all core system services
- Update core system services to use the data provided (profile and service specific data) to initialize
- Focus provider now inherits from BaseDataProvider
- Gaze provider gets data that previously came from the MixedRealityToolkit.Instance directly from the input system when instantiated

This change removes most of the hard-coded references to MixedRealityToolkit.Instance.

Note: Platform providers and the InputSystemGlobalListener were _not_ updated as part of this change. They will be handled in part 3.</Description>
        <CreatedDate>20/03/2019</CreatedDate>
        <ClosedDate>21/03/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>BREAKING CHANGE</Name>
            <IssueID>3545</IssueID>
            <PullRequestID>3667</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>davidkline-ms</FixedById>
            <PullRequestID>3667</PullRequestID>
            <IssueID>3545</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>3543</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Where can I find the default controller model?</Title>
    <CreatedDate>28/02/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels />
    <Description>I am trying to find the default controller model so that I can attach it to a custom laser pointer script I wrote. However, after searching in the assets,I couldn't find any controller model. Some will ask why I just don't use the already-built motioncontroller and inputmanager. The reason is I would like to modify some of the part, for example while the user is watching a 360 video in a scene, when user press the trigger button the controller will fade in and show some UI. 
The version I am using:
**Unity version** Unity 2017.4.1f1 
**Holokit version**  HoloToolkit-Unity-2017.4.1.0

Thank you.</Description>
  </Issue>
  <Issue>
    <IssueID>3542</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ManipulationHandler is completely broken</Title>
    <CreatedDate>28/02/2019</CreatedDate>
    <ClosedDate>28/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>3542</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3542</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Interactions</Name>
        <IssueID>3542</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Checking out the ManipulationExample scene I found that the manipulations are unusable with the Mixed Reality Motion Controllers:

- Selecting any of the Objects teleports them to somewhere near of the actual gaze position instead of keeping it in place.

- Moving them around does not behave like you would expect in the least (just try it and you'll see)

- Manipulating them with two controllers involves head rotation too. Just holding still and turning the head rotates the object. This should be handled by the hands only.

## Expected Behavior
Manipulation just works

## Actual Behavior
Manipulation does not work very good

## Steps to reproduce
- Open the ManipulationExample scene
- Play around with the objects

## Unity Editor Version
2018.3.6f1

## Mixed Reality Toolkit Release Version
mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>3541</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>3541</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>BoundingBox is completely broken</Title>
    <CreatedDate>28/02/2019</CreatedDate>
    <ClosedDate>29/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3541</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>3541</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Bounds Control</Name>
        <IssueID>3541</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I am still waiting for the day when the BoundingBox becomes a usable feature, but it seems that's still some time in the future. After fixing a bug to even interact with the box I encountered a few more and I think someone should sit down and fix this box once and for all:

- Hololens/ MR Headset: Selecting a handle makes it glitch out for the first frame (Hololens). Repeatedly clicking the handle scales the box larger and larger (MR Headset). I scaled one of the handles up to better see what's going on. The problem seems to be that during the first frame of interaction when the scale is calculated, the TransformHandleWithRay method is used. From then on TransformHandleWithPoint is used. This happens because OnInputChanged is constantly called, but will set the relevant usingPose bool not until OnInputDown set the currentInputSource to a reference.
I tried to find out when TransformHandleWithRay is used then, but there seems to be no use for that. Since OnInputChanged is constantly spammed and on first appearance of an InputSource sets usingPose to true, it's just the first frame ever.
TransformHandleWithRay could very well be removed so it seems.

- Scaling: Then I tested the scaling just using TransformHandleWithPoint. It worked, but did not feel very good. The scale happens way too slow and does not feel right.

- Rotating: The rotation code tries to calculate axis aligned oriented collider bounds in UpdateBounds and fails because the collider is not recalculated during the frame, only the transform is changed. The collider would need to be toggled, twice (back and forth), which is not what you do within an Update-Loop. The dimensions should be cashed and used for this operation. Since this is all not happening, the BoundingBox always scales to the size of the actual bounds, which of course resize to the diagonals of the collider.

- There is no feedback for hovering a handle (Microsoft London suggested that too)

- The BoundingBox can' be moved

- Oh and by the way, the SceneContent gameobject in the BoundingBoxExample scene has an empty component on it which can be removed

## Expected Behavior
Working BoundingBox

## Actual Behavior
Not working BoundingBox

## Steps to reproduce
- pull my fork in
- Run the BoundingBoxExample scene
- scale any handle up to a fairly big size to better see the effects
- use the box

## Unity Editor Version
2018.3.6f1

## Mixed Reality Toolkit Release Version
I don't think it matters (mrtk_development)</Description>
  </Issue>
  <Issue>
    <IssueID>3540</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>March 2019 Iteration Plan</Title>
    <CreatedDate>28/02/2019</CreatedDate>
    <ClosedDate>16/05/2019</ClosedDate>
    <IssueLabels />
    <Description># RC 1 Tasks
- [ ] Controller visualization for OpenVR #3332 @davidkline-ms @keveleigh 
- [x] Controller visualization for Windows Mixed Reality #3331 @chrisfromwork 
- [ ] NuGet Infrastructure @chrisfromwork &amp;&amp; @andreiborodin 
- [x] Service Manager proposal #3545 @davidkline-ms 
- [x]  Service Manager implementation @davidkline-ms (parts 1-3)
- [x] Core infrastructure updates for HoloLens 2 @wiwei, @keveleigh &amp;&amp; @davidkline-ms
- [ ] The "select" voice command no longer fires an event on Windows Mixed Reality #3177
- [x] Articulated Hands @keveleigh 
- [x] Eye Tracking Support @keveleigh 
- [ ] HTK Parity @davidkline-ms &amp;&amp; @keveleigh
- [x] Expose profiler sample rate in diagnostics profile #3536 @davidkline-ms
- [ ] Some objects not cleaned up when closing the scene #3539 @davidkline-ms
- [x] Namespace simplification #3546 @andreiborodin 

# "Skip Ahead" Tasks (RC 2 or later delivery)
- [x] Hand Simulation 
- [ ] Need ability to save scanned spatial mesh data (HoloToolkit parity) #3534 @davidkline-ms
- [ ] Need ability to load (in Unity) saved spatial mesh data (HoloToolkit parity) #3535 @davidkline-ms
- [x] vNext Task: Example script/scene for Manipulation Gesture #3375 @cre8ivepark
- [x] vNext Task: Example script/scene for Navigation Gesture #3374  @cre8ivepark 
- [ ] Updated Spectator View for Mobile for MRTK V2. #3641 @chrisfromwork 
# Ongoing Tasks
- [x] MRTK doc - MRTK v2 Readme Update #3440 @Yoyozilla 
- [x] MRTK doc - MRTK v2 API Documentation #3436 @paco-ms 
- [x] MRTK doc - MRTK v2 how to use the diagnostic system #3450 @davidkline-ms
- [ ] MRTK doc - How to use MRTK v2 profile system #3438
- [ ] MRTK doc - MRTK v2 input system #3439 @luis-valverde-ms 
- [ ] MRTK doc - MRTK v2 locomotion / teleport system
- [ ] MRTK doc - How to use UX controls in MRTK v2 #3435
- [ ] MRTK doc - Step by Step guide to move a HTK project to MRTK V2 #3433 @keveleigh 
- [ ] MRTK doc - Detailed documentation on all API changes from HTK to MRTK v2 #3437 @keveleigh 
- [ ] MRTK doc - Tutorial: moving Origami app from HTK to MRTK V2 #3434 @jessemcculloch 

</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>3540</IssueID>
        <PullRequestID>3549</PullRequestID>
        <Title>Diagnostics settings updates</Title>
        <Description>Enable diagnostic visualization by default.
Add ability to configure frameRateDuration (time span to collect frames for calculation)
Update visual profiler to allow setting sample duration via code
Add diagnostics recommendation in toolkit config inspector

Fixes #3536
</Description>
        <CreatedDate>28/02/2019</CreatedDate>
        <ClosedDate>01/03/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Diagnostics / Tools</Name>
            <IssueID>3540</IssueID>
            <PullRequestID>3549</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>davidkline-ms</FixedById>
            <PullRequestID>3549</PullRequestID>
            <IssueID>3540</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>3539</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3539</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Some objects not cleaned up when closing the scene</Title>
    <CreatedDate>28/02/2019</CreatedDate>
    <ClosedDate>10/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Release Blocker</Name>
        <IssueID>3539</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>3539</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When running a project in the editor using Holographic Simulation, on stopping the project it throws an error (see below). I can't tell if this error has any residual effect, but Holographic Simulation is extremely buggy for me (slow to close, freezes, crashes sometimes) so possible it is related.

## Expected Behavior
No errors.

## Actual Behavior
Error:
Some objects were not cleaned up when closing the scene. (Did you spawn new GameObjects from OnDestroy?)
The following scene GameObjects were found:
Spatial Awareness System
WindowsMixedRealitySpatialMeshObserver

## Steps to reproduce
_(Links to sample github project preferred)_
This happens to me with a, more or less, default project, using latest vNext code.

## Unity Editor Version
2018.3.6f1

## Mixed Reality Toolkit Release Version
vNext</Description>
  </Issue>
  <Issue>
    <IssueID>3538</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>UnityException: Speech recognition is not supported on this machine.</Title>
    <CreatedDate>28/02/2019</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Wrote simple app to test voice commands. While running the app on Hololens using visual studio, I get excepction "UnityException: Speech recognition is not supported on this machine."

## Expected Behavior
Expected speech recognition to work reliably. I see some times it works and other times, it throws an excpetion.
## Actual Behavior

## Steps to reproduce
* Hololens installed with latest OS release as of 2/27
* simple app for speech recognition and print out detected commands.
* run the app on hololens using visual studio in debug mode.


## Unity Editor Version
2018.3.6f1
## Mixed Reality Toolkit Release Version
2017.4.30 </Description>
  </Issue>
  <Issue>
    <IssueID>3536</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3536</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Expose profiler sample rate in diagnostics profile</Title>
    <CreatedDate>27/02/2019</CreatedDate>
    <ClosedDate>11/03/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Diagnostics / Tools</Name>
        <IssueID>3536</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Add property to the diagnostics profile that forwards sample rate to the profiler.</Description>
  </Issue>
  <Issue>
    <IssueID>3535</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3535</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Need ability to load (in Unity) saved spatial mesh data (HoloToolkit parity)</Title>
    <CreatedDate>27/02/2019</CreatedDate>
    <ClosedDate>06/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Customer Feedback</Name>
        <IssueID>3535</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>3535</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
HoloToolkit provided a mechanism to read previously scanned spatial mesh data (custom data fomat) from the disk while in the Unity editor. MRTK should have a similar feature and also support loading .obj files that can be created via Windows Device Portal.</Description>
  </Issue>
  <Issue>
    <IssueID>3534</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3534</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Need ability to save scanned spatial mesh data (HoloToolkit parity)</Title>
    <CreatedDate>27/02/2019</CreatedDate>
    <ClosedDate>28/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Customer Feedback</Name>
        <IssueID>3534</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>3534</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
HoloToolkit enabled saving scanned spatial mesh data (via a network connection back to Unity). MRTK should have a similar (possibly different  process) to do the same.
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>3534</IssueID>
        <PullRequestID>5128</PullRequestID>
        <Title>[Customer request][HTK parity] Add 3D model spatial mesh observer for use in editor</Title>
        <Description>This PR introduces the SpatialObjectMeshObserver for the Spatial Awareness System. It supports sending meshes from 3D models to the spatial awareness system while running in the editor, allowing for rapid iteration of features such as programmatic object placement.

Also added is an asset importer for the HoloToolkit .room file format to enable re-use of scans created with the remote / file observer.

Model formats used while testing the observer.
- .room
- .obj
- .gltf
- .glb

Other related changes:
- Add optional object parent parameter to SpatialAwarenessMeshObject.Create
- Fix issue in WindowsMixedRealitySpatialMeshObserver where meshes were not properly parented (takes advantage of the new parameter)

Changes tested in editor (confirm new observer behavior) and on HoloLens (confirm existing observer behavior).

Fixes #3535, #4636</Description>
        <CreatedDate>28/06/2019</CreatedDate>
        <ClosedDate>04/07/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Customer Feedback</Name>
            <IssueID>3534</IssueID>
            <PullRequestID>5128</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Editor</Name>
            <IssueID>3534</IssueID>
            <PullRequestID>5128</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>HTK Parity</Name>
            <IssueID>3534</IssueID>
            <PullRequestID>5128</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Spatial Mapping / Awareness</Name>
            <IssueID>3534</IssueID>
            <PullRequestID>5128</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>davidkline-ms</FixedById>
            <PullRequestID>5128</PullRequestID>
            <IssueID>3534</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>3530</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>IInputClickHandler.OnInputClicked unreliable after device falls asleep</Title>
    <CreatedDate>27/02/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3530</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The `IInputClickHandler.OnInputClicked` is not always called after the device is woken from sleep.

## Expected Behavior
After the device is turned on and the app is brought into the for ground the click handler should fire everytime and user taps the associated object.

## Actual Behavior
If the app is put into the background and the device is turned off the next time the app is brought into the foreground, `OnInputClicked` fires unreliably.

## Steps to reproduce

* Clone 
* Build and run app
* Airtap on each cube. Note that the respective click handlers are responsive and the cubes change from grey to green
* Background the app by blooming then shut the hololens for ~10 seconds
* Turn the HL back on and open the app by launching on the existing app window
* Note, you should not see a splash screen, the app should be launched from a suspended state
* Airtap the `IInputClickHandler` cube. Note that it no longer responds to all click events

## Unity Editor Version
2018.2.18f1
## Mixed Reality Toolkit Release Version
2017.4.3.0
</Description>
  </Issue>
  <Issue>
    <IssueID>3529</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Yoyozilla</FixedById>
        <IssueID>3529</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Preview: build errors related to System.Numerics</Title>
    <CreatedDate>27/02/2019</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>3529</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Can't build the Unity project when the Preview package is imported. Generated errors come from `SpatialGraphCoordinateSystem.cs`, and seems related to `System.Numerics` namespace.

## Expected Behavior
Unity project should build successfully.

## Actual Behavior
The build fails even if we are not actually using the scripts embedded in the Preview package. Unity's output is the following:
``

## Steps to reproduce
Import the lastest HoloToolkit version (2017.4.3.0-Refresh) including related Examples and Preview packages.
Build the Unity project targeting UWP and using **IL2CPP**.

## Unity Editor Version
2017.4.21f1

## Mixed Reality Toolkit Release Version
HoloToolkit 2017.4.3.0-Refresh

## Screenshot
![image](

</Description>
  </Issue>
  <Issue>
    <IssueID>3528</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>BoundingBox handles can be selected through colliders</Title>
    <CreatedDate>27/02/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3528</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>3528</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
While trying to understand why the BoundingBox is implemented the way it is, I put it to the test to see if geometry blocks the handles from being selected. Apparently it does not.

## Expected Behavior
Geometry blocks the boundingbox handles from being accessible

## Actual Behavior
BoundingBox handles are always available

## Steps to reproduce
- Open the BoundingBoxExample scene
- Aim at one of the handles during play mode (I used the portal motion controller)
- create a cube and move it so it intersects the ray (notice how it shortens)
- pull the trigger and watch how the grabbedCollider in the BoundingBox script is not null

## Unity Editor Version
2018.3.6f1

## Mixed Reality Toolkit Release Version
mrtk_development


**A little more context**

The MRTK InputSystem has the concept of global listeners and the concept of modal input handlers to receive input prior to everyone else.

What I initially expected?
When I point on a BoundingBox handle and select it, an OnInputDown event would be raised on the handle and then propagated to the owning BoundingBox via event.
Further, Since an OnInputUp can not be guaranteed to happen on the handle (pointing somewhere else) with these assumptions in mind , I thought the handle would be registered as modal listener and receive it no matter what.
Since there are no scripts on the handles, apparently the input must be handled some other way.

What actually happens:
A total of 11 GameObjects is registered as global listeners in that scene so every single one of them receives all events that happen, including the 4 BoundingBoxes showcased. The BoundingBox knows about it's handle colliders so when it receives an event it does an IntersectRay call on all it's colliders to determine which one was hit, if it was hit.

Why is this? The InputSystem handles Raycasts anyway, so why pushing a BoundingBox all the way up to a global listener, handling all the logic on it's own, including bypass logic for ray intersection that apparently interferes with the actual raycasting?</Description>
  </Issue>
  <Issue>
    <IssueID>3527</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ToolTipSpawner in OnFocus mode is broken</Title>
    <CreatedDate>26/02/2019</CreatedDate>
    <ClosedDate>28/09/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3527</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>3527</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Checking out the TooltipExamples scene I recognized that the "Show on Focus" tooltip is not responding.
Digging into the code I found that it's base class BaseFocusHandler implements the IMixedRealityFocusHandler interface, which internally is marked as deprecated and should be replaced with IMixedRealityFocusChangedHandler.
The signatures stay the same, but even refactoring everything to using this new interface does not get the relevant OnBeforeFocusChange called.
I stopped debugging there.

## Expected Behavior
Tooltip shows up

## Actual Behavior
Nothing happens

## Steps to reproduce
Open the TooltipExamples scene, run it on the Hololens or MR Portal (Simulator) an gaze at the "Show on Focus" Icosaeder.
The tooltip doesn't show up

## Unity Editor Version
2018.3.6f1

## Mixed Reality Toolkit Release Version
mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>3526</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>"Later" button on MixedRealityToolkit object missing dialog is non-functional</Title>
    <CreatedDate>26/02/2019</CreatedDate>
    <ClosedDate>13/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3526</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>If you do not have the MixedRealityToolkit object in your scene and you attempt to interact with an MRTK object you will get the following dialog:

![errordialog](

Clicking the Later button does nothing. The button should honor the customer's desire to dismiss without changes.

Repro steps:
* Configure scene for MRTK
* Delete MixedRealityToolkit object
* Edit &gt; Preferences
* Change a setting
* Click "Later"
</Description>
  </Issue>
  <Issue>
    <IssueID>3525</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vibration/rumble MR</Title>
    <CreatedDate>26/02/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>External</Name>
        <IssueID>3525</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>3525</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>3525</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Please help!
How can i enable vibration/rumble on Motion contronllers with HoloToolkit-Unity-2017.4.3.0.unitypackage?
"obj.state.source.StartHaptics(0.25f, 0.25f)" it not found.

Thanks.</Description>
  </Issue>
  <Issue>
    <IssueID>3524</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Airtap\Select not working in Emulator when Visual Controller Profile is not present</Title>
    <CreatedDate>26/02/2019</CreatedDate>
    <ClosedDate>21/03/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3524</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3524</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>3524</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When you create a new project and apply your own custom profiles , if you dont apply the Visual Controller Profile in the Input System Profile then Airtap does not work in the emulator (not sure about real device as I dont have one)

## Expected Behavior
Airtap should work in emulator when Visual Controller Profile is not present

## Actual Behavior
Airtap not working in Emulator

## Steps to reproduce
Create a new project. Get MRTK toolkit.
Create Custom profiles.
In the Input System Profile, assign Visual Controller Profile to None.
Add actions and maping for Hololens Airtap in the Controller mapping.
Create a sript and handle the Tap with a Point Click Handler.
Build and Run it in Emulator
Airtap does not work (wont trigger the event).

I tried with both mrtk_development and the latest Beta 2.0.0 v2 unity package from here: 
I was able to reproduce it in both. If you simply set the Visual Controller Profile to None in the Input System Profile Airtap won't work. Once you set that to the Default profile or a new one it will work fine again.

 I have the project uploaded here: 


## Unity Editor Version
2018.3.6f1
## Mixed Reality Toolkit Release Version
mrtk_development branch and Beta 2.0.0 v2 unity package release
</Description>
  </Issue>
  <Issue>
    <IssueID>3523</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>AppBar always active when object is inactive.</Title>
    <CreatedDate>25/02/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3523</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>3523</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'm having an issue with AppBar being active while the gameobject ot is attached to is inactive within the hololens app.  I have messed with display types on the AppBar prefab but just unsure how to resolve this issue, I'm sure it's simple but can please guide me in the right direction.


## Overview

## Expected Behavioe
Whenever object is set to inactive I would like the appbar to disappear with the hologram.

## Actual Behavior
Appbar remains on screen win the gameobject is set to inactive.  I have a screen set up with back buttons to go from one screen to another and the appbar remains on the screen going between screens.

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
2018.2.18
## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>3522</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Question] Will MRTK halt at Unity 2018.4 in favor of UNET one way or another?</Title>
    <CreatedDate>25/02/2019</CreatedDate>
    <ClosedDate>26/02/2019</ClosedDate>
    <IssueLabels />
    <Description>With Unity 2018.3, UNET related classes already start showing up as deprecated. The blog post says 2018.4 TLS will be the last version supporting this. A new solution as simple as UNET is still in development.
Will the Toolkit halt at 2018.4, or advance no matter what?</Description>
  </Issue>
  <Issue>
    <IssueID>3521</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Upgrade to Unity 2019.2 causes one ASMDEF to throw an error</Title>
    <CreatedDate>25/02/2019</CreatedDate>
    <ClosedDate>10/06/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When upgrading to Unity 2019.2 MixedRealityToolkit.Providers.OpenVR.asmdef reports an error:
"Platform name 'LinuxStandalone32' not supported."

## Temporary fix
Open the ASMDEF file and remove the LinuxStandalone32 entry

# Long term fix
Unity Case 1129911

## Mixed Reality Toolkit Release Version
any</Description>
  </Issue>
  <Issue>
    <IssueID>3518</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hololens2 support</Title>
    <CreatedDate>24/02/2019</CreatedDate>
    <ClosedDate>17/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens 2</Name>
        <IssueID>3518</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>3518</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Now for the burning question:
 Now that HoloLens 2 was unveiled, will Unity support it? Will MRTK support it? As this is a MS GH: Did you have your hands on the device already?
Strangely enough Tim Sweeney from Epic was on the stage. No mention of unity (couldn't even see the logo on the background screen)</Description>
  </Issue>
  <Issue>
    <IssueID>3516</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>3516</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3516</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[MRTK v2 Beta 2] Missing script in SpatialAwarenessMeshDemo scene</Title>
    <CreatedDate>24/02/2019</CreatedDate>
    <ClosedDate>24/02/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Missing script in SpatialAwarenessMeshDemo scene
![2019-02-24 08_42_36-inspectorfieldsexample cs - microsoft visual studio](

## Steps to reproduce
1. Create a new Unity project 
2. Import Microsoft.MixedReality.Toolkit.Unity.Foundation-v2.0.0-Beta2.unitypackage and Microsoft.MixedReality.Toolkit.Unity.Examples-v2.0.0-Beta2.unitypackage
3. Open SpatialAwarenessMeshDemo scene

## Unity Editor Version
2018.3.2f1

## Mixed Reality Toolkit Release Version
v2.0.0 Beta 2</Description>
  </Issue>
  <Issue>
    <IssueID>3514</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>3514</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3514</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[MRTK v2 Beta 2] Focus provider error</Title>
    <CreatedDate>23/02/2019</CreatedDate>
    <ClosedDate>23/02/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Error message related to FocusProvider. 
'Microsoft.MixedReality.Toolkit.Services.InputSystem.FocusProvider' is missing the class attribute 'ExtensionOfNativeClass'!

![2019-02-22 16_52_32-window](
![2019-02-22 16_52_25-window](

## Expected Behavior
No errors.

## Steps to reproduce
1. Clone MRTK repo. Switch to mrtk_release branch.
2. Open in Unity
3. Open BoundingBoxExample scene

## Unity Editor Version
2018.3.2f1

## Mixed Reality Toolkit Release Version
mrtk_release branch
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>3509</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spectator Preview Build Error QRTracker</Title>
    <CreatedDate>22/02/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview 
Trying to build the Holotoolkit Preview for SpectatorView first on hololens then to a iPhone. When trying to build to a selected folder I receive these errors.

##Errors when building Hololens Spectator preview
- Assets\HoloToolkit-Preview\QRTracker\Scripts\SpatialGraphCoordinateSystem.cs(83,40): error CS0234: The type or namespace name 'Preview' does not exist in the namespace 'Windows.Perception.Spatial' (are you missing an assembly reference?)

- Photo
![spectatorviewqrtracker](


- UnityEditor.BuildPlayerWindow+BuildMethodException: 4 errors
  at UnityEditor.BuildPlayerWindow+DefaultBuildMethods.BuildPlayer (BuildPlayerOptions options) [0x0020e] in C:\buildslave\unity\build\Editor\Mono\BuildPlayerWindowBuildMethods.cs:181 

## Unity Editor Version
Unity 2017.4.21f1

## Mixed Reality Toolkit Release Version
HoloToolkit-Unity-Preview-2017.4.3.0
HoloToolkit-Unity-2017.4.3.0-Refresh</Description>
  </Issue>
  <Issue>
    <IssueID>3507</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tooltip Anchor not attaching to 3Dobj</Title>
    <CreatedDate>22/02/2019</CreatedDate>
    <ClosedDate>27/02/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Tooltip Anchor not attaching to 3Dobj

## Expected Behavior
It should attach to the object
## Actual Behavior
Anchor attaches in space nowhere near the object
![2019-02-22](

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
2017
## Mixed Reality Toolkit Release Version
2017</Description>
  </Issue>
  <Issue>
    <IssueID>3505</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3505</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Create nuspec files for each provider, service and feature component</Title>
    <CreatedDate>22/02/2019</CreatedDate>
    <ClosedDate>10/06/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>3505</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>3505</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3505</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Package Management</Name>
        <IssueID>3505</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
  </Issue>
  <Issue>
    <IssueID>3497</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>ritijain</FixedById>
        <IssueID>3497</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>App Stalls/Delays at Startup Due to Noisy Environment</Title>
    <CreatedDate>21/02/2019</CreatedDate>
    <ClosedDate>30/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3497</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>D365</Name>
        <IssueID>3497</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>External</Name>
        <IssueID>3497</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Speech</Name>
        <IssueID>3497</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I took an app built with MRTK to a very noisy factory environment and it took &gt; 5m to open after the display of the splash screen. I found that apps like '3D Viewer' built (AFAIK) without the MRTK didn't seem to suffer from this problem.

It should be noted that the app uses voice commands.

## Expected Behavior
The apps would open in a reasonable time.

## Actual Behavior
The apps don't open in a reasonable time - e.g. &gt; 5m from splash screen.

## Steps to reproduce
Take an app built with the toolkit using voice commands and run it up in an extremely noisy environment. You should find that it hangs for minutes after the splash screen &amp; if you stop it in the debugger you'll find that it is stuck somewhere spinning around trying to deal with speech. I haven't yet diagnosed whether this is caused by MRTK code or by UWP code or some combination.

## Unity Editor Version
2018.3.2f1 

## Mixed Reality Toolkit Release Version
Not 100% sure - think it's the latest release at the time of writing - 2017.4.3.0.</Description>
  </Issue>
  <Issue>
    <IssueID>3474</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Question] TrackedPoseDriver support?</Title>
    <CreatedDate>19/02/2019</CreatedDate>
    <ClosedDate>20/02/2019</ClosedDate>
    <IssueLabels />
    <Description>I found this blog post and since it promises a fair amount of cross platform work on Unity's side, I was wondering if vNext would make use of the components or run its own solution completely?

</Description>
  </Issue>
  <Issue>
    <IssueID>3472</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[HoloToolkit] Objects moves with head movement</Title>
    <CreatedDate>18/02/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When attach a HandDraggable or TwoHandsManipulatable script to an object it moves with the headset position not only with controllers.

## Expected Behavior
Objects can be manipulated with the controllers as expected.

## Actual Behavior
Objects moves/rotate when you move the head too.

## Steps to reproduce

1. Create a gameObject with a box collider
2. Add HandDraggable or TwoHandsManipulatable script
3. Run the scene, pull and hold the trigger while pointing to the object and move the headset

## Unity Editor Version
2017.4.20f2

## Mixed Reality Toolkit Release Version
HoloToolkit-Unity-2017.4.3.0-Refresh
</Description>
  </Issue>
  <Issue>
    <IssueID>3463</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>chrisfromwork</FixedById>
        <IssueID>3463</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Spectatorview preview: iphone does not trigger hololens camera</Title>
    <CreatedDate>15/02/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>SpectatorView</Name>
        <IssueID>3463</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I'm using the HoloToolkit spectator view (preview), i did everything following the instruction, but when i run the app on both hololens and iPhone, the camera on HoloLens won't be triggered. I feel that iPhone did not even send a ping message to HoloLens since i got the error: (I'm using HoloToolkit 2017.4.3.0, Unity 2017.4.20f2 LTS)

2019-02-15 16:32:05.508713-0500 SpectatorView[11478:6313086] [si_destination_compare] send failed: Invalid argument
2019-02-15 16:32:05.508755-0500 SpectatorView[11478:6313086] [si_destination_compare] send failed: Undefined error: 0
2019-02-15 16:32:05.508775-0500 SpectatorView[11478:6313086] [si_destination_compare] send failed: Invalid argument
StartAsClient Discovery listening
UnityEngine.Networking.NetworkDiscovery:StartAsClient()
HoloToolkit.Unity.Preview.SpectatorView.SpectatorViewNetworkDiscovery:ManualStart()

(Filename: /Users/builduser/buildslave/unity/build/artifacts/generated/common/runtime/DebugBindings.gen.cpp Line: 51)

StartAsServer Discovery broadcasting
UnityEngine.Networking.NetworkDiscovery:StartAsServer()
HoloToolkit.Unity.Preview.SpectatorView.NewDeviceDiscovery:ManualStart()

(Filename: /Users/builduser/buildslave/unity/build/artifacts/generated/common/runtime/DebugBindings.gen.cpp Line: 51)

DontDestroyOnLoad only work for root GameObjects or components on root GameObjects.
UnityEngine.Networking.NetworkDiscovery:StartAsServer()
HoloToolkit.Unity.Preview.SpectatorView.NewDeviceDiscovery:ManualStart()

## Expected Behavior

## Actual Behavior
The hololens camera won't be triggered anyway. They are on the same network.

## Unity Editor Version
Unity 2017.4.20f2 LTS

## Mixed Reality Toolkit Release Version
HoloToolkit 2017.4.3.0</Description>
  </Issue>
  <Issue>
    <IssueID>3456</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Selection not working in new vNext project</Title>
    <CreatedDate>14/02/2019</CreatedDate>
    <ClosedDate>24/02/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3456</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
This may be me missing a configuration step, but when I attempt to interact with the Example projects (any of them) using the default / unchanged configuration, I see the following upon running:

1. In the Unity Game window I get no interactivity with either an attached Xbox One controller (updated to latest firmware, etc.), mouse or keyboard.

2. If I set up Holographic mode (Simulate in Editor or Remote to Device -- HoloLens), In the editor I still get no interaction with the mouse, with the Xbox I can move but not select. On the device I can also move around but select gestures do not work.

3. If I deploy to the HoloLens gestures work and I can select.

## Expected Behavior
Selection works by default, at least in Holographic Simulation mode.

## Actual Behavior
No ability to select.

## Steps to reproduce
_(Links to sample github project preferred)_
This is what I get from the dev branch project with all lastest changes.

## Unity Editor Version
2018.3.5f1

## Mixed Reality Toolkit Release Version
mrkt_development latest</Description>
  </Issue>
  <Issue>
    <IssueID>3450</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3450</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK doc - MRTK v2 how to use the diagnostic system</Title>
    <CreatedDate>13/02/2019</CreatedDate>
    <ClosedDate>09/04/2019</ClosedDate>
    <IssueLabels />
  </Issue>
  <Issue>
    <IssueID>3387</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3387</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add Attribute to make sure we can migrate to data provider in V3</Title>
    <CreatedDate>30/01/2019</CreatedDate>
    <ClosedDate>03/02/2019</ClosedDate>
    <IssueLabels />
    <Description>Implement an attribute that will enable both easy migration from v2 to v3 configuration profiles as well as to surface useful default data when adding the provider (ex: configuration profile, supported platforms, etc).</Description>
  </Issue>
  <Issue>
    <IssueID>3385</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Could not Find SDK "Microsoft.VCLibs, Version=14.0"</Title>
    <CreatedDate>30/01/2019</CreatedDate>
    <ClosedDate>19/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
After recently being forced to upgrade from Visual Studio 2015 to 2017 I can no longer successfully make a build for the hololense. 
## Expected Behavior
The build should work as normal.
## Actual Behavior
Build fails with error Could not Find SDK "Microsoft.VCLibs, Version=14.0"
## Steps to reproduce
_(Links to sample github project preferred)_
- Bild project in Unity
- Open in Visual Studio
- Build Solution
 
## Unity Editor Version
2017.2.0f3
## Mixed Reality Toolkit Release Version
An old release of Holo Toolkit, Not sure how to find the version number</Description>
  </Issue>
  <Issue>
    <IssueID>3379</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>World Anchor Use for Unity 2017.4</Title>
    <CreatedDate>27/01/2019</CreatedDate>
    <ClosedDate>28/01/2019</ClosedDate>
    <IssueLabels />
    <Description>Hello,really novice developer over here. Trying to figure out how to use **World Anchors** correctly. I have come across some examples but i think most of them are outdated.
- Is there any **relevant example scene** at the Holotoolkit?
- Can someone walk me through the process of **attaching a WorldAnchor to a Game Object with the assistance of WorldAnchorManager.cs**?
- What happens if i modify the transform position of the anchored object? I guess nothing happens right? If i set the position of other object relevant to the position of the anchored objects does it practically mean that i have those other objects anchored as well(i have read about the 3 meter rule)?

Thanks for your time.
</Description>
  </Issue>
  <Issue>
    <IssueID>3378</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How do I move the camera position through script?</Title>
    <CreatedDate>26/01/2019</CreatedDate>
    <ClosedDate>28/01/2019</ClosedDate>
    <IssueLabels />
    <Description>I am trying to create a button, that when the user clicks it moves the user/camera to a new position. However, I haven't been able to do so either by modifying the transform.position of the MixedRealityCameraParent nor by newsting it into a new empty object.</Description>
  </Issue>
  <Issue>
    <IssueID>3376</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>SimonDarksideJ</FixedById>
        <IssueID>3376</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Controller configuration not funtional</Title>
    <CreatedDate>26/01/2019</CreatedDate>
    <ClosedDate>28/01/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>3376</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Controller configuration is completely broken and non-functional, with key configuration files missing from the project.

## Expected Behavior
Go in to controller configuration, select a controller and configure it

## Actual Behavior
Nothing, nada, completely broken including the controller preview images not working

## Steps to reproduce
1. Unlock profiles or create new controller configuration
2. Open controller config
3. Attempt to open the config for any controller

## Unity Editor Version
2018.3.2

## Mixed Reality Toolkit Release Version
Development</Description>
  </Issue>
  <Issue>
    <IssueID>3375</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext Task: Example script/scene for Manipulation Gesture</Title>
    <CreatedDate>25/01/2019</CreatedDate>
    <ClosedDate>09/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Example/Test Scene</Name>
        <IssueID>3375</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
There is no example which demonstrates 'Manipulation Gesture' for HoloLens. A lot of HoloToolkit customers use Manipulation gesture. 

Manipulation gesture is introduced as official gesture in HoloLens:
</Description>
  </Issue>
  <Issue>
    <IssueID>3374</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext Task: Example script/scene for Navigation Gesture</Title>
    <CreatedDate>25/01/2019</CreatedDate>
    <ClosedDate>09/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Example/Test Scene</Name>
        <IssueID>3374</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
There is no example which demonstrates 'Navigation Gesture' for HoloLens. A lot of HoloToolkit customers use Navigation gesture. 

Navigation gesture is introduced as an official gesture in HoloLens:
</Description>
  </Issue>
  <Issue>
    <IssueID>3373</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>After updating to latest LTS Version 2017.4.18 CS0117 'Application' does not contain a definition for 'quitting' </Title>
    <CreatedDate>25/01/2019</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels />
    <Description>I just updated to the latest LTS version  2017.4.18.

After updating I have two errors that I am not sure how to solve:

1: MixedRealityToolkit/_Core/Services/MixedRealityToolkit.cs(398,47): errorCS0117 'Application' does not contain a definition for 'quitting' Microsoft.MixedReality.Toolkit
2: MixedRealityToolkit/_Core/Services/MixedRealityToolkit.cs(398,47): error CS0117: `UnityEditor.EditorApplication' does not contain a definition for `hierarchyChanged'

Any Idea what the problem might be?

I think Mixed Reality Toolkit Release Version is for unity 2018, do I need an Older version? I would like to use the beta so I can take advantage of the sharing features.
`   /// &lt;summary&gt;
        /// Lock property for the Mixed Reality Toolkit to prevent reinitialization
        /// &lt;/summary&gt;
        private static readonly object initializedLock = new object();

        private void InitializeInstance()
        {
            lock (initializedLock)
            {
                if (IsInitialized) { return; }

                instance = this;

                if (Application.isPlaying)
                {
                    DontDestroyOnLoad(instance.transform.root);
                }

                Application.quitting += () =&gt;
                {
                    isApplicationQuitting = true;
                };

#if UNITY_EDITOR
                UnityEditor.EditorApplication.playModeStateChanged += playModeState =&gt;
                {
                    if (playModeState == UnityEditor.PlayModeStateChange.ExitingEditMode ||
                        playModeState == UnityEditor.PlayModeStateChange.EnteredEditMode)
                    {
                        isApplicationQuitting = false;
                    }

                    if (playModeState == UnityEditor.PlayModeStateChange.ExitingEditMode &amp;&amp; activeProfile == null)
                    {
                        UnityEditor.EditorApplication.isPlaying = false;
                        UnityEditor.Selection.activeObject = Instance;
                        UnityEditor.EditorGUIUtility.PingObject(Instance);
                    }
                };

                UnityEditor.EditorApplication.hierarchyChanged += () =&gt;
                {
                    if (instance != null)
                    {
                        Debug.Assert(instance.transform.parent == null, "The MixedRealityToolkit should not be parented under any other GameObject!");
                        Debug.Assert(instance.transform.childCount == 0, "The MixedRealityToolkit should not have GameObject children!");
                    }
                };`</Description>
  </Issue>
  <Issue>
    <IssueID>3360</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Camera offset when changing scenes</Title>
    <CreatedDate>22/01/2019</CreatedDate>
    <ClosedDate>26/01/2019</ClosedDate>
    <IssueLabels />
    <Description>I am developing a project in which I have two scenes and they work fine on their own. However, when I try to switch from one to the other I run into some trouble.

In order to switch scenes, I am using: SceneManager.LoadScene("Name of Scene");

The problem is that once the new scene loads, the headset and joystick position is no longer aligned to where I really am. From my current position I can see that the joysticks are a couple meters in front of me. I already tried reimporting the Camera Parent, but had no luck.
</Description>
  </Issue>
  <Issue>
    <IssueID>3359</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>FocusManager does not compute distance to Canvas correctly</Title>
    <CreatedDate>21/01/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3359</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When raycasting UI with EventSystem, Unity returns distance value not from camera center, but from near clip plane. This can be fixed in FocusManager, when converting from camera space to worldSpace add nearClipPlane to the distance. This fixes the issue. See


## Expected Behavior
Cursor focusing on WorldSpace Canvas is floating above it exactly at Cursor's Surface Distance.

## Actual Behavior
Cursor focusing on WorldSpace Canvas is floating above it, more that Cursor's Surface Distance.

## Steps to reproduce
Create a scene with WorldSpace canvas and a Raycast camera that has non-zero nearClip plane (bigger makes it more obvious). The cursor has an offset as well (set Cursor Surface Distance to be 0). The cursor will be floating above the world space canvas.

## Unity Editor Version
2018.3.1

## Mixed Reality Toolkit Release Version
2017.4.2.0</Description>
  </Issue>
  <Issue>
    <IssueID>3358</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3358</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Create separate OpenVR provider assembly</Title>
    <CreatedDate>19/01/2019</CreatedDate>
    <ClosedDate>31/01/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3358</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK Approved</Name>
        <IssueID>3358</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Continuation of #3341, moving the OpenVR provider into the MixedRealityToolkit.Providers folder and creating the appropriate asmdef file.

Approved by shiproom on 2019-01-18, pending completion of #3074.

Blocked by #3074 </Description>
  </Issue>
  <Issue>
    <IssueID>3357</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3357</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Create separate WindowsMixedReality provider assembly</Title>
    <CreatedDate>19/01/2019</CreatedDate>
    <ClosedDate>31/01/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3357</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK Approved</Name>
        <IssueID>3357</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Continuation of #3341, moving the WindowsMixedReality provider into the MixedRealityToolkit.Providers folder and creating the appropriate asmdef file.

Approved by shiproom on 2019-01-18, pending completion of #3074.

Blocked by #3074 </Description>
  </Issue>
  <Issue>
    <IssueID>3356</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3356</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Create separate UnityInput provider assembly</Title>
    <CreatedDate>19/01/2019</CreatedDate>
    <ClosedDate>30/01/2019</ClosedDate>
    <IssueLabels />
    <Description>Continuation of #3341, moving the UnityInput provider into the MixedRealityToolkit.Providers folder and creating the appropriate asmdef file.

Approved by shiproom on 2019-01-18, pending completion of #3074.

Blocked by #3074 </Description>
  </Issue>
  <Issue>
    <IssueID>3353</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>QRTracker Doesn't detect markers on hololens</Title>
    <CreatedDate>18/01/2019</CreatedDate>
    <ClosedDate>19/02/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>SpectatorView</Name>
        <IssueID>3353</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Simply attempting to run spectator view example scene and link the iPad to the hololens.

## Expected Behavior
hololens detects QR code on iPad after detecting the floor and Spectator view activates on iOS

## Actual Behavior
hololens fails to detect QR Code
(sharingservice.exe indicates iPad and hololens are in the same networked room
 so at least that part works)

## Steps to reproduce
Following the instructions from spectator preview setup tutorial


## Unity Editor Version
Using version 2017.4.3 of unity to build iOS and UWP Builds.

## Mixed Reality Toolkit Release Version

</Description>
  </Issue>
  <Issue>
    <IssueID>3352</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Iteration Plan for February 2019</Title>
    <CreatedDate>18/01/2019</CreatedDate>
    <ClosedDate>28/02/2019</ClosedDate>
    <IssueLabels />
    <Description>## Documentation

- [x ] Conceptual / How-To documentation for 
   
    - [x] MRTK doc - MRTK v2 how to use the boundary system #3449
    - [x] MRTK doc - MRTK v2 how to use the spatial awareness system #3448
    - [x] MRTK doc - How to use MRTK v2 Packages #3441

## Additive items / fixes for February,

- [x] Updated On Device Diagnostics
- [x] update version number and license file year in preparation for beta2 release #3401
- [x] vNext Task: New Interactable Object #2607 
- [x] Diagnostics System crashes HoloLens application on start #3245 
- [x] Diagnostics placement is sporadic and displays no data  #3056 
- [x] NullReferenceExpection in BaseSpatialObserver.CleanupMeshObject on Hololens #3226 
- [x] Unity UI Buttons do not work with WMR Motion Controllers #3262 
- [x] [vNext][UX] Feature/mrtk interactable dev merge #3380 
- [x] IMixedRealitySpatialAwarenessSystem.GetObservers&lt;&gt;() returns the base type, rather than the templated type #3420 @davidkline-ms 


##Moving to March 

- [ ] MRTK doc - MRTK v2 how to use the diagnostic system #3450 
- [ ] MRTK doc - How to use UX controls in MRTK v2 #3435
- [ ] MRTK doc - How to use MRTK v2 profile system #3438 (please see #3545)
- [ ] MRTK doc - MRTK v2 input system #3439 (we have changes coming to input system) 
- [ ] MRTK doc - Step by Step guide to move a HTK project to MRTK V2 #3433
- [ ] MRTK doc - Tutorial: moving Origami app from HTK to MRTK V2 #3434
- [ ] MRTK doc - Detailed documentation on all API changes from HTK to MRTK v2 #3437
- [ ] MRTK doc - MRTK v2 Readme Update #3440
- [ ] MRTK doc - MRTK v2 API Documentation #3436

- [ ] The "select" voice command no longer fires an event on Windows Mixed Reality #3177 
- [ ] vNext Task: Example script/scene for Manipulation Gesture #3375
- [ ] vNext Task: Example script/scene for Navigation Gesture #3374  
- [ ] Controller visualization for OpenVR #3332 @davidkline-ms &amp;&amp; @keveleigh 
- [ ] Controller visualization for Windows Mixed Reality #3331 @davidkline-ms &amp;&amp; @keveleigh 
</Description>
  </Issue>
  <Issue>
    <IssueID>3351</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Iteration Plan for January 2019</Title>
    <CreatedDate>18/01/2019</CreatedDate>
    <ClosedDate>01/02/2019</ClosedDate>
    <IssueLabels />
    <Description>This is our plan for January. The goal is to complete MRTK v2 and release Beta2. The definition of complete is:

- [x] No remaining breaking changes
- [x] Feature Complete compared to HTK (except for controller rendering)
- [x] Substantial feedback from Beta1 addressed

### Planned Work
- [x] Update inconsistent naming of core system implementations #3115 @davidkline-ms
- [x] Update Unity requirement to 2018.3 #3306 @davidkline-ms
- [x] move input system to core #3328 @davidkline-ms
- [x] Moving spatial awareness system to core #3327 @davidkline-ms
- [x] Tree layout and assembly restructure to align with packaging #3341 @davidkline-ms 
- [x] Refactor Controller Mapping Profile to accept individual controller scriptable objects. #3074 
- [x] Create separate OpenVR provider assembly #3358 (blocked by #3074)
- [x] Create separate WindowsMixedReality provider assembly #3357 (blocked by #3074)
- [x] Spatial awareness interfaces changes #3326 @davidkline-ms &amp;&amp; @radicalad
- [x] Remove requirement for IMixedRealityInputHandler&lt;T&gt; to be an IMixedRealityInputHandler #3295 @davidkline-ms 
- [x] Add Attribute to make sure we can migrate to data provider in V3 #3387 @davidkline-ms 
</Description>
  </Issue>
  <Issue>
    <IssueID>3346</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cannot install anymore appx build after VS update</Title>
    <CreatedDate>17/01/2019</CreatedDate>
    <ClosedDate>21/05/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview

After updating my Visual Studio start of the week (I rarely do this), all the appx created from my Unity project with .NET scripting backend cannot be installed on Hololens, I get the following error:

Failure reason: Windows cannot install package because this package depends on a framework that could not be found. Provide the framework "Microsoft.NET.CoreRuntime.1.1" published by "CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US", with neutral or x86 processor architecture and minimum version 1.1.27004.0, along with this package to install. The frameworks with name "Microsoft.NET.CoreRuntime.1.1" currently installed are: {Microsoft.NET.CoreRuntime.1.1_1.1.26702.0_x86__8wekyb3d8bbwe} Failure text: Package failed updates, dependency or conflict validation. (0x80073cf3)

However Installing previous builds done before last week still works.

By the way IL2CPP scripting backend never worked for me, when starting the app from the Hololens, I get a window with the error Failed to load game assembly.

## Unity Editor Version

2018.1.2

## Mixed Reality Toolkit Release Version

2017.4.2

## Visual Studio version

15.9.5</Description>
  </Issue>
  <Issue>
    <IssueID>3345</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3345</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Room size no longer functions</Title>
    <CreatedDate>17/01/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>3345</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3345</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>There was a function for spatial audio that allowed one to change room size through scripting. The default room size is small. After enabling MS HRTF in the audio settings, a script would appear on your audio sources that would allow you to change the size of the room. This no longer functions. No matter how it's set, the small room is what you get.

According to this documentation 



you should be able to change the setting through scripting. This no longer functions as well.

after looking at the HoloToolKit - master, in the U Audio Manager, you could also change the size of the room. This no longer functions.

I'm concluding that this is no longer a feature and would be nice is it defaults to "none" rather than "small"



</Description>
  </Issue>
  <Issue>
    <IssueID>3341</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3341</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Tree layout and assembly restructure to align with packaging</Title>
    <CreatedDate>14/01/2019</CreatedDate>
    <ClosedDate>18/01/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3341</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK Approved</Name>
        <IssueID>3341</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

Currently, there are four top level folders in our tree (beneath Assets):

- MixedRealityToolkit
- MixedRealityToolkit-SDK
- MixedRealityToolkit-Examples
- MixedRealityToolkit-Tests

This proposal defines adding the following to for easy package source discovery:

- MixedRealityToolkit.Devices
    - WindowsMixedReality
    - OpenVR
    - UnityInput
    - WindowsVoiceInput
- MixedRealityToolkit.Services
    - BoundarySystem
    - DiagnosticsSystem
    - InputSystem
    - SpatialAwarenessSystem
    - TeleportSystem

As part of this change, assembly definitions will be adjusted to conform to the following convention:

MixedReality.Toolkit. &lt; Layer &gt; . [ Area ]

Examples:

- MixedReality.Toolkit.Core (was MixedRealityToolkit)
- MixedReality.Toolkit,Devices.WindowsMixedReality
- MixedReality.Toolkit.Services.BoundarySystem

Future pull requests will address renaming existing top level folders (ex: MixedRealityToolkit-SDK -&gt; MixedRealityToolkit.SDK).

# Acceptance Criteria
- [x] Assemblies reference the minimal set required to function (ex: most will only reference MixedRealityToolkit.Core)
- [x] Samples and demos updated to reference new assemblies and namespace changes,
- [x] New assemblies created
    - [x] MixedRealityToolkit.Services.*
        - [x] BoundarySystem
        - [x] DiagnosticsSystem
        - [x] InputSystem
        - [x] SpatialAwarenessSystem
        - [x] TeleportSystem
    - [x] MixedRealityToolkit.Providers.*
        - UnityInput - To be addressed in a later change (needs #3074)
        - [x] WindowsVoiceInput
        - WindowsMixedReality - To be addressed in a later change (needs #3074)
        - OpenVR - To be addressed in a later change (needs #3074)</Description>
  </Issue>
  <Issue>
    <IssueID>3340</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cant delete a world anchor that isnt attached to a gameobject</Title>
    <CreatedDate>14/01/2019</CreatedDate>
    <ClosedDate>28/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3340</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
In WorldAnchorManager, deleting a world anchor works only if there is a gameobject with that world anchor active.

## Expected Behavior
When I create a persistent world anchor and saved it to the store, after restarting the app,
and the world anchor isn't in the app in a gameobject, I want to be able to delete that 
world anchor from the store.
 
## Actual Behavior
In this case scenario, the WorldAnchorManager logs an error
Which isn't necessary

## Steps to reproduce
Create a persistent world anchor using WorldAnchorManager.cs so its saved in store.
Close and re-open the app so it starts fresh
Try to delete the world anchor by name
Notice that an error is logged

## Unity Editor Version

## Mixed Reality Toolkit Release Version
2017.4.3.0
</Description>
  </Issue>
  <Issue>
    <IssueID>3339</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>It's unclear how to locally validate a pull request for the MRTK project</Title>
    <CreatedDate>11/01/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>3339</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>3339</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>After looking at the landing page for the MRTK project, it isn't obvious how to validate pull requests locally. I imagine there are best practices used by frequent contributors. We should share these best practices with the community so that new developers/reviewers for the project know how their changes will be validated/can run through validation with their local dev environments.

Some items that seem worth touching on in the documentation:
1) I've heard there are tests/unit tests. I do not know where these tests are located or how to run them.
2) It's unclear what user scenarios are supported/should be manually tested (AR scenarios, VR scenarios, etc). It's also unclear if example scenes exist that can validate these scenarios or if a user has to build their own scenes to avoid regressions.
3) It's easy to find a github example for checking out a pull request locally, but specifically linking to this information or stating the projects best practice for checking out a branch would ease this process.

</Description>
  </Issue>
  <Issue>
    <IssueID>3338</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>It's unclear what best practices exist for validating pull requests targeting the MRTK</Title>
    <CreatedDate>11/01/2019</CreatedDate>
    <ClosedDate>05/08/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>3338</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Urgency-Soon</Name>
        <IssueID>3338</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>It may exist, but after looking at the landing page for the MRTK github project, I haven't seen any documentation on how to validate a pull request locally. I think new developers to the project could benefit greatly from an explicit call out of the repo's known best practices. Some items that seem worth touching on:

1) I've heard that there may be tests/unit tests for the project, but i don't know where they are or how to run them.
2) I've heard that there are specific feature areas to validate (AR Devices, VR Devices, controllers, etc), but i don't know how to configure/use a unity project to run through supported scenarios.
3) It's not immediately obvious how to locally checkout a pull request. Github shows how to do this in the merging steps, which seems to be the best practice. But a call out on how to do this would be helpful.</Description>
  </Issue>
  <Issue>
    <IssueID>3337</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Opening the toolkit in unity throws an OpenVR error if steam isn't installed on machine</Title>
    <CreatedDate>11/01/2019</CreatedDate>
    <ClosedDate>20/02/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
It appears that some aspect of the toolkit's configuration expects openvr to be installed:
[10:58:13] XR: OpenVR Error! OpenVR failed initialization with error code VRInitError_Init_PathRegistryNotFound: "Installation path could not be located (110)"! 

Either the toolkit should list that steam is required in order to not get this error, or this error should only appear when 

## Expected Behavior
MRTK doesn't display any errors when opening in unity after completing setup instructions

## Actual Behavior
MRTK shows the following error when opening in unity after completing setup instructions:
[10:58:13] XR: OpenVR Error! OpenVR failed initialization with error code VRInitError_Init_PathRegistryNotFound: "Installation path could not be located (110)"! 

## Steps to reproduce
1) Get a PC that does not have steam installed
2) Install unity
3) Open MRTK with unity
4) Observe OpenVR Error

## Unity Editor Version
2018.3.1f1 was used to repro this bug, but I have heard that the issue also exists in previous releases

## Mixed Reality Toolkit Release Version
This is an issue when using the mrtk_development branch
</Description>
  </Issue>
  <Issue>
    <IssueID>3336</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>It's unclear how to setup an MRTK project from the github landing page</Title>
    <CreatedDate>11/01/2019</CreatedDate>
    <ClosedDate>19/11/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>3336</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>In my opinion, the MRTK landing page doesn't contain enough information to understand how to setup a new MRTK project.

1) It's not obvious what purpose 'Building the Artifacts" fulfills. Are these steps required? What do they achieve?
2) How is the MRTK added to a project? Are users expected to just include/import the default assets folder? Should the MRTK be useable after running through the 'Building the Artifacts' step?
3) What examples currently exist for the MRTK? Stating that examples will/do exist somewhere in a development branch without a direct link doesn't build confidence/may generate frustration for new users.
</Description>
  </Issue>
  <Issue>
    <IssueID>3335</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Dev_Working_Branch hyper link on landing page 404s</Title>
    <CreatedDate>11/01/2019</CreatedDate>
    <ClosedDate>20/02/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Dev_Working_Branch hyper link on landing page 404s

## Expected Behavior
All hyper links on the landing page should resolve to an actual web page

## Actual Behavior
The hyper link doesn't resolve to anything

## Steps to reproduce
_(Links to sample github project preferred)_
Click Dev_Working_Branch on MRTK github landing page

## Unity Editor Version
N/A

## Mixed Reality Toolkit Release Version
N/A
</Description>
  </Issue>
  <Issue>
    <IssueID>3332</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>3332</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3332</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>controller visualization for openvr</Title>
    <CreatedDate>10/01/2019</CreatedDate>
    <ClosedDate>25/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3332</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3332</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK Approved</Name>
        <IssueID>3332</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Currently, the only mechanism to visualize a specific controller model is for that model to be baked into the application as an obj, fbx, etc. and referenced in the appropriate profile.

We should investigate / implement a means of acquiring the appropriate models from the OpenVR runtime.</Description>
  </Issue>
  <Issue>
    <IssueID>3331</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3331</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>controller visualization for Windows Mixed Reality</Title>
    <CreatedDate>10/01/2019</CreatedDate>
    <ClosedDate>24/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3331</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK Approved</Name>
        <IssueID>3331</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

Currently, the only mechanism to visualize a specific controller model is for that model to be baked into the application as an obj, fbx, etc. and referenced in the appropriate profile.

HoloToolkit leveraged UnityGLTF, from Khronos, to enable requesting the model from the device. That had an additional dependency on Newtonsoft's JSON library. This dependency has caused conflicts when customers attempted to integrate HTK into projects that used a different version of the library,

To enable GLTF without the dependencies, we are investigating modifications to the UnityGLTF code that replaces the Newtonsoft library with .NET's DataContractJsonSerializer</Description>
  </Issue>
  <Issue>
    <IssueID>3330</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3330</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>implement data provider pattern for input</Title>
    <CreatedDate>10/01/2019</CreatedDate>
    <ClosedDate>17/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3330</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3330</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK Approved</Name>
        <IssueID>3330</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>david to fill out
## Overview

## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>3329</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3329</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>implement data provider pattern for spatial awareness</Title>
    <CreatedDate>10/01/2019</CreatedDate>
    <ClosedDate>17/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3329</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK Approved</Name>
        <IssueID>3329</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>3329</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>David to fill out
## Overview

## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>3328</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3328</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>move input system to core</Title>
    <CreatedDate>10/01/2019</CreatedDate>
    <ClosedDate>16/01/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3328</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3328</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Post Beta 1, it was decided that systems belong in the core and not SDK layer. This change will move input

## Requirements

- Code files moved in the tree
- Namespaces appropriately updated
- Client code appropriately updated to reflect new namespaces
- Profile(s) updated to reflect the new namespaces

## Acceptance criteria

- [ ] Demo scenes continue to work
</Description>
  </Issue>
  <Issue>
    <IssueID>3327</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Moving spatial awareness system to core</Title>
    <CreatedDate>10/01/2019</CreatedDate>
    <ClosedDate>14/01/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3327</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>3327</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Post Beta 1, it was decided that systems belong in the core and not SDK layer. This change will move spatial awareness.

## Requirements

- Code files moved in the tree
- Namespaces appropriately updated
- Client code appropriately updated to reflect new namespaces
- Profile(s) updated to reflect the new namespaces

## Acceptance criteria

- [ ] Demo scene continues to work
</Description>
  </Issue>
  <Issue>
    <IssueID>3326</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>radicalad</FixedById>
        <IssueID>3326</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3326</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>spatial awareness interfaces changes (more feature focused)</Title>
    <CreatedDate>10/01/2019</CreatedDate>
    <ClosedDate>03/02/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3326</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK Approved</Name>
        <IssueID>3326</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>3326</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

The Spatial Awareness System interface has too much of a burden for understanding the types of data a spatial observer may provide.

Similarly, putting a requirement on all observers to implement properties and methods, whether or not the type of data is provided, is not reasonable.

To resolve these issues, the IMixedRealitySpatialAwarenessSystem interface will be trimmed to provide only the core requirements for the system. Additionally, the IMixedRealitySpatialAwarenessObserver interface will be reduced to the essential components of an observer (ex: status, update interval, etc) with support for meshes, surface planes and other future types of data to be housed in data specific interfaces (ex: IMixedRealitySpatialAwarenessMeshObserver).

Enabling support for an observer that may return multiple types of data is critical as we should not require duplication of code or data synchronization issues in these scenarios.

## Requirements

- Spatial Awareness interfaces are to become more feature / task focused
- Existing concrete implementations are updated to use one or more of the interfaces
- Client code can access / control aspects of the observers as appropriate
- Existing client code (ex: demo scripts) should experience _minimal_ breaking changes

## Acceptance Criteria

- [x] Interfaces define the minimal set of properties and methods to provide the feature
- [x] Existing demo script continues to function as expected</Description>
  </Issue>
  <Issue>
    <IssueID>3325</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>OnSourceDetected not called (IMixedRealitySourceStateHandler)</Title>
    <CreatedDate>10/01/2019</CreatedDate>
    <ClosedDate>18/01/2019</ClosedDate>
    <IssueLabels />
    <Code>OnStartLocalPlayer and by the events provided from IMixedRealitySourceHandler.

## Actual behaviour
When testing in Editor, the events for OnSourceDetected and OnSourceLost are not called when a controller is connected/disconnected. The same happens btw. with an implementation of ControllerFinder. On Start it works, but within a session the events are not fired.

## Expected behaviour
The events for OnSourceDetected and OnSourceLost should be triggered every time a controller is connected/disconnected.

## Steps to reproduce
This is basically my current implementation. The spawn via OnStartLocalPlayer does work, but afterwards, nothing happens. It's also not possible to attach VS2017 to debug the events.

csharp
public class PlayerControllerHandler : NetworkBehaviour, IMixedRealitySourceStateHandler {

    [SerializeField]
    private GameObject _leftNetworkControllerPrefab;
    [SerializeField]
    private GameObject _rightNetworkControllerPrefab;

    public override void OnStartLocalPlayer() {
        // spawn controller
        foreach (IMixedRealityController controller in MixedRealityToolkit.InputSystem.DetectedControllers) {
            SpawnNetworkController(controller);
        }
    }

    public void OnSourceDetected(SourceStateEventData eventData) {
        SpawnNetworkController(eventData.Controller);
    }

    public void OnSourceLost(SourceStateEventData eventData) {
        if (eventData.Controller?.Visualizer != null) {
            DestroyNetworkController(...);
        }
    }
    ...
    ...
}
`</Code>
    <Description>## Overview
Hy everyone, I'm working with a WMR headset and implemented a small player controller handler for networking the controller. The Spawn/UnSpawn should be triggerd by ``

## Unity Editor Version
2018.2.17f1

## Mixed Reality Toolkit Release Version
2018.9.0

Best regards :)</Description>
  </Issue>
  <Issue>
    <IssueID>3324</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpatialUnderstanding implementation crashes</Title>
    <CreatedDate>10/01/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels />
    <Description>

## Overview

Tried using SpatialUnderstanding features to place an object on the edge of a plane. Here is the code I used:
`using System.Collections;
using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using UnityEngine;
using HoloToolkit.Unity;


public class TestPlace :MonoBehaviour
{
    public GameObject model;
    public void PlaceObject()
    { 

          List&lt;SpatialUnderstandingDllObjectPlacement.ObjectPlacementRule&gt; rules =
        new List&lt;SpatialUnderstandingDllObjectPlacement.ObjectPlacementRule&gt;() {
       SpatialUnderstandingDllObjectPlacement.ObjectPlacementRule.Create_AwayFromOtherObjects(1.0f),
        };

    List&lt;SpatialUnderstandingDllObjectPlacement.ObjectPlacementConstraint&gt; constraints =
        new List&lt;SpatialUnderstandingDllObjectPlacement.ObjectPlacementConstraint&gt; {
        SpatialUnderstandingDllObjectPlacement.ObjectPlacementConstraint.Create_NearCenter()
        };
        Vector3 halfdim = new Vector3(0.25f, 0.25f, 0.25f);
        Vector3 halfBottom= new Vector3(0.25f, 0.25f, 0.25f);
        SpatialUnderstandingDllObjectPlacement.ObjectPlacementDefinition placementDefinition = SpatialUnderstandingDllObjectPlacement.ObjectPlacementDefinition.Create_OnEdge(halfdim, halfBottom);

        

        // New query
        SpatialUnderstandingDllObjectPlacement.Solver_PlaceObject(
               "CustomObject",
    SpatialUnderstanding.Instance.UnderstandingDLL.PinObject(placementDefinition),
    rules.Count,
    SpatialUnderstanding.Instance.UnderstandingDLL.PinObject(rules.ToArray()),
    constraints.Count,
    SpatialUnderstanding.Instance.UnderstandingDLL.PinObject(constraints.ToArray()),
    SpatialUnderstanding.Instance.UnderstandingDLL.GetStaticObjectPlacementResultPtr());
        
        SpatialUnderstandingDllObjectPlacement.ObjectPlacementResult placementResult = SpatialUnderstanding.Instance.UnderstandingDLL.GetStaticObjectPlacementResult();

        // instantiate the hologram from a model
        var rotation = Quaternion.LookRotation(placementResult.Forward, placementResult.Up);
        Debug.Log("Reached object creation");
        GameObject gameobject = Instantiate(model, placementResult.Position, rotation) as GameObject;
        
    }

    public void Start()
    {
        PlaceObject();
    }

    

}`

## Expected Behavior
Expected to deploy it on HoloLens and see a model.
## Actual Behavior
 Instead of this, HoloLens just closes the application. Later tried to just run it in unity - Unity crashes. Unity supports said the problem is on Holotoolkits side.
## Steps to reproduce
Place SpatialUnderstanding and SpatialMapping prefabs into the scene, create Empty object and place the aforementioned code into it, place a 3d model in the provided field. Watch it crash

## Unity Editor Version
2017.4.1f1
## Mixed Reality Toolkit Release Version
2017.4.2.0</Description>
  </Issue>
  <Issue>
    <IssueID>3322</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity UI buttons have priority over MRTK buttons</Title>
    <CreatedDate>09/01/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview

A Unity UI button being behind a MRTK/HTK button causes user interactions (gaze/highlight and clicks) to be received by the Unity UI button preventing the MRTK/HTK button from being usable. It seems like the Unity UI controls have a higher priority and will steal interaction events unless the MRTK/HTK button is significantly in front. 

This worked as I would expect in Unity 2017.2.0f3 &amp; HoloToolkit-Unity-2017.4.2.0, but it does not in Unity 2017.4.15f1 &amp; HoloToolkit-Unity-2017.4.3.0, so I believe something has changed in Unity or MRTK.

## Expected Behavior
The first button to be hit with a raycast from the user's gaze/controller should have priority and get the event independent of if it is a Unity UI button or a MRTK/HTK button, like it does in Unity 2017.2.0f3 &amp; HoloToolkit-Unity-2017.4.2.0.

## Actual Behavior
Unity UI button's normally get the event unless the MRTK/HTK button is significantly in front of the Unity UI button The attached image shows the camera gazing at the timer button that has been moved in front of the Unity UI button in the example InputManagerTest scene. As you can see the Unity UI button is highlighted (yellow).

![unityui](

## Steps to reproduce
1) Create a new project
2) Import HoloToolkit-Unity-2017.4.3.0.unitypackage
3) Import HoloToolkit-Unity-Examples-2017.4.3.0.unitypackage
4) Change the scene to HoloToolkit-Examples\Input\Scenes\InputManagerTest.unity
5) Move the "Timer Button" in front of the "Unity UI Button"
6) Run the project and gaze at the timer button

## Unity Editor Version
Unity 2017.4.15f1

## Mixed Reality Toolkit Release Version
HoloToolkit-Unity-2017.4.3.0</Description>
  </Issue>
  <Issue>
    <IssueID>3314</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ros# and MRTK conflict</Title>
    <CreatedDate>05/01/2019</CreatedDate>
    <ClosedDate>05/01/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Hi! I tried to import MRTK-unity after importing ros-sharp library. MRTK-unity and ros-sharp include a dll with the same name though their contents are different. Any idea to fix it? Here is the error aftering import MRTK-unity.
![image](

## Unity Editor Version
2017.4.10f1
## Mixed Reality Toolkit Release Version
2017.4.3.0
</Description>
  </Issue>
  <Issue>
    <IssueID>3313</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext Task: Define core networking interfaces</Title>
    <CreatedDate>04/01/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>3313</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Goals:
- Componentized (ie task focused interfaces)
- Flexible for virtually any transport
- Will serve as the basis for higher level networking and sharing components

Current thinking can be found in #3243 and the attached image.

![20190104_105504](

</Description>
  </Issue>
  <Issue>
    <IssueID>3312</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Connecting 2 Unity Editors to a server with auto-discovery crashes the second one</Title>
    <CreatedDate>04/01/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
If you enable SharingStage's auto-discovery functionality it will work well on the first Unity Editor. But if you open a second one in order to test what's what the second one crashed on play in the function SharingClientPINVOKE.DiscoveryClient_Update(swigCPtr);

## Expected Behavior
Don't crash

## Actual Behavior
Crashed

## Steps to reproduce
Enable auto discovery(make sure you won't get any null references like this:  [references issue]( Duplicate project and try to connect with both and on the second one will crash

## Unity Editor Version
2017.4.8f1

## Mixed Reality Toolkit Release Version
2017.4.3.0</Description>
  </Issue>
  <Issue>
    <IssueID>3311</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Null references when using Sharing auto-discovery</Title>
    <CreatedDate>04/01/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
If you want to enable the Auto Discover Server functionality on the SharingStage.cs script you will get two null references.

## Expected Behavior
It should not throw any errors.

## Actual Behavior
Throws two null references.
![image](

## Steps to reproduce
this is done just by removing the manual IP config prefab and enabling the auto-discovery in the Sharing test scene.

## Unity Editor Version
2017.4.8f1

## Mixed Reality Toolkit Release Version
2017.4.3.0

### Extra
Also, the default timeout for auto join session and room is smaller than the ping of auto discovery meaning that it will try to join session/room before the auto discovery even begins. If auto-discovery is enabled the auto join room should wait until it discovered a server.
</Description>
  </Issue>
  <Issue>
    <IssueID>3309</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext Proposal: Add console output in diagnostics</Title>
    <CreatedDate>03/01/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3309</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
As debugging on the hololens is quite painful it would enormously speed up bug finding when e.g. a log output would be able to have as an overlay to get immediate feedback while testing on the hololens.
</Description>
  </Issue>
  <Issue>
    <IssueID>3308</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>DeployOptions: Not able to connect to hololens and deploy appx</Title>
    <CreatedDate>03/01/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
In the build window the deployment of appx to a hololens is broken.
Following stacktrace appears in console:

`Authentication failed! Device Not Found | No Response Headers
0x00000001415391C8 (Unity) StackWalker::GetCurrentCallstack
0x000000014153F706 (Unity) StackWalker::ShowCallstack
0x000000014140ED4B (Unity) GetStacktrace
0x00000001408B19D0 (Unity) DebugStringToFile
0x00000001418DE8A8 (Unity) DebugLogHandler_CUSTOM_Internal_Log
0x0000000017CEF790 (Mono JIT Code) (wrapper managed-to-native) UnityEngine.DebugLogHandler:Internal_Log (UnityEngine.LogType,string,UnityEngine.Object)
0x0000000017CEF663 (Mono JIT Code) [DebugLogHandler.cs:10] UnityEngine.DebugLogHandler:LogFormat (UnityEngine.LogType,UnityEngine.Object,string,object[]) 
0x0000000017CEEEE5 (Mono JIT Code) [Logger.cs:48] UnityEngine.Logger:Log (UnityEngine.LogType,object) 
0x00000000408F8B49 (Mono JIT Code) [Debug.bindings.cs:117] UnityEngine.Debug:LogError (object) 
0x000000003B204453 (Mono JIT Code) [DevicePortal.cs:830] Microsoft.MixedReality.Toolkit.Core.Utilities.WindowsDevicePortal.DevicePortal/&lt;EnsureAuthenticationAsync&gt;c__async15:MoveNext () 
0x000000003E71F516 (Mono JIT Code) System.Runtime.CompilerServices.AsyncMethodBuilderCore/MoveNextRunner:InvokeMoveNext (object)
0x0000000017003801 (Mono JIT Code) System.Threading.ExecutionContext:RunInternal (System.Threading.ExecutionContext,System.Threading.ContextCallback,object,bool)
0x0000000017002B5B (Mono JIT Code) System.Threading.ExecutionContext:Run (System.Threading.ExecutionContext,System.Threading.ContextCallback,object,bool)
0x000000003E71F2BB (Mono JIT Code) System.Runtime.CompilerServices.AsyncMethodBuilderCore/MoveNextRunner:Run ()
0x000000003E7684B9 (Mono JIT Code) System.Threading.Tasks.AwaitTaskContinuation:InvokeAction (object)
0x000000003E768150 (Mono JIT Code) System.Threading.Tasks.AwaitTaskContinuation:RunCallback (System.Threading.ContextCallback,object,System.Threading.Tasks.Task&amp;)
0x00000000408F856B (Mono JIT Code) System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation:Run (System.Threading.Tasks.Task,bool)
0x000000003B269471 (Mono JIT Code) System.Threading.Tasks.Task:FinishContinuations ()
0x000000003B266783 (Mono JIT Code) System.Threading.Tasks.Task:FinishStageThree ()
0x00000000408F8343 (Mono JIT Code) System.Threading.Tasks.Task`1&lt;Microsoft.MixedReality.Toolkit.Core.Utilities.WebRequestRest.Response&gt;:TrySetResult (Microsoft.MixedReality.Toolkit.Core.Utilities.WebRequestRest.Response)
0x00000000408F7F83 (Mono JIT Code) System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;Microsoft.MixedReality.Toolkit.Core.Utilities.WebRequestRest.Response&gt;:SetResult (Microsoft.MixedReality.Toolkit.Core.Utilities.WebRequestRest.Response)
0x000000003B20BA3B (Mono JIT Code) [DevicePortal.cs:888] Microsoft.MixedReality.Toolkit.Core.Utilities.WindowsDevicePortal.DevicePortal/&lt;DevicePortalAuthorizationAsync&gt;c__async16:MoveNext () 
0x000000003E71F516 (Mono JIT Code) System.Runtime.CompilerServices.AsyncMethodBuilderCore/MoveNextRunner:InvokeMoveNext (object)
0x0000000017003801 (Mono JIT Code) System.Threading.ExecutionContext:RunInternal (System.Threading.ExecutionContext,System.Threading.ContextCallback,object,bool)
0x0000000017002B5B (Mono JIT Code) System.Threading.ExecutionContext:Run (System.Threading.ExecutionContext,System.Threading.ContextCallback,object,bool)
0x000000003E71F2BB (Mono JIT Code) System.Runtime.CompilerServices.AsyncMethodBuilderCore/MoveNextRunner:Run ()
0x000000003E3D9AE1 (Mono JIT Code) [AwaiterExtensions.cs:146] Microsoft.MixedReality.Toolkit.Core.Utilities.Async.AwaiterExtensions:RunOnUnityScheduler (System.Action) 
0x00000000408F6CA3 (Mono JIT Code) [AwaiterExtensions.cs:191] Microsoft.MixedReality.Toolkit.Core.Utilities.Async.AwaiterExtensions/SimpleCoroutineAwaiter`1&lt;T_REF&gt;:Complete (T_REF,System.Exception) 
0x00000000408F36A3 (Mono JIT Code) [AwaiterExtensions.cs:383] Microsoft.MixedReality.Toolkit.Core.Utilities.Async.AwaiterExtensions/InstructionWrappers/&lt;ReturnSelf&gt;c__Iterator2`1&lt;T_REF&gt;:MoveNext () 
0x000000003E3DB140 (Mono JIT Code) [Coroutines.cs:17] UnityEngine.SetupCoroutine:InvokeMoveNext (System.Collections.IEnumerator,intptr) 
0x000000003E3DB330 (Mono JIT Code) (wrapper runtime-invoke) &lt;Module&gt;:runtime_invoke_void_object_intptr (object,intptr,intptr,intptr)
0x00007FFD1587A69B (mono-2.0-bdwgc) [mini-runtime.c:2809] mono_jit_runtime_invoke 
0x00007FFD15801BB2 (mono-2.0-bdwgc) [object.c:2915] do_runtime_invoke 
0x00007FFD1580AB9F (mono-2.0-bdwgc) [object.c:2962] mono_runtime_invoke 
0x0000000140C05C6A (Unity) scripting_method_invoke
0x0000000140BFDF30 (Unity) ScriptingInvocation::Invoke
0x0000000140BBCC36 (Unity) Coroutine::Run
0x0000000140BB574F (Unity) Coroutine::ContinueCoroutine
0x00000001408E9E3D (Unity) AsyncOperation::InvokeCoroutine
0x0000000141EEF12B (Unity) UnityWebRequestAsyncOperation::InvokeCoroutine
0x0000000141EEF3D7 (Unity) UnityWebRequestProto&lt;UnityWebRequestTransport,AtomicRefCounter,RedirectHelper,ResponseHelper,DownloadHandler,UploadHandler,CertificateHandler,HeaderHelper,AsyncOperation&gt;::Job_InvokeCoroutine
0x00000001408A296A (Unity) BackgroundJobQueue::ExecuteMainThreadJobs
0x0000000140969E22 (Unity) `InitPlayerLoopCallbacks'::`2'::EarlyUpdateExecuteMainThreadJobsRegistrator::Forward
0x000000014144C016 (Unity) Application::TickTimer
0x00000001415EB745 (Unity) MainMessageLoop
0x00000001415EDB38 (Unity) WinMain
0x000000014243478A (Unity) __scrt_common_main_seh
0x00007FFDA6A27E94 (KERNEL32) BaseThreadInitThunk
0x00007FFDA6FCA251 (ntdll) RtlUserThreadStart`


## Steps to reproduce
Open build window -&gt; Deploy Options -&gt; Enter IP and user/pwd. Connect triggers exception mentioned above.
Open Device Portal works!

## Unity Editor Version
2018.2.17f1
## Mixed Reality Toolkit Release Version
vnext mrkt_development</Description>
  </Issue>
  <Issue>
    <IssueID>3307</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3307</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Proposal: Persist profile inspector foldout settings</Title>
    <CreatedDate>02/01/2019</CreatedDate>
    <ClosedDate>25/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>3307</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3307</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Help Wanted</Name>
        <IssueID>3307</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The Unity project panel will remember the expand / collapse settings for the file system. It would be nice for the profile inspectors to do the same with the new foldouts.

## Requirements
- Persist / read the user's desired foldout states for each profile

NOTE: We need to determine the correct behavior when a customer uses the default profiles (i.e. should we persist the foldout settings for the default profiles?)

## Acceptance Criteria
- [ ] Foldouts default to expanded the first time the Mixed Reality Toolkit is configured
- [ ] User settings are persisted across loads of a given project
</Description>
  </Issue>
  <Issue>
    <IssueID>3306</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3306</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Update Unity requirement to 2018.3</Title>
    <CreatedDate>02/01/2019</CreatedDate>
    <ClosedDate>14/01/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3306</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>3306</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
To get the Mixed Reality Toolkit closer to the upcoming Unity 2018 LTS release, it will need to update to 2018.3 and drop support for 2018.1 and 2018.2.

This will be a breaking change as Unity has changed prefab formats in 2018.3.

## Requirements
- [x] Check for 2018.3 or newer on
    - [x] Project load
    - [x] Package import
- [x] Display a message indicating an unsupported version is being used and allow user to:
    - [x] Continue (and expect errors / incorrect behavior)
    - [x] Close the editor
- [x] Project loads without script warnings
- [X] Apps behave as previously</Description>
  </Issue>
  <Issue>
    <IssueID>3304</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Using more than one Collider/Button</Title>
    <CreatedDate>02/01/2019</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I downloaded the HoloToolkit-Examples-Package and tried to understand how buttons work. So I created a cube with one Button on the top. If I press the button, the cube should do some animations. All this works fine, but now I want to have two buttons on the cube and I noticed that the "Compund Button"-scripts has a fixed hierarchy/structure.

## Expected Behavior
Every collider should do his own work

## Actual Behavior
So my problem is that the colliders in my child triggers the same animation like the collider in the parent.

## Steps to reproduce
Here is a image of the cube with the buttons 
What I did was:
Parent -&gt; Button (made out of a cube) with the scripts Compound Button, Compound Button Mesh, Compound Button Anim..
Child -&gt; Cube and another Button (made out of a cube)

Why I didnt choose the hierarchy "Parent: Cube" and "Child: Two Buttons"? Because by putting compound scripts on childs, they cant access the parent. For example pressing the button will trigger an animation with "Compund Button Anim", so the cube rotates. But I cant reference the cube, because its the parent.
## Unity Editor Version
2017.4.17f1
## Mixed Reality Toolkit Release Version
HoloToolkit 2017.4.3.0</Description>
  </Issue>
  <Issue>
    <IssueID>3299</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Proposal: Add a convenience method for easier access to detected controllers</Title>
    <CreatedDate>21/12/2018</CreatedDate>
    <ClosedDate>24/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3299</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3299</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3299</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I'd like to add a convenience method to the input system interface contract to make it easier to get a reference to a detected controller using the input source.

This will make getting controller properties easier.

``</Description>
  </Issue>
  <Issue>
    <IssueID>3298</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Remove handedness parameter from pointer input events.</Title>
    <CreatedDate>21/12/2018</CreatedDate>
    <ClosedDate>20/02/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3298</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Pointers shouldn't know about handedness as it doesn't have a property for it (nor should it) Pointers are scene objects that are driven by input sources like controllers. Pointers (like gaze) may be driven by multiple input sources (like hand input). Scripts utilizing this should be determining their handedness from the `IMixedRealityController`.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>3295</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>3295</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3295</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Proposal: Remove requirement for IMixedRealityInputHandler&lt;T&gt; to be an IMixedRealityInputHandler</Title>
    <CreatedDate>20/12/2018</CreatedDate>
    <ClosedDate>20/02/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3295</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3295</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK Approved</Name>
        <IssueID>3295</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
At the moment, in order to get the Pose events from an input source, I also need to register for four other events (the bottom two are already obsolete and will be removed in a future release): 
![image](

Previously, the (now obsolete) `IMixedRealitySourcePoseHandler` was independent of `IMixedRealityInputHandler`, but now when porting, several other, possibly unwanted, events are required to be added.

This is related to #3168.

# Requirements

* Remove dependency that `IMixedRealityInputHandler&lt;T&gt;` has on `IMixedRealityInputHandler`
* Update consumers to either: specify both interfaces or remove unused OnInput* methods

# Acceptance Criteria

- [ ] Interface can be implemented using a single event for things like source pose
- [ ] Application can add support for IInput* by inheriting from `IMixedRealityInputHandler` (or other `IMixedRealityInputHandler&lt;T&gt;`)
- [ ] Breaking change has been documented
</Description>
  </Issue>
  <Issue>
    <IssueID>3289</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Have services implement IDisposable pattern</Title>
    <CreatedDate>19/12/2018</CreatedDate>
    <ClosedDate>24/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3289</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I'd like to propose that services and data providers implement `IDisposable` pattern.

Currently we take advantage of the unity events for disable and destroy which can be called multiple times, and in any order because they're publically availible methods.

Implementing this pattern gives the developer of each service more control over when resources and the service is deconstructed.

For the most part many services may not need to be changed or updated, and this pattern will be optional to implement in general.</Description>
  </Issue>
  <Issue>
    <IssueID>3287</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Getting Started Document is outdated</Title>
    <CreatedDate>19/12/2018</CreatedDate>
    <ClosedDate>17/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I want to install the Mixed Reality Toolkit and was going through the Getting Started Guide (GettingStarted.md). It seems outdated.
## Expected Behavior
Latest versions displayed in WinVer, Unity 3D version, MixedRealityToolkit-Unity asset packages Version. It should be clearly mentioned what versions of Unity will work and what version of Unity it will not work.
So,
1) WinVer should show Microsoft Windows Version 1809 (OS Build 17763.194)
2) Windows 10 SDK version should be 10.0.17763.0
3) "Universal Windows Platform tools" does not exist in the latest Visual Studio Installer as shown in the image VisualStudioComponents.PNG
4) Recommended version of Unity must be consistent with other guides. Other guides say it should be the latest Unity 2017.4 LTS which right now it is 2017.4.17f1.
5) Under heading"2. Download the MixedRealityToolkit-Unity asset packages" the Latest Master Release should be HoloToolkit 2017.4.3.0
## Actual Behavior
1) Images shows Windows 1709
2) Old Windows 10 SDKs shown
3) Universal Windows Platform tools is checked as installed
4) Recommended Unity version is 2017.2.1p2 (which is old)
5) Latest Master Release for MixedRealityToolkit-Unity asset packages is v2018.8.0.0_Alpha2.1

## Steps to reproduce
Go to 
## Unity Editor Version
N/A
## Mixed Reality Toolkit Release Version
N/A</Description>
  </Issue>
  <Issue>
    <IssueID>3286</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Why my annotation placed in the space by Hololens is Partial</Title>
    <CreatedDate>19/12/2018</CreatedDate>
    <ClosedDate>17/01/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Hi,all.I have got the cameraToWorldMatrix,pixelToCameraMatrix and cameraViewTransform successfully.But the location of the annotations is partial,is my code wrong?how can I change the code?
## Expected Behavior
The annotation should be placed in the right place in space
## Actual Behavior
The location of the annotations is partial
## Steps to reproduce
And these are my code in unity:
``

## Unity Editor Version
Unity 2017.4.8f1
</Description>
  </Issue>
  <Issue>
    <IssueID>3281</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Controller input stops until I re-enter the application</Title>
    <CreatedDate>18/12/2018</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>3281</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3281</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Running my unity application on the hololens, if there's any dips in FPS (say because I'm downloading a file) the Xbox One S controller input stops working altogether.
Then, if I "bloom" out of the application, then re-enter (basically put the app in standby, then open and continue where I left off) the input works again as expected.

## Expected Behavior
Controller input to be continuous even after a disconnect/reconnect/frame dip occurs
## Actual Behavior
Controller input halts, until I bloom out then re-enter the application
## Steps to reproduce
This I'm not so sure, I've noticed the main correlation is when my FPS drops suddenly (due to some computation that needs to be done), sometimes during normal use it drops as well (say, if there's no input for a certain amount of time).

## Unity Editor Version
2018.2.20f1
## Mixed Reality Toolkit Release Version
2017.4.3.0

EDIT:
I should probably mentioned this happened only after the RS5 update installed itself, with RS4 nothing like this occured.</Description>
  </Issue>
  <Issue>
    <IssueID>3280</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Axis Input not being updated on the HoloLens + Xbox One </Title>
    <CreatedDate>18/12/2018</CreatedDate>
    <ClosedDate>18/12/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3280</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I'm currently running Unity 2017.4.17f alongside the MRTK + Examples
I set up the basic scene with a basic project, imported the holotoolkit and examples, setup as guided by the toolkit documentation (apply project + scene settings), run the xboxcontrollerinput scene example, whilst it works well in the unity editor + Xbox One S controller, I get strange axis behaviour on the  HoloLens + Xbox One S controller

On the hololens, all the buttons register correctly, it's only any axis input that doesn't update

(The values for the triggers, sticks, or any axis, are not being updated)
## Expected Behavior
All axis controls update correctly

## Actual Behavior


Axis controls are locked to a single value (See picture)
![image](
## Steps to reproduce
&gt; create new project under 2017.4.17f
&gt; import MRTK + Examples
&gt; set scene to Xbox One
## Unity Editor Version
2017.4.17f 
## Mixed Reality Toolkit Release Version
2017.4.3.0

Seems to be happening here: but I'm at least getting buttons, just not axis input.

</Description>
  </Issue>
  <Issue>
    <IssueID>3277</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>problem with jitter/latency issue</Title>
    <CreatedDate>16/12/2018</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
There is an obvious jitter and latency issue for Holotoolkit for Unity since Unity3d 2018.2.2f1 and the later version (I've tested every version up to 2019.1.0a12).  Just drop a simple box in the scene and apply the mixed reality scene setting which could create an AR camera. No matter to use the holographic remoting or deploy it to Hololens, the hologram appears quite unstable with a very obvious jittering and drifting effect. This effect is very uncomfortable for hololens.  However, this won't happen before unity3d 2017.4.17f1 and the previous version.
Besides, even though it's such a simple scene, the Fps couldn't reach 60 (no matter remoting or deploy to hololens) .  The Fps is around 50, sometimes even lower, but the Microsoft official applications which is more complicated, but could reach 60 fps. Note that the unstable drifing issue is not caused by the lower FPS, because it's the same FPS with  unity3d 2017.4.17f1, but the hologram is relatively stable not that nasty.

## Expected Behavior
The hologram should be stable,  not moving relative to the environment.
## Actual Behavior
The hologram appears quite unstable with a very obvious jittering and drifting effect. 
## Steps to reproduce
_(Links to sample github project preferred)_
1. install the holotoolkit
2. apply the mixed reality scene setting which could create an AR camera
3. drop a simple box in the scene
4.  use the holographic remoting or deploy it to Hololens

## Unity Editor Version
Unity3d 2018.2.2f1 and the later version 

## Mixed Reality Toolkit Release Version
HoloToolkit-Unity--2017.4.3.0</Description>
  </Issue>
  <Issue>
    <IssueID>3273</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3273</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>SystemType.cs - error CS0019: Operator '&amp;&amp;' cannot be applied to operands of type</Title>
    <CreatedDate>14/12/2018</CreatedDate>
    <ClosedDate>15/12/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>.NET Backend</Name>
        <IssueID>3273</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Assets\MixedRealityToolkit_Core\Definitions\Utilities\SystemType.cs(46,21): error CS0019: Operator '&amp;&amp;' cannot be applied to operands of type 'bool' and 'method group'

``

Need to add wrappers to support calling the extension method for UWP when building against the .net backend.</Description>
  </Issue>
  <Issue>
    <IssueID>3271</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3271</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Missing Parabolic line helper warning using Unity 2018.3.0f2</Title>
    <CreatedDate>13/12/2018</CreatedDate>
    <ClosedDate>14/01/2019</ClosedDate>
    <IssueLabels />
    <Description>Missing Parabolic line helper.
The Parabolic Teleport Pointer requires an empty GameObject child for calculating the parabola arc.
UnityEngine.Debug:LogWarning(Object)
Microsoft.MixedReality.Toolkit.SDK.UX.Pointers.ParabolicTeleportPointer:OnValidate() (at Assets/MixedRealityToolkit-SDK/Features/UX/Scripts/Pointers/ParabolicTeleportPointer.cs:36)
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>3271</IssueID>
        <PullRequestID>3269</PullRequestID>
        <Title>Editor update 2018.3.0f2</Title>
        <Description>Overview
---
Updates the [project's editor to 2018.3.02f](

Key changes:
---
- .net 4.x equivalent is the default editor scripting runtime, and we no longer need to have the embedded dll for updating it.
- Updated prefabs will not be backwards compatible with prev versions of the editor.

Changes
---
- Fixes: #3192 
- Fixes: #3183
</Description>
        <CreatedDate>13/12/2018</CreatedDate>
        <ClosedDate>02/01/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Editor</Name>
            <IssueID>3271</IssueID>
            <PullRequestID>3269</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>3266</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Some video working on Unity Editor doesn't in Hololens with Unity Video Player</Title>
    <CreatedDate>13/12/2018</CreatedDate>
    <ClosedDate>13/12/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview

I tried to integrate a video player in my Hololens project. I have tested with 3 different mp4 files.
The files are copied to Application Persistent DataPath and read with their url in a Unity video player

One file is working very well.
An other one is nearly not working at all (only 2 frames are rendered with a long time).
An other one is not working at all (black screen).

These files are working well in Unity Editor with UWP target.
There is no console output from the Video Player in Hololens.
I also tried to convert the files in another format, same probleme is present.

The files are small (0.5MB to 1.5MB) and are only few seconds long.

Thank you

## Unity Editor Version

2018.1.2

## Mixed Reality Toolkit Release Version

2017.4.2</Description>
  </Issue>
  <Issue>
    <IssueID>3265</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>spatial mapping can not detect human body</Title>
    <CreatedDate>13/12/2018</CreatedDate>
    <ClosedDate>20/02/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>3265</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>3265</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I'm using spatial mapping to detect my legs, but can not do this.
Does it have any ideas to detect human body?
Or any other module can do this?

Thanks a lot!

## Expected Behavior
detect human body

## Actual Behavior
no spatial mapping  of my leg.

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
2017.4 LTS
## Mixed Reality Toolkit Release Version
HoloToolkit 2017.4.2.0</Description>
  </Issue>
  <Issue>
    <IssueID>3264</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Significant perf hit in Unity when MRTK Build Window is opened and visible</Title>
    <CreatedDate>12/12/2018</CreatedDate>
    <ClosedDate>20/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>4 - In Review</Name>
        <IssueID>3264</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>3264</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I started experiencing extreme chop with Unity: the mouse jumping all over the place, and I couldn't click on anything or interact with the UI reliably.  Playing in the editor was impossible as there would be significant hitching.  I was freaking out because I couldn't make it go away, even after all the usual suspects and rebooting.
 
A colleague pointed out that having the MRTK Build Window visible seems to be causing this.  Sure enough, I switched to my Scene tab and the hitching and perf issues went away.

## Expected Behavior
No impact from having Build Window open

## Actual Behavior
Extreme blocking perf impact when Build Window is open

## Steps to reproduce
Open the MRTK Build Window and have it open and visible in your editor
Observe perf impact when using the editor, and when playing in editor

Note that this may not be as pronounced initially, and may be different for different projects or repos.
Note that rebooting, deleting library, etc do not improve the problem -- the perf hit persists.

## Unity Editor Version
Unity 2018.1.9f2

## Mixed Reality Toolkit Release Version
Latest mrtk_development
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>3264</IssueID>
        <PullRequestID>3618</PullRequestID>
        <Title>Updated build tools</Title>
        <Description>Overview
---
This pull request modernizes the built tools

Changes
---
- Supports CI building via `Microsoft.MixedReality.Toolkit.Core.Utilities.Build.StartCommandLineBuild`
- Supports async building of appx in the editor
    - Supports cancelling appx builds in editor
- Fixed broken button to player settings in build window
- Updated MRTK Build preferences with latest Unity workflow
- Added the ability to extend the build window platforms
- Added the ability to build the player from unsupported platforms without having to leave the build window.

Notes
---
- The build window no longer supports the .NET build for three simple reasons:
    - It's depreciated.
    - It's simpler to support with less logical branches.
    - If you're using the .NET scripting backend, then it's likely you're going to be opening this in a Visual Studio instance anyway to debug. Using the built in build window provided by unity should have everything that developer needs to facilitate this.</Description>
        <CreatedDate>13/03/2019</CreatedDate>
        <ClosedDate>15/03/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Build / Tools</Name>
            <IssueID>3264</IssueID>
            <PullRequestID>3618</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>3263</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Failed to calculate boundary bounds on devices/platforms that don't support boundary.</Title>
    <CreatedDate>12/12/2018</CreatedDate>
    <ClosedDate>24/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Boundaries</Name>
        <IssueID>3263</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3263</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Boundary system is raising warnings that don't relate to the platform.

## Expected Behavior
When working on devices or platforms that don't support boundaries, we shouldn't be getting this warning at all.

## Actual Behavior
Warnings for invalid boundary even when the platform doesn't support it.

## Steps to reproduce
Build for HL
Run</Description>
  </Issue>
  <Issue>
    <IssueID>3262</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity UI Buttons do not work with WMR Motion Controllers</Title>
    <CreatedDate>12/12/2018</CreatedDate>
    <ClosedDate>21/02/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3262</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>3262</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

The click event of the Unity UI buttons is not triggered with the WMR Motion Controllers. The button events with spatial mouse on the other hand are working correctly.

## Expected Behavior
Pressing the Trigger (Select) on the WMR Motion Controllers while pointing at a button should trigger the OnClick event.

## Actual Behavior
OnClick event is not triggered.

## Steps to reproduce

- Use scene and script in [MinimalUIButtonTest.zip]( with latest MRTK and standard profile. 
- Start project in Unity Editor.
- Click on the button with the spatial mouse. The Unity console logs "Click"
- Click on the button with a WMR Motion Controller. There is no console log.

## Unity Editor Version
2018.2.17f1

## Mixed Reality Toolkit Release Version
mrtk_development branch</Description>
  </Issue>
  <Issue>
    <IssueID>3261</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Support multiple scenes - MRTK showing up in secondary scenes break the editor</Title>
    <CreatedDate>12/12/2018</CreatedDate>
    <ClosedDate>16/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
MRTK keeps trying to force itself into the scene.. does not work with a CoreSystems + Scene Loading model
## Expected Behavior
MRTK remains in the main scene

## Actual Behavior
Automatically manifests into secondary scenes and breaksdown

## Steps to reproduce
_(Links to sample github project preferred)_
Sorry - can't provide.

## Unity Editor Version
2018.2
## Mixed Reality Toolkit Release Version
vNext Beta</Description>
  </Issue>
  <Issue>
    <IssueID>3260</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Is the Input Action Rules Profile mandatory?</Title>
    <CreatedDate>12/12/2018</CreatedDate>
    <ClosedDate>12/12/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Is the Input Action Rules Profile mandatory? I created a default scene and created customer profiles except Action Rules profile as I didnt want to override any of my base actions and tried to run the scene. It wont run since the Action Rule profile is missing. Is it mandatory? What if I dont need to override my actions? I can't even create a default action rules profile as it will force me to override atleast one base action. Is this the expected behavior going forward?

## Steps to reproduce
Add all profiles except Input Action Rules Profile and try to click play on a startup scene

## Unity Editor Version
Unity 2018.2.19f1

## Mixed Reality Toolkit Release Version
vNext -&gt; mrtk_development branch</Description>
  </Issue>
  <Issue>
    <IssueID>3259</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MixedRealityEditorSettings.MixedRealityToolkit_RelativeFolderPath sometimes raises exceptions</Title>
    <CreatedDate>12/12/2018</CreatedDate>
    <ClosedDate>03/02/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>3259</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When searching for a valid path this property will fail.</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>3259</IssueID>
        <PullRequestID>3390</PullRequestID>
        <Title>Create extension service and data provider attributes</Title>
        <Description>Overview
---
Created MixedRealityExtensionServiceAttribute and MixedRealityDataProviderAttribute to enable easy migration between v2 (registered services profile) and v3 (service specific profile data provider collections) as well as to enable automatic population of supported runtime platforms as well as the default profile file and path.

The appropriate attributes have been applied to all current extension services.

The runtime platform and default profile registration is a future feature that is not implemented in this PR.

Fixes #3387 
</Description>
        <CreatedDate>31/01/2019</CreatedDate>
        <ClosedDate>31/01/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>MRTK Approved</Name>
            <IssueID>3259</IssueID>
            <PullRequestID>3390</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>davidkline-ms</FixedById>
            <PullRequestID>3390</PullRequestID>
            <IssueID>3259</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>3253</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>3253</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3253</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Some controllers don't send input events on each frame if input is active.</Title>
    <CreatedDate>10/12/2018</CreatedDate>
    <ClosedDate>02/12/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3253</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3253</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
As I was trying to implement an example demo, I realized that input events didn't seem to be sent consistently. 

Looking into a few of the controller classes I realized that we only send input events if the data has changed, but that doesn't mean we always send events for things like continuous button presses or joystick data.

## Expected Behavior
Input events should be raised whenever data is availible and not at the considered "default" state. For example, a Joystick is pushed forward to 1, 0 should raise an event every frame saying that's what the current position of the joystick is from 0, 0 through 1, 0 and continue to raise events while the position is at 1, 0.

## Actual Behavior
Input events are only raised when the data has changed, so we only ever get a single event that the joystick position changed from 0 through 1, but once it's at 1, 0 all events stop.

This would sometimes cause things to "Spring Back" to their initial position.</Description>
  </Issue>
  <Issue>
    <IssueID>3250</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Two pointers active in scene occasionally</Title>
    <CreatedDate>10/12/2018</CreatedDate>
    <ClosedDate>02/01/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3250</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>3250</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
This one is a little hard to track. But every now and then I have two cursors / pointers in my scene active. One is the DefaultCursor I assigned to the Gaze provider on the camera and the other one is my mouse basically in 3D space. I can then use the mouse to select UI elements e.g. but the gaze cursor won't do anything.

## Expected Behavior
Not sure what to expect here to be fair. The least I'd expect is, that the mouse pointer is available always when I hit play and not sometimes because it is handy for selecting things and testing in editor.

## Actual Behavior
Mouse pointer is sometimes not available and only restarting play mode until it appears will help.

## Unity Editor Version
2018.3.0f1

## Mixed Reality Toolkit Release Version
mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>3246</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MissingReferenceException with non-persistent camera and multi-scene setup</Title>
    <CreatedDate>09/12/2018</CreatedDate>
    <ClosedDate>09/12/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
In a project with two scenes A and B. Loading scene B will lead to a missing reference exception when using a non-persistent camera configuration.

## Expected Behavior
When loading scene B the new "MixedRealityPlayspace" game object takes over. The "MixedRealityToolkit" game object is persistent and thus will exist in scene B.

## Actual Behavior
"MixedRealityToolkit" exists in scene B but throws some missing reference exception. It seems they are related to cursors somehow. Couldn't find out yet how and why.

## Steps to reproduce
[Example project](

## Unity Editor Version
2018.3.0f1

## Mixed Reality Toolkit Release Version
mrtk_development</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>3245</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>3245</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Diagnostics System crashes HoloLens application on start</Title>
    <CreatedDate>08/12/2018</CreatedDate>
    <ClosedDate>20/02/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Diagnostics / Tools</Name>
        <IssueID>3245</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When using the latest mrtk_development state ov vNext having the Diagnostics System enabled and visible will crash the application on start when deployed to HoloLens.

## Expected Behavior
Diagnostics System is enabled and probably should be visible in the top left corner of the HoloLens FOV

## Actual Behavior
Application crashes on start right after Made With Untiy splashscreen.

## Steps to reproduce
- Import the latest vNext state
- Target UWP
- Configure Diagnostics System enabled and visible
- Configure the scene for MRTK
- Build and deploy to HoloLens

## Unity Editor Version
2018.3.0b12

## Mixed Reality Toolkit Release Version
mrtk_development branch</Description>
  </Issue>
  <Issue>
    <IssueID>3236</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>chrisfromwork</FixedById>
        <IssueID>3236</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Errors when building iOS Spectator view</Title>
    <CreatedDate>07/12/2018</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>3236</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>iOS</Name>
        <IssueID>3236</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Error 1: IL2CPP error for method 'System.Void Newtonsoft.Json.Linq.JObject::InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)' in assembly 'C:\Users\User\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Temp\StagingArea\Data\Managed\Newtonsoft.Json.dll'
Additional information: Build a development build for more information. Exception of type 'System.Exception' was thrown.

Error 2: Failed running C:\Program Files\Unity\Editor\Data\il2cpp/build/il2cpp.exe --convert-to-cpp --emit-null-checks --enable-array-bounds-check --map-file-parser="C:\Program Files\Unity\Editor\Data\Tools\MapFileParser\MapFileParser.exe" --assembly="C:\Users\User\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Temp\StagingArea\Data\Managed\Assembly-CSharp.dll" --assembly="C:\Users\User\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Temp\StagingArea\Data\Managed\UnityEngine.UI.dll" --assembly="C:\Users\User\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Temp\StagingArea\Data\Managed\UnityEngine.Networking.dll" --assembly="C:\Users\User\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Temp\StagingArea\Data\Managed\UnityEngine.dll" --generatedcppdir="C:\Users\User\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Temp\il2cppOutput\il2cppOutput" 

Error 3: Exception: C:\Program Files\Unity\Editor\Data\il2cpp/build/il2cpp.exe did not run properly!
UnityEditorInternal.Runner.RunProgram (UnityEditor.Utils.Program p, System.String exe, System.String args, System.String workingDirectory, UnityEditor.Scripting.Compilers.CompilerOutputParserBase parser) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/BuildUtils.cs:130)
UnityEditorInternal.Runner.RunManagedProgram (System.String exe, System.String args, System.String workingDirectory, UnityEditor.Scripting.Compilers.CompilerOutputParserBase parser, System.Action`1 setupStartInfo) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/BuildUtils.cs:73)
UnityEditorInternal.IL2CPPBuilder.RunIl2CppWithArguments (System.Collections.Generic.List`1 arguments, System.Action`1 setupStartInfo, System.String workingDirectory) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/Il2Cpp/IL2CPPUtils.cs:380)
UnityEditorInternal.IL2CPPBuilder.ConvertPlayerDlltoCpp (ICollection`1 userAssemblies, System.String outputDirectory, System.String workingDirectory, Boolean platformSupportsManagedDebugging) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/Il2Cpp/IL2CPPUtils.cs:361)
UnityEditorInternal.IL2CPPBuilder.Run () (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/Il2Cpp/IL2CPPUtils.cs:178)
UnityEditorInternal.IL2CPPUtils.RunIl2Cpp (System.String tempFolder, System.String stagingAreaData, IIl2CppPlatformProvider platformProvider, System.Action`1 modifyOutputBeforeCompile, UnityEditor.RuntimeClassRegistry runtimeClassRegistry) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/Il2Cpp/IL2CPPUtils.cs:35)
UnityEditor.iOS.PostProcessiPhonePlayer.CrossCompileManagedDlls (BuildSettings bs, UnityEditor.iOS.ProjectPaths paths, UnityEditor.AssemblyReferenceChecker checker, UnityEditor.RuntimeClassRegistry usedClassRegistry, UnityEditor.Build.Reporting.BuildReport buildReport) (at C:/buildslave/unity/build/PlatformDependent/iPhonePlayer/Extensions/Common/BuildPostProcessor.cs:827)
UnityEditor.iOS.PostProcessiPhonePlayer.PostProcess (BuildSettings bs, UnityEditor.iOS.ProjectPaths paths, UnityEditor.RuntimeClassRegistry usedClassRegistry, UnityEditor.Build.Reporting.BuildReport buildReport) (at C:/buildslave/unity/build/PlatformDependent/iPhonePlayer/Extensions/Common/BuildPostProcessor.cs:660)
UnityEditor.iOS.PostProcessiPhonePlayer.PostProcess (PostProcessorSettings postProcessorSettings, BuildPostProcessArgs args) (at C:/buildslave/unity/build/PlatformDependent/iPhonePlayer/Extensions/Common/BuildPostProcessor.cs:611)
UnityEditor.iOS.iOSBuildPostprocessor.PostProcess (BuildPostProcessArgs args) (at C:/buildslave/unity/build/PlatformDependent/iPhonePlayer/Extensions/Common/ExtensionModule.cs:37)
UnityEditor.Modules.DefaultBuildPostprocessor.PostProcess (BuildPostProcessArgs args, UnityEditor.BuildProperties&amp; outProperties) (at C:/buildslave/unity/build/Editor/Mono/Modules/DefaultBuildPostprocessor.cs:27)
UnityEditor.PostprocessBuildPlayer.Postprocess (BuildTargetGroup targetGroup, BuildTarget target, System.String installPath, System.String companyName, System.String productName, Int32 width, Int32 height, BuildOptions options, UnityEditor.RuntimeClassRegistry usedClassRegistry, UnityEditor.Build.Reporting.BuildReport report) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/PostprocessBuildPlayer.cs:287)
UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)
`</Code>
    <Description>## Overview
I am trying to build IOS spectator view version in unity and three errors appear. See actual behaviour.
## Expected Behavior
Build Successful in unity
## Actual Behavior
``
## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
Unity 2018.2.16f1
## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>3235</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3235</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>3235</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>FloorQuad not on Spatial Mapping layer</Title>
    <CreatedDate>06/12/2018</CreatedDate>
    <ClosedDate>20/02/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Boundaries</Name>
        <IssueID>3235</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK Approved</Name>
        <IssueID>3235</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
In HTK, BoundaryManager spawns an instance of FloorQuad to represent the floor of the Playspace. I've noticed that the FloorQuad prefab is set to the **Default** layer instead of the **Spatial Mapping** layer and I'm wanting to know if this is intentional.

Having the playspace visible is very helpful for rapidly prototyping HoloLens apps. I know I can set a virtual room via **ObjectSurfaceObserver.RoomModel**. However, many times just being able to place something on "the floor" is all that's needed for testing.

Would it be a bad idea to update the FloorQuad prefab to instantiate on the SpatialMapping layer (31)? I copied the prefab and did this for my own project and everything seemed to be working well. However, I don't know if that would have a negative impact in another system.

## Expected Behavior
The floor of the BoundaryManager would be on the SpatialMapping layer.

## Actual Behavior
The floor of the BoundaryManager is on the Default layer.

## Mixed Reality Toolkit Release Version
Pull from Master branch on 12/4.
</Description>
  </Issue>
  <Issue>
    <IssueID>3233</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNEXT Proposal: Add profile to System constructors</Title>
    <CreatedDate>06/12/2018</CreatedDate>
    <ClosedDate>17/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3233</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
Since each profile is required by most systems (The exception being the teleport system, but they may change in the future). Systems should setup their initial values using the profiles provided in the constructor.

This better implements the Dependency injection patterns we've been utilizing and adding robustness to the systems. All initial variable values will be set in the constructor.

# Requirements

* BaseSystem class with the profile constructor parameter.
* Update to the MixedRealityToolkit to register a system with the profile constructor arg.
* Updates to all the systems to set up their initial conditions based off of the provided profile.

# Acceptance Criteria

- [x] I can register a system with its profile
- [ ] All systems have been updated to initialize their initial values using the provided profile.</Description>
  </Issue>
  <Issue>
    <IssueID>3231</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>3231</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>GLTF Can't load it</Title>
    <CreatedDate>06/12/2018</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>GLTF</Name>
        <IssueID>3231</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>3231</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit | Mixed Reality Toolkit

**Describe the bug**
HoloToolkit doesn't work with the latest UnityGLTF due to API breaking changes

**To Reproduce**
_(Links to sample GitHub project preferred)_
Steps to reproduce the behavior:
Import HoloToolkit-Unity-2017.4.3.0.unitypackage
![image](
![image](
I blocked the code.
![image](
No problem with build and deployment，But it is not loaded in HoloLens
![image](
![image](


**Expected behavior**

 it can loaded in HoloLens

**Actual behavior**
A clear and concise description of what happens instead.

**Screenshots**

![image](


**Unity Editor Version**
Which Unity version(s) you've been able to reproduce the bug in.

**Mixed Reality Toolkit Release Version**
Which MRTK version(s) you've been able to reproduce the bug in.

**Additional context**
Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>3226</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3226</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>NullReferenceExpection in BaseSpatialObserver.CleanupMeshObject on Hololens</Title>
    <CreatedDate>05/12/2018</CreatedDate>
    <ClosedDate>04/02/2019</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
We added the spatial awareness system to visualize the room mesh. It works as expected on the hololens, but in the log I receive lots of NullReferenceExceptions in a very short timespan (see screenshot).

![image](


**To Reproduce**
The setup of the configuration profile looks like this:
![image](

So it is initially active and will be set programatically to hidden by using following code, but as far as I found out this switch is not relevant as the error occurs on the InvokeSurfaceDataReadyEvent (see stacktrace):

    private void SetSpatialMeshPulseVisible(bool visible) {
        bool isOpaque = MixedRealityToolkit.Instance.ActiveProfile.CameraProfile.IsOpaque;
        SpatialMeshDisplayOptions displayOptions = visible &amp;&amp; !isOpaque ? SpatialMeshDisplayOptions.Visible : SpatialMeshDisplayOptions.None;
        MixedRealityToolkit.Instance.GetService&lt;IMixedRealitySpatialAwarenessSystem&gt;().MeshDisplayOption =
                displayOptions;
    }



**Unity Editor Version**
2018.2.17f1

**Mixed Reality Toolkit Release Version**
mrtk_development 49f5c4c22b66a7e2c212f15b982056dcb31ff4cd

</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>3226</IssueID>
        <PullRequestID>3399</PullRequestID>
        <Title>Refactor Spatial Awareness System interfaces, replace system profile with observer profile(s)</Title>
        <Description>Overview
---
This change refactors the spatial awareness system to remove observer configuration settings from the system and the system profile. In fact, the spatial awareness system no longer needs / has a profile, instead each registered observer is individually configured.

As there were no supported planar surface observers, these settings have been removed from the spatial awareness system and will return in the future as part of an interface specifically to support spatial observers that return planar surface data natively.

Significant breaking changes include:
* IMixedRealitySpatialAwarenessSystem no longer contains configuration data for observers and now contains functions to Get/Suspend/Resume one or more observers
* IMixedRealitySpatialAwarenessSystemObserver and IMixedRealitySpatialAwarenessMeshObserver interfaces were added
* The DefaultMixedRealityToolkitConfigurationProfile has had the Spatial Awareness Profile removed
* The Windows Mixed Reality Spatial Awareness Mesh Observer (in the registered services profile) now has an associated profile.
* The class name for the Windows Mixed Reality observer has changed - If you have custom profiles referencing the observer, they will need to be updated.
* The MixedRealitySpatialAwarenessMeshHandler has been replaced with MixedRealitySpatialAwarenessObservationHandler - Please update any client code handing mesh events.

Fixes #3326 
Fixes #3171 
Fixes #3226 </Description>
        <CreatedDate>01/02/2019</CreatedDate>
        <ClosedDate>01/02/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>BREAKING CHANGE</Name>
            <IssueID>3226</IssueID>
            <PullRequestID>3399</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>MRTK Approved</Name>
            <IssueID>3226</IssueID>
            <PullRequestID>3399</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Spatial Mapping / Awareness</Name>
            <IssueID>3226</IssueID>
            <PullRequestID>3399</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>davidkline-ms</FixedById>
            <PullRequestID>3399</PullRequestID>
            <IssueID>3226</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>3225</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>EditorUtility.FocusProjectWindow() throws an Exception</Title>
    <CreatedDate>05/12/2018</CreatedDate>
    <ClosedDate>10/12/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>3225</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Utilities</Name>
        <IssueID>3225</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
Whenever any of add profile buttons are selected, it throws an error along with creating the new profile.

**To Reproduce**
1. Create new scene
2. Go to the DefaultMixedRealityToolkitConfigurationProfile asset and select "Create new profiles"
3. Select any of the add profile buttons to see the error.
[Stack Trace](

**Expected behavior**
No error being thrown and a new profile being created.

**Actual behavior**
A new profile being created but an error being thrown.

**Unity Editor Version**
2018.2.16f1

**Mixed Reality Toolkit Release Version**
latest mrtk_development

**Additional context**
The underlying problem is that a TargetInvocationException is being thrown on FocusProjectWindow(), if this line is commented out, the exception goes away.

![scriptableobjecterror](

[Stack Trace](
</Description>
  </Issue>
  <Issue>
    <IssueID>3222</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Proposal: Add flag to enable AR/VR specific debugging in Unity Editor</Title>
    <CreatedDate>04/12/2018</CreatedDate>
    <ClosedDate>10/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3222</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Windows Mixed Reality</Name>
        <IssueID>3222</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Is your feature request related to a problem? Please describe.**
When creating appications for MR it's often necessary to implement different features in AR and VR. An example for this would be marker tracking for AR, which is not needed in VR. Within the application it's possible to distinguish between ``
But when having autonomous devices like Oculus Quest this check will become obsolete.
</Description>
  </Issue>
  <Issue>
    <IssueID>3218</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Beta] vNext Gaze does not work with Unity UI on device in Hololens</Title>
    <CreatedDate>04/12/2018</CreatedDate>
    <ClosedDate>06/12/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3218</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit vNext

**Describe the bug**
While gaze input seems to be working in the editor, I cannot get it working on device (Hololens). I have a CanvasUtility on my UI canvas, and when I build for Hololens and run on device I do not get any highlight effect when gazing at a button, nor am I able to press it with air tap. 

**To Reproduce**
[Repro project](
Steps to reproduce the behavior:
1. Download the repro project and open in Unity
2. Run the Scenes/mrtk-unity-ui scene in editor
3. Drag the camera to the left in the scene view and verify that the button is highlighted by the gaze cursor
4. Build for UWP and deploy to a Hololens
5. Run the app on device and observe that the button is not highlighted by gaze 

**Expected behavior**
The UI button is highlighted by gaze on device

**Actual behavior**
The UI button is not affected by gaze on device

**Unity Editor Version**
2018.2.14f1

**Mixed Reality Toolkit Release Version**
vNext Beta
</Description>
  </Issue>
  <Issue>
    <IssueID>3217</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>3217</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNEXT Task: Add Application Pause/Focus from Engine to Service Locator</Title>
    <CreatedDate>04/12/2018</CreatedDate>
    <ClosedDate>24/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3217</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
The service locator needs to send events to the services when the application is paused and resumed.

# Requirements

* When the[ Unity Application is paused]( then services are notified accordingly.
* When the[ Unity Application is focused]( then the services are notified accordingly.

# Acceptance Criteria

- [ ] I can pause/unpause the application and my services do their required actions on pause.
- [ ] I can focus/unfocus the application and my services do their required action on focus.
</Description>
  </Issue>
  <Issue>
    <IssueID>3216</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Beta] vNext UI events do not propagate the same as vanilla Unity </Title>
    <CreatedDate>04/12/2018</CreatedDate>
    <ClosedDate>05/12/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3216</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>3216</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit vNext

**Describe the bug**
In vanilla Unity UI with the Standard Input Module + mouse input, a pointer enter event will propagate up the hierarchy such that if you have a Button who's target graphic is a child, the button will respond to the child graphic being hovered. 

When using a pointer input from the MRTK such as the GazeProvider, this is not the case, and pointer enters on child graphics of buttons are ignored. Something about the way the input is handled requires that the Button target graphic be on the same game object, which is likely incompatible with a lot of existing UI hierarchies in projects today. 

**To Reproduce**
[Repro project](
Steps to reproduce the behavior:
1. Download the repro unity project and open it with latest Unity 2018
2. Open Scenes/unity-ui and hit play
3. Verify that mouse hovering both buttons produces a highlight effect
4. Open Scenes/mrtk-unity-ui and hit play, the gaze camera should start panning left and right
5. Observe that the button using a child graphic is not highlighted, but the sibling one is

**Expected behavior**
Both buttons are highlighted by the gaze provider

**Actual behavior**
Only buttons with sibling graphics are highlighted by gaze

**Unity Editor Version**
2018.2.14f1

**Mixed Reality Toolkit Release Version**
vNext development beta
</Description>
  </Issue>
  <Issue>
    <IssueID>3215</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3215</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Customer Feedback: Profile inspector views would benefit from being collapsable.</Title>
    <CreatedDate>04/12/2018</CreatedDate>
    <ClosedDate>20/02/2019</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

Recent customer feedback compared the Unity Hierarchy, Inspector and Project views to the MRTK profile view in the inspector and pointed out how it can be helpful to enable collapsing of portions of the view to allow focus on specific aspects.

The feedback proposes enabling a user to collapse specific areas (ex: in the Spatial Awareness Profile, enable collapsing by General, Mesh and Surface Finding areas). This same concept would extend to all other profiles.

**Screenshots**
Project view (with ability to collapse / expand as desired)
![capture](

Profile Inspector (does not allow collapse / expand)
![capture1](
</Description>
  </Issue>
  <Issue>
    <IssueID>3213</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity 2019.1.0a8 crash when using Compound Button Icon override icon function</Title>
    <CreatedDate>04/12/2018</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit

**Describe the bug**
_A clear and concise description of what the bug is._
When you enable `Override Icon` and select a custom icon, it shows in the editor but when you press play...
the whole editor just crashes

**To Reproduce**
_(Links to sample GitHub project preferred)_
Steps to reproduce the behavior:
1. Create a new project
2. Add the default holographic button prefab or create one your own
3. Make sure override icon is enabled and an icon is selected
4. Press play to enjoy a editor crash

**Expected behavior**
_A clear and concise description of what you expected to happen._
Uhm... no crash?

**Actual behavior**
_A clear and concise description of what happens instead._
Crash

**Screenshots**
_If applicable, add screenshots to help explain your problem._
![image](


**Unity Editor Version**
_Which Unity version(s) you've been able to reproduce the bug in._
Happens on all Unity Editor 2019.X version as far as I can see

**Mixed Reality Toolkit Release Version**
_Which MRTK version(s) you've been able to reproduce the bug in._
MRTKVersion.txt contains "2017.4.2.0"
**Additional context**
_Add any other context about the problem here._
It has to do with the following lines in `CompoundButtonIcon.cs`
``
if I comment them out - no crash, but no icon... if I uncomment any of them, crash...
</Description>
  </Issue>
  <Issue>
    <IssueID>3212</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Does HoloToolkit 2017.4.3.0 use Gaze Stabilizer?</Title>
    <CreatedDate>04/12/2018</CreatedDate>
    <ClosedDate>23/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3212</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>3212</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>HoloToolkit 2017.4.3.0

**Describe the bug**
The input manager object has Gaze Stabilizer component, but it looks like the Gaze Manager not using it... the is no reference for it inside the script.
is it supposed to be this way?

**Screenshots**
![image](

</Description>
  </Issue>
  <Issue>
    <IssueID>3211</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Mixed Reality Headset can't catch the handshank event in UWP Project</Title>
    <CreatedDate>04/12/2018</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>3211</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
 Mixed Reality Toolkit(master)

**Describe the bug**
I am export the example of  "MotionControllerTest Scene" to UWP Project and run this project , i find the demo about MotionControll can not catch the data event about Handshank (both right and left) such as TrggierEvent 、GraspEvent and so on. But When I shut the handshank down and restart it, it works fun.so I check the code of "DebugPanelControllerInfo.CS" and find the issue. I can not get those event because the function "InteractionManager_InteractionSourceDetected(InteractionSourceDetectedEventArgs obj)" does not excution when the first time the HandShank Loaded. And In the funciton "InteractionManager_InteractionSourceUpdated(InteractionSourceUpdatedEventArgs obj)" the Dictionary of controllers has not the info about the handshank so that it can not catch the event data in this function. i will appreciate it if someone can give me some help about this problem.

**To Reproduce**
Steps to reproduce the behavior:
1. Go to 'HoloToolkit-Examples/Input/Scenes/MotionControllerTest' Scene, and export this Scene into UWP Project. 

**Screenshots**
![update](

**Unity Editor Version**
Unity 2017.4.13f1 (64-bit)

**Mixed Reality Toolkit Release Version**
master

**Additional context**
this first time lanuch the demo:
![handproblem](
after restart the handshank:
![handrestartclip](
</Description>
  </Issue>
  <Issue>
    <IssueID>3205</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Room scanning progress and mesh volumes</Title>
    <CreatedDate>03/12/2018</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3205</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>3205</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>3205</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit

**Is your feature request related to a problem? Please describe.**
I've got 2 related questions:
1. Using SpatialUnderstanding I am able to scan a room and request the final 'water tight' mesh, but how do I indicate which parts of a room still needs scanning / has 'holes' in the mesh?
2. How do I remove the volume borders / get a mesh with all volumes merged without finalizing the scan?

If there is a solution to question 1, question 2 can gracefully be omitted.

**Describe the solution you'd like**
I'd like to show the user of my app where to scan / which parts of a room are unscanned before finalizing the scan.

**Describe alternatives you've considered**
So far I couldn't find any easy solution for question 1 and the process is as follows:
- Iterate over all edges of all triangles and check if that edge is shared with any other triangle. Store edges that are _not_ shared.
- Figure out which of these not-shared / solitary edges form a cycle.
- Each cycle then represents a hole in the mesh

The issue with this approach is: The room is separated into multiple volumes by the size of (2.5 m)³ and thus the above algorithm not only gives me the holes in the mesh but also the borders of a volume where it intersects with the environment.

**Additional context**
The hololens will only be used to create a 3D model of a room which will then be stored and used with other VR headsets. The usual 'just look around until we have enough spatial understanding information' is not satisfactory.</Description>
  </Issue>
  <Issue>
    <IssueID>3202</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Beta] Annoying popup triggered by selecting world space canvas</Title>
    <CreatedDate>30/11/2018</CreatedDate>
    <ClosedDate>30/11/2018</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit vNext

**Describe the bug**
In the vNext beta, a popup is triggered any time you select a canvas that is set to World Space with no configured camera. This also is triggered when selecting prefab assets, which will never have a configured world camera since it would need to be a scene reference. This makes it incredibly annoying to work with these prefabs. Seems like the CanvasEditorExtension should either detect this and not display the popup for assets or just not display a popup at all since the world camera may be getting configured in any number of ways at runtime outside of a serialized reference. 

Additionally, the popup tries to remove the CanvasUtility component with DestroyImmediate even on the prefab, which is not permitted and causes errors in the log. 

**To Reproduce**
Steps to reproduce the behavior:
1. Open a Unity project with MixedRealityToolkit vNext beta included
2. Create a UI Canvas and set to world space
3. Drag the canvas into asset window to make it a prefab

**Expected behavior**
- No popups are displayed

**Actual behavior**
- A popup is displayed upon selecting world space and every time the object is selected in the future
- A popup is also displayed upon creating a prefab of the asset, and again upon any selections of the asset, which also attempts to destroy components on the prefab causing errors in the log

**Screenshots**
![image](

**Unity Editor Version**
2018.2.14f1

**Mixed Reality Toolkit Release Version**
MRTK vNext Beta 2018.9
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>3202</IssueID>
        <PullRequestID>3116</PullRequestID>
        <Title>Refactored Controller Mapping Profile &amp; Moved Input system from core -&gt; sdk</Title>
        <Description>Overview
---
- Added Controller Data Providers Profile to register input data sources.
- Controller mapping profiles have been overhauled to be simpler and easier to extend and add new controllers for.
![image](
- Example of Windows Device Controller Mapping Profile
![image](
- Updated configuration guide
- addresses #2905 for Input System and components by adding assembly definitions for platform specific code. Future updates when package manager arrives will install/uninstall platform specific stuff as needed.
- addresses #3053 and #3115 for Input System and components.

Breaking Changes
---
- Users will need to reassign the input system service type if using a custom configuration profile.
- Users will need to delete any custom controller mapping profiles, and recreate them.
- Renamed `MixedRealityInputSystemProfile.ControllerMappingProfile` to `MixedRealityInputSystemProfile.ControllerMappingProfiles`
- Renamed `MixedRealityControllerMappingProfile` to `MixedRealityControllerMappingProfiles`

Changes
---
- Fixes: #3074

TODO
---
- [x] #3170

Blocked by
--- 
- [x] #3173
- [x] #3113
- [x] #3242- [ ] #3148
- [ ] #3254
- [ ] #3234
</Description>
        <CreatedDate>11/11/2018</CreatedDate>
        <ClosedDate>02/01/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>BREAKING CHANGE</Name>
            <IssueID>3202</IssueID>
            <PullRequestID>3116</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Editor</Name>
            <IssueID>3202</IssueID>
            <PullRequestID>3116</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Input System</Name>
            <IssueID>3202</IssueID>
            <PullRequestID>3116</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>3198</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Windows freeze after run emulator</Title>
    <CreatedDate>29/11/2018</CreatedDate>
    <ClosedDate>19/04/2019</ClosedDate>
    <IssueLabels />
    <Description>Hi, 
mount and half ago I asked a same question on official microsoft holographic forums but everyone has successfully ignore me. I know, that this question out of scope MixedRealityToolkit but maybe you know about this issue.

I launched the basic application on the hololens emulator (only white cube in front of the camera), it was running normally, I tried to move with arrows, but then Windows freeze. I was waiting a few minutes, however I had to restart PC.

PC performance are good enough for emulator.

Motherboards: 	Gigabyte GA-B450M DS3H
CPU: 			AMD Ryzen 5 1600 Six-Core 
GUP: 			GeForce GTX 1050 2GB
RAM: 			8 GB
Windows 10 Education 64 bit   version: 1809

Did you meet with same issue ?</Description>
  </Issue>
  <Issue>
    <IssueID>3197</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>It isnt possible to override TouchScreenInputSource.cs functions</Title>
    <CreatedDate>29/11/2018</CreatedDate>
    <ClosedDate>19/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3197</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Holotoolkit

**Describe the bug**
It isn't possible to inherit from TouchScreenInputSource.cs in order to make a custom touch screen input source with slightly different functionality, as functions aren't virtual.

**Expected behavior**
I would expect to be able to extend current  TouchScreenInputSource.cs by inheriting from it

**Actual behavior**
A number of functions aren't marked as virtual and as a result it isn't possible to override them

**Mixed Reality Toolkit Release Version**
2017.4.3.0
</Description>
  </Issue>
  <Issue>
    <IssueID>3195</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Multiple Input detected in a loop</Title>
    <CreatedDate>29/11/2018</CreatedDate>
    <ClosedDate>21/12/2018</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit VNext

**Describe the bug**
A clear and concise description of what the bug is.

**To Reproduce**

Steps to reproduce the behavior:
1. Open project and compile for HoloLens on IL2CPP
2. Launch the App
3. Make Airtap
4. Show the marker in front of the HoloLens and make Airtap at the same time

**Expected behavior**
Only one airtap should be detected per gesture

**Actual behavior**
Sometimes, just showing the marker trigger OnInputDown with the "select" Input Action
When the marker is in front of the HoloLens and you make the "ready" gesture. Multiple Airtap are detected (1 per update).
Actually, at each Update we have OnInputDown and OnInputUp with the "select" Input Action. 

**Unity Editor Version**
2018.2.10

**Mixed Reality Toolkit Release Version**
Beta Release 2018.9 MRTK VNext

**Additional context**
Add any other context about the problem here.
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>3195</IssueID>
        <PullRequestID>3293</PullRequestID>
        <Title>Fix issue where HoloLens hands were using the same MixedRealityInteractionMapping array</Title>
        <Description>I wasn't able to reopen #3291, so here's a new PR.

Overview
---
Since the controller mapping profile only contains one array for HoloLens hands (since there's no differentiation between handedness), both hands are reusing the same array. This causes their values to overwrite each other, and causes events to fire endlessly when one hand is selecting and the other isn't. This would also be seen in any other source that reuses one array in the profile, like touch.

This bug fix instead creates a copy of the profile's array, so we aren't reusing the same structure. This will also fix cases where a source might be lost while selecting, which would cause the state to change when a second, unselecting source is detected.

Changes
---
- Fixes: #3195 
- Fixes: 
</Description>
        <CreatedDate>20/12/2018</CreatedDate>
        <ClosedDate>21/12/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Input System</Name>
            <IssueID>3195</IssueID>
            <PullRequestID>3293</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>3293</PullRequestID>
            <IssueID>3195</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>3194</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How should the IP on the NetworkManager be set?</Title>
    <CreatedDate>29/11/2018</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>3194</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>3193</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Microsoft.MixedReality.Toolkit.Core.Utilities.Editor.Setup.dll appears to cause app crash on startup</Title>
    <CreatedDate>28/11/2018</CreatedDate>
    <ClosedDate>28/11/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>3193</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Customer Feedback</Name>
        <IssueID>3193</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
Customer reported that if they build their application using the command line, the resulting application crashed on startup (see stack below). If they built their project from the editor, the issue did not manifest.

Upon investigation, it appears that removing Microsoft.MixedReality.Toolkit.Core.Utilities.Editor.Setup.dll eliminated the issue for command line builds.

**To Reproduce**
1. Import MRTK
2. Build app using Unity's command line
3. Launch the app.

**Expected behavior**
App to run regardless of build method.

**Actual behavior**
App crashes if built using Unity's command line.

**Stack Trace**
``
**Unity Editor Version**
2018.1.9f2

**Mixed Reality Toolkit Release Version**
2018.9.0 (Beta)

</Description>
  </Issue>
  <Issue>
    <IssueID>3192</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3192</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>UWP apps built via command line (without opening Unity Editor) after a clean do not launch</Title>
    <CreatedDate>28/11/2018</CreatedDate>
    <ClosedDate>16/01/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>3192</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
When building a project which uses MRTK from the command line after a clean of any Unity Library files, a built UWP does not launch.  We seem to be getting out of bounds serialization errors from levels/shared assets.  An empty scene seemed to be able to launch, but once I begin adding MRTK dependencies, I get issues.

I have tracked the issue down, and it appears to be related to the Microsoft.MixedReality.Toolkit.Core.Utilities.Editor.Setup.dll.  When I delete this dll and remove the . from in front of MixedRealityEditorSettings.cs, I am able to clean, and build from the command line and successfully launch the app.
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>3192</IssueID>
        <PullRequestID>3333</PullRequestID>
        <Title>Update unity requirement to 2018.3</Title>
        <Description>Overview
---
This change brings the required Unity version to 2018.3.x.

PLEASE NOTE: It is recommended that you delete your Library folder after pulling this change.

Changes
---
- Fixes #3306
- Fixes #3192 </Description>
        <CreatedDate>10/01/2019</CreatedDate>
        <ClosedDate>14/01/2019</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>BREAKING CHANGE</Name>
            <IssueID>3192</IssueID>
            <PullRequestID>3333</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>davidkline-ms</FixedById>
            <PullRequestID>3333</PullRequestID>
            <IssueID>3192</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>3191</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InteractionManager.SourcePressed is obsolete while InteractionManager.InteractionSourcePressed doesn't work as well</Title>
    <CreatedDate>27/11/2018</CreatedDate>
    <ClosedDate>28/11/2018</ClosedDate>
    <IssueLabels />
    <Code>Assets/Extern/MRDesignLab/HUX/Scripts/Interaction/InteractionManager.cs(131,57): error CS0619: `UnityEngine.XR.WSA.Input.InteractionManager.SourcePressed' is obsolete: `SourcePressed is deprecated, and will be removed in a future release. Use InteractionSourcePressed instead. (UnityUpgradable) -&gt; InteractionSourcePressedLegacy'

As I change from 'SourcePressed' to 'InteractionSourcePressed' it gives me:

Assets/Extern/MRDesignLab/HUX/Scripts/Interaction/InteractionManager.cs(131,57): error CS0123: A method or delegate HUX.Interaction.InteractionManager.InteractionManager_SourcePressedCallback(UnityEngine.XR.WSA.Input.InteractionSourceState)' parameters do not match delegate `System.Action&lt;UnityEngine.XR.WSA.Input.InteractionSourcePressedEventArgs&gt;(UnityEngine.XR.WSA.Input.InteractionSourcePressedEventArgs)' parameters`</Code>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Unity editor version:**
Unity 2018.1.6f1

**Describe the bug**
While using HUX toolkit in Unity project, I have faced an error in InteractionManager.cs:

``
</Description>
  </Issue>
  <Issue>
    <IssueID>3190</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNEXT Proposal: IMixedRealitySpatialAwarenessSystems shouldn't implement EventSource</Title>
    <CreatedDate>27/11/2018</CreatedDate>
    <ClosedDate>08/01/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3190</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>3190</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
The spatial awareness system shouldn't be raising events, but instead the spatial observers should be the event sources raising events and the spatial awareness system should handle and route those events. This pattern would be similar to how the input system's devices are event sources and the input system routes events.

# Requirements
* Spatial Observers can raise events to the Spatial Awareness system and the events are routed to handler correctly.
* `IMixedRealitySpatialAwarenessSystem` does not implement `IMixedRealityEventSource`
* `IMixedRealitySpatialObserver` implements `IMixexRealityEventSource`
* `IMixedRealitySpatialObserver` can request a new source id from the `IMixedRealitySpatialAwarenessSystem` to get a valid source id.

# Acceptance Criteria
- [ ] When a spatial awareness event is raised, I can trace the event from the spatial observer source, through the spatial awareness system, and then to the spatial awareness event handler.
</Description>
  </Issue>
  <Issue>
    <IssueID>3185</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNEXT Proposal: Refactor MixedRealityToolkit service locator</Title>
    <CreatedDate>24/11/2018</CreatedDate>
    <ClosedDate>05/12/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3185</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
- The dictionary of `ActiveServices` should probably live in the `MixedRealityToolkit`, and renamed to `ActiveSystems`. We're already keeping a list of registered services in the `MixedRealityToolkit` anyway and having this dictionary in the active profile isn't really necessary.
- The `GetServices` methods could re-factored to use less code.
- The `EnableService` and `DisableService` helper methods do work on all services of that type. I'd like to propose renaming them to be `EnableServicesByType` and `DisableServicesByType`</Description>
  </Issue>
  <Issue>
    <IssueID>3184</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Scene XboxControllerExample from HoloToolkit-Unity-Examples does not work. No input from the controller is received.</Title>
    <CreatedDate>23/11/2018</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3184</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit

**Describe the bug**
The XBox One Controller connection/deconnection is detected, but no event is triggered/transmitted when a button is pressed.

**To Reproduce**
1. Open the scene **XboxControllerExample** from **HoloToolkit-Unity-Examples-2017.4.2.0**
2. Deploy to a Hololens, and start the app.
3. The app displays the message "No controller connnected".
4. Connect a XBox One Controller to the Hololens.
5. The app displays the id of the controller, and the state of the various buttons.
6. Play with the controller buttons.
7. Nothing happens, the displayed state of the buttons stays the same, the cube does not move.

**Expected behavior**
The cube should move, the state of the buttons should be updated when pressed.

**Actual behavior**
No button pressed event  is transmitted, nothing happens when pressing the buttons. The cube does not move.

**Unity Editor Version**
2017.4.15f1
2017.4.5f1

**Mixed Reality Toolkit Release Version**
HoloToolkit-Unity-2017.4.2.0
HoloToolkit-Unity-Examples-2017.4.2.0

**Additional context**
It may be linked with the issue  #3130 
The Xbox Controller is correctly connected to the Hololens, as I can use it normally in the hub.
I can even exit the app and go to the hub by pressing the  "Xbox logo" button.
</Description>
  </Issue>
  <Issue>
    <IssueID>3183</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Linux standalone sharedassets are corrupted</Title>
    <CreatedDate>22/11/2018</CreatedDate>
    <ClosedDate>20/02/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>3183</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
Building a minimal scene for linux standalone with build target Linux64.
In the scene (and project) there is just a mixedrealityplayspace with a camera (tagged) and the mrtk.
Everything compiles and looks fine.
When starting the standalone app (in my case done in a docker container) the Player.log is filled with
``

This error messages spams the log.
Cleaning the build folder, library,... did not work.
**This error occurs every 95% of builds/launches.**

Please see attached project.



**Unity Editor Version**
2018.2.16f1

**Mixed Reality Toolkit Release Version**
mrtk_development 

22.11.2018

</Description>
  </Issue>
  <Issue>
    <IssueID>3182</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Error while importing HoloToolkit-Unity-2017.4.2.0 on Unity 2018.1.6f1 Personal</Title>
    <CreatedDate>22/11/2018</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>3182</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>While importing HoloToolkit-Unity-2017.4.2.0 on Unity (**Version 2018.1.6f1 (57cc34175ccf) Personal
Branch: 2018.1/release**)
PS: This unity installed by Visual studio itself.

**To Reproduce**
Steps to reproduce the behavior:
1.Open **Unity** and Go to Assets -&gt; Import Packages 
2. Click on Custom Packages... and select **HoloToolkit-Unity-2017.4.2.0.unitypackage**
3. and after that click on import.
4. After import done , following error and warning occurs.
5. Also clicking on **Apply Mixed Reality Project Settings** will not update anything. 


- **Error is**
     **System.Exception: Package directory not found: "C:\Users\xyz\\.nuget\packages\Microsoft.CSharp\4.0.1".
  at UnityEditor.Scripting.Compilers.NuGetPackageResolver.Resolve () [0x000dd] in &lt;3f368bacb6c34f4db5fe7e90570f303a&gt;:0**

- **Warning are**
       * **Model 'Cursor_cross_root' contains animation clip 'Cursor_Cross_Hold_GestureFOV_root' which has length of 0 frames (start=132, end=132). It will result in empty animation.**
       * **Model 'Cursor_cross_root' contains animation clip 'Cursor_Cross_GestureFOV_off_root' which has length of 0 frames (start=132, end=132). It will result in empty animation**
       * **Model 'Cursor_cross_root' contains animation clip 'Cursor' which has length of 0 frames (start=1, end=1). It will result in empty animation.**
       * **Model 'CursorRing' contains animation clip 'Cursor' which has length of 0 frames (start=5, end=5). It will result in empty animation.**

Please help!
</Description>
  </Issue>
  <Issue>
    <IssueID>3180</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3180</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task: Invert the relationship between the Spatial Awareness System and Observers</Title>
    <CreatedDate>21/11/2018</CreatedDate>
    <ClosedDate>10/01/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3180</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>3180</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
In consideration of the proposed DataProvider refactor (#3170),  the SpatialAwarenessSystem -&gt; Observer relationship needs to be modified to have the Observer query the system rather than the system direct the observer.

For example, instead of having a Mesh observer be instructed to start it would, instead, ask the system if it should be running.

This will simplify the system architecture and lead to more robust implementations.

As a side effect, the IMixedRealitySpatialAwarenessObserver interface may no longer be required.

# Requirements

* Existing observer implementations will be updated to support #3170
* Spatial Awareness System interface / implementation will be modified such that customer can target specific systems (ex: mesh) when calling Start/StopObserver
* Observers will ask the Spatial Awareness System if they should start/continue running instead of the system instructing the observer.
* IsRunning becomes a system and not an observer concept.

# Acceptance Criteria

- [ ] Spatial awareness system outward behavior is unchanged
    - [ ] Additional Start/StopObserver arguments use default parameters to avoid breaking changes in application code.
- [ ] Demo scene is updated to conform to the new patterns
- [ ] Default profiles updated
- [ ] Breaking changes documented for release notes</Description>
  </Issue>
  <Issue>
    <IssueID>3177</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>3177</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>The "select" voice command no longer fires an event on Windows Mixed Reality</Title>
    <CreatedDate>20/11/2018</CreatedDate>
    <ClosedDate>17/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3177</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
When you say "select" on Windows MR, the MRTK input system should fire an input down and input up for the "select" action.

This is a regression, as it previously worked when we were listening for the `InteractionManager`'s events, as voice comes across as events but not as an actual "state". Now that #2890 moved away from eventing to polling, the "select" voice command isn't represented in the `InteractionManager`'s states.

**To Reproduce**
Steps to reproduce the behavior:
1. Add an input handler to the scene, responding the the Select event.
2. Gaze at the input handler and say "select".

Expected: the handler responds
Actual: the handler doesn't respond because no event is fired

**Mixed Reality Toolkit Release Version**
MRTK Beta and latest mrtk_development</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>3177</IssueID>
        <PullRequestID>2890</PullRequestID>
        <Title>Fixed UWP Lag issue, changed from Event Based updates to polling.</Title>
        <Description>Overview
---
Issue seems related to the way Unity is exposing the InteractionManager and access to the data within which seems UI / polling bound (only works correctly when attached to a GameObject/MonoBehaviour).

The resolution was to change from using the InteractionManager events for update / pressed / released, to polling during the Unity Update event.  This ensures the data is synchronised accurately.

Changes
---
- Fixes: #2889

Results
---
From (Top - Raw, Bottom - MRTK)
![uwpcontrollerlag](

To (Top - Raw, Middle - MRTK, Bottom - InteractionDef)
![uwpcontrollerfixed](
</Description>
        <CreatedDate>07/10/2018</CreatedDate>
        <ClosedDate>08/10/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Input System</Name>
            <IssueID>3177</IssueID>
            <PullRequestID>2890</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>SimonDarksideJ</FixedById>
            <PullRequestID>2890</PullRequestID>
            <IssueID>3177</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>3172</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3172</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task: Implement plane finding in windows mixed reality spatial observer</Title>
    <CreatedDate>20/11/2018</CreatedDate>
    <ClosedDate>21/11/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>3172</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Windows Mixed Reality</Name>
        <IssueID>3172</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
Add plane finding support to the windows mixed reality spatial observer. This will bring in PlaneFinding.dll from 

# Requirements

* Process spatial meshes into planes
* Provide developers a mechanism to specify when (and which) planes should be found.

# Acceptance Criteria

- [ ] An application can request spatial meshes to be processed into planes
- [ ] Developers can specify the types (ex: walls) of planes to receive
- [ ] Planes appear in the application automatically

</Description>
  </Issue>
  <Issue>
    <IssueID>3171</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3171</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task: Enable changing mesh display option at runtime</Title>
    <CreatedDate>20/11/2018</CreatedDate>
    <ClosedDate>20/02/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>3171</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
As part of #2724, developers need a mechanism for changing the mesh display option of the spatial awareness system at runtime.

This functionality was present in HoloToolkit and should not require application developers to manage the mesh object materials.

# Requirements

* Application can dynamically switch between the mesh display options (visible, occlusion, none)

# Acceptance Criteria

- [ ] Application can dynamically switch the display option for the spatial mesh
</Description>
  </Issue>
  <Issue>
    <IssueID>3170</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3170</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNEXT Task: Refactor services to have their own registry of data providers</Title>
    <CreatedDate>20/11/2018</CreatedDate>
    <ClosedDate>17/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3170</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3170</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK Approved</Name>
        <IssueID>3170</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
Currently all of our Devices are registered as extension services in the main configuration profile, which makes them easy to find, but hard to understand which systems they go to and what their purpose is. Ideally we shouldn't be registering devices as extension services, as that extension service profile should only be for custom services.

There are a few things we can do, such as giving each system its own registry, with more specific interface types to adhere to, so we don't get bombarded with a huge list of services to register. 

I'd also like to rename the "Devices" to to "Data Providers". It made sense for the input system at the time, but as we add more systems (like spatial understanding or networking) we want to categorize these modules to better explain what their function is. This will also give devices a clearer distinction than just a "service" but rather something a service relies on and consumes data from.

All folders and namespaces with "Device" will be renamed to "DataProvider".

for example: 

- `Microsoft.MixedReality.Toolkit.Core.DataProvider.&lt;Type&gt;.&lt;API/Platform&gt;`
- `Microsoft.MixedReality.Toolkit.Core.DataProvider.Controller.WindowsMixedReality`
- `Microsoft.MixedReality.Toolkit.Core.DataProvider.SpatialObservers.WindowsMixedReality`
- `Microsoft.MixedReality.Toolkit.Core.DataProvider.Networking.WebRTC`

One of the biggest changes here is that the device managers currently registered for the input system will move from the extension service registry into the controller mapping profile. This will look very similar to the extension service registry, but with a few key differences:

- Users will be able to only register data provider types

For spatial awareness, the same kind of rule would apply where users would only be able to register spatial observer data providers in a similar registry.

As services need be registered by the `MixedRealityToolkit` service locator as it's initialized, we'll need to add an additional loop in each of the core system registration areas where we check the system's profile for registered data providers and register their services.

# TL;DR

- Extension service profile should only be for custom services that users create for their application.
- Devices (DataProviders) will be registered with each system using a more explicit type.

# Requirements

- A data provider is an abstract hardware/software representation of a resource located outside of the application
- Systems should have a registry of data provider implementations and manage those data providers accordingly
- Data providers should never be accessed by other systems, or services directly, and absolutely never by the presentation &amp; application layer
- The systems should have a means of forwarding events, and providing the application/presentation layer with the expected data in a standardized format.
- Data providers will likely have a base interface/implementation that will provide the common data that the system expects from all resources that it will manage
- Data providers should have a single responsibility and do a very specific task, or implement platform specific features

# Acceptance Criteria

- [ ] `Devices` are no longer registered in the extension service profile
- [ ] `Devices` namespaces and folders to be renamed to `DataProviders`
- [ ] `DataProviders` will get a new interface to use: `IMixedRealityDataProvider` which will inherit from `IMixedRealityService`.
    - [ ] The data provider is still registered as as service, but we're being more explicit about the usage of this particular type of service.
    - [ ] Each type will have it's own more explicit interface for the system it will serve.
- [ ] `DataProviders` can be registered in each system profile
- [ ] `DataProvider` services are registered with the service locator after the core system is successfully registered.
- [ ] I can register device managers with the input system via controller mapping profile
- [ ] I can register the spatial observers with the spatial awareness system via spatial awareness profile.
</Description>
  </Issue>
  <Issue>
    <IssueID>3169</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>chrisfromwork</FixedById>
        <IssueID>3169</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Spectator View (Preview) README needs updating with new instructions</Title>
    <CreatedDate>20/11/2018</CreatedDate>
    <ClosedDate>31/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>3169</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK Approved</Name>
        <IssueID>3169</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The instructions direct you to the discontinued ARKit Plugin on the Asset Store for one.

Plus, I feel like we really should bundle the required DLLs with MRTK? It's like that for pretty much everything else in MRTK after all. It's a lot of extra steps for DLLs that are going to usually look identical from one machine to the next.

EDIT: Also the Unity ARKit plugin is provided with the Preview release package</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>3168</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext Proposal: [BREAKING CHANGE] Remove requirement for IFocusHandler to be an IFocusChangedHandler</Title>
    <CreatedDate>19/11/2018</CreatedDate>
    <ClosedDate>10/12/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3168</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3168</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
Many application scenarios need to know of an object is being focused or not focused without the need to track when a specific focus change occurs.

As defined, IFocusChangedHandler is independent of IFocusHandler, yet the reverse is not true.  The following implementation works as expected and illustrates how the two interfaces are independent.

``


# Requirements

* Remove dependency that IFocusHandler has on IFocusChangedHandler
* Update consumers to either: specify both interfaces or remove unused On*FocusChanged methods

# Acceptance Criteria

- [x] Application can be implemented using the slimmer IFocusHandler to indicate enter/exit
- [x] Application can add support for I*FocusChanged by inheriting from IFocusChangedHandler
- [x] Breaking change has been documented
</Description>
  </Issue>
  <Issue>
    <IssueID>3162</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNEXT: Log utility does not navigate to the user to the log source.</Title>
    <CreatedDate>16/11/2018</CreatedDate>
    <ClosedDate>19/11/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>3162</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Utilities</Name>
        <IssueID>3162</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
With the new log utilities, when a user double clicks on the log message it no longer takes them to the source of the message, but instead navigates them to the debug utility class.

**To Reproduce**
Steps to reproduce the behavior:
1. Create a log using the log utility
2. Click on log in console
3. Takes user to the log utilities class, not the log source.

**Expected behavior**
Double clicking the log in the unity editor console should take the user to the source of the log, not the utility class that actually raises it.</Description>
  </Issue>
  <Issue>
    <IssueID>3161</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNEXT: Configuring an empty scene for the MRTK raises errors</Title>
    <CreatedDate>16/11/2018</CreatedDate>
    <ClosedDate>19/11/2018</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
 Mixed Reality Toolkit

**Describe the bug**
When configuring a new scene, errors occur

**To Reproduce**
Steps to reproduce the behavior:
1. Create new scene
2. Click configure.
3. See errors

![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>3160</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNEXT: Tests fail</Title>
    <CreatedDate>16/11/2018</CreatedDate>
    <ClosedDate>19/11/2018</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
 Mixed Reality Toolkit

Overview
---
MixedRealityToolkitTests are failing.

![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>3158</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3158</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Improve Workflow for Stabilization Plane</Title>
    <CreatedDate>16/11/2018</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3158</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Is your feature request related to a problem? Please describe.**
As stated in the documentation [here](

&gt; On a HoloLens running the Windows 10 April 2018 Update or later, (turning on "Enable Depth Buffer Sharing") will analyze the depth buffer to pick an optimal stabilization plane automatically.

That article incorrectly states that it's turned on by default now, but I see #1939 proposed to address this issue. (And I support that change.) 

Regardless of whether or not #1939 gets implemented, we need to provide better guidance about what to do when **Depth Buffer Sharing** is turned on. In fact, what _should_ be done to the MRTK when this is enabled? Should `StabilizationPlaneModifier` be disabled entirely? Should it's `SetStabilizationPlane` field be set to false? And what changes, if any, should be made to the `InputManager` prefab?

At the very least, I feel something should be added to the **Apply Mixed Reality Project Settings** screen that describes this option. Ideally there would be something that prompts the user to see if all of their devices will be running RS4 or later and changes the settings accordingly.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>3157</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3157</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task: Support for service specific logging levels</Title>
    <CreatedDate>16/11/2018</CreatedDate>
    <ClosedDate>19/11/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Diagnostics / Tools</Name>
        <IssueID>3157</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
This will be *part 3* of the logging level work.

Received feedback that developer customers may wish to configure separate logging levels for the core toolkit component and individual systems, surfaced in the profiles.

# Requirements

* Developers can provide system specific logging levels (ex: teleport logs everything, input only critical errors)
* Developers can opt to inherit the MixedRealityToolkit object's configured logging level.

# Acceptance Criteria

- [ ] Developer customers can chose to set
    - [ ] Inherit MRTK default log level
    - [ ] Custom log level
- [ ] System profiles expose appropriate controls
- [ ] Systems are updated to supply the appropriate logging level
</Description>
  </Issue>
  <Issue>
    <IssueID>3154</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>how to make an appx build that work on Hololens, Desktop and MR Mode</Title>
    <CreatedDate>16/11/2018</CreatedDate>
    <ClosedDate>22/08/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>3154</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Stale</Name>
        <IssueID>3154</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I want to create a cross platform application appx build that works on Hololens, Desktop and MR mode. When I try to build and Run on different platforms it is not supported. How can I go about it?
## Expected Behavior
Here is what I am trying to achieve
1. Create a uwp Project in Unity which has MRTK integrated
2. When it is built it the sample appx build should work on Hololens, MR and Desktop Mode
- In  Holololens I should be able to interact with the app using gestures
- In MR device I should be able to interact with the app using the MR controllers
- In Desktop I should be able to navigate and interact with keyboard and mouse
- All these need to be from a single appx file

How can I make a build which has all these platforms supported? Please help me if anyone has figured out how to go about it. 
Thanks :)

</Description>
  </Issue>
  <Issue>
    <IssueID>3153</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add support for GLTF importer on HoloLens</Title>
    <CreatedDate>16/11/2018</CreatedDate>
    <ClosedDate>17/11/2018</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
No 

What I want to happen:
When use the GLTF submodule to import GLTF file at runtime in HoloToolkit, it could load the model when the project runs on HoloLens. Personally I believe it is because System.IO access (like FileStream would be denied by HoloLens system and there is no way to fix it) 

**To Reproduce**
Link: 
Steps to reproduce the behavior:
Please see the Readme file in the repo

**Expected behavior**
The duck.gltf model should appear in the scene and the textMesh should be "flag is true"

**Actual behavior**
The duck.gltf never loads in the scene and the textMesh is the path to the app local folder, which means the GLTF importer never finishs correctly

**Screenshots**


**Unity Editor Version**
2017.4.14F1

**Mixed Reality Toolkit Release Version**
2017.4.2.0

**Additional context**
Could you confirm that the API System.IO.File in Unity does not work at all on HoloLens? Do you have any suggestion about how to make GLTF importer work on HoloLens? Thanks!
</Description>
  </Issue>
  <Issue>
    <IssueID>3147</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>3147</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>WindowsMixedRealitySpatialObserver extension service should not be in Core/Devices/MixedReality</Title>
    <CreatedDate>15/11/2018</CreatedDate>
    <ClosedDate>12/12/2018</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
The `WindowsMixedRealitySpatialObserver` extension service is not an input device and should be co-located with the System that depends on it in the MixedRealityToolkit-SDK\Features\SpatialAwareness folder.</Description>
  </Issue>
  <Issue>
    <IssueID>3146</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>QR Code Reading seems to have an unspoken limit - either based on total size of all code contents or number of codes</Title>
    <CreatedDate>15/11/2018</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3146</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I have a few things I need to test on this still but wanted to write down what I’ve found. I was playing around with the QR reading and had an issue reading one of the codes, it would fail at the point where it gets the `relativePose` to position the code object, for some unknown reason that value would just come back null even though the code was right in front of me.

I restarted MRP and replugged the HMD, tried again reading codes in a different order and at some point a few codes (I had added more codes to the room at this point) had the same issue. They had an ID, had contents, but there were no spatial coordinates for them and `relativePose` was null.

I have a few codes that are full-on blocks of JSON, as I was testing how high a version I could get to read (answer is only the first few sizes of QR codes will read) so I’m wondering if whatever is storing the spatial coordinates is filling up when storing these extra large codes. The other option is there is a limit on the number of codes you can track before it stops reading new ones, but if so this limit isn’t terribly big.

I’m aiming to get some exact numbers so I can give some more precise answers. If anyone wants to print off a whole bunch of codes you can do so here:  - the print view will segment them 1 to a page and even gives you the code that they contain.</Description>
  </Issue>
  <Issue>
    <IssueID>3145</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Does HL Portal display anchor from World Anchor Store </Title>
    <CreatedDate>15/11/2018</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>3145</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>3145</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit | Mixed Reality Toolkit

**Describe the bug**
Unable to see Spatial Anchor in Web View. I am not sure it's a bug. But wanted to know if HL portal shows anchor from world anchor store or just attaching to game object in scene is enough. I am not able to get anchor even after attaching and saving using world anchor manager api.

**To Reproduce**
Attach world anchor to game object and store using WorldAnchorManager API provided byMRTK. Many a times it fails to delete anchor or even add anchor.


**Expected behavior**
A clear and concise description of what you expected to happen.

**Actual behavior**
A clear and concise description of what happens instead.

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Unity Editor Version**
2017.4.6f1

**Mixed Reality Toolkit Release Version**
2017.4

**Additional context**
Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>3144</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3144</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext task: add logging to the ActiveProfile property</Title>
    <CreatedDate>14/11/2018</CreatedDate>
    <ClosedDate>19/11/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Diagnostics / Tools</Name>
        <IssueID>3144</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
As part of the discussion of #3143, the redundancy of multiple methods logging in response to a null ActiveProfile was noted. This change will move the log message into the property getter and save on developer typing :)

# Requirements

* Add log message to the ActiveProfile getter
* Remove custom log messages related to a null ActiveProfile from all methods.

# Acceptance Criteria

- [x] Log messages are received as appropriate
- [x] Reduction in code
</Description>
  </Issue>
  <Issue>
    <IssueID>3142</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNEXT Task: Make async appx build cancel-able.</Title>
    <CreatedDate>14/11/2018</CreatedDate>
    <ClosedDate>24/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>3142</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Customer Feedback</Name>
        <IssueID>3142</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>3142</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3142</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Is your feature request related to a problem? Please describe.**
Once an appx build is started there's no real way to cancel it. We should add a button to do that.</Description>
  </Issue>
  <Issue>
    <IssueID>3141</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNEXT Task: Make the Extension Service list sortable by priority</Title>
    <CreatedDate>13/11/2018</CreatedDate>
    <ClosedDate>24/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3141</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Services</Name>
        <IssueID>3141</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
Being able to visually see the priority of registered extension services would be a nice addition.
Also sorting them would be good to help quickly update the priority as well.

# Requirements
* Registered extension services are listed in the order of their priority from highest to lowest.
* Users can sort extension services in the Registered Service Providers Profile by clicking and dragging.
* Should not be a breaking change, as the only change is to the inspector of the profile.

# Acceptance Criteria
- [ ] When I open the registered extension service profile I can see the services listed out in order.
- [ ] When I click and drag on an extension service entry I can move it up and down the list which adjusts it's priority in relation to its neighbors.
- [ ] When updating I don't need to re-create the registered extension services profile.
</Description>
  </Issue>
  <Issue>
    <IssueID>3140</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Proposal] Dev_Wrorking_Branch rename</Title>
    <CreatedDate>13/11/2018</CreatedDate>
    <ClosedDate>28/11/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Customer Feedback</Name>
        <IssueID>3140</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'd like to propose that we rename the Dev_Working_Branch to something less confusing.

Lots of feedback about confusion on which branch to use. 

We could make a new branch off of it named `old/Dev_Working_Branch` or similar to help clarify its status.</Description>
  </Issue>
  <Issue>
    <IssueID>3133</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Build warnings from tooltip</Title>
    <CreatedDate>13/11/2018</CreatedDate>
    <ClosedDate>17/11/2018</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
Build warnings from tooltip classes

![image](

**To Reproduce**
- Build the project.</Description>
  </Issue>
  <Issue>
    <IssueID>3131</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNEXT Proposal: Demos should use the default config profile</Title>
    <CreatedDate>12/11/2018</CreatedDate>
    <ClosedDate>12/12/2018</ClosedDate>
    <IssueLabels />
    <Description># Overview
Currently we have some custom configuration profiles for the demo examples. Ideally we'd like new users who are starting out to not have to choose profiles when they press configure the first time.

Currently if you download the sdk and the examples, you'll need to assign the correct profile if more than the default exists because Diagnostics has it's own custom configuration profile. ( a confused new comer had to ping me to ask which the right one was ).

![image](

Ideally most/all of our demo scripts should use the default configuration profiles and should be created with that in mind.</Description>
  </Issue>
  <Issue>
    <IssueID>3130</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Xbox One Controller ceases to work correctly RS4 &amp; RS5</Title>
    <CreatedDate>12/11/2018</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>3130</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3130</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit

**Describe the bug**
The Xbox One controller ceases to work correctly in HL deployment to RS4 and RS5. Works great in RS3.

**To Reproduce**
[SampleGitHubProject](
Steps to reproduce the behavior:
Build Unity project
Open Visual Studio 2017
Start Debug session and deploy to Remote Device (HoloLens running RS4)
Apply any input to Xbox One controller


**Expected behavior**
The Xbox One controller gives its input to my program which can then manipulate the cubes location.

**Actual behavior**
Upon applying any input to the Xbox One controller, the controller will spam -1 on the horizontal axis or cease to work entirely. If running in debug mode, will occasionally receive the error below:

Failed to get spatial interaction controller - touchpad, thumbstick, and vendor data will be unavailable to the application for InteractionController! Error code: '0x00000000'.

(Filename: C:\buildslave\unity\build\Runtime/VR/HoloLens/Gestures/GestureSource.cpp Line: 822)

**Screenshots**
![capture](

**Unity Editor Version**
2017.2.1p2
2017.4.11f1

**Mixed Reality Toolkit Release Version**
Release HoloToolkit 2017.4.2.0

**Additional context**
</Description>
  </Issue>
  <Issue>
    <IssueID>3128</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNEXT has two roadmap files</Title>
    <CreatedDate>12/11/2018</CreatedDate>
    <ClosedDate>17/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Customer Feedback</Name>
        <IssueID>3128</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
mrtk_development branch has two roadmap files

- 
- 

We should probably consolidate these and put them into a single file.</Description>
  </Issue>
  <Issue>
    <IssueID>3127</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNEXT Proposal: Provide a way for extension services to only be registered once</Title>
    <CreatedDate>12/11/2018</CreatedDate>
    <ClosedDate>24/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3127</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
Currently we have a few different extension services that can be registered more than once, but lots of other devs may want to ensure that there's only one type registered with the service locator. It would be great if there was a way to specify that certain extension services can only be registered once.

# Requirements
* Provide a way to specify when extension services can only be registered with the service locator once.

# Acceptance Criteria
- [ ] I can specify that an extension service can only be registered once.
- [ ] I cannot register another extension service if another of the same type has been registered.
</Description>
  </Issue>
  <Issue>
    <IssueID>3125</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>3125</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Input System tried to destroy game objects at the wrong time</Title>
    <CreatedDate>12/11/2018</CreatedDate>
    <ClosedDate>10/12/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3125</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
When loading a new scene, the Input System tries to destroy the gaze provider at the wrong times, resulting in error messages.

**To Reproduce**
Steps to reproduce the behavior:
1. Open any scene
2. Open any new scene
4. See errors

![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>3124</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>3124</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Diagnostics Service Warnings</Title>
    <CreatedDate>12/11/2018</CreatedDate>
    <ClosedDate>16/11/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Diagnostics / Tools</Name>
        <IssueID>3124</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
When loading the diagnostics demo warnings appear.

**To Reproduce**
Steps to reproduce the behavior:
1. Open project
2. Open Diagnostics Demo
4. See warnings

![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>3122</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>3122</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Service Locator doesn't clear core system cache</Title>
    <CreatedDate>12/11/2018</CreatedDate>
    <ClosedDate>12/11/2018</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
The cache for the registered core systems do not get cleared and updated when the profile is reset or the system is shut down.  This will cause issues when switching the concrete implementation to a different one when specifying it in the type dropdowns.</Description>
  </Issue>
  <Issue>
    <IssueID>3120</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Hololens] Error when trying to emulate mouse click on a Unity UI with "tap"</Title>
    <CreatedDate>12/11/2018</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>3120</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
NullReferenceException: Object reference not set to an instance of an object
UnityEngine.EventSystems.HoloLensInput.EmulateMousePosition (UnityEngine.Vector3 anchorWorldspace, UnityEngine.Vector2 finalOffset) (at C:/buildslave/unity/build/Extensions/UnityHoloLens/Runtime/UI/EventSystem/InputModules/HoloLensInput.cs:183)
UnityEngine.EventSystems.HoloLensInput.GetGazeAndGestureScreenPosition () (at C:/buildslave/unity/build/Extensions/UnityHoloLens/Runtime/UI/EventSystem/InputModules/HoloLensInput.cs:195)
UnityEngine.EventSystems.HoloLensInput.get_mousePosition () (at C:/buildslave/unity/build/Extensions/UnityHoloLens/Runtime/UI/EventSystem/InputModules/HoloLensInput.cs:39)
UnityEngine.EventSystems.StandaloneInputModule.UpdateModule () (at C:/buildslave/unity/build/Extensions/guisystem/UnityEngine.UI/EventSystem/InputModules/StandaloneInputModule.cs:154)
UnityEngine.EventSystems.HoloLensInputModule.UpdateModule () (at C:/buildslave/unity/build/Extensions/UnityHoloLens/Runtime/UI/EventSystem/InputModules/HoloLensInputModule.cs:78)
UnityEngine.EventSystems.EventSystem.TickModules () (at C:/buildslave/unity/build/Extensions/guisystem/UnityEngine.UI/EventSystem/EventSystem.cs:248)
UnityEngine.EventSystems.EventSystem.Update () (at C:/buildslave/unity/build/Extensions/guisystem/UnityEngine.UI/EventSystem/EventSystem.cs:261)
`</Code>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit 2017.4.2.0 and Mixed Reality Toolkit 2018.9.0 (vNext Beta)

**Describe the bug**
When trying to emulate a mouse click on a Unity UI with the hololens "tap", the following error appears :
``

**To Reproduce**
- Follow this tutorial

- Connect to the hololens with holographic remoting
- Click on the button

**Expected behavior**
The "tap" gesture should be registered as a button click

**Actual behavior**
It throws an error

**Unity Editor Version**
- Unity 2017.4.14f1 + HTK 2017.4.2.0
- Unity 2018.2.14f1 + MRTK 2018.9.0

</Description>
  </Issue>
  <Issue>
    <IssueID>3119</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title> Unable to load default MotionControllers model</Title>
    <CreatedDate>12/11/2018</CreatedDate>
    <ClosedDate>11/12/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>3119</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
UnityEngine.Debug:LogError(Object)
HoloToolkit.Unity.InputModule.ControllerFinder:AddControllerTransform(MotionControllerInfo) (at Assets/HoloToolkit/Input/Scripts/Utilities/ControllerFinder.cs:134)
`</Code>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit 

**Describe the bug**
 Unable to load default handle model，The console reports the error as follows.

Unable to find element of type PointingPose under controller RightController; not attaching.
``

**To Reproduce**
Steps to reproduce the behavior:
1. open BoundingBoxGizmoExample.scenes
2. click play
3. Press the MotionControllers trigger
4. See error

**Expected behavior**
load default MotionControllers model

**Actual behavior**
 Unable to load default MotionControllers model

**Screenshots**
![qq 20181112163728](


**Unity Editor Version**
Unity 2017.4.13f

**Mixed Reality Toolkit Release Version**
Master
</Description>
  </Issue>
  <Issue>
    <IssueID>3118</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Update the "Apply Settings" dialog with choices on import (based on SteamVR dialog)</Title>
    <CreatedDate>11/11/2018</CreatedDate>
    <ClosedDate>10/02/2020</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Consider for Next Iteration</Name>
        <IssueID>3118</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>3118</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Help Wanted</Name>
        <IssueID>3118</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?
Mixed Reality Toolkit

## Describe the solution you'd like
The current "Configure" screen when first importing the MRTK is an "all or nothing" prompt.

However, while investigating the latest SteamVR support, I found their dialog a lot more useful, as seen below.

![image](

This would likely be a better solution to the current approach and enable the flexibility to "opt in" to the features the user would like enabled on import.
</Description>
  </Issue>
  <Issue>
    <IssueID>3115</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3115</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNEXT: Update inconsistent naming of core system implementations</Title>
    <CreatedDate>11/11/2018</CreatedDate>
    <ClosedDate>16/01/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>3115</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>All core system services should have consistent naming.
With the new naming conventions, I've noticed we've got some inconsistent names.

Ideal: `&lt;FeatureName&gt;System`

I think extension services are fine, and don't need to update the names right away, but I'd at least like to address the core system services first.

List of good:
- `MixedRealitySpatialAwarenessSystem`

List of bad:
- `MixedRealityBoundaryManager`
- `MixedRealityDiagnosticsManager`
- `MixedRealityInputManager`
- `MixedRealityTeleportManager`</Description>
  </Issue>
  <Issue>
    <IssueID>3107</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>chrisfromwork</FixedById>
        <IssueID>3107</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Type or namespace QRCodesTrackerPlugin could not be found (SpectatorView)</Title>
    <CreatedDate>09/11/2018</CreatedDate>
    <ClosedDate>31/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>SpectatorView</Name>
        <IssueID>3107</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit

**Describe the bug**
I'm following these instructions: 

I try to just use the SpectatorViewExample scene, the one with the star in it, and am able to build for Hololens. However, if I switch to iPhone in the SpectatorView GameObject, and then try to build for iOS, Unity gives me these errors:
![grafik](

How can I solve this conflict?

**Unity Editor Version**
2018.1.0f2</Description>
  </Issue>
  <Issue>
    <IssueID>3104</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>3104</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[Stable Version] Does not work in Unity 2019.X+ because of deprecation of .NET Backend</Title>
    <CreatedDate>08/11/2018</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>.NET Backend</Name>
        <IssueID>3104</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>3104</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>3104</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Unity 2019</Name>
        <IssueID>3104</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit | Mixed Reality Toolkit
Affects both - I haven't tried the **Mixed Reality Toolkit VNext**

**Describe the bug**
A clear and concise description of what the bug is.

It seems like in Unity 2019.x+ the .NET Backend will be deprecated and in the current version of Unity3D 2019.1.0a8 a certain `EditorUserBuildSettings` property is missing:
`EditorUserBuildSettings.wsaGenerateReferenceProjects`

I currently got it all working by using and #if...end combo like so:
``

The affected files are:

- BuildDeployTools.cs
- - [ ] Lines: 261 and 262
- BuildDeployWindow.cs
- - [ ] Lines: 377 -&gt; 389
- BuildSLNUtilities.cs
- - [ ] Lines: 120 and 124
- - [ ] Lines: 180 -&gt; 183
- - [ ] Line: 190


**To Reproduce**
_(Links to sample GitHub project preferred)_
Steps to reproduce the behavior:
1. Install Unity 2019.x+ build
2. Install the Stable Mixed Reality Toolkit build</Description>
  </Issue>
  <Issue>
    <IssueID>3103</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>danielescudero</FixedById>
        <IssueID>3103</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Networkmanager reference is null on SpectatorView</Title>
    <CreatedDate>08/11/2018</CreatedDate>
    <ClosedDate>22/12/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>3103</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>SpectatorView</Name>
        <IssueID>3103</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit

**Describe the bug**
If I drag the SpectatorView.prefab into my scene (I'm following this instruction ( Unity tells me that Networkmanager reference is null on SpectatorView, without hitting play or trying to build.
Also when trying to build it fails because of this error.

**Unity Editor Version**
2017.3 and 2018.1.0f2

**Additional context**
The component 'NetworkManager' seems to be missing in the prefab:
![grafik](
Also I tried to use a FindObjectOfType(...) in the Awake method, but this did not result in success. In the instructions I followed, they have a screenshot where there's clearly an existing component NetworkManager. I downloaded the latest Git repo, so in there this component may be missing? Or am I clearly blind to something obvious?

I'm also using the SDK 10.0.17763.0
</Description>
  </Issue>
  <Issue>
    <IssueID>3037</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3037</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext: If loading a system fails with an exception, no systems are active</Title>
    <CreatedDate>30/10/2018</CreatedDate>
    <ClosedDate>19/11/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Services</Name>
        <IssueID>3037</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
This bug should NOT stop the beta release as I have not found a 100% reliable repro,

If an exception is encountered when starting up a core or extension system, other systems are not activated (not attempted or ignored).

On HoloLens, when this occurs, a skybox is rendered and the spatial awareness system is not loaded.

**To Reproduce**
I have hit this randomly running on HoloLens. The easiest way to validate a fix is to force an exception in MixedRealityToolkit.Initialize().

**Expected behavior**
The failing system to not be available and other, unrelated systems to be active.

**Actual behavior**
Unrelated systems are not loaded.

**Unity Editor Version**
2018.2.13f1 and 2018.2.14f1

**Mixed Reality Toolkit Release Version**
mrtk_2018beta_stabilization

**Additional context**
I have a fix for continuing the Initialize method. Still need to uncover all related exceptions when later code assumes a service has successfully started.
</Description>
  </Issue>
  <Issue>
    <IssueID>3028</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tile Generator abandons processing if unsupported image type (to be removed in 2018) is encountered</Title>
    <CreatedDate>30/10/2018</CreatedDate>
    <ClosedDate>30/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>3028</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>3028</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Exception of type 'System.ArgumentOutOfRangeException' was thrown.
Parameter name: type
Actual value was StoreTileLogo.
UnityEngine.Debug:LogError(Object)
HoloToolkit.Unity.SetIconsWindow:ResizeImages() (at Assets/Packages/MixedRealityToolkit.2017.40000.6241/Utilities/Scripts/Editor/SetIconsWindow.cs:239)
UnityEditor.EditorApplication:Internal_CallDelayFunctions()
`</Code>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit

**Describe the bug**
When using the Tile Generator on a Unity 2017.4.* build, as soon as the generator runs into an image type that will ostensibly be removed in Unity 2018, an exception is thrown and all further image processing is abandoned.

This was caused by [this commit](

**To Reproduce**
Steps to reproduce the behavior:
1. Fire up a 2017.4 build of Unity
2. Import the MRTK-Unity (aka HoloToolkit)
3. Click on the `Mixed Reality Toolkit -&gt; Tile Generator menu item`
4. Provide appropriate source images for `App Icon` and `Splash Image`
5. Click on the `Update Icons` button

**Expected behavior**
All icons are generated

**Actual behavior**
After about 30ish of 200ish images are processed, an exception is thrown:
``
And all further processing is abandoned.

**Unity Editor Version**
2017.4.8f1

**Mixed Reality Toolkit Release Version**
Which MRTK version(s) you've been able to reproduce the bug in.
2017.4.0.0 - 2017.4.2.0

**Additional context**
Not all users of the legacy MRTK have or will move to Unity 2018.
I have a fix for this issue that I'll submit a PR for shortly.
</Description>
  </Issue>
  <Issue>
    <IssueID>3027</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spatial Awareness Demo throws errors when playing from editor</Title>
    <CreatedDate>30/10/2018</CreatedDate>
    <ClosedDate>30/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>3027</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
Lots o'errors when playing Spatial Awareness demo in editor.

![image](


**To Reproduce**
Steps to reproduce the behavior:
1. Open Spatial Awareness Demo in the editor
2. Enter play mode
4. See errors

**Expected behavior**
No errors, or at minimum a "fake mesh" to use or a warning about needing to run on device.

**Mixed Reality Toolkit Release Version**
Stabilization
</Description>
  </Issue>
  <Issue>
    <IssueID>3026</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Windows Speech causing massive slowdown on startup/shutdown</Title>
    <CreatedDate>30/10/2018</CreatedDate>
    <ClosedDate>16/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>OS Bug</Name>
        <IssueID>3026</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
When playing in the editor the Windows Speech Recognizer causes massive slowdowns on both startup and shutdown.
![image](

**To Reproduce**
Steps to reproduce the behavior:
1. Open any scene
2. Enter playmode
3. Lags for a few seconds up to 10+ seconds.
4. Same lag when exiting play mode as well.

Stabilization Branch
</Description>
  </Issue>
  <Issue>
    <IssueID>3021</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>3021</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>If no tagged "Main Camera", the MRTK -&gt; Configure fails badly</Title>
    <CreatedDate>29/10/2018</CreatedDate>
    <ClosedDate>30/10/2018</ClosedDate>
    <IssueLabels />
    <Description># Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?
Mixed Reality Toolkit

# Describe the bug
If a scene does not have a main camera tagged as "Main Camera", the Mixed Reality Toolkit -&gt; Configure command fails badly with script errors.
![image](

The script should fall back to find a camera named "Main Camera" and if that fails it should output warning to the console.

# To Reproduce
1: create a brand new Unity project
2: Import the MRTK
3: Click Mixed Reality Toolkit -&gt; Configure

(Yup, you guessed it, the default "sample scene" in a new unity project does not have its camera tagged as "Main Camera"

# Expected behavior
The scene should be configured correctly.
if there is no object tagged "Main Camera" it should look for an object named "Main Camera"
If still no camera is found, it should fail nicely with a warning

# Actual behavior
Script fails with console warnings about the playspace

# Unity Editor Version
2018.2.13f1

# Mixed Reality Toolkit Release Version
Stabilization
</Description>
  </Issue>
  <Issue>
    <IssueID>3018</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3018</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task: Merge spatial awareness feature branch into 2018 beta</Title>
    <CreatedDate>29/10/2018</CreatedDate>
    <ClosedDate>30/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>3018</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
For the MRTK 2018 beta release, we will be shipping support for spatial awareness meshes. The feature branch needs to be merged into beta stabilization.

# Requirements
* Spatial awareness feature branch up to date with service rename changes
* Can visualize mesh data

# Acceptance Criteria
- [x] Spatial awareness system appears in configuration profile
- [x] Spatial mesh data visualizes per the spatial awareness profile settings when using a HoloLens device
- [x] Application behaves as expected (no mesh visualization) when run on an immersive device.

</Description>
  </Issue>
  <Issue>
    <IssueID>3017</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>3017</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext task: remove default spatial handler implementations, replace with example(s) in demo</Title>
    <CreatedDate>29/10/2018</CreatedDate>
    <ClosedDate>30/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>3017</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
While the spatial awareness handlers are handy to provide awareness of changes to applications and to enable custom logic, they are not required for simple scenarios.

The default implementations will be replaced by example implementations in the appropriate demo scenes.

# Requirements
* Remove default implementation of IMixedRealitySpatialAwarenessMeshHandler
* Remove default implementation of IMixedRealitySpatialAwarenessPlaneFindingHandler
* Implement a simple example mesh handler for the spatial mesh demo scene (ex: track update count)

# Acceptance Criteria
- [x] Spatial demo scene continues to function as expected
- [x] Empty scene displays spatial meshes without a handler
- [x] Can track how many updates a given mesh has received (Debug.Log messages)
</Description>
  </Issue>
  <Issue>
    <IssueID>3009</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Which branch to use for latest BoundingBox implementation</Title>
    <CreatedDate>29/10/2018</CreatedDate>
    <ClosedDate>23/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>3009</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>3009</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Utilities</Name>
        <IssueID>3009</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I have not looked into the MRTK Git Repo for a while and am quite confused about all the Branches without any vNext available and such. I tested the BoundingBox from the Master branch but this can't be right as it's handling is wrong using the MR Motion Controller.

Which Branch is the latest with a working BoundingBox in it?

## Unity Editor Version
2018.2.6f1
</Description>
  </Issue>
  <Issue>
    <IssueID>3007</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Controller Finder sometimes gets null exceptions on source detected/lost</Title>
    <CreatedDate>29/10/2018</CreatedDate>
    <ClosedDate>29/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>3007</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
Controller finder incorrectly expects all input sources to create controllers, and in the OnSourceDetected/OnSourceLost methods don't check to make sure the event data's controller is not null before adding/removing the controller transform.

No all input sources will have controllers
![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>3006</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Multiple Occlusion*.shaders and "Offset" causes incomplete occlusion.</Title>
    <CreatedDate>29/10/2018</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>3006</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>3006</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit 2017.2.1.4

**Describe the bug**
The Mixed Reality Toolkit contains multiple copies of the "Occlusion.shader" or "WindowOcclusion.shader" which are all very similar, but only "WindowOcclusion.shader" is able to fully occlude objects correctly. The other two shaders include "Offset 50, 100" statements in the "Pass" section which causes their writes to the depth buffer to be slightly displaced. When using these occlusion shaders with a material for making a box that occludes an object within it, they will only partially and incorrectly occlude the object.

**To Reproduce**
Steps to reproduce the behavior:
1. Create 4 planes surrounding a GameObject A. 
2. Set material for GameObject A as the MRTK Standard Shader
3. Set shader for material for the planes to be "SpatialMapping/Shaders/Occlusion.shader", or "UX/Shaders/Occlusion.shader"
(Bug) -&gt; The planes will only partially occlude the GameObject A, due to the "Offset" statement.
4. Set shader for material for the planes to be "Common/Shaders/WindowOcclusion.shader"
(Correct) -&gt; The planes will completely occlude GameObject A.

**Expected behavior**
There should only need to be 1 working Occlusion.shader.
It should not use the depth offset that leads to partial occlusion.
If more than one Occlusion shader are needed in the toolkit, we should have better naming and documentation to indicate how these shaders are different. Shaders could include comments describing their use or linking to documentation.

**Actual behavior**
3 duplicate shaders but only 1 of them is fully functional for "Occlusion"

**Unity Editor Version**
2018.1 or 2018.2.*

**Mixed Reality Toolkit Release Version**
Which MRTK version(s) you've been able to reproduce the bug in.
2017.2.1.4</Description>
  </Issue>
  <Issue>
    <IssueID>3004</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Open VR Boundary is misaligned</Title>
    <CreatedDate>28/10/2018</CreatedDate>
    <ClosedDate>16/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Boundaries</Name>
        <IssueID>3004</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>OpenVR</Name>
        <IssueID>3004</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
When on the Standalone platform and using OpenVR the boundary is rotated 180 in the wrong direction

**To Reproduce**
Steps to reproduce the behavior:
1. Switch project to Standalone
2. Open any Scene
3. Look down and get close to boundary.
4. See that the OS boundary doesn't match the MRTK's drawn boundary on the floor.

**Additional Remarks**
Works as expected for WMR.

**Screenshots**

![image](

![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>2999</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spatial Awareness System "SpatialAwarenessParent" bypasses GameObject life-cycle check</Title>
    <CreatedDate>27/10/2018</CreatedDate>
    <ClosedDate>29/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>2999</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
The [`MixedRealitySpatialAwarenessSystem` has a property]( that improperly tries to use [null coalescing operator to check `spatialAwarenessParent` GameObject's validity](
</Description>
  </Issue>
  <Issue>
    <IssueID>2998</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Solver demo scene magenta materials might be confused for missing materials</Title>
    <CreatedDate>27/10/2018</CreatedDate>
    <ClosedDate>29/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>2998</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
 Mixed Reality Toolkit

**Describe the bug**
A few of the objects in the solver demo scene are missing materials

**To Reproduce**
_(Links to sample GitHub project preferred)_
Steps to reproduce the behavior:
1. Open solver demo scene
2. View Orbital, and Surface magnetism demo objects.

![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>2997</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Solver Demo Chase Source, Fixed Offset, and Face Headset not working properly</Title>
    <CreatedDate>27/10/2018</CreatedDate>
    <ClosedDate>29/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>2997</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
In the solver demo scene the Chase Source, Fixed Offset, and Face Headset solver demo does not face the headset properly

**To Reproduce**
Steps to reproduce the behavior:
1. Open solver demo scene
2. Press Play
3. Select Chase source, Fixed Offset, and Face Headset demo
4. The left controller solver example does not face headset correctly

![image](

</Description>
  </Issue>
  <Issue>
    <IssueID>2996</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>In-Between solver demo does not work as expected</Title>
    <CreatedDate>27/10/2018</CreatedDate>
    <ClosedDate>29/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>2996</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
The Solver demo scene's In-Between solver does not move the ring between the two specified sources correctly.

**To Reproduce**
Steps to reproduce the behavior:
1. Go to Solver Demo Scene
2. Press play
3. Select In-Between Solver
4. Solver doesn't move between sources.

**Expected behavior**
Ring to either be in-between left and right controllers, or in-between head.

**Actual behavior**
Ring stays on left controller source origin.

![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>2994</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>WMR controllers sometimes attempt to raise source detected multiple times</Title>
    <CreatedDate>27/10/2018</CreatedDate>
    <ClosedDate>29/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2994</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
WMR Controllers in editor sometimes try to register with the input system multiple times.

**To Reproduce**
Steps to reproduce the behavior is intermittent and not always 100% of the time:
1. Open any demo scene with WMR platform target.
2. Press Play
4. See errors

**Expected behavior**
Controllers should only attempt to register once.

**Actual behavior**
Controllers try to register multiple times.

![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>2991</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Remove unused / unimplemented feature folders from the MRTK solution</Title>
    <CreatedDate>27/10/2018</CreatedDate>
    <ClosedDate>29/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>2991</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Code Style</Name>
        <IssueID>2991</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2991</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
There are a number of empty folders still left over from the initial work to map out the folder structure for the MRTK.  As we reach beta, we should prune any empty folders / features which are not fully implemented.

This will avoid any confusion / queries as to why things are "not there" from general consumers

# Requirements
Remove any folders for "things" not implemented, for example:

* MixedRealityToolkit -&gt; Sharing (just an empty folder with a readme)
* MixedRealityToolkit -&gt; Spatial (just an empty folder with a readme)

# Acceptance Criteria
- [ ] A clean project with no empty folders
- [ ] No boiler plate readme's, each should fully describe the folders contents
- [ ] A small documented readme in each folder for browsing the project in Github / code.

Should be included in the Beta checklist #2973
</Description>
  </Issue>
  <Issue>
    <IssueID>2987</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Inspector image assets don't load from relative path.</Title>
    <CreatedDate>26/10/2018</CreatedDate>
    <ClosedDate>29/10/2018</ClosedDate>
    <IssueLabels />
    <Description>**Describe the bug**
If the MRTK is installed to a different folder, or outside of the root Assets folder, then inspector texture assets do not load properly.

**To Reproduce**
1. Export MRTK
2. Import MRTK in a new project inside of a "ThirdParty" folder or similar.
3. Restart editor
4. MRTK Logo and Controller Mapping Icons do not load properly
</Description>
  </Issue>
  <Issue>
    <IssueID>2982</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>GameObject.Find not working within InteractionReceiver class</Title>
    <CreatedDate>26/10/2018</CreatedDate>
    <ClosedDate>26/10/2018</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit - Unity

**Describe the bug**
In my own project and in the Interactables Button example project, the GameObject which is interacted with fails to capture a secondary GameObject to interact with. The example project should have a TextMesh object which displays the buttons which are interacted with, but the TextMesh is never displayed in the display. Similarly in my project, I attempt to capture a GameObject and apply SetActive(bActive) to toggle between on and off. The object never appears when interacting with the mesh button I've created using the toolkit prefabs.

**To Reproduce**
_(Links to sample GitHub project preferred)_
Steps to reproduce the behavior:
1. Create a mesh button using the pattern found in example (Prefab w/ CompoundButton, CompoundButtonMesh, Rigidbody; Child w/ Box Collider; GChild w/ Mesh)
2. On root prefab from above, apply 'DefaultButtonMeshProfile' and adjust as desired to show interactions with Cursor are working.
3. Create a Receiver object and add a custom Receiver script, configure inheritance and overrides for class inherits from InteractionReceiver class, override FocusEnter, FocusExit, InputDown.
4. Create a Cube object in Unity an name it anything.
5. Create variable to hold target GameObject, on Start() capture the GameObject created above with the Find function.
6. Do something with the target GameObject (such as SetActive)

**Expected behavior**
In this case, a simple Cube is my target object, I expect it to appear and disappear as I click on my Interactable mesh button. In the example project, I expect the TextMesh to display various feedback about which object I have interacted with.

**Actual behavior**
In the above cases, from the example, the TextMesh is not seen anywhere in the scene, in my example above, the target cube is not seen.

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Unity Editor Version**
2017 LTS

**Mixed Reality Toolkit Release Version**
Latest Master Branch Release 2017.4.2.0

**Additional context**
I have also tried capturing the GameObject in the InputDown call instead of Start, there did not appear to be any problem with finding the object on initialization, no object exceptions are encountered. Added some Debug.Log messages and GameObject.Find is not working from within my Receiver class and does not appear to be working in the Example project, either.
</Description>
  </Issue>
  <Issue>
    <IssueID>2979</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2979</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>invalidcastexception initializing intput system</Title>
    <CreatedDate>25/10/2018</CreatedDate>
    <ClosedDate>26/10/2018</ClosedDate>
    <IssueLabels />
    <Code>
Exception thrown: 'System.InvalidCastException' in Microsoft.MixedReality.Toolkit.dll
'MixedRealityToolkit.exe' (CoreCLR: CoreCLR_UWP_Domain): Loaded 'C:\Data\Users\DefaultAccount\AppData\Local\DevelopmentFiles\Microsoft.MixedReality.ToolkitVS.Release_x86.davidkl\System.Diagnostics.StackTrace.dll'. Cannot find or open the PDB file.
InvalidCastException: Unable to cast object of type 'Microsoft.MixedReality.Toolkit.SDK.Input.MixedRealityInputManager' to type 'Microsoft.MixedReality.Toolkit.Core.Interfaces.IMixedRealityExtensionService'.
   at Microsoft.MixedReality.Toolkit.Core.Services.MixedRealityToolkit.RegisterService(Type type, IMixedRealityService service)
   at Microsoft.MixedReality.Toolkit.Core.Services.MixedRealityToolkit.Initialize()
   at Microsoft.MixedReality.Toolkit.Core.Services.MixedRealityToolkit.InitializeInternal()
   at Microsoft.MixedReality.Toolkit.Core.Services.MixedRealityToolkit.Awake()
   at Microsoft.MixedReality.Toolkit.Core.Services.MixedRealityToolkit.$Invoke2(Int64 instance, Int64* args)
   at UnityEngine.Internal.$MethodUtility.InvokeMethod(Int64 instance, Int64* args, IntPtr method) 
(Filename: &lt;Unknown&gt; Line: 0)
`</Code>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
``

**To Reproduce**
Steps to reproduce the behavior:
1. Checkout mrtk_development branch
2. Load one of the demo scenes (I used the standard materials scene)
3. Build and run (I deployed to a HoloLens using the .net backend)

**Expected behavior**
The system to be correctly initialized

**Actual behavior**
The above exception

**Unity Editor Version**
2018.2.13f1

**Mixed Reality Toolkit Release Version**
mrtk _development branch as of 10/25/2018 11am

</Description>
  </Issue>
  <Issue>
    <IssueID>2975</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2975</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNEXT Task: Setup VR SDKs when configuring</Title>
    <CreatedDate>25/10/2018</CreatedDate>
    <ClosedDate>29/10/2018</ClosedDate>
    <IssueLabels />
    <Description># Overview
When the user imports and configures the MRTK, the XR SDKs have not been setup and requires the user to go an manually turn these on. We would like to automate this a bit more and automatically enable XR settings after a dialog that prompts them for acceptance of the project change.

# Requirements

* When importing or configuring the MRTK show a prompt that asks the user to enable XR settings for their currently targeted platform.
* If user accepts then we update the project settings.

# Acceptance Criteria

- [x] When configuring the MRTK and XR settings is not enabled show a prompt.
- [x] If user accepts prompt update the project settings to enable XR for the current target platform.
</Description>
  </Issue>
  <Issue>
    <IssueID>2974</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>SimonDarksideJ</FixedById>
        <IssueID>2974</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNEXT Task: Create Getting Started Guide.md</Title>
    <CreatedDate>25/10/2018</CreatedDate>
    <ClosedDate>15/11/2018</ClosedDate>
    <IssueLabels />
    <Description># Overview
I thought we had a document like this already in the vNEXT branch, but it seems to have been misplaced. 

Let's discuss requirements and needs for the Getting Started Guide

# Requirements

* Guide a new developer though downloading, setting up, and running the MRTK
* Highlight any special requirements for the MRTK

# Acceptance Criteria

- [x] Create `GettingStartedGuide.md`
- [x] Add Requirements
    - [x] .Net 4.x equivalent run-time
- [x] Step by step walk though of setup
    - [x] Downloading
    - [x] Importing
    - [x] Setup
    - [x] Building
    - [x] Running</Description>
  </Issue>
  <Issue>
    <IssueID>2973</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNEXT Task: Beta Checklist</Title>
    <CreatedDate>25/10/2018</CreatedDate>
    <ClosedDate>09/11/2018</ClosedDate>
    <IssueLabels />
    <Description># Overview
Beta release checklist

# Requirements
* Project Builds and Runs for all supported platforms and configuration types 
    * No Build warnings
* All Project Unity Tests pass
* Release asset packages should import and install without errors/warnings

# Acceptance Criteria
A list of the specific things that must be done for approval / acceptance of the task in checklist form. 
This may correspond with the above requirements.

- [x] Fix #2981 Fix service registration failures.
- [x] Merge #2984 All Unit Tests pass
    - [x] Fix #2972 Fix unit tests
- [x] Fix #2706 Boundary return type invalid
- [x] Merge #2948 Build Window Layout Fixes
- [x] Merge #2988 fix for texture asset loading 
    - [x] Fix #2987 Update asset references to not target the Asset folder in the root folder (e.g. Inspectors)
- [x] Merge #2951 Copy/Paste/Clone Profiles
- [x] Merge #2983 Enable XR Settings on import.
    - [x] Do #2975 Setup XR SDKs if allowed.
- [x] Merge #2993 Mixed Reality Editor Setting binary drop
    - [x] Fix #2956 by creating `MixedRealityEditorSettings.dll`
- [x] Merge #2992 doc cleanup
    - [x] Do #2991 Update docs and clean up empty folders
- [x] Merge #3001 Input System Profile tidy up
- [x] Merge #2999 Spatial Awareness fixes
- [x] Merge #3008 Fix null ref in controller finder
    - [x] Fix #3007 Null ref in controller finder
- [x] Fix Solver Demo Scene
    - [x] #2996 In-Between Solver
    - [x] #2997 Face Headset Solver
- [x] Merge #3024 CameraCache update
    - [x] Fix #3021 Configuration fails if no main camera tagged in scene.
- [x] Merge #3003 Mouse Input Fixes
    - [x] Fix #2754 Fix OpenVR Mouse Input 
- [x] Do #2974 Create Getting Started Guide
- [ ] Fix #2960 Drag and Drop Handler
- [x] Create Staging branches
- [x] Update all feature branches with latest changes from `mrtk_development`
- [x] Test &amp; fix any [discovered bugs](
- [x] Do #2941 Update version number
- [x] Create unity packages for `mrtk_development` and each feature branch</Description>
  </Issue>
  <Issue>
    <IssueID>2972</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2972</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNEXT: Unit Tests don't pass</Title>
    <CreatedDate>25/10/2018</CreatedDate>
    <ClosedDate>26/10/2018</ClosedDate>
    <IssueLabels />
    <Description># Overview
After adding the `ExtensionServices` configuration profile to the project, the Mixed Reality Manager unit tests don't pass because we hard coded the expected result. We should update the unit tests to count the number of extension services registered and use that count instead when testing.
</Description>
  </Issue>
  <Issue>
    <IssueID>2971</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HandDraggable script and IManipulationHandler interface are not working with the clicker.</Title>
    <CreatedDate>25/10/2018</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2971</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2971</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit

**Describe the bug**
As the title says, HandDraggable script and IManipulationHandler interface are not working with the clicker.

**To Reproduce**
Clean project. Import MRTK assets. Import Examples. Apply Mixed Reality configurations.

Attach HandDraggable to a cube. 

Testing with the simulator, the translation occurs. 

When I build the project and I upload it to the Hololens, I can use gestures to move the cube.
If I then try to use the clicker to move it (as far as I know it should be compatible), the cube doesn't move.

The output console shows:


&gt; Model stream is null; loading alternate.


As an alternative, I tried to used the IManipulationHandler interface.
If I understood correctly from the documentation (Windows Academy Gestures), I should be able to add to the position of the cube the  eventData.CumulativeDelta value, but this value is always 0.

**Expected behavior**
If I attach the HandDraggable script to an object I expect that I could move it using the clicker (in 2D) in the same way that using gestures. 



**Unity Editor Version**
2017.2.1p2, 2017.4.2f2 and 2017.4.5f1

**Mixed Reality Toolkit Release Version**
2017.4.2.0 and 2017.4.1.0

I am pretty desperate, I don't know what else to try.

Many thanks in advance
</Description>
  </Issue>
  <Issue>
    <IssueID>2970</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to clear world transfer batch in IL2CPP enabled build?</Title>
    <CreatedDate>25/10/2018</CreatedDate>
    <ClosedDate>23/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>IL2CPP</Name>
        <IssueID>2970</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2970</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2970</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2970</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>2970</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
No.


**Describe the bug**
I am not able to clear world anchor transfer batch post serializing even after calling dispose. It doesnt release memory for Il2CPP alone. It is working in .net.

**To Reproduce**
Approach 1
1. Take Mrtk Examples.
2. Make sure you have sharing with Unet example scene.
3. Open UNetAnchorManager.cs class and comment #581, #584.  (So as to not save the serialized anchor bytes).
4. Profile the memory allocation.

Approach 2 to reproduce: 
1. Download the project : 
2. Make sure to switch IL2CPP platform if not already.
3. Build the MemoryTestScene (Present in MemoryDebugging folder )for IL2CPP and start profiler.
4. In HL it places a cube. Tap the cube and it starts serializing process (happens only on first tap).
5. Analyze the memory allocation.
6. Do the same for DotNet platform and analyze memory.

In dot net memory gets freed but not in IL2CPP. Also all code for serialization are there in TapResponder class.

*Expected behavior**
Wtb should become null post disposing. Memory should be freed after anchor has been created and it should get freed.

**Actual behavior**
Memory hike noticed during serialization process doesn't get freed even after we are done with the process.

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Unity Editor Version**
Unity 2017.4.6f1

**Mixed Reality Toolkit Release Version**
2017.4.0

**Additional context**
Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>2969</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>2969</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add a 0-1.0 Transparency to MRTK Standard Shader for ease of use.</Title>
    <CreatedDate>24/10/2018</CreatedDate>
    <ClosedDate>25/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Shaders / Materials</Name>
        <IssueID>2969</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Is your feature request related to a problem? Please describe.**
It's a common use case to want to make a partially transparent material, but to do so with the MRTK Standard Shader requires us to use a texture that has an alpha channel set to a transparency of 0-1.0. This requires a developer to go to an image editor to change the percent transparency of an object and to import a texture just for changing an alpha %.

**Describe the solution you'd like**
It would be very much easier if there was an "Transparency" setting from 0-1.0 taking a float value that is a publicly modifiable value for the MRTK Standard Shader, changeable via the Inspector for a Material that uses this shader.

**Describe alternatives you've considered**
Currently, I am creating small white textures of 256x256, etc with an alpha value via Gimp, then importing these into Unity, then setting this in the Material. It's a pain.

**Additional context**
None
</Description>
  </Issue>
  <Issue>
    <IssueID>2965</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>ryzngard</FixedById>
        <IssueID>2965</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>diagnostics scene item added twice if visible is configured to true</Title>
    <CreatedDate>24/10/2018</CreatedDate>
    <ClosedDate>12/12/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Diagnostics / Tools</Name>
        <IssueID>2965</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
If the diagnostics profile has Visible set to true, two Diagnostics game objects will appear in the scene; 1 at edit time, the second added at runtime.

I have confirmed that existing scenes receive only the runtime game object and diagnostic data is displayed as expected.

**To Reproduce**
Steps to reproduce the behavior:
1. Enable diagnostics in the configuration profile
2. Set Visible to True in the diagnostics profile.
3. Create a new Scene
4. Click Mixed Reality Toolkit &gt; Configure
5. Enter play mode.

**Expected behavior**
Only one Diagnostics game object to be in the scene.

**Actual behavior**
A second Diagnostics game object is added to the scene in play mode.

**Unity Editor Version**
2018.2.13f1

**Mixed Reality Toolkit Release Version**
mrtk_development as of 2pm 10/24/2018

</Description>
  </Issue>
  <Issue>
    <IssueID>2964</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2964</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>nullreferenceexception in diagnostics handler</Title>
    <CreatedDate>24/10/2018</CreatedDate>
    <ClosedDate>24/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Diagnostics / Tools</Name>
        <IssueID>2964</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
Diagnostics information does not display due to a NullReferenceException in the DiagnosticsHandler class

**Unity Editor Version**
2018.2.13f1

**Mixed Reality Toolkit Release Version**
mrtk_development as of noon 10/24/2018

</Description>
  </Issue>
  <Issue>
    <IssueID>2962</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoverOffsetYScale on AppBar doesn't do anything</Title>
    <CreatedDate>24/10/2018</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2962</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2962</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>2962</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit 

**Describe the bug**
It's not referenced anywhere in the code it seems, at least not in 2017.4.2.0. Changing it has no effect on the AppBar

**To Reproduce**
Change the HoverOffsetYScale on the AppBar - the example should work for this I assume.

**Expected behavior**
Not sure what is meant to happen with it but I assume the Y coordinate on the bar should change to an extent?

**Actual behavior**
Nothing
</Description>
  </Issue>
  <Issue>
    <IssueID>2960</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2960</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[vNext] DragAndDropHandler moves with head</Title>
    <CreatedDate>23/10/2018</CreatedDate>
    <ClosedDate>28/02/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2960</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Describe the bug**
The object is moving with the head movement Not hand movement.
Symptom shows on both HoloLens &amp; immersive headset.

**To Reproduce**
1. Create an object. 
2. Assign 'DragAndDropHandler.cs' script onto it.
3. Build &amp; Deploy.
4. Grab with Airtap, hold and move. 

**Expected behavior**
The object should move with hand movement.

**Actual behavior**
The object does not move with hand movement.
The object is moving with HEAD(gaze cursor) movement.

**Unity Editor Version**
2018.1.9f1

**Mixed Reality Toolkit Release Version**
mrtk_development
</Description>
  </Issue>
  <Issue>
    <IssueID>2958</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>xml serialization broken : Unsupported internal call for IL2CPP:AssemblyBuilder::basic_init - System.Reflection.Emit is not supported.</Title>
    <CreatedDate>23/10/2018</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>IL2CPP</Name>
        <IssueID>2958</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2958</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Describe the bug**
Not able to serialize XML file.  following is the log for a error.
``

**To Reproduce**
Steps to reproduce the behavior:
read the xml file and serialize with XmlSerializer.

**Unity Editor Version**
2018.2.5f1 &amp; 2018.3.0b6

**Mixed Reality Toolkit Release Version**
2017.4.1.0

**Additional context**
scripting runtime version : .Net 4.x equivalent
scripting backend : IL2CPP
API compatibility level .Net 4.x
 
</Description>
  </Issue>
  <Issue>
    <IssueID>2957</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Global event listeners and speech input handlers</Title>
    <CreatedDate>23/10/2018</CreatedDate>
    <ClosedDate>16/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>2957</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2957</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2957</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2957</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit 2017.4.1.0 

**Describe the bug**
I'm not sure this is a real bug, but I would like to discuss this issue.
A speech global listener that is also a button will be a global listener also for all click events.

**To Reproduce**
Create an object that has a component which implements IInputClickHandler.
Attach a SpeechHandler to it and set it to be a global listener.
The click handler is also global and responds to any click in the scene.

**Expected behavior**
Be a global speech handler but not a global click handler.

**Actual behavior**
Object responds to all events globally.

**Unity Editor Version**
2018.2.2f1

**Mixed Reality Toolkit Release Version**
HoloToolkit 2017.4.1.0 

**Additional context**
When a button is required to also have a voice command to trigger it, and the button might be instanced during the runtime of the scene.
We solved the problem by separating the global speech handler, making it a child of the button and connecting the speech events to the triggering of the button.
This solution is a bit messy.
It also makes me wonder about how events are handled in relation to focused objects and if it is the responsibility of the event system or the event receiver to check if the object is being focused.
If I'm not mistaken usually in unity if you want to check for a mouse click or keyboard status its usually the object's responsibility to check "focus".
I would love to hear your opinion and why you chose the way you did.</Description>
  </Issue>
  <Issue>
    <IssueID>2956</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cannot import the MRTK in to a brand new Unity project using the Unity defaults.</Title>
    <CreatedDate>23/10/2018</CreatedDate>
    <ClosedDate>29/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>2956</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Assets/MRTK/MixedRealityToolkit/_Core/Utilities/Editor/Setup/EnforceEditorSettings.cs(202,45): error CS1644: Feature `interpolated strings' cannot be used because it is not part of the C# 4.0 language specification

Assets/MRTK/MixedRealityToolkit/_Core/Utilities/Editor/Setup/EnforceEditorSettings.cs(27,28): error CS0117: `string' does not contain a definition for `IsNullOrWhiteSpace'

Assets/MRTK/MixedRealityToolkit/_Core/Extensions/EditorClassExtensions/ScriptableObjectExtensions.cs(24,58): error CS1644: Feature `interpolated strings' cannot be used because it is not part of the C# 4.0 language specification

`</Code>
    <Description># Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?
Mixed Reality Toolkit

# Describe the bug
In a "New" Unity project (using Unity defaults), on importing the Mixed Reality Toolkit, an error is raised on the EnforceEditorSettings script preventing the project from running.

``


# Reproduction steps

1. Create a brand new project
2. Import / copy the Mixed Reality Toolkit in to the project
3. Watch the world burn

# Expected behavior
The MRTK should import and run the "EnforceEditorSettings" without error.

# Actual behavior
The opposite. Nothing runs

# Unity Editor Version
2018.2.13f0

# Mixed Reality Toolkit Release Version
Development

# Additional Information
I don't think this is an issue we can "FIX" in the code. But we need a plan / process to inform users how to import the project without error.
</Description>
  </Issue>
  <Issue>
    <IssueID>2949</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tooltip background doesn't scale with respect to text.</Title>
    <CreatedDate>20/10/2018</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2949</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>2949</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Describe the bug**
If you attach the string dynamically to tooltip text. the background doesn't scale.
I tried even with static prefab, although the scripts for scaling is written but doesn't work as expected.

**To Reproduce**

Steps to reproduce the behavior:
1. Go to TooltipExample scene set any tooltip text dynamically or statically load the screen text goes out of the background.

**Expected behavior**
Text should fit in the background, as I observed in "ToolTip.cs" , "RefreshLocalContent()" 
resizes the background based on the content size but it doesn't work.


**Unity Editor Version**
Unity 2018.2.5

**Mixed Reality Toolkit Release Version**
 MRTK version(s) 2017.4.1.0

**Additional context**
Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>2946</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2946</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Build Window is broken after 2018.2+</Title>
    <CreatedDate>20/10/2018</CreatedDate>
    <ClosedDate>27/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>2946</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>2946</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
After updating to Unity 2018.2.13f1 the MRTK Build window no longer respects the right side of the window.

![image](

</Description>
  </Issue>
  <Issue>
    <IssueID>2941</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2941</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext task: update version number for beta</Title>
    <CreatedDate>19/10/2018</CreatedDate>
    <ClosedDate>06/11/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>2941</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
Based on the versioning system of &lt;product&gt;.&lt;release&gt;.&lt;update&gt;, the beta version will be 2018.9.0

# Requirements
* Unity project version needs to be updated
* *\Version.txt files need to be updated

# Acceptance Criteria
- [x] Compiling for UWP shows the expected version
- [x] Text files contain the correct version
</Description>
  </Issue>
  <Issue>
    <IssueID>2938</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>killerantz</FixedById>
        <IssueID>2938</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[Feedback] Interactables feature branch feedback</Title>
    <CreatedDate>17/10/2018</CreatedDate>
    <ClosedDate>29/05/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Branch</Name>
        <IssueID>2938</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls - Interactable</Name>
        <IssueID>2938</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
Summary of feedback on the Interactables branch:

- [x] Demo scene needs an instruction banner, like the other demo scenes
- [ ] UI elements should align on the screen, consider using an object collection
- [ ] There should be no warnings produced by Unity in the base project.
- [x] Body / Head objects need updating to the new standard.  MixedRealityPlaySpace / Main Camera
- [x] Theme "states" are free text fields, should these not be drop downs?
- [x] (question) What is the difference between "themes" and Input Actions.  Likely a docs thing but needs clearing up.
- [ ] Inspectors should have some "help text" to describe what the "thing" does.  (possibly collapsible as we've seen in other "demos")
&gt; (P.S. Really like the look and feel of the inspectors btw, nice and clean)
- [x] Right-click Create option for Themes and States needs to live under the MixedRealityToolkit option.  E.G. MixedRealityToolkit -&gt; Interacables -&gt; ...
- [x] I got a Unity exception with some of the Interactable inspectors.  Will try and test more to find the specific one
- [x] Consider renaming elements specific to Interactables to be prefixed with Interactable.  E.G. onClickReceiver -&gt; InteractableOnClickReceiver.
Ideally, there should not be a script that you don't know what it is, where it's from and which system it belongs to. Also ProfileItem -&gt; InteractableProfileItem for example.
- [ ] TODO's should be complete or in another Task.  TODO's should not exist in the staging or dev branch, only complete code.
- [ ] We changed the InputSystem lookup to simply MixedRealityManager (soon to be toolkit) .Instance.InputSystem, to make accessing major system easier.  Check current dev branch.

Will try and more tomorrow when I get more time.
</Description>
  </Issue>
  <Issue>
    <IssueID>2934</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Fature-Request: Display Browser Window in 3D space</Title>
    <CreatedDate>17/10/2018</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>2934</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Mixed Reality Toolkit

It would be fantastic to have an interactive browser window (2D canvas or 3D box) to open HTML pages from WWW. There is no satisfactory solution in asset store or forums on this.
</Description>
  </Issue>
  <Issue>
    <IssueID>2933</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Radial Solver Z Coordinates inverted</Title>
    <CreatedDate>17/10/2018</CreatedDate>
    <ClosedDate>27/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>2933</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'm guessing after #2898 the radial solver wasn't updated and GameObjects attached with that script always appears behind the camera. HoloToolkit 2017.4.2.0.</Description>
  </Issue>
  <Issue>
    <IssueID>2930</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>ryzngard</FixedById>
        <IssueID>2930</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>NuGet packages do not contain default profiles</Title>
    <CreatedDate>16/10/2018</CreatedDate>
    <ClosedDate>22/01/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Branch</Name>
        <IssueID>2930</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
In the feature/MRTK_packageManager branch the new NuGet packages do not contain default profiles. This means that new ones must be generated for everyone consuming from NuGet

**To Reproduce**
_(Links to sample GitHub project preferred)_
Steps to reproduce the behavior:
1. Checkout feature/MRTK_packageManager
2. `dotnet pack` in Build folder
3. Create new Unity project and install NuGetForUnity 
4. Add produced packages from dotnet pack above

**Expected behavior**
Default profiles exist

**Actual behavior**
Default profiles don't exist, and I must create new ones

**Additional context**
This feature is not yet in develop, so is only contained in this branch. This issue is to track before the feature merges. 
</Description>
  </Issue>
  <Issue>
    <IssueID>2928</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Build is using outdated scene data</Title>
    <CreatedDate>16/10/2018</CreatedDate>
    <ClosedDate>16/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>2928</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2928</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2928</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit

**Describe the bug**
When using the HoloToolkit build window for building app packages, it seems that an old version of the app.

**To Reproduce**
Have no definitive steps for reproducing the issue in an arbitrary project, however it seems to be connected to some of the components we developed (unfortunately I cannot share them).

**Expected behavior**
The content of the latest version of the scene is included in the appx package.

**Actual behavior**
It seems that there is an older version of the scene included.
Building and deploying the .appx package works fine and without errors or warnings, just the contents of the package seem to be derived of old versions of the scene.

**Unity Editor Version**
2017.4.11f1

**Mixed Reality Toolkit Release Version**
Tested with 2017.4.0.0 and 2017.4.2.0

**Additional context**
It seems that some of our components or stuff is causing problems with the build, but I am not sure about that. I created a new empty project the build works as expected. However I could not find any log files. Where can they be found?

Also when deleting the contents from the UWP folder and rebuilding from the same scene, the missing contents are included in the new .appx package. However this process takes up to 5 minutes or even more.

Checking the 'Rebuild' checkbox in the build window also does not seem to solve the problem.

Configuration is IL2CPP (since .NET is deprecated), Release, x86.
When checking the app version in the device portal it can be verified, that indeed the latest build of my app gets installed.

EDIT: clarification that I am not sure if it is our stuff that causes the problems.</Description>
  </Issue>
  <Issue>
    <IssueID>2927</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpectatorView (Preview) doesn't generate the iOS XCode project</Title>
    <CreatedDate>16/10/2018</CreatedDate>
    <ClosedDate>19/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Cross Platform</Name>
        <IssueID>2927</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2927</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2927</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>SpectatorView</Name>
        <IssueID>2927</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>iOS</Name>
        <IssueID>2927</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Exception: C:\Program Files\Unity 2017.4.11f1\Editor\Data\il2cpp/build/UnityLinker.exe did not run properly!
UnityEditorInternal.Runner.RunProgram (UnityEditor.Utils.Program p, System.String exe, System.String args, System.String workingDirectory, UnityEditor.Scripting.Compilers.CompilerOutputParserBase parser) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/BuildUtils.cs:130)
UnityEditorInternal.Runner.RunManagedProgram (System.String exe, System.String args, System.String workingDirectory, UnityEditor.Scripting.Compilers.CompilerOutputParserBase parser, System.Action`1 setupStartInfo) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/BuildUtils.cs:73)
UnityEditorInternal.AssemblyStripper.RunAssemblyLinker (IEnumerable`1 args, System.String&amp; out, System.String&amp; err, System.String linkerPath, System.String workingDirectory) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/AssemblyStripper.cs:89)
UnityEditorInternal.AssemblyStripper.StripAssembliesTo (System.String[] assemblies, System.String[] searchDirs, System.String outputFolder, System.String workingDirectory, System.String&amp; output, System.String&amp; error, System.String linkerPath, IIl2CppPlatformProvider platformProvider, IEnumerable`1 additionalBlacklist) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/AssemblyStripper.cs:82)
UnityEditorInternal.AssemblyStripper.RunAssemblyStripper (System.String stagingAreaData, IEnumerable assemblies, System.String managedAssemblyFolderPath, System.String[] assembliesToStrip, System.String[] searchDirs, System.String monoLinkerPath, IIl2CppPlatformProvider platformProvider, UnityEditor.RuntimeClassRegistry rcr) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/AssemblyStripper.cs:204)
UnityEditorInternal.AssemblyStripper.StripAssemblies (System.String stagingAreaData, IIl2CppPlatformProvider platformProvider, UnityEditor.RuntimeClassRegistry rcr) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/AssemblyStripper.cs:114)
UnityEditorInternal.IL2CPPBuilder.Run () (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/Il2Cpp/IL2CPPUtils.cs:152)
UnityEditorInternal.IL2CPPUtils.RunIl2Cpp (System.String tempFolder, System.String stagingAreaData, IIl2CppPlatformProvider platformProvider, System.Action`1 modifyOutputBeforeCompile, UnityEditor.RuntimeClassRegistry runtimeClassRegistry, Boolean debugBuild) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/Il2Cpp/IL2CPPUtils.cs:34)
UnityEditor.iOS.PostProcessiPhonePlayer.CrossCompileManagedDlls (BuildSettings bs, UnityEditor.iOS.ProjectPaths paths, UnityEditor.AssemblyReferenceChecker checker, UnityEditor.RuntimeClassRegistry usedClassRegistry, UnityEditor.BuildReporting.BuildReport buildReport) (at C:/buildslave/unity/build/PlatformDependent/iPhonePlayer/Extensions/Common/BuildPostProcessor.cs:785)
UnityEditor.iOS.PostProcessiPhonePlayer.PostProcess (BuildSettings bs, UnityEditor.iOS.ProjectPaths paths, UnityEditor.RuntimeClassRegistry usedClassRegistry, UnityEditor.BuildReporting.BuildReport buildReport) (at C:/buildslave/unity/build/PlatformDependent/iPhonePlayer/Extensions/Common/BuildPostProcessor.cs:623)
UnityEditor.iOS.PostProcessiPhonePlayer.PostProcess (PostProcessorSettings postProcessorSettings, BuildPostProcessArgs args) (at C:/buildslave/unity/build/PlatformDependent/iPhonePlayer/Extensions/Common/BuildPostProcessor.cs:576)
UnityEditor.iOS.iOSBuildPostprocessor.PostProcess (BuildPostProcessArgs args) (at C:/buildslave/unity/build/PlatformDependent/iPhonePlayer/Extensions/Common/ExtensionModule.cs:37)
UnityEditor.PostprocessBuildPlayer.Postprocess (BuildTargetGroup targetGroup, BuildTarget target, System.String installPath, System.String companyName, System.String productName, Int32 width, Int32 height, BuildOptions options, UnityEditor.RuntimeClassRegistry usedClassRegistry, UnityEditor.BuildReporting.BuildReport report) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/PostprocessBuildPlayer.cs:272)
UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)




Failed running C:\Program Files\Unity 2017.4.11f1\Editor\Data\il2cpp/build/UnityLinker.exe --api=NET_2_0_Subset -out="C:\IFS\Labs\MobileWorkerTest\IosTest\Temp\StagingArea\Data\Managed\tempStrip" -l=none -c=link --link-symbols -x="C:/Program Files/Unity 2017.4.11f1/Editor/Data/PlaybackEngines/iOSSupport\Whitelists\Core.xml" -f="C:\Program Files\Unity 2017.4.11f1\Editor\Data\il2cpp\LinkerDescriptors" -x "C:\IFS\Labs\MobileWorkerTest\IosTest\Temp\StagingArea\Data\Managed\..\platform_native_link.xml" -x "C:\IFS\Labs\MobileWorkerTest\IosTest/Temp/StagingArea/Data/methods_pointedto_by_uievents.xml" -x "C:\IFS\Labs\MobileWorkerTest\IosTest/Temp/StagingArea/Data/UnityEngine.xml" -x "C:\IFS\Labs\MobileWorkerTest\IosTest\Temp\StagingArea\Data\preserved_derived_types.xml" -d "C:\IFS\Labs\MobileWorkerTest\IosTest\Temp\StagingArea\Data\Managed" -a  "C:\IFS\Labs\MobileWorkerTest\IosTest\Temp\StagingArea\Data\Managed\Assembly-CSharp.dll" -a  "C:\IFS\Labs\MobileWorkerTest\IosTest\Temp\StagingArea\Data\Managed\UnityEngine.UI.dll"

stdout:
Fatal error in Unity CIL Linker
System.NullReferenceException: Object reference not set to an instance of an object.
   at Mono.Linker.TypeReferenceExtensions.&lt;GetMethods&gt;c__Iterator1.MoveNext()
   at Mono.Linker.Steps.TypeMapStep.TryMatchMethod(TypeReference type, MethodDefinition method)
   at Mono.Linker.Steps.TypeMapStep.&lt;GetBaseMethodsInInterfaceHierarchy&gt;c__Iterator0.MoveNext()
   at Mono.Linker.Steps.TypeMapStep.MapVirtualInterfaceMethod(MethodDefinition method)
   at Mono.Linker.Steps.TypeMapStep.MapVirtualMethods(TypeDefinition type)
   at Mono.Linker.Steps.TypeMapStep.MapType(TypeDefinition type)
   at Mono.Linker.Steps.TypeMapStep.ProcessAssembly(AssemblyDefinition assembly)
   at Mono.Linker.Steps.BaseStep.Process(LinkContext context)
   at Mono.Linker.Pipeline.Process(LinkContext context)
   at UnityLinker.UnityDriver.Run()
   at UnityLinker.UnityDriver.RunDriver()
stderr:

UnityEngine.Debug:LogError(Object)
UnityEditorInternal.Runner:RunProgram(Program, String, String, String, CompilerOutputParserBase) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/BuildUtils.cs:128)
UnityEditorInternal.Runner:RunManagedProgram(String, String, String, CompilerOutputParserBase, Action`1) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/BuildUtils.cs:73)
UnityEditorInternal.AssemblyStripper:RunAssemblyLinker(IEnumerable`1, String&amp;, String&amp;, String, String) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/AssemblyStripper.cs:89)
UnityEditorInternal.AssemblyStripper:StripAssembliesTo(String[], String[], String, String, String&amp;, String&amp;, String, IIl2CppPlatformProvider, IEnumerable`1) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/AssemblyStripper.cs:82)
UnityEditorInternal.AssemblyStripper:RunAssemblyStripper(String, IEnumerable, String, String[], String[], String, IIl2CppPlatformProvider, RuntimeClassRegistry) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/AssemblyStripper.cs:204)
UnityEditorInternal.AssemblyStripper:StripAssemblies(String, IIl2CppPlatformProvider, RuntimeClassRegistry) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/AssemblyStripper.cs:114)
UnityEditorInternal.IL2CPPBuilder:Run() (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/Il2Cpp/IL2CPPUtils.cs:152)
UnityEditorInternal.IL2CPPUtils:RunIl2Cpp(String, String, IIl2CppPlatformProvider, Action`1, RuntimeClassRegistry, Boolean) (at C:/buildslave/unity/build/Editor/Mono/BuildPipeline/Il2Cpp/IL2CPPUtils.cs:34)
UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)`</Code>
    <Description>I can't seem to target iOS to generate the xcode project. I get a linker error even with a fresh unity project when the HoloToolkit is included. I use HoloToolkit 2017.4.2.0 and Unity LTS 2017.4.11f1. The error is as follows:

``</Description>
  </Issue>
  <Issue>
    <IssueID>2925</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>wiwei</FixedById>
        <IssueID>2925</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Project Settings recommend deprecated .NET backend</Title>
    <CreatedDate>15/10/2018</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>2925</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2925</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit 2017.4.2.0

**Describe the bug**
When selecting "Apply Mixed Reality Project Settings" the option "Enable .NET scripting backend" is selected by default, although the build window shows a warning message, that .NET backend will be deprecated

**Expected behavior**
Use IL2CPP per default or remove the warning about .NET being deprecated.

**Unity Editor Version**
2017.4.11f1

**Mixed Reality Toolkit Release Version**
HoloToolkit 2017.4.2.0
</Description>
  </Issue>
  <Issue>
    <IssueID>2924</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hololens Edge Incomplete function</Title>
    <CreatedDate>15/10/2018</CreatedDate>
    <ClosedDate>22/10/2018</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit | Mixed Reality Toolkit

**Describe the bug**
hello,i want use open website on hololens,hololens have Edge Browser,but i find the browser is incomplete function.I made test on win10 PC,opening the same website with PC Edge Browser is ok,no problem,so i guess whether or not the hololens Edge Browser supporting html5？can anyone know it，please help me，thank you.
</Description>
  </Issue>
  <Issue>
    <IssueID>2919</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpectatorViewPlugin, "method not implemented" with Unity 2018.2</Title>
    <CreatedDate>13/10/2018</CreatedDate>
    <ClosedDate>11/03/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2919</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2919</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>SpectatorView</Name>
        <IssueID>2919</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
error:14090086:lib(20):func(144):reason(134)
error:14090086:lib(20):func(144):reason(134)
'MarkerDetection.exe' (CoreCLR: CoreCLR_UWP_Domain): Loaded 'C:\Data\Users\DefaultAccount\AppData\Local\DevelopmentFiles\MarkerDetectionVS.Debug_x86.cd\System.Diagnostics.StackTrace.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.
Exception: The method or operation is not implemented.
Type: System.NotImplementedException
Module: WinRTBridge
InnerException: &lt;No Data&gt;
AdditionalInfo:MarshalFirstFieldIntoNativePtr type: UnityEngine.XR.WSA.WebCam.PhotoCaptureFrame
   at WinRTBridge.Marshalling.MarshalFirstFieldIntoNativePtr(Object instance)
 
(Filename:  Line: 0)


ArgumentNullException: Value cannot be null.
Parameter name: _unity_self
   at UnityEngineProxy.InternalCalls.PhotoCaptureFrame_CUSTOM_GetDataLength(Object self)
   at UnityEngine.XR.WSA.WebCam.PhotoCaptureFrame..ctor(IntPtr nativePtr)
   at UnityEngine.XR.WSA.WebCam.PhotoCapture.InvokeOnCapturedPhotoToMemoryDelegate(OnCapturedToMemoryCallback callback, Int64 hResult, IntPtr photoCaptureFramePtr)
   at UnityEngine.XR.WSA.WebCam.PhotoCapture.$Invoke10InvokeOnCapturedPhotoToMemoryDelegate(Int64 instance, Int64* args)
   at UnityEngine.Internal.$MethodUtility.InvokeMethod(Int64 instance, Int64* args, IntPtr method) 
(Filename: &lt;Unknown&gt; Line: 0)
`</Code>
    <Description>Hi!

I'm trying to get the SpectatorViewPlugin to work with Unity 2018.2, but I'm stuck with the following error:
``
Any ideas? 

I could build the SpectatorViewPlugin as described in  and I put the DLLs into the folder Assets/Plugins/WSA/x86/. The DLLs must be found, without them I got the expected DLL missig errors. I'm using Unity 2018.2.5f1 and also tried 2018.2.12f1, with the same error.

Best,
   Claus</Description>
  </Issue>
  <Issue>
    <IssueID>2918</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Focus Provider not returning correct focused object for event</Title>
    <CreatedDate>13/10/2018</CreatedDate>
    <ClosedDate>25/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2918</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
When we handle events in the `MixedRealityInputManager` we don't get the focused object for our event properly when the pointer falls back to gaze.

This affects any input source that does not assign pointers when created.

**Expected behavior**
An event handled with an input source that does not have pointers, should use the gaze pointer and its focused object to handle the event

**Actual behavior**
No focused object is returned nor used, so the gaze input fails.

</Description>
  </Issue>
  <Issue>
    <IssueID>2916</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2916</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext: Add support for moving the origin of the spatial awareness observer</Title>
    <CreatedDate>13/10/2018</CreatedDate>
    <ClosedDate>25/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>2916</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
The current implementation of spatial awareness (like Holograms 230) has the observer locked to the origin. In HTK, it is allowed to be moved by application code.

# Requirements

* Allow the app developer to modify the spatial awareness observer origin via the spatial awareness system interface.
* Update the origin as needed in the windows mixed reality observer 

# Acceptance Criteria

- [x] Expose and consume the observer origin
- [x] Add example scene supporting moving the observer
</Description>
  </Issue>
  <Issue>
    <IssueID>2912</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2912</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Gesture profile lets you assign previously assigned gestures</Title>
    <CreatedDate>12/10/2018</CreatedDate>
    <ClosedDate>19/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2912</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
In the Gesture profile even if we have more than one action which belongs to the same Gesture Type WMRDeviceManager picks only the last Action of a Gesture type.

**To Reproduce**
This is a code\design question so nothing to reproduce. 

In the Gesture profile add 5 (or more than 3) gestures and assign different actions to each of them
There will be more than 1 action of the same GestureType since there are only 3 GestureTypes defined in the enum currently.

In the Enable function for WMRDeviceManager it loops through the gestures in the profile and assign the action in the gesture to holdaction, Manuipulationaction and Navigationaction respectively. So if 5 gestures are there only the last action per GestureType will be considered. 
Is this how it is intended?

**Screenshots**

![gestureprofile](
![wmr](

**Mixed Reality Toolkit Release Version**
mrtk_development

</Description>
  </Issue>
  <Issue>
    <IssueID>2911</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpeechInputHandler not Calling hooked in methods if "Is Focus Required" option is turned on</Title>
    <CreatedDate>11/10/2018</CreatedDate>
    <ClosedDate>13/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2911</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Speech</Name>
        <IssueID>2911</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
If you add SpeechInputHandler script to a GameObject as component, the gameobject does not receive the speech events if the "Is Focus Required" is checked. If the option is unchecked the hooked in handler functions are called properly based on the keyword.

**To Reproduce**
In a new project config the profiles as needed with key words and actions. 
Steps to reproduce the behavior:
1. Create a cube in the hierarchy
2. Add Speech Input Handler Script to it. Configure the Keywords and Unity Actions.
3. Check the "Is Focus Required" in the component.
**Expected behavior**
When the Keycode for the keyword is pressed while the app is playing in Unity, the action corresponding to that should be called. 

**Actual behavior**
When the Keycode for the keyword is pressed while the app is playing in Unity, the action corresponding to that is not getting called. 

**Screenshots**
![focusrequired off](
![focusrequired on](

**Unity Editor Version**
Unity 2018.2.11f1

**Mixed Reality Toolkit Release Version**
mrtk_development

**Additional context**
Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>2909</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Failed to Build</Title>
    <CreatedDate>11/10/2018</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>2909</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2909</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2909</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Deployment Add operation with target volume C: on Package Template3D_1.0.1.0_x86__pzq3xp76mxafg from:  (HelloMRWorld_1.0.1.0_x86.appx)  failed with error 0x80004005. See http://go.microsoft.com/fwlink/?LinkId=235160 for help diagnosing app deployment issues.(Unspecified error
)
UnityEngine.Debug:LogError(Object)
HoloToolkit.Unity.BuildDeployPortal:GetInstallStatus(ConnectInfo) (at Assets/HoloToolkit/BuildAndDeploy/Editor/BuildDeployPortal.cs:530)
HoloToolkit.Unity.BuildDeployPortal:InstallApp(String, ConnectInfo, Boolean) (at Assets/HoloToolkit/BuildAndDeploy/Editor/BuildDeployPortal.cs:482)
HoloToolkit.Unity.BuildDeployWindow:InstallOnTargetDevice(String, ConnectInfo) (at Assets/HoloToolkit/BuildAndDeploy/Editor/BuildDeployWindow.cs:1309)
HoloToolkit.Unity.&lt;DeployGUI&gt;c__AnonStorey6:&lt;&gt;m__0() (at Assets/HoloToolkit/BuildAndDeploy/Editor/BuildDeployWindow.cs:928)
UnityEditor.EditorApplication:Internal_CallDelayFunctions()
`</Code>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit

**Describe the bug**
Can't deploy to my HoloLens using the build window. It used to work fine
but all of a sudden it doesn't work anymore. 

Getting this error: 

``


**To Reproduce**
Using Unity2018.1.19f1
HoloToolkit 2017.4.1.0
Configure project settings, build AppX (works)
Then try to Install it on HoloLense. Doesn't work


**Expected behavior**
Installed project on my Lense.

**Actual behavior**
See error above 

**Screenshots**
![2018-10-11_9-55-35](

**Unity Editor Version**
2018.1.9f1

**Mixed Reality Toolkit Release Version**
HoloToolkit2017.4.1.0


</Description>
  </Issue>
  <Issue>
    <IssueID>2905</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2905</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext task: separate registered components (ex: device managers) into assemblies</Title>
    <CreatedDate>10/10/2018</CreatedDate>
    <ClosedDate>17/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>2905</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
Today, the MRTK core assembly contains the code for all of the supported devices (windows mixed reality, open vr, etc). To improve modularization and to allow developers to only include the code that they intend to use (ex: HoloLens only app should not be required to ship OpenVR support code, and the other way around), we should take the Devices code out of the core dll and create individual assemblies.

This will enable faster expansion of device support as well as better customization for developers.

# Requirements
- Core MRTK assembly contains interface and type definitions
- Core MRTK assembly contains the Mixed Reality Manager code
- Core MRTK does NOT contain device implementation code
- Default registered components profile needs to be revisited to properly support the new division of binaries.

# Acceptance Criteria
- [ ] Installing MRTK Core package can configure the scene with the Mixed Reality Manager
- [ ] User is prompted (?) to add the appropriate device support to the Registered Components profile
- [ ] All devices are considered "extensions" to the MRTK</Description>
  </Issue>
  <Issue>
    <IssueID>2904</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Failed to world lock serialization failed</Title>
    <CreatedDate>10/10/2018</CreatedDate>
    <ClosedDate>22/11/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2904</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2904</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>2904</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit

**Describe the bug**
World anchor transfer batch api fails to serialize anchor. This happened mostly during second or third consecutive attempt.

**Unity Editor Version**
Unity 2017.4.6f1

**Mixed Reality Toolkit Release Version**
2017.4.0.0

**Additional context**
Deleting all the holograms and it starts successfuly serializing again.
</Description>
  </Issue>
  <Issue>
    <IssueID>2901</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Controller Mapping profile for Hololens does not show the actions created in the Input action profile</Title>
    <CreatedDate>09/10/2018</CreatedDate>
    <ClosedDate>09/10/2018</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit (dev branch)

**Describe the bug**
I tried creating a new Profile System and added new actions in the Input Action Profile. Then I created a Speech Profile and tried to assign actions against keywords and the new Actions were appearing properly. Then I created a Controller mapping profile and selected hololens as the device a window for Action assignment popped up but no actions were being shown there. The only Option was "None".

Steps to reproduce the behavior:
1) Simply create a new project. 
2) Add MixedRealityManager to a new GameObject.
3) Create a new Active Config profile
4) Add a new Input profile, within that and Input Action profile Spech Profile and Controller Profile
5)  add new actions in the Input Action Profile
6) selected hololens as the device in Controller Mapping profile. Once the action assignment popped up nno actions will be there

**Expected behavior**
Actions are supposed to show in the Assignment window.

**Actual behavior**
Actions are not being shown in the Assignment window.
![active profile](
![controllermapping profile](
![inputprofile](
![inputsystem profile](
![working speech profile](

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Unity Editor Version**
2018.2.11f1

**Mixed Reality Toolkit Release Version**
mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>2899</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Ecnassianer</FixedById>
        <IssueID>2899</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>When configuring the MRTK the MixedRealityPlayspace is not configured properly</Title>
    <CreatedDate>08/10/2018</CreatedDate>
    <ClosedDate>25/10/2018</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
When a developer imports and sets up the MRTK by pressing "configure..." the `MixedRealityPlayspace` should be what the Main Camera parents itself to. It used to work this way and no longer works as expected. The Main Camera _should_ have a `GameObject` parent so the Teleport and Input Systems work properly.

Parenting the `MixedRealityPlayspace` to the Main Camera helps keep startup costs down, and lets developers understand what the scene is doing before entering play mode.

**To Reproduce**
1. Open a new project
2. Import MRTK
3. Press Configure
4. See that Main Camera is not parented correctly

**Expected behavior**
The Main Camera should be parented on a new `GameObject` named `MixedRealityPlayspace`

**Actual behavior**
Main Camera is not parented correctly

**Additional Comments**
When enabling and disabling either the Input or Teleport Systems they should prepare the scene appropriately, as both rely on the Main Camera to be parented.

When both systems are disabled the Main Camera shouldn't be parented at all (as it's unnecessary, and some platforms may not need it)</Description>
  </Issue>
  <Issue>
    <IssueID>2893</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Yoyozilla</FixedById>
        <IssueID>2893</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>QRTracker reads codes upside down</Title>
    <CreatedDate>08/10/2018</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Experimental</Name>
        <IssueID>2893</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Windows Mixed Reality</Name>
        <IssueID>2893</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>As shown below, QR Codes have 3 position/orientation elements and an alignment marker, which is _always_ bottom right.

![image](

However, when the QR Tracker reads a marker it does so upside-down. It's very apparent in the sample as everything on the QRCode prefab is turned 180 degrees on the x axis to compensate for this, and the entire prefab is also rotated 180 degrees for editing-purposes.

Obviously QR Codes can be any orientation, but the orientation/alignment parts are to then rotate it round during processing to be the correct way up. 

You can see an example in Sean's video [here]( where the code is held at the correct orientation (the three big squares are top left, top right, bottom left) but the y-axis arrow is pointing downwards in-engine.

It's a very minor issue, but because all QR codes would be generated with the correct orientation when using a code generator it could very easily cause a lot of confusion so it would be best to fix it sooner rather than later.

I'm not sure it's necessarily reading them rotated, as the x-axis and z-axis are correct (ignoring a debate on which way the +ive z-axis should go relative to the code), so it's just that the y-axis is flipped I guess?</Description>
  </Issue>
  <Issue>
    <IssueID>2892</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>QRTracker/QRCodesManager needs a way to filter out "old" codes</Title>
    <CreatedDate>08/10/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Experimental</Name>
        <IssueID>2892</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Right now every single QR code that has been seen while the tracker is enabled is retained between launches of an app, meaning if you even glance at a code that may be sitting on the side somewhere it could end up doing weird stuff during an app that handles codes.

**Example scenario**

I have a code that aligns the player rig, rather than aligning an object. I launch my app, look at the code, things align and all is well.

Then I close the app, flip the code over, relaunch the app. Those objects are still where they were last seen. Hell, I can close out the MR Portal and try again and they're in the same place. Going off what I've been told the only way to actually reset things is to replug the USB cable to restart the QR tracking driver.

For the majority of applications, I really can't see this being useful. If I have an app that ignores the actual code content and spawns something whenever it sees a QR code there would be absolute chaos. But also testing an app is a lot harder too as I will always immediately have everything spawned.

By the looks of it `LastDetectedQPCTicks` is just a unix timestamp so that could be an option - just add a checkbox to `QRCodesManager` that filters out codes that were seen before `QRCodesManager` initialised. I've just tested that out with my own QRCode handler and it seems to work well. You store a timestamp on `Awake()` or `Start()` from `System.Diagnostics.Stopwatch.GetTimestamp()` and compare any codes that pass through an event with that and only queue the event the `LastDetectedQPCTicks` is higher than the stored timestamp</Description>
  </Issue>
  <Issue>
    <IssueID>2889</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>SimonDarksideJ</FixedById>
        <IssueID>2889</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Controller lag observed in UWP projects with MRTK</Title>
    <CreatedDate>07/10/2018</CreatedDate>
    <ClosedDate>08/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2889</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?
Mixed Reality Toolkit

# Describe the bug
A clear and concise description of what the bug is.

# To Reproduce
In recent Unity builds on the UWP platform there is a noticeable lag appearing with the Motion controllers.  This appears as a sluggish or slow movement when moving the controller fast, or in small jumps when the controller moves slowly (appearing jerky)

On investigation, this only affects the UWP platform and is not present on the OpenVR platform.

# Expected behavior
Visualized controller should fully represent the controllers movement 1-1

# Actual behavior
I recorded a video to demonstrate the effect.  

* The bottom controller is the MRTK visualized gameobject / gizmo
* The Top controller is a GameObject moved by the source InteractionManager

As you can see below, these should match but instead MRTK lags behind

# Screenshots
![uwpcontrollerlag](

# Unity Editor Version
2018.2.9f2 (also tested in 2018.3b03)

# Mixed Reality Toolkit Release Version
MRTK_Development

Additional context
Does NOT affect OpenVR implementation
</Description>
  </Issue>
  <Issue>
    <IssueID>2888</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Rethink Versioning Of MRTK: Allow users to know risk of ingesting packages</Title>
    <CreatedDate>06/10/2018</CreatedDate>
    <ClosedDate>09/11/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Package Management</Name>
        <IssueID>2888</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>While working on a solution to package MRTK in NuGet, versioning has come up a lot. 

There's 2 major points to bring up for this discussion:

1. We should document versioning in a more formal way; that way our community and consumers can all easily reference and understand what a particular version means. 

2. I believe our version should follow a different paradigm than currently.

The current version, from #1858 , should be [product].[month].[revision]. I propose we move to [product].[release].[revision].

Defining the terms as below: 

[product]: Our canonical product name. We have agreed on yearly releases and using year as the nomenclature. For MRTK, the first product name will be 2018. We also tie these to milestones 

[release]: A version release that adds new features. May be a breaking change, if documented, from a previous release on the same [product]. May also just add new features 

[revision]: Intended not to be a breaking change nor add or remove functionality. This would be bug fix releases or patching. Same as [patch] in SemVer

The important difference here is that we are encoding the usability of the package in the versioning, which closer aligns to the intent of SemVer. We are sacrificing the [major].[minor] granularity and collapsing them into a [release] version. This lets customers know that there is an inherent risk in upgrading from 18.1 to 18.2, for example. When using [month] instead of [release] we lose the ability to convey this information in order to communicate a time. I believe that we should avoid this, as release times are encapsulated with package and distribution information. 

I would love to hear you thoughts on this. I've discussed heavily with @davidkline-ms in person (and somewhat heatedly) to arrive to a small revision to our plan that would have a big impact. This also means that if we release at a cadence that is not monthly, our versioning still supports that. 

</Description>
  </Issue>
  <Issue>
    <IssueID>2883</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpeechInputHandler doesn't respect IsFocusRequired</Title>
    <CreatedDate>05/10/2018</CreatedDate>
    <ClosedDate>13/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2883</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Speech</Name>
        <IssueID>2883</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
I have a SpeechInputHandler that requires it, and it appears to be being invoked by MixedRealityInputManager's call to the base HandleEvent method with the comment of "Send the event to global listeners"

**To Reproduce**
1. Add a cube to a scene
2. Add Interactable to cube and a simple script to change color on Focus
3. Add a Speech Command and a SpeechInputHandler to the Cube which requires focus
4. Without focus on the cube, say the speech command

**Expected behavior**
Nothing happens

**Actual behavior**
Speech Command is executed.

**Screenshots**
N/a

**Unity Editor Version**
2018.1.9f2

**Mixed Reality Toolkit Release Version**
mrtk_development ~9/28 (Includes Kurtis's fix: 

**Additional context**
Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>2882</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Improve UWP scripting workflow </Title>
    <CreatedDate>05/10/2018</CreatedDate>
    <ClosedDate>08/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2882</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit and Mixed Reality Toolkit

Hello,

On Unity 2018, .NET scripting back end for UWP is deprecated. We now have to use IL2CPP scripting back end.

Because of that, we don't have a way to have IntelliSense and other tooling for UWP C# code (inside UNITY_WSA compilation symbols), since the dll and the compilation symbols are not available in the unity project. Is there a way to generate some kind of "scripting only project" with the proper .sln/csproj/dll files in order to add UWP targeted code more easily ?

I don't have any experience with msbuild stuff but if you know how we could reproduce Unity's UWP C# project generation, I'll be glad to implement it =).
</Description>
  </Issue>
  <Issue>
    <IssueID>2880</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext: NuGet Error NU1108 circular dependency detected when building c# projects debug projects</Title>
    <CreatedDate>05/10/2018</CreatedDate>
    <ClosedDate>17/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>.NET Backend</Name>
        <IssueID>2880</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
When using the .NET backend and enabling c# project generation, attempting to build in Visual Studio (15.8.6) generates a set of NuGet circular dependency errors:

- Microsoft.MixedReality.Toolkit.Examples -&gt; Microsoft.MixedReality.Toolkit.SDK -&gt; Microsoft.MixedReality.Toolkit.SDK
- Microsoft.MixedReality.Toolkit.SDK -&gt; Microsoft.MixedReality.Toolkit.SDK
- Microsoft.MixedReality.Toolkit -&gt; Microsoft.MixedReality.Toolkit.SDK -&gt; Microsoft.MixedReality.Toolkit.SDK

**To Reproduce**
Steps to reproduce the behavior:
1. Specify the .NET backend in Player Settings
2. Set Platform to Universal Windows Platform in Build Settings
3. Check the Use C# Projects box in Build Settings
4. Build
5. Load .sln file in Visual Studio
6. Build

**Expected behavior**
For the project to be able to build using C# projects (for ease of debugging and modifications). The project will build if C# projects are not created.

**Actual behavior**
NuGet detects a cycle in each of the MRTK csproj files.

**Unity Editor Version**
2018.1.9f2

**Mixed Reality Toolkit Release Version**
Current mrtk_development branch (with use of System.Diagnostics.Process commented out of the diagnostics system) - to work around a limitation with UWP's .net implementation.

</Description>
  </Issue>
  <Issue>
    <IssueID>2878</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2878</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>Yoyozilla</FixedById>
        <IssueID>2878</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>QR Code Feature - missing prefabs in sample scenes and console warning messages</Title>
    <CreatedDate>04/10/2018</CreatedDate>
    <ClosedDate>07/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2878</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Reproduced in multiple unity versions. QR Sample scenes have missing prefabs. 

![image](

Console errors

![image](

</Description>
  </Issue>
  <Issue>
    <IssueID>2876</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Connecting Hololens with another device via matchmaking Unity</Title>
    <CreatedDate>03/10/2018</CreatedDate>
    <ClosedDate>04/10/2018</ClosedDate>
    <IssueLabels />
    <Description>Is it possible to connect the Hololens with another device (ios or android phone) through matchmaking in Unity (using uNet)?

Been trying this out for a while now but does not seem to work. I'm using the build-in networking system from Unity. Connecting two seperate desktops via matchmaking seems to work. But when i try to connect the Hololens with the editor on my desktop, Hololens does not seem to find any created rooms. Both devices are connected to the same wifi.

 I used Brackeys tutorials about creating a multiplayer game as the base for my project:
</Description>
  </Issue>
  <Issue>
    <IssueID>2875</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Usage of UAudioManager's PlayEvent with a GameObject</Title>
    <CreatedDate>03/10/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Using the UAudioManager's PlayEvent variant where a GameObject is passed as an 'emitter'. Is it assumed that the specified object be configured in advance for this purpose?

I think there may be a bug in the case where the object has no prior configuration...

## Expected Behavior
An AudioSource is added on the emitter GameObject (assuming no other sources are discovered as per current code flow) and the specified event is played.

## Actual Behavior
If no AudioSource **nor** AudioSourcesReference component is found (``GetUnusedAudioSource``), a new AudioSourcesReference is added to the GameObject, and an attempt is made to add an AudioSource to it. This leads to a null reference exception in ``AudioSourcesReference.AddNewAudioSource``: it's trying to add to a list that is not initialized until the ``OnEnable``.

## Mixed Reality Toolkit Release Version
HoloToolkit 2017.4.1.0 </Description>
  </Issue>
  <Issue>
    <IssueID>2874</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>ryzngard</FixedById>
        <IssueID>2874</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>diagnostics cannot build using the .net backend</Title>
    <CreatedDate>02/10/2018</CreatedDate>
    <ClosedDate>19/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Diagnostics / Tools</Name>
        <IssueID>2874</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Mixed Reality Toolkit

**Describe the bug**
I need to build a project using the .net backend (unity 2018.1) for debugging purposes. Currently, I am blocked by the diagnostics feature being unable to locate the Process type (it builds for il2cpp)

**To Reproduce**
1. Edit &gt; Project Settings &gt; Player &gt; Other Settings &gt; Scripting Backend == .NET
2. File &gt; Build Settings &gt; Build

**Expected behavior**
To be able to build the project against the .NET backend for as long as Unity ships it.

**Actual behavior**
Assets\MixedRealityToolkit-SDK\Features\Diagnostics\MemoryUseTracker.cs(12,17): error CS0246: The type or namespace name 'Process' could not be found (are you missing a using directive or an assembly reference?)
Assets\MixedRealityToolkit-SDK\Features\Diagnostics\CpuUseTracker.cs(13,17): error CS0246: The type or namespace name 'Process' could not be found (are you missing a using directive or an assembly reference?)

**Unity Editor Version**
2018.1.9f2
</Description>
  </Issue>
  <Issue>
    <IssueID>2865</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Diagnostics Feature interface does not match naming convention of the rest of the feature interfaces.</Title>
    <CreatedDate>01/10/2018</CreatedDate>
    <ClosedDate>01/10/2018</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
Diagnostics Feature interface does not match naming convention of the rest of the feature interfaces.

`IMixedRealityDiagnosticsManager` should be `IMixedRealityDiagnosticsSystem`</Description>
  </Issue>
  <Issue>
    <IssueID>2864</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Default diagnostics profile needs to be locked</Title>
    <CreatedDate>01/10/2018</CreatedDate>
    <ClosedDate>02/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Diagnostics / Tools</Name>
        <IssueID>2864</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Mixed Reality Toolkit

**Describe the bug**
The default diagnostics profile needs to be marked as a default (custom == 0)

**Expected behavior**
The default diagnostics profile is locked

**Actual behavior**
The default diagnostics profile is editable
</Description>
  </Issue>
  <Issue>
    <IssueID>2863</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>ryzngard</FixedById>
        <IssueID>2863</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Diagnostics profile currently contains a title and help text for the Boundary system</Title>
    <CreatedDate>01/10/2018</CreatedDate>
    <ClosedDate>02/10/2018</ClosedDate>
    <IssueLabels />
    <Description># Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?
Mixed Reality Toolkit

# Describe the bug
#2849 added a new configuration screen for managing the Diagnostics configuration.  However as you can see below, the Boundary config screen was copied but not updated for Diagnostics.
![image](
The Header and help text is still the boundary text.

# To Reproduce
Open the Diagnostics Default profile
Use eyes

**Expected behavior**
Header and text should relate to the Diagnostics config

**Actual behavior**
Header and text are duplicated from the Boundary config

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Unity Editor Version**
Which Unity version(s) you've been able to reproduce the bug in.

**Mixed Reality Toolkit Release Version**
Which MRTK version(s) you've been able to reproduce the bug in.

**Additional context**
Add any other context about the problem here.
</Description>
  </Issue>
  <Issue>
    <IssueID>2862</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Mouse and Keyboard input when "Simulate in Editor"</Title>
    <CreatedDate>01/10/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2862</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hello, is there any way I can use mouse and keyboard input to move around when "Simulate in Editor" is on? not everyone has an XBox Controller.

I have a HoloLens, but it's very annoying to keep putting it on and off just to test a minor thing that is very easy to test in the Editor, I could use "none" in the Holographic Emulator mode settings, but that doesn't generate the room's mesh with spatial mapping which I need for my tests.

What would be a solution here? I don't have a controller.</Description>
  </Issue>
  <Issue>
    <IssueID>2861</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2861</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Motion controller has a high chance of being not recognized in Unity 2018.2.10</Title>
    <CreatedDate>30/09/2018</CreatedDate>
    <ClosedDate>26/11/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>2861</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2861</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2861</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2861</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit

**Describe the bug**
Motion controller not recognized in Unity **2018.2.10f0**. The model fails back to a white cube and no response to trigger events

**To Reproduce**
_(Links to sample GitHub project preferred)_
Steps to reproduce the behavior:
1. Create a new Unity project, import MRTK, Apply the project settings (for 'occluded headset') and scene settings.
2. Connect headset and 'play'.
3. Click the trigger on the controller
4. See error
Please refer to the attached image for exception info.

**Expected behavior**
The 

**Actual behavior**
You will see the there is high change (80%) that the controller is not recognized(it falls back to be visualized as a white cube), while 20% chance it is. This problem was not existing in earlier version(e.g. **2018.1.1f1**) of Unity.

**Screenshots**
![lostcontorllerproblem](


**Unity Editor Version**
2018.2.10f0

**Mixed Reality Toolkit Release Version**
HoloToolkit-Unity-2017.4.1.0


</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>2861</IssueID>
        <PullRequestID>3181</PullRequestID>
        <Title>Delay trying to load controller models to enable Editor loading</Title>
        <Description>Overview
---
When launching in the editor, there's a race condition between sources being present in the `DetectedSources` list and the editor's holographic window being available, which is needed to get the platform sources to load the model.

To resolve this, I moved the initial attempt to load out of both `Awake` and `onBeforeRender`, so it now only tries to load in `Update` or `SourceDetected`. I've found this to fix controller model loading in the editor in all my tests.

I also fixed unwanted alternate models from being cached during source lost and properly cleaned up the model during destroy.

Changes
---
- Fixes: #1645
- Fixes: #2682
- Fixes: #2805
- Fixes: #2861 </Description>
        <CreatedDate>21/11/2018</CreatedDate>
        <ClosedDate>22/11/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Legacy (HoloToolkit)</Name>
            <IssueID>2861</IssueID>
            <PullRequestID>3181</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>3181</PullRequestID>
            <IssueID>2861</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>2860</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Troy-Ferrell</FixedById>
        <IssueID>2860</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext: enable "Virtual Reality Supported" automatically like htk did</Title>
    <CreatedDate>28/09/2018</CreatedDate>
    <ClosedDate>31/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Cross Platform</Name>
        <IssueID>2860</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Utilities</Name>
        <IssueID>2860</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Is your feature request related to a problem? Please describe.**
I've gotten hamstrung by not having Virtual Reality Supported checked for me. I'm so used to htk project settings setup doing it for me, that I keep forgetting it in MRTK, and I send up spending 30+ minutes figuring out why my headset doesn't work.

**Describe the solution you'd like**
I'd like for this to be turned on for me, or at least to have a prompt asking if I want it turned on like the IL2CPP prompt.
</Description>
  </Issue>
  <Issue>
    <IssueID>2856</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>New config profile created in the wrong folder.</Title>
    <CreatedDate>28/09/2018</CreatedDate>
    <ClosedDate>29/10/2018</ClosedDate>
    <IssueLabels />
    <Description>**Describe the bug**
When importing only the MRTK core folder and creating a new configuration profile, the profile creates a 
`MixedRealityToolkit-SDK` folder.

Instead this should create just a folder named profiles in the root assets folder.

**Steps to reproduce the behavior:**
1. Download and import just the core MRTK folder.
2. Click configure.
3. Accept the dialog option, asking to create a new configuration
4. See a new folder named `MixedRealityToolkit-SDK`

**Expected behavior**
Should create a new folder named `Profiles` at the root assets folder.

**Actual behavior**
Creates a new folder named `MixedRealityToolkit-SDK`
</Description>
  </Issue>
  <Issue>
    <IssueID>2851</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unauthorized System data "xxxxxxx" access denied</Title>
    <CreatedDate>28/09/2018</CreatedDate>
    <ClosedDate>22/12/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2851</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
  Exception thrown: 'System.UnauthorizedAccessException' in System.IO.FileSystem.dll
UnauthorizedAccessException: Access to the path 'C:\Data\Users\DefaultAccount\AppData\Local\DevelopmentFiles\BeautifulSolarVS.Debug_x86.hp\Data\solar.xml' is denied.
   at System.IO.Win32FileStream.Init(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs)
   at System.IO.Win32FileSystem.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, FileStream parent)
   at System.IO.MultiplexingWin32WinRTFileSystem.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, FileStream parent)
   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)
   at System.IO.FileStream..ctor(String path, FileMode mode)
   at OperationAll.QueryXml(String xmlname, String queryingname)
   at OperationAll.HoloToolkit.Unity.InputModule.IFocusable.OnFocusEnter()
   at HoloToolkit.Unity.InputModule.InputManager.&lt;&gt;c.&lt;.cctor&gt;b__118_0(IFocusable handler, BaseEventData eventData)
   at UnityEngine.EventSystems.ExecuteEvents.Execute[T](GameObject target, BaseEventData eventData, EventFunction`1 functor)

My code 

 string QueryXml(string xmlname,string queryingname)
    {
        string filepath = Application.dataPath +@xmlname;
        StreamReader fp = new StreamReader(new FileStream(filepath,FileMode.Open));

        if (File.Exists(filepath))
        {
            XmlDocument xmlDoc = new XmlDocument();
            xmlDoc.Load(fp);

            XmlNodeList nodelist = xmlDoc.GetElementsByTagName("sample");           
            foreach (XmlElement xe in nodelist)
            {
                if (xe.FirstChild.InnerText == queryingname)
                {
                    return xe.LastChild.InnerText;
                }

            }
        }
        return null;
    }
void IFocusable.OnFocusEnter()
    {
        this.gameObject.transform.localScale = new Vector3(1.5f, 1.5f, 1.5f);
        string ob_selected_name = this.transform.name;
        string ob_attribute = QueryXml(xml_name, ob_selected_name);


        GameObject.Find("Panel1/Display/Text").GetComponent&lt;UnityEngine.UI.Text&gt;().text = ob_attribute;

And I have read [MS document for UWP](https://docs.microsoft.com/en-us/windows/uwp/files/file-access-permissions),but I am not sure where my xml and the appdatapath are.
There are my test codes:


// code 1
       string QueryXml(string xmlname,string queryingname)
    {
        try
        {

            XmlDocument xmlDoc = new XmlDocument();
            
            var asyncOpt = ApplicationData.Current.LocalFolder.OpenStreamForReadAsync(xmlname);
            asyncOpt.Wait();
            using (var fileStream = asyncOpt.Result)
            {
                XmlReaderSettings settings = new XmlReaderSettings();
                using (var reader = XmlReader.Create(fileStream, settings))
                {
                    //加载Xml文件
                    xmlDoc.Load(reader);
                }
                XmlNodeList nodelist = xmlDoc.GetElementsByTagName("sample");           
                foreach (XmlElement xe in nodelist)
                {
                    if (xe.FirstChild.InnerText == queryingname)
                    {
                        return xe.LastChild.InnerText;
                    }

                }
            }
        }
        catch (System.Exception e)
        {
            Debug.Log("still fail");
            Debug.Log(ApplicationData.Current.LocalFolder.Path);
        }
        return null;

    }


Error:

    Exception thrown: 'System.IO.FileNotFoundException' in System.Private.CoreLib.ni.dll
    Exception thrown: 'System.IO.FileNotFoundException' in System.Runtime.WindowsRuntime.dll
    Exception thrown: 'System.AggregateException' in System.Private.CoreLib.ni.dll
    still fail
    C:\Data\Users\96385\AppData\Local\Packages\BeautifulSolar_pzq3xp76mxafg\LocalState


//test2
  string QueryXmlTest( string queryingname)
    {
        XmlDocument xmlDoc = new XmlDocument();
        StorageFolder docLib = KnownFolders.DocumentsLibrary;
        var docFile = docLib.OpenStreamForReadAsync("Data\\solar.xml");
        docFile.Wait();
        var fs = docFile.Result;
        using (fs)
        {
            XmlReaderSettings settings = new XmlReaderSettings();
            using (var reader = XmlReader.Create(fs, settings))
            {
                //加载Xml文件
                //Debug.Log(reader);
                xmlDoc.Load(reader);
            }
            XmlNodeList nodelist = xmlDoc.GetElementsByTagName("sample");
            foreach (XmlElement xe in nodelist)
            {
                if (xe.FirstChild.InnerText == queryingname)
                {
                    return xe.LastChild.InnerText;
                }

            }
        }
        return null;
    }

Error:

Exception thrown: 'System.UnauthorizedAccessException' in Assembly-CSharp.dll
UnauthorizedAccessException: Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))
   at Windows.Storage.KnownFolders.get_DocumentsLibrary()

I don't know where  my solar.xml is and  ApplicationData.Current.LocalFolder is C:\Data\Users\96385\AppData\Local\Packages\BeautifulSolar_pzq3xp76mxafg\LocalState`</Code>
    <Description>### An error about app data access failed
I used **Unity3d(2017.4.1 f1)** to export my app to VS2017,but I found that a .xml document(in the directory /Asset/.xml) wasn't exported.So I copied the xml document to /app/data.Then I debugged again,the error happened,it told me I didn't have a authorization to access the data.So how can I solve this problem?Can I change a directory and which  directory can I read?
Error
``. The location of solar.xml in VS are /App and /App/data(I copied two) The figure
![/data/](
![/ ](
</Description>
  </Issue>
  <Issue>
    <IssueID>2850</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Ecnassianer</FixedById>
        <IssueID>2850</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task: MixedRealityPlayspace creation should be dependent on the kind of parent that the camera has</Title>
    <CreatedDate>28/09/2018</CreatedDate>
    <ClosedDate>09/11/2018</ClosedDate>
    <IssueLabels />
    <Description># Overview
The MixedRealityPlayspace gets created even if the camera has a parent. The parent is disregarded without warning. We should handle this more elegantly.

# Requirements
A list of the required functionality this task requires to implement.

* MixedRealityPlayspace creation checks whether the camera has a parent and responds accordingly.
* A warning is displayed when a scene is setup in an unintended way.

# Acceptance Criteria

- [x] MixedRealityPlayspaces are created at the appropriate times only.
</Description>
  </Issue>
  <Issue>
    <IssueID>2842</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SerializationCompletionReason return UnknownError as status In ExportComplete()</Title>
    <CreatedDate>27/09/2018</CreatedDate>
    <ClosedDate>28/09/2018</ClosedDate>
    <IssueLabels />
    <Description>Help me out
</Description>
  </Issue>
  <Issue>
    <IssueID>2841</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2841</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>How to access extension scripts?</Title>
    <CreatedDate>27/09/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2841</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2841</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2841</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit

**Describe the bug**
None of the extensions methods are able to access through unity c# scripts, for example     InteractionSource.StartHaptics

**To Reproduce**
_(Links to sample GitHub project preferred)_
Steps to reproduce the behavior:
1. Go to 'Common/Scripts/Extensions/  '
2. Click on 'InteractionSourceExtensions.cs'
3. Scroll down to 'line44'
4. Not able to access

**Expected behavior**
In unity, write a c# script, InteractionSource source; source.StartHaptics() should appear as code completion
**Actual behavior**
As above, it is not shown

**Screenshots**
Not necessary

**Unity Editor Version**
2018.1.6f

**Mixed Reality Toolkit Release Version**
Newest
**Additional context**
</Description>
  </Issue>
  <Issue>
    <IssueID>2834</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK vNext SpeechInputHandler NullReference</Title>
    <CreatedDate>25/09/2018</CreatedDate>
    <ClosedDate>25/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2834</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
NullReferenceException: Unable to find IMixedRealitySpeechSystem.
Microsoft.MixedReality.Toolkit.Core.Managers.MixedRealityManager.GetManager (System.Type type) (at Assets/MixedRealityToolkit/_Core/Managers/MixedRealityManager.cs:502)
Microsoft.MixedReality.Toolkit.Core.Managers.MixedRealityManager.GetManager[T] () (at Assets/MixedRealityToolkit/_Core/Managers/MixedRealityManager.cs:473)
Microsoft.MixedReality.Toolkit.Core.Definitions.InputSystem.MixedRealityInputSystemProfile.get_SpeechSystem () (at &lt;5633ad60a2174c55802b45e61d12df29&gt;:0)
Microsoft.MixedReality.Toolkit.Core.Definitions.InputSystem.MixedRealityInputSystemProfile.get_IsSpeechCommandsEnabled () (at &lt;5633ad60a2174c55802b45e61d12df29&gt;:0)
Microsoft.MixedReality.Toolkit.SDK.Inspectors.Input.Handlers.SpeechInputHandlerInspector+&lt;RegisteredKeywords&gt;c__Iterator0.MoveNext () (at Assets/MixedRealityToolkit-SDK/Inspectors/Input/Handlers/SpeechInputHandlerInspector.cs:141)
System.Linq.Set`1[TElement].UnionWith (System.Collections.Generic.IEnumerable`1[T] other) (at &lt;839a3cb835c04d14aeb58d83bb7bc4bd&gt;:0)
System.Linq.Enumerable+DistinctIterator`1[TSource].FillSet () (at &lt;839a3cb835c04d14aeb58d83bb7bc4bd&gt;:0)
System.Linq.Enumerable+DistinctIterator`1[TSource].ToArray () (at &lt;839a3cb835c04d14aeb58d83bb7bc4bd&gt;:0)
System.Linq.Enumerable.ToArray[TSource] (System.Collections.Generic.IEnumerable`1[T] source) (at &lt;839a3cb835c04d14aeb58d83bb7bc4bd&gt;:0)
Microsoft.MixedReality.Toolkit.SDK.Inspectors.Input.Handlers.SpeechInputHandlerInspector.OnEnable () (at Assets/MixedRealityToolkit-SDK/Inspectors/Input/Handlers/SpeechInputHandlerInspector.cs:31)
`</Code>
    <Description>I'm attempting to utilize MRTK vNext to add some speech commands to an app, but I'm hitting some issues editing my scene and then had a question about usage.  Sorry if this isn't the right place for posting, but I didn't see any docs around what I'm attempting either.

Scenario:
I'm attempting to add speech to my app, I created a Custom MixedRealityConfigurationProfile that matches the default except for a custom InputSystemProfile, that matches the default except for a custom SpeechProfile to add a few voice commands.  When I first add new VoiceCommands, I'm able to interact with the SpeechInputHandler to register new commands; but when I go back in and edit the script/functions that are being targeted by that command, I end up being told that the Handler thinks there are no keywords registered, and viewing the Handler causes the following NullReference to appear in the output:
``
Unmodified/previously hooked up commands are fine, and when I press play in the editor I can see all of the keywords again, but as soon as I stop playing it reverts to the error message about no keywords.
</Description>
  </Issue>
  <Issue>
    <IssueID>2832</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Pointer does not always spawn cursor </Title>
    <CreatedDate>25/09/2018</CreatedDate>
    <ClosedDate>03/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>2832</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
Pointer doesn't always spawn its cursor prefab.

BaseCursor's start checks if the input system is null, then awaits, but if the input system isn't null it doesn't properly create the prefab.

![image](

</Description>
  </Issue>
  <Issue>
    <IssueID>2828</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2828</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext task: add accessors to the boundary system created game objects</Title>
    <CreatedDate>24/09/2018</CreatedDate>
    <ClosedDate>25/09/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Boundaries</Name>
        <IssueID>2828</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
Nothing created and added to the application scene should be "hidden" from developers. Make it easy for them to access and be able to modify the gameobjects create by the boundary system.

# Requirements
User can request (and receive) the boundary game objects.

# Acceptance Criteria
- [ ] GameObjects that have been added to the scene get returned to application code
- [ ] Non-created objects return null until the application code explicitly enables their display the first time
</Description>
  </Issue>
  <Issue>
    <IssueID>2826</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>SimonDarksideJ</FixedById>
        <IssueID>2826</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task: Enable the IsOpaque option to be available through the Camera profile</Title>
    <CreatedDate>24/09/2018</CreatedDate>
    <ClosedDate>25/09/2018</ClosedDate>
    <IssueLabels />
    <Description># Overview
Currently the "IsOqapue" property is a static property in the CameraProfile.  This creates a few issues in that:

* It is not in the interface, so new camera profile replacements may not have it
* Although the property is static, the accessor shouldn't be
* Not accessible through the camera profile assigned to the MR Manager

This was highlighted in the discussion surrounding the topic here:


# Requirements

* The IsOpaque parameter should be available from the Camera Profile
* The IsOpaque parameter should follow MRTK coding standards
* The option does not need to be part of the profile inspector as it is a background check.

# Acceptance Criteria

- [ ] I can access the IsOpaque parameter using:
``
- [ ] The IsOpaque property is managed by the camera interface, to ensure it is always available
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>2825</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNEXT Task: Lock Default Profile Inspectors.</Title>
    <CreatedDate>22/09/2018</CreatedDate>
    <ClosedDate>02/10/2018</ClosedDate>
    <IssueLabels />
    <Description># Overview
The MRTK's default profile's shouldn't be configurable. We want developers to create their own to use so that when they take updates or changes to the MRTK their projects won't break. We should also be sure to give the ability to easily create a new on in the default configuration profiles as well.

# Requirements

* Consumers of the MRTK cannot change the default profiles
* Consumers of the MRTK can easily create a "Copy" of the default profile and start editing it immediately.
    * When copying a profile, it should also be set in the Mixed Reality Manager.
* Give maintainers easy access to modify or update the default profiles when needed.

# Acceptance Criteria

- [x] I can not edit any of the MRTK's default profiles located in the SDK.
- [x] As a MRTK Maintainer, I can easily edit and update the SDK's default profile.
- [x] I can click a "Copy Profile" button and instantly start editing my own profile.
</Description>
  </Issue>
  <Issue>
    <IssueID>2822</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Make getting managers easier</Title>
    <CreatedDate>21/09/2018</CreatedDate>
    <ClosedDate>01/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Utilities</Name>
        <IssueID>2822</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
I'd like to propose that we add core manager properties to the Mixed Reality Manager. I've already done it for dictation and speech managers, so I think adding the Core managers to the Mixed Reality Manager itself will help reduce duplicated code throughout the project.

# Requirements
* Developers can access core managers via properties on the Mixed Reality Manager
* Add requirements to Feature Proposal Requirements.

# Acceptance Criteria

- [x] I can get the Input System via `MixedRealityManager.Instance.InputSystem`
- [x] I can get the Teleport System via `MixedRealityManager.Instance.TeleportSystem`
- [x] I can get the Boundary System via `MixedRealityManager.Instance.BoundarySystem`
</Description>
  </Issue>
  <Issue>
    <IssueID>2816</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>2816</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Line gizmos fail when MRTK not configured.</Title>
    <CreatedDate>21/09/2018</CreatedDate>
    <ClosedDate>25/09/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>2816</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
Clicking and dragging on points in any of the following classes sends the point into the far background, making it impossible to edit them by hand:
SimpleLineDataProvider
ParabolaConstrainedLineDataProvider
SplineDataProvider 

**To Reproduce**
1. Create new scene.
2. Add 'SplineDataProvider' component to empty GameObject.
3. Attempt to modify spline by click-dragging points.
4. Observe points ending up in unexpected positions.

**Expected behavior**
Click-dragging should move points into a predictable, intuitive position.
</Description>
  </Issue>
  <Issue>
    <IssueID>2811</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>IMixedRealityInputHandler.OnInputDown triggers twice on a single press</Title>
    <CreatedDate>19/09/2018</CreatedDate>
    <ClosedDate>20/09/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2811</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit vNext

**Describe the bug**
A clear and concise description of what the bug is.
Implemented OnInputDown from IMixedRealityInputHandler and using a MR headset + controllers using tooltips on vNext.
OnInputDown is being called multiple times for a single controller trigger press (first at 10% and then again at 100%)

**To Reproduce**
[Commit with incorrect behavior](
Steps to reproduce the behavior:
1. Open the scene TooltipExamples.unity (located in Assets/MRTk-Examples/Demos/UX/Tooltips/Scenes)
2. Ensure your platform setting is UWP.
3. Run the scene.
4. Target your controller at the emerald diamond to the right of the lunar module.
5. Pull the controller trigger slowly. You should see the tooltip appear below it after 10% of the button is depressed. The tooltip should vanish when you finish depressing the button.

**Expected behavior**
OnInputDown should only activate when passing a defined interval until it is unpressed.
Within the repro project, this means it should open the tooltip when you press, and close the tooltip when you press again.

**Actual behavior**
OnInputDown is being called multiple times for a single controller trigger press (first at 10% and then again at 100%)
This means behavior gated behind OnInputDown doesn't correctly trigger as expected.

Within the repro project, the tooltip will open and close within 1 fully completed press (maintaining pointing).

**Screenshots**

I placed several debug logs within a vNext version of ToolTipSpawner.
OnInputPressed gives the eventData.inputData value. When it exceeds .95f, it prints the HIT ===== message.
OnInputDown has a Debug.Log that prints a collection of the InputEventData values.

![mrtk - vnextinput 02](
![mrtk - vnextinput 01](

**Unity Editor Version**
Unity 2018.1.9f1

**Mixed Reality Toolkit Release Version**
Branched from mrtk_development (aka MRTK Alpha)

**Additional context**
</Description>
  </Issue>
  <Issue>
    <IssueID>2808</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InteractionReceiver</Title>
    <CreatedDate>19/09/2018</CreatedDate>
    <ClosedDate>24/09/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2808</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2808</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>2808</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit

**Describe the bug**
I updated all my Interactions in my Project with the InteractionReceiver. Problem is now when I intantiate an object from a script (Object is not in the receiver), I cannot shoot any interaction on this object. 

**To Reproduce**
Steps to reproduce the behavior:
1. Make an InteractionReceiver like explained [here](
2. Also make a Dialog like explained [here]( with an OK Button for closing the Dialog. Try to instantiate the Dialog in the script.

**Expected behavior**
When I click on OK the Dialog should close

**Actual behavior**
Nothing happens

**Unity Editor Version**
Unity2018.2.5f1

**Mixed Reality Toolkit Release Version**
Downloaded the latest Master (08-27-2018)

**Additional context**
I also tested this with other objects. All my interactable Objects are now not working when the receiver is added to the project (unless it is added to the receiver, but I think this is not working with an Instantiation)
</Description>
  </Issue>
  <Issue>
    <IssueID>2805</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2805</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Motion controller models not always loaded when playing in editor</Title>
    <CreatedDate>18/09/2018</CreatedDate>
    <ClosedDate>26/11/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>GLTF</Name>
        <IssueID>2805</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2805</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Windows Mixed Reality</Name>
        <IssueID>2805</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit

**Describe the bug**
Sometimes, playing in editor, the motion controller models are not loaded.
This happens systematically after the debug with visual studio.

**To Reproduce**
1) Import MRTK and  InputManagerTestScene
2) Press Play in Unity (the motion controller models are loaded) 
3) Attach the VS debug
4) Detach debug
5) Stop the player
6) Press play in Unity (the motion controller models are not loaded) 

**Expected behavior**
Motion controller models always loaded

**Actual behavior**
I made some test and these are my notes:
1) The models are not loaded because there aren't detected spatial sources ( no sources from spatialInteractionManager-&gt;GetDetectedSourcesAtTimestamp(perceptionTimestamp) of EditorMotionController).
2) StartTrackingController is called from Awake (if InteractionManager retrives sources) and when an interaction source is detected
3) When the models are not loaded StartTrackingController is called from Awake. In this case if StartTrackingController is called when an interaction source is detected the models are loaded.
To test this I made a loop inside LoadSourceControllerModel to retry when the model is not loaded and this is the result:
![image](

Only after the sources are detected the models are loaded.
It seems that, sometimes, also if InteractionManager retrives source states, these are not ready until the InteractionSourceDetected event is raised.

**Unity Editor Version**
2017.4.11f1

**Mixed Reality Toolkit Release Version**
2017.4.0.0


</Description>
  </Issue>
  <Issue>
    <IssueID>2802</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Error when updating project icons in custom install path.</Title>
    <CreatedDate>17/09/2018</CreatedDate>
    <ClosedDate>18/09/2018</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
When installing the MRTK in a custom path in a project the Icons are updated with the current theme. This fails, as the path is hard coded.

``

**To Reproduce**
Steps to reproduce the behavior:
1. Install MRTK in custom path
2. When compile is complete error will be seen
</Description>
  </Issue>
  <Issue>
    <IssueID>2799</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2799</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task: Improve and better implement Controller Model Visualization</Title>
    <CreatedDate>17/09/2018</CreatedDate>
    <ClosedDate>26/10/2018</ClosedDate>
    <IssueLabels />
    <Description># Overview
In reviewing the migration of the Solver framework, it has highlighted that controller visualization needs to be better supported.

We also need a way to easily get the controller visualization's `GameObject` or `Transform` references for other components to use.

Currently the controller models are assigned in the Controller Mapping Profile, I'd like to propose that the model assignments should be their own profile, separate from input mapping.

# Requirements

* Controller visualization needs to have it's own profile in the Input System's configuration.
* Controller visualization needs to have it's own interface to define the requirements of a visualized controller. `IMixedRealityControllerVisualizer` ?
* Controller visualization profile needs to be able to assign a concrete implementation that is automatically added to the prefab at runtime, if it was not already added.
* Controller visualization profile needs to have a global prefab for left/right hands
* Controller visualization profile needs to have a prefab option for each supported platform's controller.
* Controller visualization's `GameObject` or `Transform` references need to be easily accessible.

# Acceptance Criteria

- [x] I can create and assign a Controller Visualization Profile to the Input System Configuration.
- [x] I can configure a profile to use a specific concrete implementation of a controller visualizer using the `IMixedRealityControllerVisualizer`.
- [x] I can configure a profile to use a prefab with no additional scripts (auto assigned from concrete implementation).
- [x] I can configure a profile to use a prefab with a previously attached script that implements `IMixedRealityControllerVisualizer`.
- [x] I can get the Controller `GameObject` reference from the `IMixedRealityControllerVisualizer`
- [x] I can get a list of currently detected controllers from the `IMixedRealityInputSystem`
- [ ] I can configure a profile to use the default controller model loaded form glTF or other sources to use the concrete implementation defined in the profile.

</Description>
  </Issue>
  <Issue>
    <IssueID>2797</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>TwoHandsManipulation acts weird when One Hand Movement disabled.</Title>
    <CreatedDate>17/09/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit

**Describe the bug**
Per my discovery I shared on Slack. If it hasn't been brought yet (that would surprise me as it's easy to reproduce) I think  there's a bug in TwoHand manipulation script. It happens when one disables One Hand Movement for the script, leaving the object being only manipulatable by two hands. Following is the video I've just recorded:



**To Reproduce**
Steps to reproduce the behavior:
1. Run the example from MRTH (Two Hands Manipulation scene)
2. Disable "One Hand Movement" for every game object
3. Play with them for a while..
4. See error

**Expected behavior**
Expected is two hands manipulation working properly over time.

**Actual behavior**
Two hands manipulation is broken after a while.

**Additional context**
In the referenced video, problem starts occurring at 1:07.
</Description>
  </Issue>
  <Issue>
    <IssueID>2793</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoloToolkit 2017.4.1.0 Speech Recognition not working</Title>
    <CreatedDate>15/09/2018</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2793</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Speech</Name>
        <IssueID>2793</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit 

**Describe the bug**
HoloLens doesn't invoke any events when trying to use speech commands. 

**To Reproduce**
1. Import HoloToolkit 2017.4.1.0 to Unity2018.1.9
2. Setup scene and project
3. Add 'SpeechInputHandler' and 'SpeechInputSource' to empty gameobject
4. Enable Microphone capabilities 
5. Deploy to HoloLens

**Expected behavior**
Spoken words get recognized and a sound is being played.

**Actual behavior**
nothing happens

**Screenshots**
![untitled](


**Unity Editor Version**
Unity2018.1.9

**Mixed Reality Toolkit Release Version**
HoloToolkit 2017.4.1.0

**Additional context**
</Description>
  </Issue>
  <Issue>
    <IssueID>2790</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>There appears to be no easy way for a title to get the controller object from the manager</Title>
    <CreatedDate>14/09/2018</CreatedDate>
    <ClosedDate>17/09/2018</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
Based on the MixedRealityManager, I do not appear to be able to access the controller game object. My scenario needs to be able to perform situational tasks on the object (ex; highlight features, hide during portions where they would distract or no input is posssible).

**To Reproduce**
_(Links to sample GitHub project preferred)_
Steps to reproduce the behavior:
1. Create a scene with the MRManager
2. Try to find the controller object(s).

**Expected behavior**
A simple method / property to return me the collection of controller game objects

**Actual behavior**
Cant find one

</Description>
  </Issue>
  <Issue>
    <IssueID>2786</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2786</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>BaseInputHandlers still register themselves as global listeners even if `IsFocusRequired` is checked</Title>
    <CreatedDate>13/09/2018</CreatedDate>
    <ClosedDate>14/09/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2786</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
Mixed Reality Toolkit

**Describe the bug**
BaseInputHandlers still register themselves as global listeners even if `IsFocusRequired` is checked.

**Expected behavior**
BaseInputHandlers do not register themselves as global listeners if `IsFocusRequired` is checked.

**Actual behavior**
BaseInputHandlers do register themselves as global listeners even if `IsFocusRequired` is checked.

**Mixed Reality Toolkit Release Version**
mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>2785</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2785</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Solvers need to track controller transforms</Title>
    <CreatedDate>13/09/2018</CreatedDate>
    <ClosedDate>05/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>2785</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
The solvers in vNext are currently head-only. The also need to support tracking motion controllers.

&gt; Review (SJ)
&gt; Solvers are components added to GameObjects in a scene. These Solvers then need a "target" to bind to which may be the users head or could be a physical controller

&gt; Question
&gt; Are ONLY controller entities (head / controller / hand / finger) bound to? Or could it in theory be bound to ANY other GameObject?

# Requirements

* Solvers can have a Transform reference to the tracked controller to "solve" against.
  * This means there must be a way to ask something for the currently tracked controllers ([which exists]( but shouldn't be used?)
  * This does not mean listening for source pose events, as that breaks the paradigm of solver independence and adds yet another set of global listeners.

# Acceptance Criteria
A list of the specific things that must be done for approval / acceptance of the task in checklist form. 
This may correspond with the above requirements.

- [x] Solvers can be configured to obtain and solve towards motion controller transforms.
- [x] Doesn't add another global listener to the scene.</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>2785</IssueID>
        <PullRequestID>2795</PullRequestID>
        <Title>Alternate implementation for Solver Handler Scene Object attachment</Title>
        <Description>Overview
---
This implementation enables the Mixed Reality manager to keep a track of any Scene Objects created in the scene by devices and makes them available for Scene components.

This is a preliminary check-in for review

It's critical that devices are not polled or "part" of a scene.  The Current MixedRealityControllerVisualizer is a representation of a controller in a scene, the GameObject of the controller.
To this the device layer appends the SourcePoseController to enable input events from the controller to manipulate the Controller Game object.

This implementation has enabled the Visualizer to register it's existence with the MixedRealityManager, so that other scripts can easily query for the gameobjects for the controllers in the scene.  Scene objects interacting with scene objects.

*Note* **No parts of the device layer have been modified for this implementation**.

Please review and comment where further changes are needed, 

&gt; Additionally, this solves issue #2790 

Changes
---
- Adds new Scene Object Registration system to the Mixed Reality manager (currently "limited to" MotionControllerVisualizers)
 - Adds functionality to the SolverHandler to grab the correct handed controller from the Scene Object Registration
- Added the ISourceStatehandler implementation to the SolverHandler, so it can refresh the solver when a controller is attached / detached.

TODO
---
This is a preliminary implementation, Ideally the Scene Object Registry should be able to handle any game object, but this requires a fair amount of additional design.

# Registry notes

This brings the registry count up to 3, the distinct registries and their purpose are as follows:

* Core manager Registry - Unique registry for managers where there can only ever ne a single instance in operation (e.g. InputSystem, BoundarySystem). Each manager receives all Unity events coordinated through the MR Manager.
* Component Registry - Emulates the managers registry, except allows multiple components to be added.  Each manager receives all Unity events coordinated through the MR Manager.
* Scene Object Registry - List of referencable Scene objects, to avoid use of "FindObjectOfType" lookups.  Used for regularly queries scene objects critical to a project (e.g. VR Controllers represented in a scene)</Description>
        <CreatedDate>16/09/2018</CreatedDate>
        <ClosedDate>22/09/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>DO NOT MERGE</Name>
            <IssueID>2785</IssueID>
            <PullRequestID>2795</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Solvers</Name>
            <IssueID>2785</IssueID>
            <PullRequestID>2795</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>2780</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Use of Action instead of the MRTK standard of using the MixedRealityEventManager</Title>
    <CreatedDate>13/09/2018</CreatedDate>
    <ClosedDate>17/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>2780</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK Approved</Name>
        <IssueID>2780</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
The recent [Object Collection PR](  was merged using events that did not use the Unity Event System or UnityEvents. Instead, it is using .NET Action's and delegates for raising and passing events.
Functionality should use the build in UnityEventManager for all event exchanging as it's highly performant and threaded in to the MRTK.

# To Reproduce
Open the Object Collection classes and see all the "Action" declarations and use throughout the scripts, as seen below:

``

# Mixed Reality Toolkit Release Version
MRTK_development

# Additional context
This highlights we still have more work to do in the coding guidelines to ensure core components are used for new MRTK development.
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>2780</IssueID>
        <PullRequestID>2606</PullRequestID>
        <Title>MRTK SDK UX - ObjectCollection</Title>
        <Description>Overview:
Porting ObjectCollection to the vNext branch. Allow users to easily arrange items in a grid in various volumes (planes, spheres, cylinders).


Changes:
Abstracted original ObjectCollection to a BaseCollection class. This makes for a good pattern to extend from in the future. Additionally, the custom editor script is now inherited by all children.


To use BaseCollection:
Inherit BaseCollection and override the abstract method LayoutChildren(). Easy as that.
</Description>
        <CreatedDate>17/08/2018</CreatedDate>
        <ClosedDate>12/09/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>UX Controls</Name>
            <IssueID>2780</IssueID>
            <PullRequestID>2606</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>2776</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNEXT: Development Branch doesn't compile.</Title>
    <CreatedDate>13/09/2018</CreatedDate>
    <ClosedDate>13/09/2018</ClosedDate>
    <IssueLabels />
    <Description>Grid and Scatter Object Collections don't compile properly</Description>
  </Issue>
  <Issue>
    <IssueID>2772</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Using a custom model controller</Title>
    <CreatedDate>12/09/2018</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2772</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi ! :)
I'm starting to use the mixed reality toolkit for Unity, I have a custom model for the controller and i see in the DefaultControllerPointer there is an empty Transform for the raycast origin. 
How i can affect it automatically when i launched the game. I try to create a prefab for the raycast and i try by a script, but i think i missed something ....
Do you have some advice ??

Thanks ;)
</Description>
  </Issue>
  <Issue>
    <IssueID>2769</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Sharing service on a private IP address and in-build problems </Title>
    <CreatedDate>12/09/2018</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2769</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2769</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2769</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>2769</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hey everyone,  

I have completed the shared holograms tutorial at  but have a few problems I need to resolve and would appreciate any help, advise or direction. 

I can build and run the hololens network sharing application on both hololens devices but only while the 'sharing service' in Unity is active or running in the background. The sharing service which can be found and accessed at the top of the Unity nav toolbar opens a console displaying details of active sessions and connecting devices. 

Firstly how can I set the application without the need of having Unity or 'sharing service' running in the background while connecting the two hololens devices? Alternatively is it possible to have the 'sharing service' run during a Visual Studio build so I can connect without Unity?

Secondly how do I create a private sharing service including a private IP and port number which can be accessed anywhere as long as I have an internet connection and run the app. The idea is to convert a raspberry pi b+ model into a host machine with a private ipv4 address where two hololens devices can connect too.

I read and researched something about Microsoft Azure, so I'm guessing that I need to host this private machine / address on Azure? If so how can I, what tutorials can I follow, what can I do? Can I convert the Unity build which works on local host machine to a private one? 

My plan was to simply change the parameters of the 'server address' and 'server port' within the Unity inspector of my project into the ipv4 and port number of the private host machine. But I'm guessing this is not possible? Maybe if I could run the application without having Unity open and then changing the parameters to the private ipv4, I thought it would've worked. 

I really want to get into this side of network knowledge/ programming and don't really know much about ip, hosting, etc 

Thank you,

</Description>
  </Issue>
  <Issue>
    <IssueID>2767</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Does MRTK's UNet Sharing example  compatible with IL2CPP?</Title>
    <CreatedDate>12/09/2018</CreatedDate>
    <ClosedDate>12/09/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview

## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>2766</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Is there any guide/readme file to understand UNet Sharing example?</Title>
    <CreatedDate>12/09/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>2766</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2766</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2766</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>2766</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Currently i want to use UNet Sharing to share world anchor between hololens. But i can't what exactly understand if the example shares anchor automatically or any step is required. It would be great to have a read me file for each example. If already such a file exists, please guide me to right place.
## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>2761</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext Task: Update all the enums to use "Type" suffix, according to the updated coding guidelines</Title>
    <CreatedDate>11/09/2018</CreatedDate>
    <ClosedDate>11/01/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Code Style</Name>
        <IssueID>2761</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
All enums need to use the Type suffix in their name.

# Requirements
* All enums are properly named

# Acceptance Criteria

- [ ] All enums are properly named
</Description>
  </Issue>
  <Issue>
    <IssueID>2681</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNEXT Bug: HoloLens Hand Input incorrectly preregisters the gaze pointer on source lost</Title>
    <CreatedDate>30/08/2018</CreatedDate>
    <ClosedDate>31/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2681</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2681</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Overview**
When a user raises and lowers their hand, triggering a source found and lost event, when the hand input source is lost, it will also unregister the gaze pointer.

**Steps to reproduce the behavior:**
1. Build for HoloLens
2. Raise a hand
3. Lower the hand
4. See cursor stop moving, and error for internal gaze pointer not registered.

**Mixed Reality Toolkit Release Version**
mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>2680</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNEXT Task: Refactor Input Sources to be handled by a device manager</Title>
    <CreatedDate>30/08/2018</CreatedDate>
    <ClosedDate>12/09/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>2680</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2680</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
Input Sources should be handled like controllers. Possibly need to be refactored so they're handled by a device manager. This would apply to Touch, Speech, and Dictation at the moment, but could be expanded to gesture input sources as well.

# Requirements
* Needs to abstract the "Platform" part of any input source using platform specific code (e.g. speech, touch, gesture)
* Input Source should only contain non-platform specific code
* Manager logic needed to initialise these new "devices"
* Should be NO platform specific code in the MRTK outside of the "Devices" space

# Acceptance Criteria
- [x] I can initialize and execute the touch services using the touch device / inputsource
- [x] I can initialize and execute the speech services using the speech device / inputsource
- [x] I can initialize and execute the dictation services using the dictation device / inputsource</Description>
  </Issue>
  <Issue>
    <IssueID>2672</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>2672</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Text is changed when changing shape of a Button</Title>
    <CreatedDate>30/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2672</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2672</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>2672</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit 

**Describe the bug**
When changing the aspect ratio of a button, the aspect ratio and size of the text is changed as well.

**To Reproduce**
Steps to reproduce the behavior:
1. Create empty scene.
2. Create new button from prefab (Either RectangleButton or HolographicButton).
3. Put some text on it.
4. Change the aspect ratio of the button and see that the aspect ratio of the text changes.

**Expected behavior**
There should be a way to change the button shape without changing the text. Either by changing the button scale or by using some dedicated inputs for button size.
If the behavior is correct, then a tutorial on how to create UI with MRTK would be very helpful.

**Actual behavior**
The aspect ratio of the text (thus also the size of text) changes, when the button shape is changed.

**Screenshots**
![ui-button](


**Unity Editor Version**
2017.4.10f1

**Mixed Reality Toolkit Release Version**
2017.4.1.0

**Additional context**
none
</Description>
  </Issue>
  <Issue>
    <IssueID>2671</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>parabolic laser pointer</Title>
    <CreatedDate>30/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2671</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2671</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>2671</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit 

**Is your feature request related to a problem? Please describe.**
In the Home screen, when the joy sticked is tilted, the parabolic laser does appear.
I want to implement this.
It seems that there are no prefabs, components to achive this in the HoloToolKit and HoloToolKit-Example.
All of the example are using straight laser pointer.
If the laser pointer is straight, it's hard to point a heigher place.

**Describe the solution you'd like**
I want to know how to do this.
Offering the sample project is the best.

**Describe alternatives you've considered**
I'm considering creating original script...but it's little hard.</Description>
  </Issue>
  <Issue>
    <IssueID>2669</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2669</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Pointing ray doesn't properly disable itself when switching to an unsupported controller model</Title>
    <CreatedDate>30/08/2018</CreatedDate>
    <ClosedDate>15/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2669</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2669</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
HoloToolkit

**Describe the bug**
When one controller is using the glTF controller model and the other isn't, the pointing ray doesn't properly disable itself when it doesn't find anything to attach to. This is because we update the handedness, then in the refresh code check to make sure the handedness is the same as the currently tracked controller.
It might not find a node to attach to because of the current design of attaching to a node under the glTF model instead of potentially attaching to a more generic transform higher up.

**To Reproduce**
Steps to reproduce the behavior:
1. Open any example scene
2. In the Hierarchy, click on MixedRealityCameraParent, then MotionControllers.
3. In the Inspector, select "Always use alternate right model"
4. Run the scene.
5. Click the left controller to gain the pointer.
6. Click the right controller to switch the pointer.

**Expected behavior**
The pointer visualization switches controllers.

**Actual behavior**
The cursor and pointer end point switch controllers, but the pointer visualization start point stays on the left controller.

**Screenshots**
![image](

**Unity Editor Version**
Any

**Mixed Reality Toolkit Release Version**
2017.4.1</Description>
  </Issue>
  <Issue>
    <IssueID>2668</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Throw up a warning whenever a project that contains MRTK is built without being properly configured</Title>
    <CreatedDate>30/08/2018</CreatedDate>
    <ClosedDate>30/08/2018</ClosedDate>
    <IssueLabels />
    <Description>**Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?**
I experience the problem in HoloToolkit, but I would be fine if the feature request just landed in Mixed Reality Toolkit

**Is your feature request related to a problem? Please describe.**
I regularly help people debug the most obscure MRTK problems, missing using directives, bad cameras, failed DLLs. It's a pain in the ass and then I suddenly realize they never ran the Mixed Reality Toolkit Configure operations. These problems are really obscure and hard to track down on their own (and invariably it seems like they fixed one or two of the perquisites by hand in order to get themselves into an all new and unique brokeness state.)


**Describe the solution you'd like**

I'd really like it if MRTK popped a warning message any time it built/ran without having first been configured. And like... don't let them turn it off.
</Description>
  </Issue>
  <Issue>
    <IssueID>2665</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Automatically handle controller model pose synchronization on model assignment </Title>
    <CreatedDate>29/08/2018</CreatedDate>
    <ClosedDate>04/09/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2665</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Does this affect the legacy HoloToolkit (master) or the Mixed Reality Toolkit (mrtk_release)?
Mixed Reality Toolkit

## Is your feature request related to a problem? Please describe.
When a user specifies a controller model, if they do not explicitly add a controller pose synchronizer, the controllers will not automatically sync to the controllers.

## Describe the solution you'd like
We should check the prefab/GameObject we're adding to the controller model object field and make sure we have a controller pose synchronizer, and if not warn the user and add it if they accept.</Description>
  </Issue>
  <Issue>
    <IssueID>2659</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext Task: Update vNext branch homepage</Title>
    <CreatedDate>29/08/2018</CreatedDate>
    <ClosedDate>27/10/2018</ClosedDate>
    <IssueLabels />
    <Description>**Overview**
Update the vNext homepage to be more relevant following recent development. 
Also update the HTK homepage to be able to easily navigate users to the updated vNext homepages (release and dev)

**Requirements**
* Ensure the information is concise and up to date
* Update details related to releases and release strategy
* Update the Build information? Ensure this works
* Include references to the Task list for outstanding work

**Acceptance Criteria**
- [x] All links on the vNext home page work
- [x] All information is current and works (e.g. the build info)
- [x] A user can quickly find / access the Dev / Release pages from the current HTK homepage
- [x] A user can readily read the current status of the project
</Description>
  </Issue>
  <Issue>
    <IssueID>2653</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext Task: Ensure support multi-scene development for vNEXT</Title>
    <CreatedDate>28/08/2018</CreatedDate>
    <ClosedDate>24/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Create a document that walks people through how to setup and do multi-scene development with vNEXT

## Requirements
- Add an option on the Camera Profile to mark the camera's root parent to not be destroyed on load.

## Acceptance Criteria 
- [x] Developers can start a scene and load a new scene without errors or warnings.
- [ ] Documentation on best practices guide for multi scene support.</Description>
  </Issue>
  <Issue>
    <IssueID>2649</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2649</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task: Package Management</Title>
    <CreatedDate>28/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Package Management</Name>
        <IssueID>2649</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
MRTK 2018 will come in both required and optional asset packages. There needs to be a handy system for developers to discover and install the optional features, as well as future partner packages.

The goal is to directly interface with the Unity package manager store and present a curated set of package that are known to work well with the MRTK.

## Requires
- Data format for curated package list
- UI for selecting / filtering / installing packages
- Library that can / will be shared between partner toolkits

## Acceptance criteria
- [ ] Data format can represent package name, company, version, dependencies, download location
- [ ] UI allows
    - [ ] Viewing available packages
    - [ ] Filtering packages by name, type, etc
    - [ ] Selecting packages for install
    - [ ] Downloading / Caching packages
    - [ ] Installing package (may be done by Unity Package Manager UI)
- [ ] Package Management UI / Library can be distributed with partner toolkits</Description>
  </Issue>
  <Issue>
    <IssueID>2648</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>resolve licencing</Title>
    <CreatedDate>27/08/2018</CreatedDate>
    <ClosedDate>27/08/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview

## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>2647</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[MRTK 2017.4.1.0] Can't build project using Build Window</Title>
    <CreatedDate>27/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>2647</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2647</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2647</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Hi Dev's, I'm having issues to build my project using the Build Window.
I tried out a lot with different versions of Unity already, however no success.

## Expected Behavior
You click 'Build all, then Install' and your App gets successfully deployed on your HoloLens.
Or in the Deploy options after clicking Install it deploys.

## Actual Behavior
Different, depending on the Unity version I used (see below). Usually, I could build the app but then can't bring it to the HoloLens through the 'Install' button.  On 2018.2.5 however, I can't even connect to the HoloLens 


## Steps to reproduce
Open new project -&gt; Import MRTK -&gt; Try to build

## Unity Editor Version
Tried with 
2017LTS
2018.1.9
2018.2.5

All three not working

## Mixed Reality Toolkit Release Version
[MRTK 2017.4.1.0]

## Help
Could you guys tell me your workflow for building HoloLens apps using the Build Window (saving a ton of time compared to 'the old way') and ideally using a relatively new Unity version?
</Description>
  </Issue>
  <Issue>
    <IssueID>2645</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>resolve licencing</Title>
    <CreatedDate>27/08/2018</CreatedDate>
    <ClosedDate>27/08/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview

## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>2644</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>WorldAnchorManager RemoveAnchor, translate object, AttachAnchor sequence doesn't work</Title>
    <CreatedDate>27/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>2644</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2644</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2644</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

This is about a Hololens application.

I have an eventhandler for the tap event of a GestureRecognizer.
In this eventhandler I perform the following sequence:

        private void _gestureRecognizer_Tapped(TappedEventArgs obj)
        {
            Debug.Log("_gesureRecognizer_Tapped");

            WorldAnchorManager.Instance.RemoveAnchor(this.PanelObject);
            PanelObject.transform.Translate(1, 0, 0);

            WorldAnchorManager.Instance.AttachAnchor(this.PanelObject, AnchorName);
         }

However, nothing happens.

However, when I change my code and do the above in the GameObject Update method and perform the three steps with some pause between them it does work.

I've been looking into the sourcecode of the MRTK and it appears like the commands for removing and attaching are not executed immediately but are pushed on some stack and performed in the Update of the WorldAnchorManager.

So, the root cause is probably that the RemoveAnchor in my click event is not yet executed when I Translate, which makes the translate fail because the WorldAnchor is still attached.

So, I was wondering what is the correct way to handle this?
Is there some way for me to know when the RemoveAnchor is effectively executed?

## Expected Behavior

I would expect the object to translate and then it's new position to be saved

## Actual Behavior

The object doesn't move

## Steps to reproduce
see above code

## Unity Editor Version
Unity 2017.4.8f1 

## Mixed Reality Toolkit Release Version
2017.4.1.0
</Description>
  </Issue>
  <Issue>
    <IssueID>2642</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>resolve licencing</Title>
    <CreatedDate>27/08/2018</CreatedDate>
    <ClosedDate>27/08/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview

## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>2641</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2641</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task: Lumin Platform Support</Title>
    <CreatedDate>27/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>2641</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Cross Platform</Name>
        <IssueID>2641</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Add Lumin platform support for devices like the Magic Leap One

## Requires
- [x] Adding the ability to support platforms using Lumin
- [x] Supporting the magic leap one

## Acceptance criteria
- [x] User should be able to configure and setup the Lumin platform.
- [x] User should be able to configure Totem Controller using the controller profile.
- [x] User should be able to build and run any AR Demo scene on the device.- [ ] User should be able to configure all recognizable gestures to Input Actions.
</Description>
  </Issue>
  <Issue>
    <IssueID>2635</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Motion controllers Grab Mechanics scene not working</Title>
    <CreatedDate>23/08/2018</CreatedDate>
    <ClosedDate>25/08/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview

In the Grab Mechanics example scene, it is possible to move and teleport but not to grab objects.

## Expected Behavior

The blocks should change color when pointed at and it should be possible to grab the blocks.

## Actual Behavior

When pointed at, the blocks don't change and nothing happens (even though the cursor points right into the block), and it's not possible to grab any of the blocks with the grab button.

## Steps to reproduce

* Prepare a project for Mixed Reality with the MRTK for Unity as described in the doc
* Go to HoloToolkit-Examples&gt;MotionControllers-GrabMechanics&gt;Scenes&gt;GrabMechanics.Unity
* Open the scene and run
* Try to grab the blocks

## Unity Editor Version

Unity 2018.1.5f1 Personal

## Mixed Reality Toolkit Release Version

2017.4.1.0</Description>
  </Issue>
  <Issue>
    <IssueID>2634</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext - Vuforia support</Title>
    <CreatedDate>23/08/2018</CreatedDate>
    <ClosedDate>23/08/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
MainCamera with Vuforia components always throws "System.Reflection.TargetInvocationException" when integrated into vNext enabled text scene. Webcam for Debugging in Editor is also not recognized.

## Expected Behavior
Active webcam in Editor, no errors in console and tracking disabled/enabled, depending if either building for WMR headset or Hololens.

## Steps to reproduce
- Open vNext demo scene (e.g. LineGallery)
- Add Vuforia ImageTarget
- Add Vuforia ARCamera
- Setup up Vuforia (License Key, Image target DB, ...)
- Start Editor

## Unity Editor Version
2018.1.9f1

## Mixed Reality Toolkit Release Version
Mixed Reality Toolkit 2018.7.0.0-ALPHA

Best regards :)</Description>
  </Issue>
  <Issue>
    <IssueID>2631</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext: [IL2CPP] deployment failure (DEP0700) "splash screen image cannot be located"</Title>
    <CreatedDate>22/08/2018</CreatedDate>
    <ClosedDate>23/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>IL2CPP</Name>
        <IssueID>2631</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Error		DEP0700: Registration of the app failed. [0x80073CF6] AppxManifest.xml(28,27): error 0x80070002: Cannot install or update package Microsoft.MixedReality.Toolkit_ph1m9x8skttmg because the splash screen image [SplashScreen.png] cannot be located. Verify that the package contains an image that can be used as a splash screen for the application, and that the package manifest points to the correct location in the package where this splash screen image can be found.

## Expected Behavior
Can deploy

## Actual Behavior
Cannot deploy

## Steps to reproduce
- Clone repository
- Open project
- Pick favorite scene
- Build for UWP
- Load sln in VS
- Build/deploy (HoloLens or Immersive Headset)

## Unity Editor Version
2018.1.9f1

## Mixed Reality Toolkit Release Version
mrtk_development</Description>
  </Issue>
  <Issue>
    <IssueID>2630</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2630</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNEXT Task: HoloLens Gesture Support</Title>
    <CreatedDate>22/08/2018</CreatedDate>
    <ClosedDate>14/09/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2630</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Add HoloLens gesture support: Tap, Hold, Manipulate, &amp; Navigate.
(Hand Simulation to be done separately, I'd like to discuss how to handle mouse support via profile)

## Acceptance criteria
- [x] User should be able to configure gesture recognizer from Input System Config profile
- [x] User should be able to configure input actions for Tap, Hold, Manipulate, &amp; Navigate in Input System Config Profile.
- [x] When user raises hand to the ready position, the cursor should update to ready state.
- [x] When user taps on a GameObject, the Input System raises a Click event.
- [x] When user taps the cursor should animate properly with interaction states &amp; cursor shapes in HoloLens:
![2018-08-22 17_36_24-yoonpark_unityuniteberlin2018_mixedrealitytoolkit_20180621 pptx - powerpoint](
- [x] When user taps and holds a GameObject, the Input System raises a Hold Started.
- [x] User should be able to enable/disable Navigation and Manipulation gesture recognizers
    - [x] System should intelligently disable a recognizer if it's sibling has been enabled, and the recognizer is running.
- [x] When user taps, holds, and moves their hand, the Input System raises the appropriate Manipulation events when Manipulation Gesture Recognizer is running.
- [x] When the user taps, holds, and moves their hand, the Input System raises the appropriate Navigation events when Navigation Gesture Recognizer is running.</Description>
  </Issue>
  <Issue>
    <IssueID>2628</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK_Development does not build for the UWP  .NET scripting backend</Title>
    <CreatedDate>22/08/2018</CreatedDate>
    <ClosedDate>22/08/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
![image](

## Expected Behavior
vNext does build for the UWP .NET scripting backend

## Actual Behavior
vNext does not build for the UWP .NET scripting backend

## Steps to reproduce
1. Switch the target platform to UWP and the scripting backend to .NET.
2. Try to build.

## Unity Editor Version
2018.1.9f1 (but probably all).

## Mixed Reality Toolkit Release Version
MRTK_Development branch</Description>
  </Issue>
  <Issue>
    <IssueID>2626</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext - Gaze cursor/Air tap issues</Title>
    <CreatedDate>21/08/2018</CreatedDate>
    <ClosedDate>06/10/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Gaze cursor/Air tap is not working properly on HoloLens.
- Head tracking stops working when a hand is raised and lost. Cursor does not follow head movement anymore. It follows head movement only when a hand is raised.
- Does not show interaction state changes (dot &lt;-&gt; dount)
- Does not trigger input events.
- No in-editor gaze cursor simulation yet?

## Expected Behavior
Gaze cursor works on both HoloLens and editor

## Actual Behavior
Gaze cursor does not work

## Unity Editor Version
2018.1.9f

## Mixed Reality Toolkit Release Version
Alpha
</Description>
  </Issue>
  <Issue>
    <IssueID>2622</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext Task - Create Input Modifier component</Title>
    <CreatedDate>21/08/2018</CreatedDate>
    <ClosedDate>21/08/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
It has been noted, that some developers would like a quick and easy way to transform a single action configured against an input, into multiple actions depending on the current value of the input.

This should be an addon component so as not to break the current input implementation as it is a generic feature.

For discussion is whether we should have one generic component to all axis types or one per axis type

E.G. 
* Up / Down / Left / Right on a D-Pad
* Specific Angles on a thumbstick
* N / NW / W / SW / S / SE / E / NE  on a touchpad
* Range on a trigger

## Requires
* A new component to be able to configure actions based on values (_Core or SDK?)
* Code documentation
* Supporting user documentation

## Acceptance Criteria
- [ ] I can configure different actions for Dpad directions
- [ ] I can configure different actions for Thumbstick directions
- [ ] I can configure different actions for Touchpad directions
- [ ] I can configure different actions for trigger pressure
- [ ] I can configure different actions for controller rotation
- [ ] I can configure different actions for controller position</Description>
  </Issue>
  <Issue>
    <IssueID>2621</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Exception when run Spatial Understanding query</Title>
    <CreatedDate>21/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2621</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2621</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>2621</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I have a bug when I run a Spatial Understanding query on HoloLens. I use object placement solver code from this site:  and example code from HoloLens toolkit.

## Actual Behavior
I get the message: Exception thrown at 0x52D58C2E (SpatialUnderstanding.dll) in Spatial Understanding.exe: 0xC0000005: Access violation reading location 0x00000000. 

I use Unity 2018.2.0b8 and previous HoloLens Toolkit version.</Description>
  </Issue>
  <Issue>
    <IssueID>2617</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2617</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task: Create Controller Action Popouts in Controller Mapping Profile</Title>
    <CreatedDate>20/08/2018</CreatedDate>
    <ClosedDate>27/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2617</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The SDK needs a component to visualise what "InputActions" are being exposed by the InputSystem.
This would enable a user to test their controller mappings are working as expected 

## Requires
- [x] Move assigning the interactions to a popout window to remove clutter from the controller mapping profile.
- [x] Add images with action assignments for all known controller types.
- [x] Sync the controller actions to all the variants of the same physical controller.
    - This ensure's we don't have to make multiple controller definitions for the same physical controller for each platform.
    - You'll see a single controller input action window which will assign the actions to every platform

An example of what the known controller type popout would look like:
![image](
![image](
![image](

Notes
---
 - Minimal to no controller code changes should be required to make this happen.
- Figure out if there's issues with using controller images.

## Acceptance Criteria
- [x] I can configure a generic controller using the detailed interaction mapping window
- [x] I can configure a generic Open VR controller using the detailed interaction mapping window
- [x] I can configure a WMR Motion Controller using its corresponding controller image
- [x] I can configure a HTC Vive Wand Controller using its corresponding controller image
- [x] I can configure an Oculus Touch Controllerusing its corresponding controller image
- [x] I can configure an Xbox One Controller in using its corresponding controller image

Other controllers and their images will be added when their support has been added.</Description>
  </Issue>
  <Issue>
    <IssueID>2616</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2616</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Boundray Visualization Profile should not hide materials if a setting is disabled</Title>
    <CreatedDate>20/08/2018</CreatedDate>
    <ClosedDate>22/08/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Boundary visualization components can be shown or hidden at any time during the lifespan of an application. Currently, the boundary visualization profile hides settings from the developer when a component is not configured to be shown, though the data is persisted regardless of the setting for "Show".

This results in the user having to check, configure and uncheck any visualization that MAY be desired by the application.... a tedious at best process.

The fix is to ignore the state of "Show" and always display visualization settings.</Description>
  </Issue>
  <Issue>
    <IssueID>2615</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>API for Windows Mixed Reality pass-through camera feed on VR headsets?</Title>
    <CreatedDate>20/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>2615</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2615</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>A month ago, Microsoft showcased the new ["Flashlight" feature][1] for existing WMR immersive/VR headsets.

[![enter image description here][2]][2]

Since then, I've been trying to find a way to programmatically access the pass-through camera feed. Is there any API to retrieve the stream? Or plans on exposing such an API?


  [1]: 
  [2]: 
</Description>
  </Issue>
  <Issue>
    <IssueID>2613</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>sharing services of Holotoolkit is not working between wmr device and Hololens</Title>
    <CreatedDate>20/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2613</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2613</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>2613</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
By using holotoolkit sharing we build an application which is working in the hololens and not in the wmr device.But when we open the application using unity editor it is getting worked.But on building it and while opening it as an application in Wmr device It is not working.
## Expected Behavior
server should get connected when we  open UWP app in device directly.
## Actual Behavior
server is not getting connected to wmr device  when we open in device but it is working in hololens
## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
2017.2.1f1
## Mixed Reality Toolkit Release Version
2017.4.1.0</Description>
  </Issue>
  <Issue>
    <IssueID>2610</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2610</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task: Add input action rules to controller events</Title>
    <CreatedDate>18/08/2018</CreatedDate>
    <ClosedDate>21/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2610</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
It was suggested that we may also want to call actions for when inputs reach their max/min values or have a specific value.

For example the Xbox Dpad outputs a single Vector 2 value, where as Users want to be able to assign different actions based on the Dpad up / DPad down / etc

This however translate differently based on what the input is, so the user might want a different action for the directions on a touchpad, e.g. N / NW / W / SW / S / SE / E / NE

Currently this is only way to process the directions is in the handler, as shown below. 

``

Ideally, there should be an editor configuration screen to be able to add the ability to configure these translations / re-directions of input actions

## Requires
* A new scriptable profile to define rules for input actions (Input Action X with Value Y raises Input Action Z)
* Input Handlers should read from the rules for any configured rules and raise the corresponding event.
* Code documentation
* Supporting user documentation

## Acceptance Criteria
- [x] I can configure 4 or more different input actions for each direction, from a input action received from a Dpad (Dual Axis)
- [x] I can configure 8 or more different input actions for each direction, from a input action received from a Thumbstick (Dual Axis)
- [x] I can configure 8 or more different input actions for each direction, from a input action received from a Touchpad (Dual Axis)
- [x] I can configure different Input actions for pressure received from a single axis / float input action
- [x] I can configure different Input actions for rotations received from a 3Dof or 6Dof input action
- [x] I can configure different Input actions for positions received from a 3Dof or 6Dof input action</Description>
  </Issue>
  <Issue>
    <IssueID>2607</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>2607</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>killerantz</FixedById>
        <IssueID>2607</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task: New Interactable Object</Title>
    <CreatedDate>17/08/2018</CreatedDate>
    <ClosedDate>05/02/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2607</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>2607</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Add new button UI control system which unifies old [CompoundButton ]( [InteractiveButtonComponents](

# Requirements
A list of the required functionality this task requires to implement.

* A interaction system that is easy for designers to create buttons and other interactables with sensory feedback.
* An easy to use inspector that ties everything together
* States for interactables are configurable and easily extended.
* Profiles are a collection of themes paired to game objects.
* Themes allow the designer to assign object property values to states.
* Events are easily extendable at usable in the Inspector.
* Events can also be used by developers using code in optimized way.
* Events may care about states that themes do not.
* Toggle interaction and theming is supported
* Action filtering
* Keyword or voice commands
* Global listening can be enabled
* A collection of basic themes
* A collection of basic events
* A collection of button prefabs to show examples of interaction types

# Acceptance Criteria

- [ ] Interactable assets including models, materials, textures, animations
- [ ] Inspector base code for layout, buttons and formatting
- [ ] InspectorFields, used by Event system and themes to allow for adding custom properties to a subclass that are automatically rendered in the inspector.
- [ ] Layout code to make building 3D and responsive buttons easier for designers. 
- [ ] State management system using ScriptableObjects and a state logic abstract class allows for easily choosing only the states a designer cares about. A custom logic class can be created and assigned to handle unique edge cases.
- [ ] States are easily configured using the Unity Editor inspectors
- [ ] Profiles in the interactable is a list of Themes paired with the gameObjects they control
- [ ] Themes read in states and allow a designer to assign property values for each state
- [ ] Themes should manipulate transform, Text and shader properties
- [ ] Themes will be saved as ScriptableObjects for easy reuse
- [ ] Themes will have an easy to use inspector
- [ ] Event system that provides some basic functionality through the inspector, but is easily customizable and extendable. For instance default expectation is a click event, but could be extended to handle two handed gestures.
- [ ] Events can monitor Interactable states as well as all registered input events, the event system may care about states that themes do not.
- [ ] Events will have an easy interface for developer to connect to and use, either adding MonoBehavior components to the Interactable object or referencing the interactable from other objects. (in progress)
- [ ] Interactable will combine all the functionality above into one component that is easy to configure.
- [ ] All other functionality is not required (besides states) for a button to work and allow a designer to hook up an onClick event. Unused functionality will be collapsed, but easily discovered.
- [ ] Designers will be able to do basic configuration of the button like assigning a voice command keyword, assigning an action filter or setting the button to global a global listener.
- [ ] Interactables will filter actions and handle controller inputs that are assigned to actions ( in progress)
- [ ] A designer will be able to easily assign themes and game objects in the profiles section.
- [ ] A designer will be able to update theme properties through the interactable's insector or through the theme's inspector.
- [ ] A theme can be assigned to any material property available to the game object.
- [ ] New theme functionality can be easily added by a developer by extending the ThemeBase class.
- [ ] New events or the way states are evaluated can be created by extending the RecieverBase.
- [ ] A MonoBehavior Receiver class will be created to allow developers to easily access interactable states and pointer information.
</Description>
  </Issue>
  <Issue>
    <IssueID>2598</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>World Anchors Do not persist correctly</Title>
    <CreatedDate>16/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2598</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2598</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>2598</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

Following all tutorials and documentations, I am able to save and load world anchors to / from the store.

However, the technology just doesn't work. As opposed to how this works with say the Hologram app, where those correctly maintain their positions between sessions, days, and even weeks, using the Unity API has yet to produce an object that maintained it's correct world position between two runs.

The issue is fairly simple, and is identical if I use the MRTK's WorldAnchorManager, or just roll out my own solution. It just looks as if the positions I am getting are relative to the position of the device, and there is no compensation that happens to properly place the objects in world space, and hence the objects do not maintain their actual physical world positioning.

Has anyone gotten this to work correctly at all? is this a bug? Is there anything that I'm missing that isn't documented anywhere?

## Expected Behavior

Persisted anchors will remain in exact positions in world space, so if I place an object on a table it will stay there between runs.

## Actual Behavior

Objects load and are placed relative to where the unity camera is situated.

## Steps to reproduce

You can try this with this code:



Or any simple setup of having a few objects with a world manager saving / loading their positions between session. just move around the room and you'll notice nothing retains it's correct position.

## Unity Editor Version

2017.4 latest and 2018.2 latest

## Mixed Reality Toolkit Release Version

latest 2017.4
</Description>
  </Issue>
  <Issue>
    <IssueID>2593</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2593</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNEXT Task: Ensure All Input Sources are being implemented</Title>
    <CreatedDate>15/08/2018</CreatedDate>
    <ClosedDate>27/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2593</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Double check and make sure the following input sources are being utilized:

- [x] Dictation Input
- [x] Speech Input
- [x] Touch Screen Input</Description>
  </Issue>
  <Issue>
    <IssueID>2592</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2592</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task: Spatial Audio System</Title>
    <CreatedDate>14/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Spatial Sound / Audio</Name>
        <IssueID>2592</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Different platforms require different spatializers. Some platforms are supported by more than one spatializer. Some may need additional configuration beyond simply selecting a plugin.

Developers should be presented with an intelligent default and the option of selecting the spatializer of their choice.

## Requires
- Interface to define the Spatial Audio System
- Default manager implementation
- Mixed Reality Manager updates to enable/disable the system and select the appropriate profile

## Acceptance criteria
- [ ] User can select and configure their chosen spatializer via a profile
- [ ] Correct Spatializer is used for the appropriate platform.</Description>
  </Issue>
  <Issue>
    <IssueID>2591</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2591</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>bug: it is possible to teleport to "nowhere"</Title>
    <CreatedDate>14/08/2018</CreatedDate>
    <ClosedDate>22/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2591</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
On vNext, teleportation does not appear to look for a valid position before moving the user. For example, I was able to go &gt;1750m below the floor in the boundary visualization demo.

## Expected Behavior
By default, to block the user from teleporting outside of the experience's world.

## Actual Behavior
Was able to teleport so far away, I could not see the floor object.

## Steps to reproduce
Load the Boundary Visualization Demo scene, teleport off of the side of the floor platform.

## Unity Editor Version
2018.1.9

## Mixed Reality Toolkit Release Version
mrtk_development branch as of 8/14/2018</Description>
  </Issue>
  <Issue>
    <IssueID>2588</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InputUp event is fired right after InputDown</Title>
    <CreatedDate>14/08/2018</CreatedDate>
    <ClosedDate>31/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>2588</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2588</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2588</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2588</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2588</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I was writing a script that should run after a button is "held" ie AirTap half way for a few seconds. I tested it in Unity editor and it waits until I let go of the trigger but on Hololens it does not wait to fire the `InputUp` until the finger are back open.
## Expected Behavior
The InputUp event should be fired when fingers stop doing the tap.
## Actual Behavior
InputUp is fired after InputDown disregarding the hand position.

## Mixed Reality Toolkit Release Version
2017.4.0


And while somebody is fixing this can we get some documentation on various events? I couldn't find any info for all these even other than [this page]( This is a good start but does not explain it properly such as when is `HoldCompleted` and `HoldCanceled` called? Who knows?


        #region Protected Virtual Callback Functions
        protected virtual void FocusEnter(GameObject obj, PointerSpecificEventData eventData) { }
        protected virtual void FocusExit(GameObject obj, PointerSpecificEventData eventData) { }

        protected virtual void InputDown(GameObject obj, InputEventData eventData) { }
        protected virtual void InputUp(GameObject obj, InputEventData eventData) { }
        protected virtual void InputClicked(GameObject obj, InputClickedEventData eventData) { }

        protected virtual void HoldStarted(GameObject obj, HoldEventData eventData) { }
        protected virtual void HoldCompleted(GameObject obj, HoldEventData eventData) { }
        protected virtual void HoldCanceled(GameObject obj, HoldEventData eventData) { }

        protected virtual void ManipulationStarted(GameObject obj, ManipulationEventData eventData) { }
        protected virtual void ManipulationUpdated(GameObject obj, ManipulationEventData eventData) { }
        protected virtual void ManipulationCompleted(GameObject obj, ManipulationEventData eventData) { }
        protected virtual void ManipulationCanceled(GameObject obj, ManipulationEventData eventData) { }

        protected virtual void NavigationStarted(GameObject obj, NavigationEventData eventData) { }
        protected virtual void NavigationUpdated(GameObject obj, NavigationEventData eventData) { }
        protected virtual void NavigationCompleted(GameObject obj, NavigationEventData eventData) { }
        protected virtual void NavigationCanceled(GameObject obj, NavigationEventData eventData) { }
        #endregion</Description>
  </Issue>
  <Issue>
    <IssueID>2587</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity import with 900 warnings</Title>
    <CreatedDate>13/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2587</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2587</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
After I imported the "HoloToolkit-Unity-Examples-2017.2.1.1.unitypackage" in my project, I got 20 errors and after I fixed them by removing the code lines I got 900 warnings. That happens although my SDK is on right version10.0.16299.0.

## Expected Behavior
no errors, no warning
## Actual Behavior
~20 errors and after fixing 874 warnings
## Steps to reproduce
create a unity project, apply build settings for HoloLens (like in  import MRK by Assets-&gt;Import Package-&gt;Custom Package

## Unity Editor Version
Version 2018.1.4f1 (1a308f4ebef1)
## Mixed Reality Toolkit Release Version
2017.2.1.1</Description>
  </Issue>
  <Issue>
    <IssueID>2585</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Update Player Body to use rigidbody</Title>
    <CreatedDate>12/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>2585</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Using rigidbody on our camera rig will give us flexibility when moving the rig around. It also means we don't have to calculate the player's y position when we teleport or move.
</Description>
  </Issue>
  <Issue>
    <IssueID>2578</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>danielescudero</FixedById>
        <IssueID>2578</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Iphone screen always says "Almost there..."</Title>
    <CreatedDate>09/08/2018</CreatedDate>
    <ClosedDate>11/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2578</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2578</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>SpectatorView</Name>
        <IssueID>2578</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>iOS</Name>
        <IssueID>2578</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I have built the both version of the application. However, when I show the marker to the HoloLens, my iphone screen says "Almost there..." and cannot proceed to the next step. 
## Expected Behavior
Iphone will excute the next step when the hololens scans the marker.
## Actual Behavior
My iphone screen display "Almost there".

## Unity Editor Version
2017.4.4f1
## Mixed Reality Toolkit Release Version
2017.4.1.0</Description>
  </Issue>
  <Issue>
    <IssueID>2577</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2577</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Refactor Generic Unity Inputs into base class.</Title>
    <CreatedDate>09/08/2018</CreatedDate>
    <ClosedDate>20/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2577</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Open VR Device Manager is using generic unity input, but in the future, we need to make the change to get input directly from open vr. Refactoring all the generic unity input into a base class and abstracting out the input will help in that transition, while giving devs a familiar way to wire up controllers.</Description>
  </Issue>
  <Issue>
    <IssueID>2565</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2565</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vnext bug play area boundary does not relocate after teleport</Title>
    <CreatedDate>07/08/2018</CreatedDate>
    <ClosedDate>18/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Boundaries</Name>
        <IssueID>2565</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
  </Issue>
  <Issue>
    <IssueID>2564</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext Task cache unity layer masks at startup</Title>
    <CreatedDate>07/08/2018</CreatedDate>
    <ClosedDate>07/08/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Unity pre-defines a set of layers and gives them memorable names in addition to their numerical value. These values *could* potentially change.

To be more robust (and for our code to be easier to read) we should cache the pre-defined layer values at startup (lookup by name) so that any interested script can easily lookup the desired value.

## Requires
Component that handles layer value lookup with fields to easily provide these values to callers

## Acceptance criterial
- [ ] All current pre-defined layers are looked up and their values cached
- [ ] Current code referencing one or more layers updated to use the cache
</Description>
  </Issue>
  <Issue>
    <IssueID>2563</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Open VR input mappings are incorrect</Title>
    <CreatedDate>07/08/2018</CreatedDate>
    <ClosedDate>20/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>OpenVR</Name>
        <IssueID>2563</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Not all generic input mappings are correct for Open vr which affects input for different systems.

Impacts #2562 </Description>
  </Issue>
  <Issue>
    <IssueID>2562</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vnext bug: cannot teleport using OpenVR layer</Title>
    <CreatedDate>06/08/2018</CreatedDate>
    <ClosedDate>20/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2562</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>OpenVR</Name>
        <IssueID>2562</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Teleportation is working on Windows Mixed Reality, not OpenVR (on Vive or via Windows Mixed Reality Steam driver)

## Expected Behavior
Functional teleportation

## Actual Behavior
Stationary user

## Unity Editor Version
2018.1.9f1

## Mixed Reality Toolkit Release Version
vNext Alpha</Description>
  </Issue>
  <Issue>
    <IssueID>2561</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext Task Implement rotating the user's perspective</Title>
    <CreatedDate>06/08/2018</CreatedDate>
    <ClosedDate>13/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2561</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Currently, the only way to rotate the user is to teleport. We need support for stationary rotation.

## Requires
Implementation of rotating via the platform / controller native method (ex: push thumbstick to left or right)

## Acceptance criteria
- [x] user can rotate left
- [x] user can rotate right</Description>
  </Issue>
  <Issue>
    <IssueID>2558</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Ecnassianer</FixedById>
        <IssueID>2558</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task rename transparent emerald or create all color transparent standard materials</Title>
    <CreatedDate>06/08/2018</CreatedDate>
    <ClosedDate>06/09/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
If we are going to have a set of standard materials, we should have all forms in all colors. Currently, the teleport feature has defined MRTK_Standard_Emerald_Transparent for use with the teleport pointer.

## Requires
Rename the transparent emerald material to MRTK_Default_Teleport_Pointer (or similar)
- or - 
Create transparent materials for all of our standard colors.

## Acceptance criteria
- [x] Decide the approach
- [x] rename or create the material(s)
- [ ] Consider updating std material demo scene for ease of color comparisons on HoloLens and other see-through/AR devices.</Description>
  </Issue>
  <Issue>
    <IssueID>2557</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext Task fix "not called by the manager" checks in the teleport system</Title>
    <CreatedDate>06/08/2018</CreatedDate>
    <ClosedDate>07/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2557</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The teleport system default implementation is currently using a bool that is set while a teleport is in flight to check that events are raised only by it's class. Unfortunately, that doesn't actually do what it intends (and is only being checked in RaiseTeleportComplete).

## Requires
- A better solution for checking who is calling the public RaiseTeleport* methods (investigate 
- All RaiseTeleport* methods to check the caller

## Acceptance criteria
- [ ] All event raising methods are properly checking the caller identity
- [ ] Caller identity is checked in a reliable, robust manner</Description>
  </Issue>
  <Issue>
    <IssueID>2554</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2554</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task - Boundary visualization profile should have configurable default "show" options</Title>
    <CreatedDate>06/08/2018</CreatedDate>
    <ClosedDate>20/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Boundaries</Name>
        <IssueID>2554</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Current boundary profile auto-creates and displays the floor and play area. Not all apps want these created by default.

## Requires
Add show options to profile
Manager needs to read and respect at startup

## Acceptance criteria
- [x] Can suppress creation of default visualizations
- [x] When turned on later, the objects are created

</Description>
  </Issue>
  <Issue>
    <IssueID>2552</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2552</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task: Handle floor / boundary z-fighting better</Title>
    <CreatedDate>06/08/2018</CreatedDate>
    <ClosedDate>18/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Boundaries</Name>
        <IssueID>2552</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Alpha ships with a small fudge factor to keep the play area quad from fighting with the floor plane. There are better ways to handle this (configurable offsets, render order). Beta should handle this better with fewer "magic numbers" baked into the code.

## Requires
Implementing the chosen solution
Testing with multiple boundary visualization combinations

## Acceptance criteria
- [x] No z-fighting with the floor and any other boundary visualizations</Description>
  </Issue>
  <Issue>
    <IssueID>2551</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Something wrong :trying to map your surrounding</Title>
    <CreatedDate>06/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>2551</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2551</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2551</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
If your machine has multiple graphics adapters, Unity may have created a WindowContext on the wrong adapter. If you experience a black screen when playing, please restart the Editor.
 
(Filename: C:\buildslave\unity\build\Runtime/VR/VRDevice.cpp Line: 218)


The referenced script on this Behaviour is missing!
 
(Filename: C:\buildslave\unity\build\Runtime/Mono/MonoBehaviour.cpp Line: 1510)


The referenced script on this Behaviour (Game Object 'International City_0') is missing!
 
(Filename: C:\buildslave\unity\build\Runtime/Mono/MonoBehaviour.cpp Line: 1753)


Setting up 1 worker threads for Enlighten.

  Thread -&gt; id: 550 -&gt; priority: 1 

UnloadTime: 6.645600 ms

Holographic Tracking State Lost. New State: 1
 
(Filename: C:\buildslave\unity\build\Runtime/VR/HoloLens/HoloLensWorldManager.cpp Line: 166)


Failed to get spatial stage statics - can't retrieve or interact with boundaries! Error code: '0x80040154'.
`</Code>
    <Description>## Overview
Add A city model in Hololens , error： the APP will be stuck in Trying to map your surrounding.

## Actual Behavior
**2018.11.15Update**
I rebuilt this scene and exported it to Hololens Emulator,I found this error log
``
And the display in Hololens Emulator is 
![hololenerror](


-------------------------------------------------------
** I build a app on Hololens.I hadn't added spatial mapping,but there is error in my app.When I open app, it will always be stuck in this ** 
![tim 20180806094958](

And I tested that everything was removed but a city model which was exported by CityEngine with a format of .FBX in the same Unity project,sure there were still same MRTK configure scene components，this error still existed. Finally, I just used a cube and removed the city model to test. In the same project ,same configure setting , this error didn't exist.

The city model is about 27 mb ,  the Unity interface is as bellow:
 


![tim 20180806095950](




## Unity Editor Version
2017.2.1f1

## Mixed Reality Toolkit Release Version
2017.2.1.4</Description>
  </Issue>
  <Issue>
    <IssueID>2549</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Open VR controllers do not raise some UnityEditor.XR.Node events</Title>
    <CreatedDate>03/08/2018</CreatedDate>
    <ClosedDate>20/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>OpenVR</Name>
        <IssueID>2549</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Some UnityEditor.XR.Node events do not get raised properly.

When turning a controller off, the tracking lost and node removed events do not get raised by the editor.

## Steps to reproduce
Add the following to the Unity Interaction Events region in `OpenVRDeviceManger.cs`

``

Start editor with open vr settings.
Turn controllers on, then off.

## Unity Editor Version
2018.1.9f1

## Mixed Reality Toolkit Release Version
vNEXT Alpha</Description>
  </Issue>
  <Issue>
    <IssueID>2548</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>SimonDarksideJ</FixedById>
        <IssueID>2548</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Open VR Controller Instances raise assertions when controller is on before playing in editor</Title>
    <CreatedDate>03/08/2018</CreatedDate>
    <ClosedDate>20/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2548</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>OpenVR</Name>
        <IssueID>2548</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Open VR controllers raise assertions about being registered with the Input Manger if the controllers are on before the editor starts.

## Expected Behavior
No assertions

## Actual Behavior
Assertions

## Steps to reproduce
Launch any scene with Open VR settings and both controllers enabled.

## Mixed Reality Toolkit Release Version
vNEXT Alpha</Description>
  </Issue>
  <Issue>
    <IssueID>2547</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Improve Boundary Manager with Markers</Title>
    <CreatedDate>03/08/2018</CreatedDate>
    <ClosedDate>29/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Boundaries</Name>
        <IssueID>2547</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Rename and move the Boundary Indicator Demo script into either Core so devs can use it in any scene.
Improve the Indicator Marker Generation to account for variable height differences by adding collision logic and a later mask for calculating their height on a custom terrain/or scene objects.

## Requires
- Boundary Manager to include new property for enabling and disabling indicators.
- Boundary manager to include new property for layer mask to use when calculating indicator height

## Acceptance criteria
- [ ] Indicators can be used in any scene without a prefab
- [ ] Indicators will be offset by the collision height calculated
- [ ] Indicators will be placed on terrain/scene surfaces</Description>
  </Issue>
  <Issue>
    <IssueID>2546</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2546</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Regenerate all meta files in MRTK so there are no matching ones from HTK</Title>
    <CreatedDate>03/08/2018</CreatedDate>
    <ClosedDate>08/08/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
To ease the porting process of developers from HTK to MRTK, we should make sure we regenerate the meta files of the MRTK so there aren't conflicts when both the MRTK and HTK are in the same project.

## Requires
All asset meta files to regenerated if they match a meta file from the HTK.

## Acceptance criteria
- [x] No asset conflicts from HTK and MRTK when importing them into the same project.
- [x] No shared meta files between HTK and MRTK.</Description>
  </Issue>
  <Issue>
    <IssueID>2544</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2544</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task Add visualization options for tracked area</Title>
    <CreatedDate>02/08/2018</CreatedDate>
    <ClosedDate>18/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Boundaries</Name>
        <IssueID>2544</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Alpha has (will have) visualization for the floor and for the rectangular play area. Some experiences may wish to visualize the raw tracked area, including to the height configured in the MRConfigurationProfile.

We should provide a simple solution for:
- tracked area outline
- tracked area "walls"

## Requirements
Create visualization script
Update BoundaryVisualizationProfile to add new asset (material, line style, etc) configuration

## Acceptance criteria
- [x] Can successfully show / hide tracked area border as an outline
- [x] Can successfully show / hide tracked area "walls" at the configured height</Description>
  </Issue>
  <Issue>
    <IssueID>2543</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext Task Organize the Assets &gt; Create &gt; Mixed Reality Toolkit menu item in a sane manner :)</Title>
    <CreatedDate>02/08/2018</CreatedDate>
    <ClosedDate>18/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>2543</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I personally believe we should organize our Asset menu in a manner that is either:
- alphabetical
- grouped by system (ex: input would have controller, pointer, actions, speech)

When I look at the current menu, I have to search for exactly what I want to use and there appears to be no inherent method to the order.

## Requires
Discussion and agreement on the philosophy
Diligence when (re)ordering the menu to avoid duplicate entries

## Acceptance criteria
- [ ] Asset menu updated
- [ ] Layout works consistently (ie no duplicate indices causing seemingly random reordering of items)

</Description>
  </Issue>
  <Issue>
    <IssueID>2541</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>GlobalListeners list get's mutated as we iterate the list.</Title>
    <CreatedDate>02/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2541</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2541</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Found a bug where the list of global listeners isn't always guaranteed to be executed if that list changes during the execution of that event.

## Expected Behavior
Global Listener Events should always be executed.

## Actual Behavior
If a GameObject registers or un registers during the ExecuteEvent loop, some objects later in the list will be skipped because the list index has changed.

## Mixed Reality Toolkit Release Version
MRTK vNEXT and Legacy HTK</Description>
  </Issue>
  <Issue>
    <IssueID>2540</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2540</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task: Structure for SDK packages</Title>
    <CreatedDate>02/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The decision was made to limit the contents of the Core package to assemblies and code that define interfaces and types (plus the Mixed Reality Manager) as managers and profiles need to live in the same layer.

SDK packages should be structured as to make it clear what can safely be unchecked when importing.

## Proposed package layout
- MixedRealityTookit-SDK
     - Features
        - Input
            - System (implementation files, handlers, inspectors, etc)
            - Components
               - Prefabs
               - Scripts

## Requires
Moving systems / managers from Core to their appropriate SDK feature folder
Formatting SDK feature folders per proposed layout (after discussion and agreement)
Prototype Core and SDK packages (one per SDK feature area)

## Acceptance criteria
- [ ] Project can be built and does not break when minimal SDK packages installed</Description>
  </Issue>
  <Issue>
    <IssueID>2539</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2539</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task Update Core namespaces</Title>
    <CreatedDate>02/08/2018</CreatedDate>
    <ClosedDate>29/08/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The SDK namespaces are all in the format: Microsoft.MixedReality.Toolkit.SDK.&lt;feature&gt;.
Core namespaces are Microsoft.MixedReality.Toolkit.Internal.&lt;feature&gt;.

To make our structure easier to understand, we should replace Internal with Core.

## Requires
Search/replace of Internal with Core in namespaces throughout Core and SDK files.
Discussion re: changing assembly names to not include "internal"

## Acceptance criteria
- [ ] Nothing breaks :)</Description>
  </Issue>
  <Issue>
    <IssueID>2537</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Compound Button Speech does not work.</Title>
    <CreatedDate>02/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2537</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2537</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>No Repro</Name>
        <IssueID>2537</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Speech</Name>
        <IssueID>2537</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>2537</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I can't seem to get the compound button speech working. Can anyone else? I'm using the holographic button prefab with all the compound buttons components. The `OnSpeechKeywordRecognized` is never called. Even when I'm gazing at the button.

Am I missing something.

## Expected Behavior
The speech commond/button text should call the 
## Actual Behavior

## Steps to reproduce
Any scene with holographic button prefab.
## Unity Editor Version
2017,4,4,1
## Mixed Reality Toolkit Release Version
2017,4,0</Description>
  </Issue>
  <Issue>
    <IssueID>2536</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add support for clicker</Title>
    <CreatedDate>02/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2536</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2536</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2536</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I find the clicker easier to use than having to hold my arm up due to the small FOV of the sensor. In the current state the Click/AirTap action works find. But we need to add support for dragging using the accelerometer data similar to how it is done in the system for dragging windows and scrolling windows. Currently only dragging only works in XY plane, it should also move in Z direction; unless the sensor is a gyroscope 

It would be nice to have access to the raw (XYZ) data of the sensor for other uses; maybe similar to how we get axis data from in unity for controllers.
## Expected Behavior
Use clicker's accelerometer data to drag and rotate objects.
## Actual Behavior
Not implemented.

## Unity Editor Version
--
## Mixed Reality Toolkit Release Version
2017.4.0</Description>
  </Issue>
  <Issue>
    <IssueID>2532</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext Task Example Scenes Tutorial Script / Voice Over</Title>
    <CreatedDate>01/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Example/Test Scene</Name>
        <IssueID>2532</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Example scenes are intended to educate users as well as demonstrate the MRTK feature set. Scripts and voice overs help guide users to the interesting content.

## Requires
Script to be drafted and reviewed
Voice over to be recorded (open question: text to speech or human)

## Acceptance criteria
- [ ] Script draft written and reviewed for Example 1
- [ ] Voice over created for Example 2
- [ ] Script draft written and reviewed for Example 2
- [ ] Voice over created for Example 2</Description>
  </Issue>
  <Issue>
    <IssueID>2531</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Incompatibilities with Holotoolkit Sharing Service and IL2CPP?</Title>
    <CreatedDate>01/08/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>IL2CPP</Name>
        <IssueID>2531</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2531</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>2531</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I deployed the SharingTest scene (part of the Holotoolkit examples), and I can't seem to get the Hololens to connect to the SharingService running on a computer on the same network. When I deploy using the .NET scripting backend it works fine, but IL2CPP doesn't. There are no error messages during the build, or debugging via Visual Studio. It does work in the editor, but not when deployed to the Hololens.

I have tried using older versions of the MRTK, old versions of Unity, newer versions of Unity, and all yielded the same results.

## Expected Behavior
Hololens connects to the SharingService.exe.

## Actual Behavior
Hololens doesn't connect to the SharingService.exe.

## Steps to reproduce
Setup a blank project.
Import the Holotoolkit and Holotoolkit-Examples.
Apply project settings, capabilities, etc.
Change scripting backend to IL2CPP (in Build Window of MRTK).
Open the scene Holotoolkit-Examples/Sharing/SharingService/Scenes/SharingTest.
Launch the SharingService.exe (MRTK &gt; Sharing &gt; Launch Sharing Service).
Change the Sharing script's IP address to your server's IP Address.
Build &amp; Deploy to Hololens.

## Unity Editor Version
Currently: 2017.4.4f1
Have tried with:
- 2017.4.7f1
- 2017.4.8f1
- 2017.3.1f1

## Mixed Reality Toolkit Release Version
Currently: 2017.4.0.0
Have tried with:
- 2017.2.1.4</Description>
  </Issue>
  <Issue>
    <IssueID>2520</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Update CompoundButton components to use TextMeshPro</Title>
    <CreatedDate>30/07/2018</CreatedDate>
    <ClosedDate>30/07/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Currently the CompoundButtonText script and prefabs use TextMesh which is inferior to TextMeshPro. TextMeshPro is an official Unity package with no scaling issues. 
## Expected Behavior
...
## Actual Behavior
The prefabs and scripts are using TextMesh.
## Steps to reproduce
_(Links to sample github project preferred)_
Example Project
## Unity Editor Version
2017.4.4.1
## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2517</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>2517</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Standard Shader transparency not working on Android</Title>
    <CreatedDate>30/07/2018</CreatedDate>
    <ClosedDate>14/10/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Android</Name>
        <IssueID>2517</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Bug</Name>
        <IssueID>2517</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Help Wanted</Name>
        <IssueID>2517</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK Approved</Name>
        <IssueID>2517</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shaders / Materials</Name>
        <IssueID>2517</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Using the Toolkit Dev Branch with Unity 2017.2.1f1 has an issue with the Standard Shader on the ButtonHolographic prefab on Android platform. It does not render the button icon, where the shader is configured as transparent. Furthermore, the usual blue transparent glass front is replaced with just dull blackness. The button does not look very much like the one when using Windows platform.
![42321528-98701438-8059-11e8-9440-88fd7b3c7347 1](


## Expected Behavior
Button shows the same as under Windows Platform

## Actual Behavior
On Android, the button looks different

## Steps to reproduce
Open the dev branch with the mentioned Unity version under Android platform and drag the ButtonHolographic prefab into the scene.

## Unity Editor Version
2017.2.1f1

## Mixed Reality Toolkit Release Version
current dev branch</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>2515</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MR Camera gets black screen when loading large asset bundle even when loading asynchnously</Title>
    <CreatedDate>30/07/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2515</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Mixed Reality Camera gets black screen when loading large asset bundle, even when loading asynchronously with the method below:
assetbundle.LoadAssetAsync&lt;GameObject&gt;(prefabName);

## Expected Behavior
The camera should not be effected when loading assets asynchronously.

## Actual Behavior
The MR camera turns black and user have to wait until it's loaded

## Steps to reproduce
Create a new MR(VR) project. Prepare a large asset bundle ( e.g. bundle file &gt;1MB ). Load asset bundle with method: assetbundle.LoadAssetAsync&lt;GameObject&gt;(prefabName)

## Unity Editor Version
2018.2.0f2 (Personal)

## Mixed Reality Toolkit Release Version
HoloToolkit-Unity-2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2509</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext Task: Define sharing abstraction</Title>
    <CreatedDate>28/07/2018</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>MRTK Approved</Name>
        <IssueID>2509</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>2509</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Sharing is a core part of compelling mixed reality experiences. We need to provide a consistent and extensible system to enable sharing over a variety of networking implementations.

## Requires
Interface defining our sharing system
- Discovery
- Connection management
- Anchor transfer
- Data transfer
Conceptual and API documentation
SDK component(s)

## Acceptance Criteria
- [ ] Sharing system interface defined
- [ ] One or more implementations created (start with UNet?)
- [ ] Conceptual documentation staged on docs.microsoft.com
- [ ] Sharing demo scene

</Description>
  </Issue>
  <Issue>
    <IssueID>2508</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext Task Define Spatial Mapping abstraction</Title>
    <CreatedDate>28/07/2018</CreatedDate>
    <ClosedDate>21/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>2508</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Multiple platforms (ex: HoloLens, ARKit, ARCore, Magic Leap) provide environmental data in various forms. The core layer needs an abstraction that make it easy to consume in the desired format (mesh, points, planes) in the SDK.

## Requires
Interface defining the spatial mapping abstraction
Default implementation of the system

## Acceptance Criteria
- [x] Interfaces defined
- [x] Default implementation created and working on HoloLens

## Notes
ARKit and ARCore are coming online after the initial release. We will need to take are with the design / testing to avoid need for breaking changes.
</Description>
  </Issue>
  <Issue>
    <IssueID>2506</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Controller visualizer incorrectly uses null coalescence on UnityEngine.Objects</Title>
    <CreatedDate>28/07/2018</CreatedDate>
    <ClosedDate>29/07/2018</ClosedDate>
    <IssueLabels />
    <Description># Overview
UnityEngine objects cannot use `object?.` syntax because Unity overrides the object lifetimes of UnityEngine.Object types.

Controller visualizer incorrectly checks the controller profile (Which is a scriptable object) incorrectly.

# Expected 
``</Description>
  </Issue>
  <Issue>
    <IssueID>2504</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2504</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task: Replace UAudioManager with MRTK Audio Manager v2</Title>
    <CreatedDate>28/07/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>2504</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>2504</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Sound / Audio</Name>
        <IssueID>2504</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The UAudioManager system has been updated to be more developer and designer friendly. Replace with the new MRTK Audio Manager from @joekellyms.

## Requires
New Audio Manager
How-to documentation
API documentation
Demo scene(s) illustrating key functionality

## Acceptance Criteria
- [ ] Audio Manager fully functional
- [ ] Audio Manager UI is easy to read when using both the light and dark UI setting
- [ ] Conceptual documentation staged to docs.microsoft.com
- [ ] Demo scene(s) created</Description>
  </Issue>
  <Issue>
    <IssueID>2503</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2503</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task: Port Audio Influencers from HTK</Title>
    <CreatedDate>28/07/2018</CreatedDate>
    <ClosedDate>09/11/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Example/Test Scene</Name>
        <IssueID>2503</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Sound / Audio</Name>
        <IssueID>2503</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
As part of bringing vNext to feature parity with the HoloToolkit, port the Audio Influencers scripts and demo scenes.

## Requires
Creating an SDK Feature folder for Audio.
Updating the existing HoloToolkit scripts (namespaces, remove obsolete methods, etc)
Example audio files (not as standard assets) that illustrate the specific influencer effect
Updated demo scenes (use standard asset materials, improve description panel, etc)

## Acceptance Criteria
- [x] Scripts have appropriate names (ex: AudioInfluencerController)
- [x] Demo scenes use standard assets where appropriate</Description>
  </Issue>
  <Issue>
    <IssueID>2500</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2500</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext: Gizmo prefabs "no meshrenderer" errors</Title>
    <CreatedDate>27/07/2018</CreatedDate>
    <ClosedDate>09/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2500</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
UnityEngine.Renderer.get_material () (at C:/buildslave/unity/build/Runtime/Export/GraphicsRenderers.bindings.cs:123)
Microsoft.MixedReality.Toolkit.Tests.ControllerVisualizer.UpdateControllerVisuals () (at Assets/MixedRealityToolkit-Examples/Test/ControllerVisualizer.cs:65)
Microsoft.MixedReality.Toolkit.Tests.ControllerVisualizer.Update () (at Assets/MixedRealityToolkit-Examples/Test/ControllerVisualizer.cs:134)
`</Code>
    <Description>The models that were imported for the Gizmo prefabs have a mesh renderer down in the hierarchy. Unity is throwing a MissingComponentException when the visualizer tries to fetch it.

MissingComponentException: There is no 'MeshRenderer' attached to the "GizmoLeft(Clone)" game object, but a script is trying to access it.
You probably need to add a MeshRenderer to the game object "GizmoLeft(Clone)". Or your script needs to check if the component is attached before using it.
``
We either need to modify the model (and learn how) or have the script ask for renderers on children as well.</Description>
  </Issue>
  <Issue>
    <IssueID>2498</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity line does not respect color and width offsets.</Title>
    <CreatedDate>27/07/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2498</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>2498</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Utilities</Name>
        <IssueID>2498</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Unity line does not respect the color and width offsets.

The unity line class has an animation curve for the width over the length of the line. When adjusting the offset, the inspector Gizmo updates correctly, but then does not update the animation curve appropriately.

Color is handled by a gradient that is also not updated when the offset is changed, but the Gizmo updates correctly.

## Steps to reproduce

1. Open line example scene.
2. Select any line with a unity line component. (I used spline)
3. Adjust the color and/or width offset on the line renderer component.
4. Note the current approximate value of the line via Gizmo.
5. Press play in editor and compare to generated line renderer.

## Mixed Reality Toolkit Release Version
Latest master branch.</Description>
  </Issue>
  <Issue>
    <IssueID>2494</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Refactor Input System's modal input stack.</Title>
    <CreatedDate>26/07/2018</CreatedDate>
    <ClosedDate>07/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>2494</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2494</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Issue
Various methods on InputManager such as PushModalInputHandler, PushFallbackInputHandler, and others require the callers to pop things in the exact reverse order from how they were pushed.  In complicated apps with various modal dialogs, this seems like an unreasonable requirement.  A modal dialog may decide to close itself for any number of reasons even if it is not on top.

## Proposal
Instead of Push/Pop methods, there should only be Add methods which return a handle to the caller.  The caller can then remove their instance by calling the appropriate function on their handle.  The handle could be an IDisposable, so the caller can call Dispose when they are done.  This also allows for a nice 'using' syntax when appropriate.

I have an implementation of this working on an old fork.  If this sounds like a good idea to others, I could make the changes here and send out a PR.

Note that this is an API-breaking change, but IMO, it's a better API because it makes it harder for the caller to make a mistake.</Description>
  </Issue>
  <Issue>
    <IssueID>2493</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Compound Buttons get double-clicked with Hololens</Title>
    <CreatedDate>26/07/2018</CreatedDate>
    <ClosedDate>26/07/2018</ClosedDate>
    <IssueLabels />
    <Code>
GetComponent&lt;Button&gt;().OnButtonClicked += _ =&gt; Debug.Log("click");

When you press the button with  in-Unity Hololens emulation, Hololens remote or with a full Hololens build, you have a double click of the button.

The clicks are not simultaneous and you can prevent the second click if you quickly move your head out of the button. 

This also happens in another use case where clicking a button destroys it and another button is behind it or replacing it - both get clicked then.

## Expected Behavior

The `OnButtonClick` is called once.

## Actual Behavior

The `OnButtonClick` is called twice with two different stack traces:


Clicked obj=HolographicButton (UnityEngine.GameObject) event=
UnityEngine.Debug:LogFormat(Object, String, Object[])
ButtonClickHandler:ButtonClickHandler_OnButtonClicked(GameObject) (at Assets/ButtonClickHandler.cs:21)
HoloToolkit.Unity.Buttons.Button:DoButtonPressed(Boolean) (at Assets/HoloToolkit/UX/Scripts/Buttons/Button.cs:310)
🡆 HoloToolkit.Unity.Buttons.Button:OnInputDown(InputEventData) (at Assets/HoloToolkit/UX/Scripts/Buttons/Button.cs:139)
HoloToolkit.Unity.InputModule.InputManager:&lt;OnSourceDownEventHandler&gt;m__6(IInputHandler, BaseEventData) (at Assets/HoloToolkit/Input/Scripts/Utilities/Managers/InputManager.cs:454)
UnityEngine.EventSystems.ExecuteEvents:ExecuteHierarchy(GameObject, BaseEventData, EventFunction`1)
HoloToolkit.Unity.InputModule.InputManager:HandleEvent(BaseEventData, EventFunction`1) (at Assets/HoloToolkit/Input/Scripts/Utilities/Managers/InputManager.cs:296)
🡆 HoloToolkit.Unity.InputModule.InputManager:RaiseSourceDown(IInputSource, UInt32, InteractionSourcePressInfo, Object[]) (at Assets/HoloToolkit/Input/Scripts/Utilities/Managers/InputManager.cs:463)
HoloToolkit.Unity.InputModule.CustomInputSource:SendControllerStateEvents(Single) (at Assets/HoloToolkit/Input/Scripts/InputSources/CustomInputSource.cs:454)
HoloToolkit.Unity.InputModule.CustomInputSource:UpdateControllerState(DebugInteractionSourceState) (at Assets/HoloToolkit/Input/Scripts/InputSources/CustomInputSource.cs:441)
HoloToolkit.Unity.InputModule.CustomInputSource:UpdateControllerData() (at Assets/HoloToolkit/Input/Scripts/InputSources/CustomInputSource.cs:365)
HoloToolkit.Unity.InputModule.CustomInputSource:Update() (at Assets/HoloToolkit/Input/Scripts/InputSources/CustomInputSource.cs:302)



Clicked obj=HolographicButton (UnityEngine.GameObject) event=
UnityEngine.Debug:LogFormat(Object, String, Object[])
ButtonClickHandler:ButtonClickHandler_OnButtonClicked(GameObject) (at Assets/ButtonClickHandler.cs:21)
HoloToolkit.Unity.Buttons.Button:DoButtonPressed(Boolean) (at Assets/HoloToolkit/UX/Scripts/Buttons/Button.cs:310)
🡆 HoloToolkit.Unity.Buttons.Button:OnInputClicked(InputClickedEventData) (at Assets/HoloToolkit/UX/Scripts/Buttons/Button.cs:173)
HoloToolkit.Unity.InputModule.InputManager:&lt;OnInputClickedEventHandler&gt;m__4(IInputClickHandler, BaseEventData) (at Assets/HoloToolkit/Input/Scripts/Utilities/Managers/InputManager.cs:402)
UnityEngine.EventSystems.ExecuteEvents:ExecuteHierarchy(GameObject, BaseEventData, EventFunction`1)
HoloToolkit.Unity.InputModule.InputManager:HandleEvent(BaseEventData, EventFunction`1) (at Assets/HoloToolkit/Input/Scripts/Utilities/Managers/InputManager.cs:296)
🡆 HoloToolkit.Unity.InputModule.InputManager:RaiseInputClicked(IInputSource, UInt32, InteractionSourcePressInfo, Int32, Object[]) (at Assets/HoloToolkit/Input/Scripts/Utilities/Managers/InputManager.cs:411)
HoloToolkit.Unity.InputModule.CustomInputSource:SendControllerStateEvents(Single) (at Assets/HoloToolkit/Input/Scripts/InputSources/CustomInputSource.cs:479)
HoloToolkit.Unity.InputModule.CustomInputSource:UpdateControllerState(DebugInteractionSourceState) (at Assets/HoloToolkit/Input/Scripts/InputSources/CustomInputSource.cs:441)
HoloToolkit.Unity.InputModule.CustomInputSource:UpdateControllerData() (at Assets/HoloToolkit/Input/Scripts/InputSources/CustomInputSource.cs:365)
HoloToolkit.Unity.InputModule.CustomInputSource:Update() (at Assets/HoloToolkit/Input/Scripts/InputSources/CustomInputSource.cs:302)
`</Code>
    <Description>## Overview

Having an example scene that has one button (`HolographicButton` prefab) and an handler attached with:
``


## Steps to reproduce

There is a test scene at


## Unity Editor Version

2018.2.0f2

## Mixed Reality Toolkit Release Version

Checked with:
- Current master (84493c97)
- Current Dev_Working_Branch (10d94660)
- Current release</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>2493</IssueID>
        <PullRequestID>2367</PullRequestID>
        <Title>Button.cs event firing fixes</Title>
        <Description>Overview
---
Part 2 of #2359. This is a rework of the way the Button.cs events are fired. Previously, duplicate events were fired in both `OnInputDown` and `OnInputClicked` (and `OnHoldStarted`). This cleans those up and makes the state logic a little clearer.

Changes
---
- Fixes: #1879
</Description>
        <CreatedDate>29/06/2018</CreatedDate>
        <ClosedDate>30/06/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>UX Controls</Name>
            <IssueID>2493</IssueID>
            <PullRequestID>2367</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>2367</PullRequestID>
            <IssueID>2493</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>2489</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>SimonDarksideJ</FixedById>
        <IssueID>2489</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Bug: Controllers initialize with Controller profiles disabled</Title>
    <CreatedDate>25/07/2018</CreatedDate>
    <ClosedDate>20/08/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
If the Controllers profile is disabled, MRTK still tries to register and render controllers

## Expected Behavior
If controllers are disabled, project should sill run but no controllers or controller errors

## Actual Behavior
Asset fails logged about Controller mappings missing

## Unity Editor Version
2018.1.9

## Mixed Reality Toolkit Release Version
vNext</Description>
  </Issue>
  <Issue>
    <IssueID>2486</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>App wont run after a 2018.2 IL2CPP build</Title>
    <CreatedDate>25/07/2018</CreatedDate>
    <ClosedDate>31/07/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>IL2CPP</Name>
        <IssueID>2486</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2486</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Hello,
For the last two months, I have been building an app using holotoolkit with great success at developing and deploying to the device.
I have been using .net scripting backend, and after upgrading my unity version to 2018.2 I decided to start using IL2CPP as my back, since its recommended.
I have managed to deploy and use a smaller app that I used for testing using 2018.2 and IL2CPP and it worked perfectly fine.
Today I've built my main app using IL2CPP and the build succeeded.
I've installed the app on my hololens, but after launching it, a few moments after the unity splash screen, the device just exits the application back to the main desktop.
I've deployed the app using Visual Studio 2017 and saw that when the programs start an exception detailed as "Exception thrown: write access violation.
__this was nullptr." is thrown multiple times and various cpp scripts in the code.
Any ideas?
## Expected Behavior
The app will run normally.
## Actual Behavior
The build is marked as a success but receiving multiple "Exception thrown: write access violation.
__this was nullptr." errors.
## Unity Editor Version
2018.2
## Mixed Reality Toolkit Release Version
2017.4.0.0

Thank you in advance, and sorry for my English as it is not my native language.</Description>
  </Issue>
  <Issue>
    <IssueID>2485</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spatial Understanding Shape HalfDims always returns (0,0,0)</Title>
    <CreatedDate>25/07/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>2485</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2485</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>2485</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When using `SpatialUnderstandingDllShapes.QueryShape_FindPositionsOnShape(...)` and querying `halfDims` they always return (0,0,0).

## Expected Behavior
halfDims returns correct dimensions

## Actual Behavior
halfDims returns (0,0,0)

## Steps to reproduce
Using my SpatialUnderstanding tutorial [here]( and trying to access `shapeResult[0].halfDims` inside the `InstantiateObjectOnTable()` func always returns (0,0,0)

## Unity Editor Version
2017.4.3f
## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2478</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2478</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Task: Performance review - ALPHA</Title>
    <CreatedDate>22/07/2018</CreatedDate>
    <ClosedDate>27/07/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Prior to the Alpha cutoff, we need a final Performance / review check on each Alpha target platform

## Requires
Performance Review on UWP platform
Performance Review on OPENVR platform

## Acceptance Criteria
- [x] No perceptible lag through input system on UWP
- [x] No perceptible lag through input system on OPENVR
- [x] No unnecessary logging
- [x] Any remaining performance leaks documented and tasks created for Beta for review</Description>
  </Issue>
  <Issue>
    <IssueID>2477</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2477</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Source Pose Events not working in standalone build</Title>
    <CreatedDate>21/07/2018</CreatedDate>
    <ClosedDate>28/07/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Cross Platform</Name>
        <IssueID>2477</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
This is the saddest issue I've had to raise and at a loss why it's an issue (possible Unity bug?)

Basically, input events for buttons, triggers, detected , lost, etc (with data) are being sent by the Input System but not received by scripts consuming them in a standalone build.

The exact same script works fine for UWP.

I've confirmed it's not the device layer (using my custom visualizer), as data is being gathered from the device, data is packaged correctly and sent to the input system.  However, the ExecuteEvents call is never received (for Pose data only) by listening scripts.

## Expected Behavior
Pose events as well as normal events should send events and be received by listening scripts.

## Actual Behavior
Basic events like Input Down, Input Up, Detected, Lost, Pressed, etc. Are all functioning normally in both UWP and standalone.

Pose events work fine in UWP, but nothing is received in standalone.


## Steps to reproduce

1. Create a new scene
2. Click on the "DefaultMixedRealityConfigurationProfile" to auto create the MR Manager in the scene
3. Create an Empty GO called "Body"
4. Move the Main camera as a child of Body and rename to "Head" (reset position)
5. Attach the "Sample script" (below) to the "Body" GO
6. Run the project under UWP with a controller connected.  Both Log (pose) and Warning (button) messages should quickly fill up the console
7. Switch to Standalone (start SteamVR) and run again.  Only Warning (button) data is received once running. No pose data found. (except for the phantom call noted in #2453)

## Unity Editor Version
2018.1.7 / 2018.1.8

## Mixed Reality Toolkit Release Version
vNext

## Sample Script
``
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>2477</IssueID>
        <PullRequestID>2475</PullRequestID>
        <Title>Updated the device layer with a few improvements</Title>
        <Description>Overview
---
Updated the device layer with a few improvements

Changes
---
* Added Oculus touch support (tested)
* Added basic controller detection Support (still needs work)
* Added faux touch support to the MR Trigger
* Renamed the Vive controllers to be more aligned with that SDK
* Added better error reporting to the Interactionmapping, when a mapping type is not supported by the controller
</Description>
        <CreatedDate>21/07/2018</CreatedDate>
        <ClosedDate>24/07/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Cross Platform</Name>
            <IssueID>2477</IssueID>
            <PullRequestID>2475</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Input System</Name>
            <IssueID>2477</IssueID>
            <PullRequestID>2475</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>SimonDarksideJ</FixedById>
            <PullRequestID>2475</PullRequestID>
            <IssueID>2477</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>2474</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2474</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Input Mapping layout needs to be updated to be able to see Input Type config</Title>
    <CreatedDate>21/07/2018</CreatedDate>
    <ClosedDate>20/08/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Currently the layout of the Input mapping grid for interactions has equal weight for all three columns.  However more space is needed for the input types and possibly the Action.

This the spacing needs to be altered to reduce the width (if possible) to the Axis type and give more space to the other two columns.  If possible and reduce the spacing between the columns to give more visibility.

The screenshot below highlights the readability issue with some input types

![image](

</Description>
  </Issue>
  <Issue>
    <IssueID>2473</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Compilation errors when chosing Mac OSX</Title>
    <CreatedDate>21/07/2018</CreatedDate>
    <ClosedDate>21/07/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
See screenshot
## Expected Behavior
Not compilation errors
## Actual Behavior
Compilation errors
## Steps to reproduce
Just include MRTK and try to compile for Mac OSX
## Unity Editor Version
2017.4.6f1
## Mixed Reality Toolkit Release Version
2017.4.0.0
![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>2470</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spectator View (Preview) - Can't build for iOS</Title>
    <CreatedDate>20/07/2018</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Cross Platform</Name>
        <IssueID>2470</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When using the example for Spectator View (preview) I switch to iOS build with platform Switcher.  3 errors are then displayed preventing compiling. 

Assets/HoloToolkit/Input/Scripts/InputSources/DictationInputManager.cs(210,20): error CS0103: The name `dictationRecognizer' does not exist in the current context

Assets/HoloToolkit/Input/Scripts/InputSources/DictationInputManager.cs(215,13): error CS0103: The name `PhraseRecognitionSystem' does not exist in the current context

Assets/HoloToolkit/Input/Scripts/InputSources/DictationInputManager.cs(216,13): error CS0103: The name `isTransitioning' does not exist in the current context

## Expected Behavior
When using platform switcher to enable iOS build there should be no errors generated.

## Actual Behavior
Errors are created as the native Microsoft STT and TTS libraries are not present in the build config. 

## Steps to reproduce
Download MRTK Unity master, add HoloToolkit and HoloToolkit-Preview to the Unity project Assets.  Add the Spectator view example (HoloToolkit-Examples\SpectatorView), add generated DLLs to HoloToolkit-Preview\SpectatorView\plugins folder.  Switch to iOS with Platform switcher in the example scene. 

## Unity Editor Version
2017.3.1p4

## Mixed Reality Toolkit Release Version
2017.4.0.0
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>2468</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Gaze through objects (i.e. Multi-Level focus)</Title>
    <CreatedDate>19/07/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2468</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Hello, 

I'm sorry if this is simple or obvious but couldn't find information about this in the documentation nor in the closed issues. Is there any way to activate the focused event of an object that is behind another while also activating the same event on the one in front?

I have a quad with a button somewhere in front of it and I when I gaze at the button, the quad's onFocusExit is activated while the button's onFocusEnter is activated. Disabling the button's collider or ignoring its layer on the focus manager won't help because I need to listen for its onFocus events too.

The behaviour I seek is that the quad's OnfocusExit doesn't get activated when gazing at an object that is in front of it, while also activating said object's onFocusEnter.

Thanks!
## Unity Editor Version
2018.1.0f2
## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2465</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2465</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2465</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Migrate master branch fixes to mrtk_development</Title>
    <CreatedDate>19/07/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>List of known fixes that need to be migrated from master -&gt; mrtk_development.

This is a work in progress, *DO NOT* close this issue until vNext release 1 is complete.

- [x] #2245
- [ ] #2306
- [ ] #2457 
- [ ] #2459 
- [ ] #2487 </Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>2465</IssueID>
        <PullRequestID>2245</PullRequestID>
        <Title>Solver example updates</Title>
        <Description>Overview
---
I created a solver that keeps a game object between two tracked objects.

Proposal here:


Changes
---

My implementation creates a second solverhandler (public class AdditionalSolverHandler : SolverHandler) and adds it to the gameobject at runtime. This second solverhandler updates its TransformTarget, which is used by SolverInBetween as one of the two end points. It could be used by other solver types in the future; any number of AdditionalSolverHandlers is supported.

In the process, I fixed a few bugs, particularly with the custom inspectors. Solvers can now be switched to other tracked objects while playing in editor or at runtime via script. It also adds an offset and rotation to solver handlers so you can track a virtual point near by/rotated around an actual tracked object.

Cleaned up several issues involving the way ControllerFinders attach to controllers when they first start.

Also improves the Solver example map dramatically.</Description>
        <CreatedDate>04/06/2018</CreatedDate>
        <ClosedDate>21/06/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Solvers</Name>
            <IssueID>2465</IssueID>
            <PullRequestID>2245</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>2465</IssueID>
        <PullRequestID>2306</PullRequestID>
        <Title>Properly expose MonoBehaviour methods in Cursor.cs</Title>
        <Description>InteractiveMeshCursor was unknowingly hiding Cursor's Awake. This wasn't an issue previously, since the only thing in Awake actually didn't really do anything due to a different bug (also fixed here). 

Update Cursor to make its Awake (and others) overridable.

This commit also exposes `isVisible` in the Editor, as the comment in
Awake() indicates that it should be settable before startup.

Also, removes an extra SetVisibility call that already happens in the
public setter.

Fixes #2294.
</Description>
        <CreatedDate>15/06/2018</CreatedDate>
        <ClosedDate>16/06/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Input System</Name>
            <IssueID>2465</IssueID>
            <PullRequestID>2306</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>2306</PullRequestID>
            <IssueID>2465</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>2465</IssueID>
        <PullRequestID>2457</PullRequestID>
        <Title>Billboard camera tolerance</Title>
        <Description>Overview
---
Two small changes to help Billboard cope with the lack of, or late setup of, a cached camera instance. 

Changes
---
1. null check in OnEnable
2. per-frame attempt to obtain the main camera transfer within the existing null-transform test</Description>
        <CreatedDate>18/07/2018</CreatedDate>
        <ClosedDate>20/07/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Utilities</Name>
            <IssueID>2465</IssueID>
            <PullRequestID>2457</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>2465</IssueID>
        <PullRequestID>2459</PullRequestID>
        <Title>Fix bug with enableOneHandMovement in TwoHandManipulatable</Title>
        <Description>Overview
---
Previously, a lost hand would revert to one-handed move even if one-handed move wasn't enabled. Now, it falls back to `None` in that case.

Changes
---
- Fixes #2021</Description>
        <CreatedDate>18/07/2018</CreatedDate>
        <ClosedDate>19/07/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>UX Controls</Name>
            <IssueID>2465</IssueID>
            <PullRequestID>2459</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>2459</PullRequestID>
            <IssueID>2465</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>2465</IssueID>
        <PullRequestID>2487</PullRequestID>
        <Title>Resolved rotation issue in TwoHandManipulatable script</Title>
        <Description>Overview
---
Issue:
If we change the rotation axis constraint at run time, it does not make any difference in the behaviour.

Fix: Reinitialize the rotate logic with the new rotation axis constraint every time the rotation constraint property is set.

Sample:
I have duplicated the TwoHandManipulationTest scene as TwoHandManipulationTest_Fix scene and have added the following game object into the scene content:
- Model_Bucky_Rotation_Constraints_Test: This has a test script(TestRotationConstraints) attached to it and is intended to depict the solution to the issue.

Changes
---
Changed TwoHandManipultable.cs
Added TestRotationConstraints.cs
Added TwoHandManipulationTest_Fix.unity

</Description>
        <CreatedDate>25/07/2018</CreatedDate>
        <ClosedDate>30/08/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Input System</Name>
            <IssueID>2465</IssueID>
            <PullRequestID>2487</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Legacy (HoloToolkit)</Name>
            <IssueID>2465</IssueID>
            <PullRequestID>2487</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>2464</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Custom Buttons for AppBar on Bounding Box </Title>
    <CreatedDate>19/07/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Question 

I'm trying to add a CustomButton to the AppBar under the BoundingBox and am running into some confusion. 

Mainly how am I supposed to add my own functionality to the CustomButton's OnTappedEvent? 
(For reference I need a play button for video/audio objects that can be placed in my scene.)

Since the AppBar gets instantiated at run time through the BoundingBoxRig I am unable to set the function in inspector. (The my object is also created at run time.)
Past that the instances of AppBars and BoundingBoxes are private members of the BoundingBoxRig so I can't access them in my code. 

Was hoping to be able to use this without editing the Toolkit's code base so my stuff just doesn't get overwritten the second there is a update. </Description>
  </Issue>
  <Issue>
    <IssueID>2463</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>2463</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>2463</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Update Standard shader to be LRP compatible</Title>
    <CreatedDate>19/07/2018</CreatedDate>
    <ClosedDate>06/06/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>2463</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>MRTK Approved</Name>
        <IssueID>2463</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Shaders / Materials</Name>
        <IssueID>2463</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
More of an experiment as I haven't even tried the standard shader in the Lightweight Render Pipeline.  But it would be good to ensure the Standard shader is either supported in the LRP, or make a LRP Standard shader

## Expected Behavior
Standard Shader works in LRP

</Description>
  </Issue>
  <Issue>
    <IssueID>2453</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2453</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>On Startup - Receiving an "empty" OnSourcePoseDetected event</Title>
    <CreatedDate>18/07/2018</CreatedDate>
    <ClosedDate>28/07/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2453</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
With no controllers attached, when the vNext project starts, with a script using the IMixedRealitySourcePoseHandler referenced.  An empty OnSourceDetected event is raised.

Similarity, on close/stop and empty OnSourceLost event is also fired.

## Expected Behavior
No "Detected" events until a controller is actually attached

## Actual Behavior
Detected and Lost events fired with no controller
(demonstrated with script which log an event with no controller or input system)

## Steps to reproduce
1: create a new scene
2: Touch MRManager profile to create manager
3: create a new GO and attach below script
4: Run scene

## Unity Editor Version
2018.2.0f2

## Mixed Reality Toolkit Release Version
vNext


## Example Script
``</Description>
  </Issue>
  <Issue>
    <IssueID>2452</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2452</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Console Error Spam - Set_type is not allowed on ScriptableObject constructor</Title>
    <CreatedDate>18/07/2018</CreatedDate>
    <ClosedDate>19/10/2018</ClosedDate>
    <IssueLabels />
    <Code>UnityException: set_type is not allowed to be called from a ScriptableObject constructor (or instance field initializer), call it in OnEnable instead. Called from ScriptableObject 'ObjectSelector'.
See "Script Serialization" page in the Unity Manual for further details.
UnityEngine.Event.KeyboardEvent (System.String key) (at C:/buildslave/unity/build/Modules/IMGUI/Event.cs:153)
UnityEditor.ObjectSelector..cctor () (at C:/buildslave/unity/build/Editor/Mono/ObjectSelector.cs:78)
Rethrow as TypeInitializationException: The type initializer for 'UnityEditor.ObjectSelector' threw an exception.
UnityEditor.EditorGUIUtility.GetObjectPickerControlID () (at C:/buildslave/unity/build/Editor/Mono/EditorGUIUtility.cs:1426)
Microsoft.MixedReality.Toolkit.Inspectors.MixedRealityManagerInspector.OnInspectorGUI () (at Assets/MixedRealityToolkit/_Core/Inspectors/MixedRealityManagerInspector.cs:66)
UnityEditor.InspectorWindow.DrawEditor (UnityEditor.Editor[] editors, System.Int32 editorIndex, System.Boolean rebuildOptimizedGUIBlock, System.Boolean&amp; showImportedObjectBarNext, UnityEngine.Rect&amp; importedObjectBarRect) (at C:/buildslave/unity/build/Editor/Mono/Inspector/InspectorWindow.cs:1374)
UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)
`</Code>
    <Description>## Overview
In the latest branch of mrtk_dev, the console is getting spammed when viewing profiles or clicking round the editor.

Could possibly be a Unity bug but needs investigating.

## Expected Behavior
No SPAM please, I'm British.

## Actual Behavior
The following error is constantly repeated in the console.

``

## Steps to reproduce
`- Create new Scene
- Select the MixedRealityDefault Profile
- Select yes to add manager to the scene
- Click on Mixed Reality manager

## Unity Editor Version
2018.2.0f2

## Mixed Reality Toolkit Release Version
vNext-Dev
</Description>
  </Issue>
  <Issue>
    <IssueID>2451</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Simple Tagalong script works fine in Unity but doesn't work when the app is deployed to Hololens</Title>
    <CreatedDate>18/07/2018</CreatedDate>
    <ClosedDate>18/07/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I've attached the Simple Tagalong script to a canvas, and while using the Holographic Emulator on the Hololens with Unity everything works as expected: the canvas tags along as I move my head around. No issues.
## Expected Behavior
That the canvas would also tagalong when I move my head after the app has been deployed to the Hololens.
## Actual Behavior
The canvas remains stationary when the app is launched from the Hololens, rather than streamed from Unity.
## Steps to reproduce
Create a canvas, apply a Simple Tagalong script to it (that comes with a Box Collider and an Interpolator). Deploy the app and run it.
## Unity Editor Version
2017.4.1f1
## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2450</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>"No pointer source end point" assertion in RaycastUnityUI</Title>
    <CreatedDate>18/07/2018</CreatedDate>
    <ClosedDate>28/09/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Just a question regarding this assertion...

I have an odd situation where having a MeshCollider in certain positions causes this FocusManager assertion to fire. I can see that it warns against `pointer.End.Point` being zero, but it will also fire when the Collider's position is _almost_ zero - say, a fraction off along the y-axis, and perhaps more strangely, it does **not** fire when the Collider's position **is** exactly zero!

I guess my question is two-fold: why would the collider hit point be exactly zero when the Collider's transform is not (and vice-versa), and more importantly, why does it matter? `RaycastUnityUI`'s continues to execute without ill effects even if `pointer.End.Point == Vector3.zero`.

## Expected Behavior
Colliders can be placed anywhere in the scene without issue.

## Actual Behavior
Assertion fires in certain circumstances:
`(pointer.End.Point != Vector3.zero, "No pointer source end point found to raycast against!")`

## Unity Editor Version
2017.4.1f1

## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>2448</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How many world anchor can we safely store in world anchor store database?</Title>
    <CreatedDate>16/07/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2448</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I will be placing world anchor for different types of entities. Is it safe to use if world anchors count in api cross say 500. Does this impact store ready time? If so, any pointers.
## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>2447</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unable to attach Tool Tip Spawner at runtime </Title>
    <CreatedDate>15/07/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2447</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>2447</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I'm creating a bunch of GameObjects at runtime and want to add tooltips through the Tool Tip Spawner to them. Unfortunately all the properties in the class are private and therefore are unable to be set in another class.

## Expected Behavior
Adding a ToolTipSpawner object to a GameObject at runtime would allow me to set all the properties, to create a working ToolTipSpawner on the GameObject.

## Actual Behavior
Adding a ToolTipSpawner object to a GameObject at runtime works, but the required properties are set as private in the original class.

## Steps to reproduce
1. Create a GameObject.
2. Add a ToolTipSpawner to the game object .
3. Try to set any of the properties.

## Unity Editor Version
2018.1.2f1

## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2440</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext Task: Track Head Pose</Title>
    <CreatedDate>13/07/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2440</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
After reviewing different VR / MR / XR concepts, we need to support interactions that use / capture a head pose.   This can be used in various ways:
* To inform Gaze/Focus as an actual interaction, not inference from the headset
* To capture the headsets position in the real world
* To be able to align pointers with interaction with hands/controllers to provide an active focus

## Requires
Headset definition in the devices space
Provide headset value / pose for each platform
Enable visualisers to track pose (likely already partially implemented with Gaze/Focus)
Enable combined pose, Head to hand confirmation of active pose

## Acceptance Criteria
- [x] I can track pose information from the headset
- [x] I can visualize the headset pose
- [ ] I can interact with a hand or controller to provide an active pose
- [ ] Visualize an active pose (combined head / hand)</Description>
  </Issue>
  <Issue>
    <IssueID>2438</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>chrisfromwork</FixedById>
        <IssueID>2438</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>June18Dev 2017.4.1.0 Spectator View Stuck</Title>
    <CreatedDate>12/07/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2438</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>SpectatorView</Name>
        <IssueID>2438</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Testing the updates to Spectator view led to a dead end &amp; came up with no errors in console nor in any relevant debug logs during the build out &amp; run.
The devices see each other but the scene never activates, iOS doesn't get past the QR code screen, HoloLens remains blank showing only the cursor.

## Expected Behavior
Upon HoloLens seeing QR code on iOS device, scene activates on both devices and shows color changing star.

## Actual Behavior
The app starts on HoloLens and shows an empty scene with nothing but the cursor(running in editor shows everything under WorldRoot is deactivated), App starts on iOS device, recognizes surfaces &amp; generates QR code, HoloLens discovers iOS device &amp; turns on its camera, QR code 'flickers' on iOS when HoloLens sees the QR code for the first time but remains on iOS display, HoloLens view remains empty.

## Steps to reproduce
Cloned 'June18Dev' branch
Copied Spectator view plugin DLL's into "\Assets\HoloToolkit-Preview\SpectatorView\Plugins\WSA\x86"
Opened SpectatorViewExample
Selected 'SpectatorView' &amp; selected 'HoloLens' under 'PlatformSwitcher'
Build out to HoloLens
Moved GLTF from "\Assets\HoloToolkit\Utilities\Scripts" to External
Selected iPhone under 'PlatformSwitcher'
Build out to iOS
Copied iOS build to mac and deployed to iPhone X
Moved GLTF back to the original location
Deployed build to HoloLens
**Same session of unity the whole time through, never quit out.

## Versions
Unity - 2017.4.6f1
MRTK - Latest June18Dev branch
iOS - iPhoneX @ 11.4
HoloLens - OS 10.0.17134.165
</Description>
  </Issue>
  <Issue>
    <IssueID>2434</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Question: Import 2018.2 Packages for target VR platforms?</Title>
    <CreatedDate>11/07/2018</CreatedDate>
    <ClosedDate>22/02/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2434</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
With the 2018.2 upgrade, Unity now lists WMR and OpenVR as separate "Packages"
Currently the lack of these bears no impact, however, should we be preemptive and add these package definitions to the MRTK vNext project.

## Option 1
Import the WMR / OpenVR packages (review if any others are interesting)
Review packages defined and remove any we don't care about

## Option 2
Do nothing :D, it currently works and we should wait until it doesn't?
Or simple advise consumers to add the packages.</Description>
  </Issue>
  <Issue>
    <IssueID>2432</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>SimonDarksideJ</FixedById>
        <IssueID>2432</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext Issue: Cannot map inputs at runtime</Title>
    <CreatedDate>11/07/2018</CreatedDate>
    <ClosedDate>13/07/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
In testing today, I discovered that we can only load the InputManager at build time.  The classes are not available at runtime.

Need to refactor / break this dependency, as builds only work in the editor.

## Expected Behavior
Need to be able to manage Inputmappings for Axis

## Actual Behavior
Current code breaks in a build, as it's currently (and seems only will ever be) editor specific.

</Description>
  </Issue>
  <Issue>
    <IssueID>2431</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>2431</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Disabling Normal Map + hover light  on the standard shader sometimes stops environment coloring from working</Title>
    <CreatedDate>11/07/2018</CreatedDate>
    <ClosedDate>17/07/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2431</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Disabling Normal Map on the standard shader stops environment coloring from working
## Expected Behavior
Environment coloring highlights object when enabled.
## Actual Behavior
Environment  coloring does not contribute due to the way normal contributes.
## Steps to reproduce
_(Links to sample github project preferred)_
Highlight with gaze an object using Ifocusable that does not have normal map + normal enabled
## Unity Editor Version
2017.4.6f1
## Mixed Reality Toolkit Release Version
2017.4.0 + June18 branch</Description>
  </Issue>
  <Issue>
    <IssueID>2430</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>CompoundButtonSounds does not function reliably. </Title>
    <CreatedDate>11/07/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2430</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2430</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The compound button sounds script does play a sound but not always, sometimes you get two click sound when you only click once. 
## Expected Behavior
The sound should play on every click and not repeat.
## Actual Behavior
Works sometimes but not always.
## Steps to reproduce
_(Links to sample github project preferred)_
I used the InteractableObjectExample scene. Try pressing any of the button. You'll need headphones or quiet room to hear the click.
## Unity Editor Version
2017.4.4f1
## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2429</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>2429</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Compound Button Icon cannot assign any icons.</Title>
    <CreatedDate>11/07/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2429</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
In the inspector with CompoundButtonIcon component, after the user has assigned any of the icons in the icon profile that icon cannot be selected in the icon property of the component. Selecting the option in dropdown menu does nothing.

![compoundicon-1](


Furthermore, if you "Add custom icon" it does not even show up in the dropdown menu of the "Icon" property of the icon.

![compoundicon-2](

## Expected Behavior
Expected ability to change icon of the button.
## Actual Behavior
Cannot change icon of the button other than the "ObjectCollection*" set.

## Steps to reproduce
_(Links to sample github project preferred)_
I have seen this happen in my project and in the InteractableObjectExample scene provided with the examples. 
## Unity Editor Version
2017.4.4f1
## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2426</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2426</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Launching applications with the mixed reality portal closed</Title>
    <CreatedDate>10/07/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Boundaries</Name>
        <IssueID>2426</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>2426</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2426</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Launching applications with the mixed reality portal closed can cause an initialization of the app with the tracking space type setted to stationary. This can cause issue for the app because, for example, the floor is not rendered.
## Expected Behavior
Launching applications with the mixed reality portal closed should be the same as launching them from the mixed reality portal.
## Actual Behavior
Sometimes, when you launch an app with the mixed reality portal closed the application is not initialized with the tracking space type setted to room but to stationary.
![stationary](
This can be a problem, in particular when the floor is an essential part of the app.
Personally I launch the apps from the mixed reality home but the user can also launch the app from a desktop tile. In particular when you install or update an app from the store the system present you a popup in the action center to launch the app directly.
Probably the tracking space is setted to stationary, because when the toolkit try to set it, something is not still initialized.
I don't know if is possible to solve this problem but I made some test with this code:
![code](
The result is this:
![roomscaleafterretry](
It would be nice if the toolkit could manage also this situation.
## Steps to reproduce
The issue is not systematic but in my case it happens with the first launch of an immersive app after the boot of the system.
It seems that this situation is particularly critical. Sometimes I see also another issue with motion controller model not loaded.

## Unity Editor Version
2017.4.6f1
## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2423</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2423</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Migrate Dev_Working_Branch changes to master</Title>
    <CreatedDate>10/07/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
After the namespace refactor work and the divergence of the Dev_Working_Branch, several changes went into Dev that haven't yet been migrated back to master.

This will also give us a single place to migrate content to vNext from.

## Expected Behavior
Dev and master have not diverged.

## Actual Behavior
Dev and master have diverged.

## PRs to Investigate (possibly partial list; some have already been migrated)
- [ ] #1518
- [ ] #1718 
- [x] #1726 (via #1717)
- [ ] #1727
- [ ] #1734
- [ ] #1739
- [ ] #1743 
- [x] #1748 (via #2425) 
- [ ] #1785 
- [ ] #1786 
- [ ] #1789 
- [x] #1817 (via #1856)
- [ ] #1818
- [ ] #1819 
- [x] #1820 (via #2435)
- [ ] #1826 
- [ ] #1839 
- [ ] #1854 
- [ ] #1865
- [ ] #1873
- [ ] #1896
- [ ] #1897
- [ ] #1904 
- [ ] #1934
- [ ] #2005
- [ ] #2011
- [ ] #2024 
- [x] #2029 (via #2030)
- [x] #2036 (via #2035)
- [ ] #2039 
- [x] #2047 (via #2046)
- [x] #2065 (via #2064)
- [x] #2075 (via #2072)
- [x] #2079 (via #2078)
- [x] #2084 (via #2083)
- [x] #2088 (via #2087)
- [x] #2101 (via #2100)
- [x] #2106 (via #2105)
- [ ] #2114 
- [ ] #2116 
- [ ] #2121 
- [ ] #2122 
- [x] #2129 (via #2424)
- [x] #2144 (via #2435)</Description>
  </Issue>
  <Issue>
    <IssueID>2422</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>After uploading anchor attempt, its says room not found.</Title>
    <CreatedDate>10/07/2018</CreatedDate>
    <ClosedDate>10/07/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The hololens successfully connects to the server but when it tries to upload the anchor to the server it fails to do so because it failed to find the room.
![20180709_173023_hololens](

[Follow this tutorial]( - Without the tap to place section.

## Expected Behavior
The anchor should have uploaded successfully.
![image_11](

## Actual Behavior

## Steps to reproduce


## Unity Editor Version
Unity 2017.2.1f1
## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>2421</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Move CursorWithFeedback Prefab</Title>
    <CreatedDate>09/07/2018</CreatedDate>
    <ClosedDate>12/07/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2421</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Hi everyone I want to move the ready cursor of the CursorWithFeedback Prefab depending on the ready gesture. I got the position of the hand and assigned it to the cursor. Additionally I want to assign a rigidbody and a collision collider on the ready cursor to simulate a "real" hand.


## Expected Behavior

I get the position of the detected gesture and assign the position with the gameobject.GetComponent&lt;Rigidbody&gt;().MovePosition() -method to the ready cursor.


## Actual Behavior

The cursor moves depending on the heads and not the gesture movement.


## Steps to reproduce
I configured the cursor state hover and assigned the CursorVisual prefab.

</Description>
  </Issue>
  <Issue>
    <IssueID>2372</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2372</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MixedRealityPosePose???</Title>
    <CreatedDate>30/06/2018</CreatedDate>
    <ClosedDate>09/07/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2372</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2372</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Currently the name of the pose attribute in the InputHandlers looks just odd.

``

PosePose ??

## Expected Behavior
A name that makes better sense :D like:
* MixedRealityPose
* Pose (it's the pose of the SourcePoseEventData)

Avoiding properties with work duplication
</Description>
  </Issue>
  <Issue>
    <IssueID>2366</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Are Unity 2017.1.0f3, Visual Studio 2015 and HoloToolkit-Unity-2017.2.1.0 compatibile for Hololens application developement? I am getting some errors while trying to create a project.  </Title>
    <CreatedDate>29/06/2018</CreatedDate>
    <ClosedDate>29/06/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2366</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>2365</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to create simple shared anchor program using SharingWorldAnchorManager.cs</Title>
    <CreatedDate>29/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2365</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>2365</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I would like build a simple application that allows multiple users to connect to a server, and see an object in the same space in their physical environment despite where they launched the application in the room. I have several programs that use UNet sharing, and I have different programs that use World Anchors, but I am having trouble figuring out where to start when it comes to combining the two.

This was the tutorial I followed when building my networking applications: 
Is there a way to make this solution compatible with the SharingWorldAnchorManager so that the objects spawned will appear in the same space for all clients?

Thank you, any help is appreciated.

## Unity Editor Version
Unity 2017.2.1p2</Description>
  </Issue>
  <Issue>
    <IssueID>2364</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2364</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Remove "Build Unity Project" console warnings</Title>
    <CreatedDate>29/06/2018</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview

Remove unnecessary CS0649 warnings in the console window when building a Unity project by clicking the "Build Unity Project" button in the MRTK "Build Window"

## Expected Behavior

No CS04649 warnings should appear in the console window

## Actual Behavior

CS04649 warnings from the MRTK appear in the console window

## Steps to reproduce

1. Build a Unity project by clicking the "Build Unity Project" button in the "Build Window"
2. The CS0649 warnings appear in the console window

## Unity Editor Version

## Mixed Reality Toolkit Release Version

Master</Description>
  </Issue>
  <Issue>
    <IssueID>2362</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2362</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MixedRealityTeleport teleport position is abnormal</Title>
    <CreatedDate>29/06/2018</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2362</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When the Stay on the floor attribute in MixedRealityTeleport is not checked, the teloport postion is abnormal.
``
## Expected Behavior
Teloport to above target
## Actual Behavior
Teloport the head to the target position, the body is below the ground
## Steps to reproduce
1.Open HoloToolkit-Examples GrabMechanics.Scenes
2.Uncheck Stay on the floor of MixedRealityTeleport
## Mixed Reality Toolkit Release Version
Master
</Description>
  </Issue>
  <Issue>
    <IssueID>2355</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>TwoHandManipulatable script is not customizable.</Title>
    <CreatedDate>28/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I want to use the TwoHandManipulatable to configure my scene. I want to do some stuff when manipulation ended or when manipulation start but, as this methods (`OnManipulationStarted` and `OnManipulationEnded`) are private, I cant overwrite them. So I have to copy the entire class to my own script, and then update that methods.

## Expected Behavior
Allow to overwrite "On" methods or at least provide any way to handle manipulation events.

## Actual Behavior
Can't overwrite because they are private

## Unity Editor Version
- 2017.4
## Mixed Reality Toolkit Release Version
- 2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2353</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>3D Objects following along with the viewers hololens</Title>
    <CreatedDate>28/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
At times the 3D objects which are meant to be stationary in the real space follows the viewing user without their consent. I researched over this unintentional occurrence of the 3D objects following the users but found nothing helpful. Please do let me know if there is a way to resolve this error.

## Expected Behavior
The stationary 3D objects should remain stationary where they are meant to be.

## Actual Behavior
The stationary 3D objects ceases to remain stationary and follows the user's HMD (Head).

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
**Unity 2017.2.1p1**

## Mixed Reality Toolkit Release Version
**MRTK-Unity-2017.2.1.1**
</Description>
  </Issue>
  <Issue>
    <IssueID>2352</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Suggestion: Make OnInputClicked from UNETSharedHologram sample optionnal and disabled by default</Title>
    <CreatedDate>26/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview

Hello everyone, I suggest that the method OnInputClicked of UNETSharedHologram should work optionnaly (for exemple a serialized boolean has to be enabled in the editor component window). Because I lost a lot of my work time to look why airtaping on some objects was starting a tap to place mode. Because our project is not small, it was not obvious that this bug was coming from this feature.

## Unity Editor Version

2018.1.2f1

## Mixed Reality Toolkit Release Version

2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2347</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Task vNext - Remove PositionOnly and RotationOnly states. Add position accuracy check</Title>
    <CreatedDate>25/06/2018</CreatedDate>
    <ClosedDate>02/07/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2347</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
From past (DirectInput) experience and a lengthy discussion with the platform PM team, we believe that most applications are going to run code that looks like:
``

This would cause the PositionOnly and RotationOnly states to be largely ignored.

WMR (and others?) provides approximate positioning when the controller leaves the tracking sensor's view, so the controller is always Tracked (once initial tracking occurs). To provide applications that wish to take advantage of the knowledge that the controller is "behind the head", we propose adding IsPositionApproximate() to the controller interface and allow specific controller classes to implement as appropriate.

## Requires
* Removal of ControllerState.PositionOnly
* Removal of ControllerState.OrientationOnly
* Update of any code that refences these states to instead use ControllerState.Tracked
* Addition of "bool IsPositionApproximate()" method to IMixedRealityController interface
* Default implementation of IsPositionApproximate in BaseController class
* Full implementation of IsPositionApproximate in WindowsMixedRealityController class
* Documentation for IsPositionApproximate

## Acceptance Criteria
Verify ControllerState is:
- [x] NotTracked until the first time the controller is seen by the tracking sensors
- [x] Tracked from that point forward (even when not visible to the sensors)

Confirm that new IsPositionApproximate() method returns:
- [ ] True if the controller is "behind the head"
- [ ] False when the controller is visible to the HMD controller tracking sensor
</Description>
  </Issue>
  <Issue>
    <IssueID>2346</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2346</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext: remove DebugUtils class</Title>
    <CreatedDate>25/06/2018</CreatedDate>
    <ClosedDate>27/06/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Code Style</Name>
        <IssueID>2346</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Goal: Keep the UnityEngine.Debug class calls at the source of the issue, with no extra method calls</Description>
  </Issue>
  <Issue>
    <IssueID>2343</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Railboy</FixedById>
        <IssueID>2343</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>2343</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Make the CompoundButtonSpeech.cs available and add CompoundButtonEventTrigger.cs to attach an event to the keyword recognized through speech.</Title>
    <CreatedDate>25/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Example/Test Scene</Name>
        <IssueID>2343</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2343</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Make the CompoundButtonSpeech.cs available and add CompoundButtonEventTrigger.cs to attach an event to the keyword recognized through speech.
For the test, I did it in another scene ("SpeechButtonEvent"), but I think it's better to add that "button" to the scene "InteractiveButtonComponents".
It's my first time to submit an issue, please tell me if there are any change that have to be made.
I'm sorry for the poor quality of the scene, I hope it's not that difficult to understand.

Another upgrade possible is to retrieve automatically the keyword from all the compound button currently active on the scene in the "Keyword Dictionnary" of SpeechInputSource.

path: HoloToolkit-Examples/UX/Scenes/SpeechButtonEvent.unity
[Project](
## Expected Behavior
1. The button recognize the keyword.
2. The button do the event action attach to it after the previous behavior.
## Actual Behavior
Nothing happens when the script is attached to a button.
## Steps to reproduce
0. In a new scene, add the MixedRealityCameraParent, a DirectionalLight, an InputManager and a DefaultCursor.
1. Add a gameobject with the component SpeechInputSource.cs in the scene.
2. Add another gameobject with the components Collider, Mesh, CompoundButton.cs, CompoundButtonSpeech.cs, CompoundButtonText.cs, CompoundButtonMesh.cs and CompoundButtonEventTrigger.cs.
3. Make the button you want as long as you can see it. Then add an action for the Event Trigger and what it should do.
4. Add the keyword to be recognized in SpeechInputSource.cs.

Don't forget to apply MixedReality Project Setting!
## Unity Editor Version
2018.1.0f2
## Mixed Reality Toolkit Release Version
2017.4.0.0 (May 2018)</Description>
  </Issue>
  <Issue>
    <IssueID>2342</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Teleportation is in-responsive and slow</Title>
    <CreatedDate>25/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The user experience of the default MRTK teleportation is quite disappointing, which is in-responsive and slow, especially comparing to the default teleportation in Windows home. I am wondering why. How can we make it consistent as the Windows one.

## Expected Behavior
User launch application from Windows Home, and they expect the teleportation to be as responsive as Windows Home.

## Actual Behavior
The actual teleportation is slow. Sometimes it respond after 1 second, sometimes the arrow doesn't show up at all.

## Steps to reproduce
Just create a new project, import MRTK, Apply project settings and scene settings as a VR project. Play the project and try teleportation.

## Unity Editor Version
2018.1.1f1 Personal 64bit

## Mixed Reality Toolkit Release Version
HoloToolkit-Unity-2017.4.0.0
</Description>
  </Issue>
  <Issue>
    <IssueID>2341</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>CompoundButton OnButtonClicked and OnButtonPressed firing twice</Title>
    <CreatedDate>25/06/2018</CreatedDate>
    <ClosedDate>26/06/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Debugging why functions hooked to OnButtonClicked  or OnButtonPressed are called twice I found them actually being called twice internally for no particular reason.
The cause is that OnInputDown and OnInputClicked both call DoButtonPressed, which in turn always calls OnButtonPressed and OnButtonClicked.
Since OnInputReleased comes right in between Down and Clicked, a bool to avoid the second click to come in is not possible to use.
OnInputClicked should not call OnButtonPressed and OnInputDown should not call OnButtonClicked.
Maybe that's a relic from Hololens only times (not supporting Clicked or something like that), but with MotionControllers that's not working

## Expected Behavior
Just called once each click

## Actual Behavior
Called twice each click

## Steps to reproduce
- Apply Mixed Reality Scene Settings to a scene, add a holographic button to it and hook something up to one or both those events.
- Play the scene and press the button

## Unity Editor Version
2017.3.1p3

## Mixed Reality Toolkit Release Version
june18_dev</Description>
  </Issue>
  <Issue>
    <IssueID>2340</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Does plane finding api merge all the nearby plane by default to give a bigger plane?</Title>
    <CreatedDate>25/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I am facing an offset issue with plane finding api of hololens. While it works fine for walls, floors always come with some offset. It seems like plane finding api merges nearby small planes to create bigger plane thus changing the average height/depth of plane from the actual plane. How can we discard nearby planes which are above or below the main plane? 

I tried using the param such as FloorBuffer =0.0f &amp; UpNormalThreshhold = 0.98f ( to reduce the tolerance range. Any pointers in how to improve this?

## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>2339</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Motion Controllers draw Ray(laser pointer)</Title>
    <CreatedDate>25/06/2018</CreatedDate>
    <ClosedDate>25/06/2018</ClosedDate>
    <IssueLabels />
    <Description>Can i draw motion controllers laser pointer using line renderer??
i shown hololens forum - 
and i creating line renderer in Motioncontrollers, but LineRenderer's position is wrong..

so if i another way 'drawing motion controller's laser pointer? like #2166 . 

## Unity Editor Version
2017.3.1f1
## Mixed Reality Toolkit Release Version
i don't know but I downloaded it in 14 February.</Description>
  </Issue>
  <Issue>
    <IssueID>2336</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRTK does not build for iOS configured build target</Title>
    <CreatedDate>24/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When building an application that targets WMR and iOS, the project cannot build for iOS, because scripts in the MRTK do not compile.

## Expected Behavior
I can build for iOS even when I have MRTK in my project.

## Actual Behavior
I cannot build for iOS

## Steps to reproduce
- Create new Unity project (2014.4+)
- Import MRTK package
- Set iOS as target platform
- Try building

## Unity Editor Version
2018.1

## Mixed Reality Toolkit Release Version
2017.4

## Example build errors
[Unity] Assets/HoloToolkit/Utilities/Scripts/GLTF/Scripts/GLTFUnityHelpers.cs(59,23): error CS0246: The type or namespace name `GLTF' could not be found. Are you missing an assembly reference?
[Unity] Assets/HoloToolkit/Utilities/Scripts/GLTF/Scripts/GLTFSceneImporter.cs(803,68): error CS0246: The type or namespace name `GLTF' could not be found. Are you missing an assembly reference?

</Description>
  </Issue>
  <Issue>
    <IssueID>2335</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2335</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>jessemcculloch</FixedById>
        <IssueID>2335</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2335</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2335</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Debate: Get button input by "Pressed/Released" or via Update</Title>
    <CreatedDate>24/06/2018</CreatedDate>
    <ClosedDate>20/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Code Style</Name>
        <IssueID>2335</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2335</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

In testing with the latest updates, we've moved to a polling method for updating input events, so instead of simply reacting to each event from the InteractionManager, we are simply looping through all configured InteractionMappings and updating them at the same time.

Now I've tested, and the updated states for Button Presses and Releases are provided in: 
``

But now these will cause duplicate events in this new pattern.

## Expectations

Should we either:

* Use the new polling method to loop through all data and update in one bundle
* Update buttons from the Pressed / Released events and ONLY all other data from the update loop

The first method is cleaner after I've gone through it (many many times) and I don't see any disadvantages of doing so.  In the docs, the Pressed / Released events are there so you could take a specific action based on those events, however, we don't do that as ALL events are filtered through the InputSystem for action.

Thoughts?</Description>
  </Issue>
  <Issue>
    <IssueID>2330</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add Bluetooth mouse pointing source</Title>
    <CreatedDate>23/06/2018</CreatedDate>
    <ClosedDate>09/11/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
A Bluetooth mouse as an input source could be a nice extension to Gaze and Gestures on HoloLens (and maybe also on other MR devices, but I cannot be sure about them). The logic could be as follows:
* When mouse is not used, the cursor points at center of the screen.
* When a mouse is connected and a move/button event occurs, cursor stops following the Gaze and changes its position further according to mouse, like in Windows Holographic shell.
* Move and Navigation for mouse can also be implemented.
* When the mouse appears to be inactive for &gt;2sec, cursor gets back to center of the screen and follows the Gaze.

As far as I understood it, `CustomInputSource` is intended for Editor debugging purposes only, but if the above or similar functionality is already implemented, I will be glad to hear about it.

## Implementation details
According to my observations, `UnityEngine.Input.mousePosition` produces invalid and huge numbers on device; looks like the implementaion should use UWP classes directly.
The corresponding input source can rely on another pointing source and produce pointing input as well:
``</Description>
  </Issue>
  <Issue>
    <IssueID>2328</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unable to delete anchor from Store</Title>
    <CreatedDate>22/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I am using WorldAnchorManager script to attach and remove world anchor. Currently, when i attach world anchor to hologram and send device in sleep directly without quitting application (using bloom gesture). When i enable device from sleep, i am not able to delete anchor from store (game object it's able to remove).

This behaviour happens in RS4 updated HL but didn't occur in previous HL OS.
## Expected Behavior
Anchor should be destroyed from anchor store.
## Actual Behavior
Anchor Doesn't get removed from anchor store. It caused future anchor to have either conflict with key or update world anchor to wrong position.
## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
Unity 2017.4.5f1
## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>2326</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>BoundaryManager RenderBoundary Property Cannot Control Rendering of Mixed Reality Portal Boundary</Title>
    <CreatedDate>22/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2326</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
BoundaryManager RenderBoundary Property Cannot Control Rendering of Mixed Reality Portal Boundary
## Expected Behavior
Control Rendering of Mixed Reality Portal Boundary
## Actual Behavior
Cannot Control Rendering of Mixed Reality Portal Boundary

## Unity Editor Version
2017.4.3f1
OS  Win10 17134.112
windows SDK  17134 
## Mixed Reality Toolkit Release Version
MixedRealityToolkit-Unity Master

</Description>
  </Issue>
  <Issue>
    <IssueID>2324</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2324</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Mesh transform not preserved when used as room model</Title>
    <CreatedDate>21/06/2018</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>2324</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

When running in the Unity Editor, children of the Room Model `GameObject` in `ObjectSurfaceObserver` are all rotated and translated to `(0, 0, 0)` rather than preserving the transform.

## Expected Behavior

Below shows the transform of one of the Room Model meshes and how it should be positioned relative to the other meshes.

![image](

![image](

## Actual Behavior

The mesh transform is not preserved when used as Room Model.

![image](

![image](

## Steps to reproduce

- Add `SpatialMapping` prefab to scene
- Parent several room mesh objects to `GameObject` to be used as Room Model with relative transform offset from the parent
- Set Room Model
- Hit Play
- Check the rotation of the `roomMesh` objects parented to the `SpatialMapping` object

## Unity Editor Version

`Unity 2017.3.0f3`

## Mixed Reality Toolkit Release Version

`2017.2.1.4`</Description>
  </Issue>
  <Issue>
    <IssueID>2323</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MotionControllerVisualizer.cs</Title>
    <CreatedDate>21/06/2018</CreatedDate>
    <ClosedDate>03/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>No Repro</Name>
        <IssueID>2323</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I am getting an error everytime I try and build with the holotoolkit in my project. It keeps telling me `Assets\HoloToolkit\Input\Scripts\Utilities\MotionControllerVisualizer.cs(339,44): error CS1729: 'DataReader' does not contain a constructor that takes 1 arguments` 

## Expected Behavior
Build project successfully

## Actual Behavior
Build fails
## Steps to reproduce
_(Links to sample github project preferred)_
Just add the holotoolkit to a project. Don't even have to use any of its features.

## Unity Editor Version
Unity 2018.1.4f1 Personal (64bit)

## Mixed Reality Toolkit Release Version
I tried 2017.2.1.4 and 2017.4.0.0
</Description>
  </Issue>
  <Issue>
    <IssueID>2320</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Does world anchor store return anchors from all spaces or the current space of user?</Title>
    <CreatedDate>20/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2320</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
We query world anchor store api to get all identifiers. Does it return identifiers only for the space we are in or all identifiers from device? [ seems like the latter option but want to validate.]

</Description>
  </Issue>
  <Issue>
    <IssueID>2313</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>2313</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>johnppella</FixedById>
        <IssueID>2313</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Hide AppBar Menu background when not focused</Title>
    <CreatedDate>17/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>2313</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The "Show Menu"-Menu is always visible, in the Holograms-App it disappears after some time when it is not focused.

## Expected Behavior
The menu should hide after some time and reappear when the user gazes at it (same as the Holograms-App)

## Actual Behavior
The menu is always visible

## Mixed Reality Toolkit Release Version
june2018_dev</Description>
  </Issue>
  <Issue>
    <IssueID>2312</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Input Manager can cause NullReferenceException if EventSystem gets initialized after InputManager</Title>
    <CreatedDate>17/06/2018</CreatedDate>
    <ClosedDate>17/06/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2312</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
In InputManager.cs, Awake() method calls InitializeEventDatas(), which relies on EventSystem.Current being available, and uses those datas throughout the lifetime of the InputManager.

Depending on how the systems are originated in the hierarchy, it is possible that EventSystem.Current returns null, which causes NullReferenceException to occur on events inside InputManager.

This is easily resolved by moving initialization code into the Start() method.

In general, initialization that relies on other systems/classes should never occur on Awake(), as order of calls is never guaranteed. 
</Description>
  </Issue>
  <Issue>
    <IssueID>2311</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can we restrict the mesh to be used in Plane (floor) finding API?</Title>
    <CreatedDate>17/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2311</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>2311</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
As we move around, the Hololens saves meshes from vast areas. This inturn means that if i want to detect floor correctly, a mesh covering huge area is used to detect which offsets floor average height from actual floor. How can we restrict to compute floor based on meshes from near by or restrict it from using previously scanned mesh (which accumulate offset over period of time).
## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>2310</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Change AppBar Icon</Title>
    <CreatedDate>16/06/2018</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>2310</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I don't know if it is even possible with the current implementation, but I like to change the icon for the Hide, Adjust, ...-Buttons in the AppBar to show Sprites instead of the UIButtonSquareIcon-Mesh. 
You can set the "Overwrite Icon" Flag after the buttons are created (in play mode) of the CompontButtonIcon of the Button instance, but they get destroyed after exiting play-mode.

## Expected Behavior
You should be able to overwrite the Button icons in the Inspector somehow, e.g. by configuring the profile for the AppBar-Prefab

## Actual Behavior
There is no way (at least I found none) to change the Mesh to Sprite

## Steps to reproduce
Try to change the Icon of an AppBar-Button

## Unity Editor Version
2018.1f1

## Mixed Reality Toolkit Release Version
june18_dev</Description>
  </Issue>
  <Issue>
    <IssueID>2309</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Sharing with remote hololens not working</Title>
    <CreatedDate>16/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>2309</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Sharing experience between 2 hololens from different wifi network/location is not working. The first hololens create a session called "DefaultSession", but the other hololens cannot find and join the same session. Sharing service shows both hololens connected to "DefaultSession" on the server. Sharing service is hosted on a server which both hololens are connected to. Am able to join "DefaultSession" from PC using Session Manager, but cannot join "DefaultSession" with 2nd hololens.

## Expected Behavior
Second hololens should be able to discover and join the session created by the first hololens.

## Actual Behavior
Second hololens shows up as connected on Sharing Service and SessionManager, but cannot discover or join "DefaultSession" within the hololens application.

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
2017.3.1p1
## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2307</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>`UnityEngine.XR.WSA.WorldManager' does not contain a definition for `state'</Title>
    <CreatedDate>15/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When building from the command line on linux, compilation fails with: `'UnityEngine.XR.WSA.WorldManager' does not contain a definition for 'state'`


## Expected Behavior
Project compiles as normal from development PC.

## Actual Behavior
Compilation fails.

## Steps to reproduce
Not verified:
1. Use Ubuntu 14.04
2. Download Unity 2018.1.3f1 (
3. Execute the Unity file with " --components=Unity,Windows-Mono"
4. Create a script checking WorldManager.state
5. Build game from the command line

## Unity Editor Version
2018.1.3f1

## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2305</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext: Expose Source Kind (Hand, controller, voice, etc)</Title>
    <CreatedDate>14/06/2018</CreatedDate>
    <ClosedDate>15/06/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2305</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>To ensure titles can do the right thing based on the type of source the input came from.

Windows Mixed Reality provides source kinds of:
* hand
* controller
* voice
* other</Description>
  </Issue>
  <Issue>
    <IssueID>2304</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2304</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Unexpected behavior with SpatialProcessing and plane destruction</Title>
    <CreatedDate>14/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2304</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2304</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>2304</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The SurfacePlanes prefab is destroyed and redrawn every frame when "Floor" is ticked on in the Destroy Planes dropdown.

## Expected Behavior
The Floor planes would be ignored and all other planes are saved.

## Actual Behavior
Objects skate along planes due to the fact the SurfacePlanes (and child objects) are destroyed and recreated.

## Steps to reproduce
Set up a standard HoloLens scene using SpatialMapping and SpatialProcessing.
Set Destroy planes to "Floor"

## Unity Editor Version
2017.2.1.p2

## Mixed Reality Toolkit Release Version
Current commit on master branch of MRTK</Description>
  </Issue>
  <Issue>
    <IssueID>2303</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2303</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Hololens Unet client places anchor at headset position</Title>
    <CreatedDate>14/06/2018</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>2303</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

After a hololens starts to host and place corectly an anchor somewhere in the room. When a second hololens connects to the first one with Unet, it succesfully gets the server anchor (with the good id) but the anchor is placed at the headset position when the app connected. Note that all shared holograms and player controllers are well placed relatively to this anchor so all the scene is incorect of only one translation. Debug panel show nothing special except anchor set to true.

## Expected Behavior

The client should place the anchor at the same real position than the server.

## Actual Behavior

The client place the anchor at its headset position one second after connected to the server

## Steps to reproduce

Here a summary of what contains ma scene:
SpatialGameObject &lt;SpatialMappingObserver, SpatialMappingManager&gt;
UIContainer (prefab with UNET UI from MRTK)
NetworkGameObject &lt;NetworkManager,NetworkDiscoveryWithAnchors,GenericNetworkTransmitter,WordlAnchorManager&gt;
SharedCollectionGameObject &lt;SharedCollection,SceneContentAdjuster&gt;
UNetAnchorManager &lt;NetworkIdentity,UNetAnchorManager&gt;

## Unity Editor Version

2018.1.2f1

## Mixed Reality Toolkit Release Version

2017.4.0.0



Thank you very much for your help</Description>
  </Issue>
  <Issue>
    <IssueID>2302</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can I show two cameras on one camera?</Title>
    <CreatedDate>14/06/2018</CreatedDate>
    <ClosedDate>19/06/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2302</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I want to output a view of another camera(non VR Camera) in one camera(HMD).
##
At the same time ,i need VR camera is showing Non VR Camera. Like Z-index in CSS.
i'm setting Player settings value - Virtual reality Supported : checked , and platform is UWP(Universal windows platform).
and One camera(VR Camera, 'MixedRealityCamera') depth value is '-1' and target eye is 'both' , another camera(Non VR Camera) depth value is '0' and target eye is 'none(Main Display)'
if i change Viewport Rect value, Unity editor is showing 2 camera view.
but if i wearing HMD Camera, not visible.
how can i showing two cameras, if i wearing HMD, at the same time???

## Unity Editor Version
2017.3.1.f1
## Mixed Reality Toolkit Release Version
Latest</Description>
  </Issue>
  <Issue>
    <IssueID>2300</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MoveToPosition.TargetObject continues to target its own game object instead of the target</Title>
    <CreatedDate>13/06/2018</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview

MoveToPosition.TargetObject specifies "the GameObject with the position the requires animation". However, this variable is only used in GetPosition. The code that sets position sets this.transform.position/localPosition.

## Expected Behavior

TargetObject is moved.

## Actual Behavior

This GameObject is moved.

## Steps to reproduce

1. Open the CycleArray scene.
1. Create a new sphere gameobject of scale .25, .25, .25.
1. Modify PositionCube &gt; MoveToPosition &gt; TargetObject to reference the sphere instead of None.
1. Run the scene and click on CyclePosition.

expected: The sphere is moved.
actual: The CyclePosition cube is moved.

## Unity Editor Version
2017.4.2f2
## Mixed Reality Toolkit Release Version
june18_dev 0f9cff76</Description>
  </Issue>
  <Issue>
    <IssueID>2298</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Cameron-Micka</FixedById>
        <IssueID>2298</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add metal and smoothness texture maps to mrtk standard shader options</Title>
    <CreatedDate>13/06/2018</CreatedDate>
    <ClosedDate>07/01/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Shaders / Materials</Name>
        <IssueID>2298</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Currently the metal and smoothness maps need to be embedded into the albedo texture, but then that limits the ability to use transparency in the albedo alpha.

Adding the metal and smoothness texture slots will give developers greater flexibility in creating materials.</Description>
  </Issue>
  <Issue>
    <IssueID>2297</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Loading cursor not visible when we are off-holograms</Title>
    <CreatedDate>13/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2297</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The loading cursor is not visible when we are off-holograms
## Expected Behavior
The loading cursor is visible also when we are off-holograms
## Actual Behavior
If the input is disabled the loading cursor is not visible when we are off-holograms because it is too far.
I think it would be better if the loading cursor is always visible when the input is disabled
Something like this (Cursor class):
``
## Steps to reproduce
- InputManagerTest scene 
- Click timer button
## Unity Editor Version
2017.4.2f2
## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2296</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>.nuget\packages\Microsoft.CSharp\4.0.1 directory not found</Title>
    <CreatedDate>13/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Upon importing MRT in 2017.4.5f1 LTS I am returned the following:

System.Exception: Package directory not found: "...\.nuget\packages\Microsoft.CSharp\4.0.1".

## Expected Behavior
No console errors returned
## Actual Behavior
console error returned

## Unity Editor Version
2017.4.5f1
## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2295</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Button class does not block events from reaching fallbackInputStack</Title>
    <CreatedDate>13/06/2018</CreatedDate>
    <ClosedDate>29/06/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>2295</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Button class (HoloToolkit.Unity.Buttons.Button) does not mark received Event Data as used. This causes events to be handled twice, once by the button callbacks, and once by handlers inside InputManager.fallbackInputStack.

## Expected Behavior
From [/Assets/HoloToolkit/Input/README.md](

&gt; handle various types of input and send them to any game object being currently gazed at, **or** any fallback object.

This means that events sent to the button shouldn't be sent to the fallback object.

## Actual Behavior
Pressing a button also activates both the fallback object's method and the callback on the button.

## Steps to reproduce

1. `git clone 
2. `git checkout origin/june18_dev`
3. `git checkout 9a44898316c89` (This is an intermediate commit before I fixed the bug)
3. Open Assets/repro scene
4. Press play
5. Shift + left click on the circular button
6. Observe that two types of callbacks are emitted in the console. (relevant code is in attachtobutton.cs). The callback registered directly with the button is executed twice, possibly related to #1879.

## Fix

The bug is in Button.cs. The passed eventData parameter should call EventData.Use() before returning. 

The patched version is [here](

Demo of potentially fixed code here:
`git checkout origin/june18_dev`

Note on behaviour: If the button has no registered callbacks, then the event is not marked as used. This is a matter of opinion. I believe this makes the most sense in my app's context. Perhaps there should be a flag on the Button class.

## Unity Editor Version
2017.3 and 2017.4

## Mixed Reality Toolkit Release Version
2017.4.0.0
</Description>
  </Issue>
  <Issue>
    <IssueID>2294</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Interactive mesh cursor default distance set to 0</Title>
    <CreatedDate>13/06/2018</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2294</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
As you may know, the HoloLens cursor is following the surface of a box collider by default when it can or it will remain at a default distance otherwise: with the interactive mesh cursor behavior, it's not the case.

When we go anywhere other than a surface of a collider, the interactive mesh cursor is renderer at a distance of 0 with the camera. In other words, we can't see it. And that have a huge bad impact with the UX when using an application using this cursor.

## Expected Behavior
The cursor's distance with the camera is set to the default distance when it's not on a collider surface.

## Actual Behavior
The cursor is rendered on the camera position.

## Steps to reproduce
1. Sets up a Unity project for an HoloLens application
2. Place a new Cube in the scene
3. Use the InteractiveMeshCursor as your cursor

This [project]( is a reproduction of this issue.

## Unity Editor Version
2018.1.0f2

## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2292</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Proposal: Should we use SpatialEntityStore for Sharing experience?</Title>
    <CreatedDate>13/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>2292</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Recently when I was browsing on the UWP documentation, I found that the import and export of spatial anchors for collaboration experiences has been [deprecated]( Instead, the actual documentation is suggesting to use the [`SpatialEntityStore`]( instead of the old `SpatialAnchorTransferManager` that I suspect Unity to use under the hood.

I wonder why this new method that you suggest is not yet used here, on a Microsoft open-sourced project. Shouldn't we try to use this new method in the `Sharing` part of HoloToolkit or is Unity will implements this new method instead of the actual `WorldAnchorTransferBatch`?</Description>
  </Issue>
  <Issue>
    <IssueID>2291</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Share holograms with Android ?</Title>
    <CreatedDate>13/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2291</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>SpectatorView</Name>
        <IssueID>2291</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi all,

Is there any plan on share holograms with Android device?

Thanks</Description>
  </Issue>
  <Issue>
    <IssueID>2286</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Compile errors on Android target</Title>
    <CreatedDate>12/06/2018</CreatedDate>
    <ClosedDate>12/06/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When switching to Android for example, DictationInputManager.cs shows 3 errors in Unity:
CS0103	The name 'dictationRecognizer' does not exist in the current context
...

## Expected Behavior
No errors to enable multiplatform development

## Actual Behavior
3 errors, in DictationInputManager.cs, line 210 - 216

## Steps to reproduce
Just import the MRT-Unity and the MRT-Unity-Sample project. Switch to Android
I fixed it by surrounding the method body with `#if UNITY_WSA || UNITY_STANDALONE_WIN` and a `yield break;` in the `#else` case.

## Unity Editor Version
2018.1

## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2285</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Planefinding api returns real world floor with some offset</Title>
    <CreatedDate>12/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>2285</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**Issue:** I am using SurfaceMeshesToPlane class from Holotoolkit to get the real world floor. I have noticed that floor is always returned with some offset: i.e. when i draw a cursor on detected floor or select a point, it always shows at some height above floor or some depth below the real floor.

**Expected:** Real world floor and HL detected floor should be as close as possible [5-10 cm offset acceptable].

Query: Do we need to adjust some parameter. [Urgent]

## Unity Editor Version
Unity 2017.2.1p4
## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>2284</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Plane finding api for hololens help</Title>
    <CreatedDate>12/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
How does the min area specified for Plane Finding api work. I need to understand the parameter function in better way.
## Expected Behavior
if i increase the min area, only bigger chunks of floor/wall must be detected and vice-a-versa.
## Actual Behavior
Increasing the area actually produces offset where planes, specificially floor are getting detected with some unacceptable level of offset.
## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
Unity 2017.2.1p4
## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>2281</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>JSON and AssetBundle reading with Hololens</Title>
    <CreatedDate>11/06/2018</CreatedDate>
    <ClosedDate>11/06/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I made a project using the first edition of Holotoolkit, at this project I used a JSON file to get some text information's form my server and it was working fine. Recently I updated my project to use the MRTK, I test the project at Unity Editor and everything worked well but when I compile to Hololens the project didn't worked. I made some test to figured out where was the problem, and I the problem is related to the momentum where my code get the information of the JSON file. 

At the first test I used Unity 2017.4.4f1 and the MRTK 2017.4.0.0, the download and save was working perfect, the Hololens don't report a bug just stay loading when I use a Webrequest to get a JSON file form my local folder. I also tested the WWW instead of Webrequest, and the NewtonSoft.Json instead of JsonUtility, and the result was the same. 

![image](

At the second test I used the Unity 2017.2.1p2 and the MRTK 2017.2.1.4, and the JSON reading worked fine - with the same code and configuration that I was using with Unity 2017.4. But with Unity and MRTK 2017.2  I had problems to open my AssetBundle from a local folder, what is working perfect at Unity Editor. The hololens throw this error: **Serialized file contains typetrees but the target can't use them. Will ignore typetrees.**

![image](
    
## Expected Behavior
Read the JSON file with the MRTK 2017.4 and open the Asset Bundle with the MRTK 2017.2

## Actual Behavior
Do nothing when I tried to read a JSON file with the MRTK 2017.4 at Hololens (but worked at Unity Editor). And throw a error when a tried to open a local Asset Bundle with MRTK 2017.2. 

## Unity Editor Version
2017.4.4f1 and 2017.2.1p2

## Mixed Reality Toolkit Release Version
2017.4.0.0 and 2017.2.1.4</Description>
  </Issue>
  <Issue>
    <IssueID>2280</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>vNext: Basic controller test scene</Title>
    <CreatedDate>11/06/2018</CreatedDate>
    <ClosedDate>29/07/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2280</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Alpha release needs a basic controller test scene to allow users to confirm that input is working. Simple cubes is sufficient.
</Description>
  </Issue>
  <Issue>
    <IssueID>2279</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Teleport active also clicking down the thumbstick</Title>
    <CreatedDate>11/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2279</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The teleport is active also clicking down the thumbstick.
## Expected Behavior
Same as in the mixed reality home
## Actual Behavior
With MRTK the teleport is active also clicking down the thumbstick.
In the mixed reality home clicking down on the thumbstick and holding you can virtually walk.
More details here:
Is it possible to align the behavior of the MRTK with the mixed reality home?
As first step it would be nice to disable the teleport when we click down the thumbstick and then, as second step, implement the virtual walk.
## Steps to reproduce
Any example scene with teleport
## Unity Editor Version
All
## Mixed Reality Toolkit Release Version
All
</Description>
  </Issue>
  <Issue>
    <IssueID>2278</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Assembly Definition Files (`.asmdef`) for Unity to separate HoloToolkit `.csproj` and `.dll`</Title>
    <CreatedDate>11/06/2018</CreatedDate>
    <ClosedDate>11/06/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2278</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Add assembly definition files to group all files under HoloToolkit into HoloToolkit.Unity and HoloToolkit.Unity.Editor assemblies. Build times are expected to be optimized for development as the C# files from HoloToolkit will be built once into .dll and will not be rebuild until a HoloToolkit C# files is changed (that rarely happens). Unity will also generate `.csproj` files per `.asmdef` files so the HoloToolkit files will be separated from the application files in the generated `.csproj` files making it a little bit easier for work on apps using HoloToolkit.

More information about assembly definition files in Unity:


## Expected Behavior
Unity to create a `.csproj` file and build separate `.dll` files for `HoloToolkit.Unity` and `HoloToolkit.Unity.Editor`.

## Actual Behavior
Currently all files go into a big `.csproj` and `.dll` with the name of the Unity project, HoloToolkit code is mixed with the application code.
</Description>
  </Issue>
  <Issue>
    <IssueID>2277</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Proposal:We were wondering if you could add property "Handedness" in BaseInputEventData class?</Title>
    <CreatedDate>10/06/2018</CreatedDate>
    <ClosedDate>03/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2277</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
For example,when if we want to use select button of left Motion Controller with IInputHandler,
we can't know left or right select button is down,so we must get this information from InteractionSource(following example codes).

``

In IInputHandler event,OnInputDown(OnInputUp) method has parameter "InputEventData",
so,if you could add property "Handedness(get from  InteractionSource)" in "InputEventData",we can develop more easier the application that uses Input operation more Interactive!

## Unity Editor Version
Unity 2017.4.3f1
## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>2276</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2276</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>"Sharing with UNET" example - Anchor isn't shared with Client</Title>
    <CreatedDate>09/06/2018</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>2276</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When testing the Hololens Example "Sharing with UNET"  with two Hololenses the Anchor isn't shared from the Server "Lens" to the Client "Lens".

## Expected Behavior
One Device starts a Session, second one joins the Session, both Devices can "fire" Balls, see the moving remote "Head" and the Debug-Button (Anchor) at synced Positions.

## Actual Behavior
One Device starts a Session, second one joins the Session, both Devices can "fire" Balls, see the moving remote "Head"and the Debug-Button (Anchor) at different  Positions.
When we look into der Debug Output we notice the following Message right after tapping the "Reset Anchor" Text: 

"This script is not intended to be run from the Unity Editor" -  (MixedRealityToolkit-Unity/Assets/HoloToolkit-Examples/SharingWithUNET/Scripts/GenericNetworkTransmitter.cs Line 132)

Further Clicks at "Reset Anchor" Text show that the "recived" Ancher was empty and a download of the new Anchor was requested.

## Steps to reproduce


## Unity Editor Version
2017.4.4.f1

## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2272</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HandDraggable script shake object when moving head.</Title>
    <CreatedDate>08/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2272</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
HandDraggable shake object when we have grab the object and we move head. (Seems to be shaking too with only dragging by hand).
It's only the case when you have a high value of PositionLerpSpeed.
The results of the tests carried out:
 - With PositionLerpSpeed value of 0.9 and 1 → object is shaking
 - With default PositionLerpSpeed value (0.2f) → Expected Behavior (without shaking)

## Expected Behavior
Moving object without shaking.

## Actual Behavior
Moving object with shaking.

## Steps to reproduce
1. Create a new scene
2. Set up the scene with the MRTK configuration (Mixed Reality Toolkit &gt; Configure &gt; Apply Mixed Reality Scene Settings)
3. Create a cube, add "HandDraggable" component and set the value PositionLerpSpeed to 1. (Of course, place the cube in front of you → e.g. : Position (0, 0, 2) and Scale (0.25, 0.25, 0.25)).
4. Build on HoloLens and launch it.
Now, try moving your cube with your hand while moving your head.

## Unity Editor Version
2017.1.0f3

## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2271</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Warnings importing MRTK packages</Title>
    <CreatedDate>08/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>2271</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2271</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Importing MRTK packages Unity shows these warnings:
![image](

## Expected Behavior
No warnings
## Actual Behavior
Warnings
## Steps to reproduce
Import MRTK packages

## Unity Editor Version
2017.4.2f2
## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2270</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoloToolkit option in the main menu not visible</Title>
    <CreatedDate>07/06/2018</CreatedDate>
    <ClosedDate>15/07/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>2270</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'm using the Unity 2018.1 version and when I imported the HoloToolkit packages, I ran into some errors. Eeverything except this was fixed - Assets/HoloToolkit/BuildAndDeploy/Editor/BuildSLNUtilities.cs(145,44): error CS0029: Cannot implicitly convert type UnityEditor.Build.Reporting.BuildReport' tostring'
Please let me know how to go about it and solve it? Thank you.

I'm using the 2017.4.0.0 version of the HoloToolkit.</Description>
  </Issue>
  <Issue>
    <IssueID>2269</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Newtonsoft.Serialization exeption with IL2CPP Backend</Title>
    <CreatedDate>07/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview

Due to an reflection exception for AOT the serialization crashes applications

Current Workaround: Use Newtonsoft.dll for AOT from the unity package: 
for IL2CPP build

Possible Solution: Add the Newtonsoft.dll for AOT from the unity package: 
to the included json resources

## Expected Behavior

JsonString gets generated

## Actual Behavior

Exception flies due to reflection exception

## Steps to reproduce

JsonConvert.Serialize(object obj) with IL2CPP build

## Unity Editor Version

2018.1

## Mixed Reality Toolkit Release Version

05d004f3f6c384fa856172aab00d351168fa478a</Description>
  </Issue>
  <Issue>
    <IssueID>2268</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Fatal error when using Interaction Manager</Title>
    <CreatedDate>07/06/2018</CreatedDate>
    <ClosedDate>03/08/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
See screen shot attached. Essentially when using MixedRealityToolkit Input prefabs, it will register and unregister every time you enter/exit play mode.
Apperently there is a limit on how many times this is allowed to happen. As such in the normal working flow over a day, you ultimately get this error and be forced to quit.
This happens when you hit play, so at that point, if you have any changes you didn't get a chance to save yet, you will lose your work.

![unity crash](

## Steps to reproduce
Use a scene with the input manager prefab, and enter and exit play mode until it happens

## Unity Editor Version
2017.4.4 , was present before hand as well

## Mixed Reality Toolkit Release Version

Latest

I have also reported this bug to unity - </Description>
  </Issue>
  <Issue>
    <IssueID>2267</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>PointerEventData.InputSource returns null when using pointerdata from new InputSourcePointer.</Title>
    <CreatedDate>07/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>2267</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2267</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Hi,  After switching the pointer from  Gazemanager to  InputSourcePointer (via SimpleSinglePointerSelector)  why is that 
FocusManager.Instance.TryGetPointingSource(PointerEventData eventData, out source);  returns null for source ?
## Expected Behavior

FocusManager.Instance.TryGetPointingSource(PointerEventData eventData, out source);
should return InputSourcePointer 

## Actual Behavior
returns null because PointingSource.OwnsInput implementation checks inputData.inputSource as null and not InteractionInputSource
 ``
Here source is null
## Unity Editor Version

2017.2.1p4

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>2266</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>IL2CPP has issues with the Build Window</Title>
    <CreatedDate>07/06/2018</CreatedDate>
    <ClosedDate>07/06/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview

Build Window isn't working as intended for IL2CPP in 2018.1
1. build all doesn't work
2. unity build doesn't work
3. deploy can't find directory (did find it once only) and therefore breaks up
4. Open APPX Packages Location does not find the right folder (did once, after update that should have fixed the IL2CPP package location)

## Expected Behavior

Build all, 
* builds unity project just like the settings describe (in my case to IL2CPP)
* build appx
* install (uninstall beforehand)

Unity build
* builds just like the build button out of build settings

Deploy
installs (uninstalls first) the appx on the device

Open Appx Location opens the right folder

## Actual Behavior

Build all stops after failing the unity build

Unity build fails instead of succeding like the build out of build settings

Deploy can't find appx location and fails


## Unity Editor Version
2018.1

## Mixed Reality Toolkit Release Version
05d004f3f6c384fa856172aab00d351168fa478a</Description>
  </Issue>
  <Issue>
    <IssueID>2264</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2264</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext: update cast syntax from (Type)variable to variable as Type </Title>
    <CreatedDate>06/06/2018</CreatedDate>
    <ClosedDate>20/11/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Code Style</Name>
        <IssueID>2264</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>2264</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>For consistency, and avoiding type cast exceptions move all casts of reference types and nullable value types from (Type)variable to variable as Type syntax</Description>
  </Issue>
  <Issue>
    <IssueID>2263</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2263</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>june18: update cast syntax from (Type)variable to variable as Type</Title>
    <CreatedDate>06/06/2018</CreatedDate>
    <ClosedDate>21/07/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Code Style</Name>
        <IssueID>2263</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>For consistency, and avoiding type cast exceptions move all casts of reference types and nullable value types from (Type)variable to variable as Type syntax.

</Description>
  </Issue>
  <Issue>
    <IssueID>2262</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can't scale the DefaultCursor</Title>
    <CreatedDate>06/06/2018</CreatedDate>
    <ClosedDate>06/06/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I have an scalable GUI in my app. Since the GUI can get really small, I also want to scale the DefaultCursor by changing the _transform.localScale_.
## Expected Behavior
The cursor should scale.
## Actual Behavior
It doesn't scale and stays at (1,1,1). If I change the cursor scale in the inspector, it also gets back to (1,1,1) when I press Play. 
Can I deactivate this default setting of the scale?
## Steps to reproduce


## Unity Editor Version
2017.4.2f2
## Mixed Reality Toolkit Release Version
2017.2.1.4</Description>
  </Issue>
  <Issue>
    <IssueID>2261</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Task vNext - Implement Windows Gaming Controllers Action Default mapping setup </Title>
    <CreatedDate>05/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Currently the Action Mapping defaults are defined in the InputMapping class.  This needs to be re-implemented per controller, so that a Controllers defaults are determined by the capabilities of that controller (following a standard pattern)

## Requires
* Standard configuration to list the default actions for a Windows Gaming controller
* Standard configuration to implement those actions on initialization of an Windows Gaming controller

## Acceptance Criteria
- [ ] When I create a new controller mapping, I should be able to load the defaults for that controller
- [ ] While editing a controller mapping, I should be able to replace the current configuration with the default mappings
- [ ] While editing a controller mapping, I should be able to append the current configuration with the default mappings, replacing any that already match the defaults (no duplicates)
- [ ] When I create a new controller mapping with no Interactions defined, when the project is run the default mappings should be loaded.</Description>
  </Issue>
  <Issue>
    <IssueID>2260</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Task vNext - Implement OpenVR Controller Action Default mapping setup </Title>
    <CreatedDate>05/06/2018</CreatedDate>
    <ClosedDate>28/07/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Currently the Action Mapping defaults are defined in the InputMapping class.  This needs to be re-implemented per controller, so that a Controllers defaults are determined by the capabilities of that controller (following a standard pattern)

## Requires
* Standard configuration to list the default actions for a OpenVR controller
* Standard configuration to implement those actions on initialization of an OpenVR controller

## Acceptance Criteria
- [ ] When I create a new controller mapping, I should be able to load the defaults for that controller
- [ ] While editing a controller mapping, I should be able to replace the current configuration with the default mappings
- [ ] While editing a controller mapping, I should be able to append the current configuration with the default mappings, replacing any that already match the defaults (no duplicates)
- [ ] When I create a new controller mapping with no Interactions defined, when the project is run the default mappings should be loaded.</Description>
  </Issue>
  <Issue>
    <IssueID>2259</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Task vNext - Implement WMR Controllers Action Default mapping setup</Title>
    <CreatedDate>05/06/2018</CreatedDate>
    <ClosedDate>28/07/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Currently the Action Mapping defaults are defined in the InputMapping class.  This needs to be re-implemented per controller, so that a Controllers defaults are determined by the capabilities of that controller (following a standard pattern)

## Requires
* Standard configuration to list the default actions for a Mixed Reality controller
* Standard configuration to implement those actions on initialization of a Mixed Reality controller

## Acceptance Criteria
- [ ] When I create a new controller mapping, I should be able to load the defaults for that controller
- [ ] While editing a controller mapping, I should be able to replace the current configuration with the default mappings
- [ ] While editing a controller mapping, I should be able to append the current configuration with the default mappings, replacing any that already match the defaults (no duplicates)
- [ ] When I create a new controller mapping with no Interactions defined, when the project is run the default mappings should be loaded.</Description>
  </Issue>
  <Issue>
    <IssueID>2258</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Task vNext - Implement DeviceInputType filters for controllers and apply</Title>
    <CreatedDate>05/06/2018</CreatedDate>
    <ClosedDate>18/09/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Not all devices have the same device inputs.  In order to aid a developer when configuring controllers, they only need to be able to select those inputs a specific controller supports

## Requires
* The controller definitions to be updated to list which DeviceInputTypes are supported by the hardware
* The Inspectors need to be updated to reflect the supported DeviceInputTypes that are defined for the controller
* Additionally, the Axis type needs to be pre-determined / defaulted for each DeviceInputType on the controller
* The inspector should inherit the default Axis type for a specific DeviceInputType from the controller. Although the user can change it if they wish

## Acceptance Criteria
- [x] Each controller should define it's supported DeviceInputTypes
- [x] Each controller should define the default Axis for each DeviceInputType
- [x] As a user I should be able to define a custom controller setup with only those DeviceInputTypes
- [x] The Input Action list should be limited to only those available for the selected DeviceInputType/Axis combination</Description>
  </Issue>
  <Issue>
    <IssueID>2257</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Task vNext - Define SDK Selector</Title>
    <CreatedDate>05/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Currently, the Mixed Reality manager forces the activation of the selected device (hardcoded)
This mechanism needs to be replaced with the ability to "Auto" select the required / available SDK at runtime.

## Requires
* The ability to detect the platform the project is running on 
* The ability to detect which supported headset / SDK is active
* The ability for the developer to chose / activate SDK's as they see fit

## Acceptance Criteria
- [X] I can target the UWP platform and make devices available
- [X] I can target the UWP platform and run a project for it to be displayed in an Immersive device
- [x] I can target the UWP platform and run a project for it to be displayed on a HoloLens
- [X] I can target the Standalone platform and run a project for it to be displayed on a HTC Vive
- [ ] I can target the Standalone platform and run a project for it to be displayed on an Occuls Rift
- [ ] I can target the Standalone platform and run a project for it to be displayed on a ….
- … Other targets to be defined</Description>
  </Issue>
  <Issue>
    <IssueID>2256</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2256</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Task vNext - Implement Windows Gaming Controllers</Title>
    <CreatedDate>05/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>2256</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Provide an implementation for Windows Gaming Controllers for vNext

## Requires
* New ArcadeStick implementation
* New GamePad implementation
* New Joystick implementation
* RacingWheel implementation

## Acceptance Criteria
- [ ] Implementation of the WindowsGaming device manager
- [ ] Implementation of the ArcadeStick controller
- [ ] Implementation of the GamePad controller
- [ ] Implementation of the Joystick controller
- [ ] Implementation of the RacingWheel controller
- [ ] SDK detection and initialization of the WindowsGaming device on all supported Unity platforms
- [ ] Configuration to enable the WindowsGaming device in the Mixed Reality Manager</Description>
  </Issue>
  <Issue>
    <IssueID>2255</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Task vNext - Implement WMR "Navigation" controller</Title>
    <CreatedDate>05/06/2018</CreatedDate>
    <ClosedDate>18/09/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The existing interactionSources class implemented multiple behaviours, from controllers, to Gestures and navigation.  The Controller interaction has been extracted in to a new controller, the same has to happen for the other elements of the InteractionSources implementation

## Requires
* A new implementation of the Navigation Interaction
* Documentation to support the use / implementation of the Navigation Interaction

## Acceptance Criteria
- [ ] New Navigation Controller (or other refactored "Device") implementation
- [ ] Documentation to support Navigation implementation</Description>
  </Issue>
  <Issue>
    <IssueID>2254</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Task vNext - Implement  WMR "Gesture" controller</Title>
    <CreatedDate>05/06/2018</CreatedDate>
    <ClosedDate>18/09/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The existing interactionSources class implemented multiple behaviours, from controllers, to Gestures and navigation.  The Controller interaction has been extracted in to a new controller, the same has to happen for the other elements of the InteractionSources implementation

## Requires
* A new implementation of the Gesture Interaction
* Documentation to support the use / implementation of the Gesture Interaction

## Acceptance Criteria
- [ ] New Gesture Controller (or other refactored "Device") implementation
- [ ] Documentation to support Gesture implementation</Description>
  </Issue>
  <Issue>
    <IssueID>2252</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Task vNext - Create "Input Actions"</Title>
    <CreatedDate>05/06/2018</CreatedDate>
    <ClosedDate>29/10/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The SDK needs a component to visualise what "InputActions" are being exposed by the InputSystem.
This would enable a user to test their controller mappings are working as expected 

## Requires
* An SDK component that can be added to a scene to demonstrate what Actions are available
* Guidance in the script for how to wire up and accept Input Actions
* Documentation to aid and support the use of InputActions in a scene

## Acceptance Criteria
- [x] A new SDK Profile that gives users the ability to create and wire up actions to device inputs.
- [x] The ability to draw Input Actions on components that use the type.
- [x] The Input Action field should have an attribute to filter on certain actions based on Axis Constraint
</Description>
  </Issue>
  <Issue>
    <IssueID>2251</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Task vNext - Create "Rig validator" SDK component</Title>
    <CreatedDate>05/06/2018</CreatedDate>
    <ClosedDate>06/09/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
To ensure consumers have a good experience with the MRTK, we should provide a script to validate the Rig setup in a scene.  Doing simple tests based on experience

## Requires
* An editor script to check a RIG
* User should be able to select a RIG or pass the rig setup/prefab for testing
* Rig should be checked for the existence of a camera, the camera setup, body / head / controller positions, etc

## Acceptance Criteria
- [x] I can test a RIG, to ensure it's camera setup it appropriate for MRTK
- [x] I can test a RIG, to ensure it's Body / Head / etc positions are valid
-  … Other tests to be added
</Description>
  </Issue>
  <Issue>
    <IssueID>2250</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>PROPOSAL: Body Lock Solver Orientations need to be more usable</Title>
    <CreatedDate>05/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview

I can't really make heads or tails of the Body Locked Solver's Orientation field, my only conclusion is that its current behavior is some degraded form of the original intention. Correct me if there's an intention I'm missing.

## Actual Behavior

It seems like the "Default" orientation uses the yaw of the tracked object, but not the pitch or roll. This "Default" only makes sense when it is attached to the head and intended as a "utility belt" item that follows an imagined body instead of the head.

It seems like the "CameraFacing" orientation actually aligns the object with the camera, regardless of the object's position (so if it is beside you, it actually faces behind you). It seems like this was intended to be used only when tracking the head (where "aligned" and "facing" are similar in small FOVs), but even then this behavior seems like a broken version of actually facing the camera.

When off, the "Rotation Tether" ignores the orientation field and uses the identity rotation. Turning this off seems useless.

Finally, there's some really wacky behavior when using Tether Angle Steps. In the gif below you can see the current Body Lock behavior (white) with the new stepping behavior I'm proposing (red). It seems like the top step of the Body Lock solver is 180 degrees, while all the other steps are 45 degrees (left and right) and 90 degrees (bottom). I can't think of a case where this would be intended, so I think it is a bug.

![anglestepping](

I'd like to fix these shortcomings. I see two ways forward and would love your feedback. The first is updating these two behaviors to make sense in more general contexts (or even their intended context?!). There is a risk this could break some content if it is relying on the above strange behaviors. Alternatively, we could deprecate the Body Lock Solver entirely, and create a new "Object Locked Solver" with improved and more flexible behaviors. 

I'm leaning toward deprecation.

## Expected Behavior

Regardless of path, I'd like to implement this functionality:

1. Remove "Rotation Tether" entirely, it is redundant with the orientation field.
2. Change "Default" to use the tracked object's pitch, yaw, and roll.
3. Create a new orientation "Unmodified" which doesn't adjust the object's rotation at all.
4. Change CameraFacing to face the camera, regardless of position, rather than align with it.
5. Create a new orientation "CameraAligned" which aligns the object with the camera (or discard this behavior entirely).
6. Create a new orientation "YawOnly" which uses the tracked object's yaw with zero rotation and zero pitch. This replaces the old Default behavior.

If we update in place, we could leave the Default behavior as is, since there are a few cases where it makes sense to use, and create a new "TrackedObject" orientation that respects pitch, yaw, and roll. I'm not sure this is a great "Default" behavior, but it would prevent any content breakages.
 </Description>
  </Issue>
  <Issue>
    <IssueID>2249</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Task vNext - Create "Default Rig" SDK component</Title>
    <CreatedDate>05/06/2018</CreatedDate>
    <ClosedDate>06/09/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
From the initial "Device" testing, certain issues arose from an incorrectly created "Rig".  As such an SDK component is needed to generate a default "Rig" (Body / Head / etc) for new users.
The default rig can also be used for visual testing of vNext features.

## Requires
* Script to generate a new Rig
* No prefabs should be used, default Unity objects only (as required)
* Should be callable from the Test project

## Acceptance Criteria
- [ ] I can generate a default rig, press play and be able to use a device in a scene
- [ ] I should be able to test the default rig in the Test project
- [ ] Only scripts added as part of the PR
- [ ] Help page created on the use of the Default Rig and explaining it's setup</Description>
  </Issue>
  <Issue>
    <IssueID>2248</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Task vNext - Update WMR to use platform code for runtime</Title>
    <CreatedDate>05/06/2018</CreatedDate>
    <ClosedDate>06/09/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The Windows Mixed Reality Device / Controllers currently use the InteractionManager provided by Unity.  This needs to be updated to enable use of the Windows.Spatial namespace in the player layer

## Requires
* Updating the InteractionManager events and handlers to use the Windows.Spatial equivalents 
* Building Controller assemblies that will rebuild and automatically wire up their references with the core MRTK assembly.
* Evaluating if any additional features are needed to support (or removal)
* Investigate possible refactoring options for Devices / Controllers

## Acceptance Criteria
- [x] I can start Unity in UWP mode whilst configured to use the Windows Mixed Reality platform
- [x] I can view a scene in editor using an Windows Mixed Reality headset
- [x] I can visualize a default object as a controller
- [x] Input System actions are generated from the Windows Mixed Reality controller and sent to the Input System
- [x] All inputs from the selected controller are mapped to the Input System</Description>
  </Issue>
  <Issue>
    <IssueID>2247</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>SimonDarksideJ</FixedById>
        <IssueID>2247</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Task vNext - Implement OpenVR Device and Initial controller</Title>
    <CreatedDate>05/06/2018</CreatedDate>
    <ClosedDate>13/07/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
OpenVR is currently defined as a scaffold.  This needs to be implemented and tested in the Standalone build.
Initial task should cover only a single controller type as a base

## Requires
* OpenVRDeviceManager (rename current scaffold)
* OpenVR**Controller**
* Tests for OpenVR system
* Feedback on implementation

## Acceptance Criteria
- [X] I can start Unity in Standalone mode whilst configured to use the OpenVR VR platform
- [X] I can view a scene using an OpenVR supported headset
- [X] I can visualize a default object as a controller 
- [X] Input System actions are generated from the OpenVR controller and sent to the Input System
- [X] All inputs from the selected controller are mapped to the Input System

## Associated PR
#2396</Description>
  </Issue>
  <Issue>
    <IssueID>2244</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Parabola Line Issue</Title>
    <CreatedDate>04/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Example/Test Scene</Name>
        <IssueID>2244</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2244</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
LineExample mesh objects missing when playing. I was trying to use the Parabola in my own scene and it wasn't rendering the mesh objects. I jumped over to run the LineExample and it looks like that scene is having issues as well. Not sure whats going on.
## Expected Behavior
View in Editor.
![screenshot_4](

## Actual Behavior
View while in play mode.
![screenshot_3](

## Steps to reproduce
Run the LineExample.

## Unity Editor Version
2018.1.0f2
## Mixed Reality Toolkit Release Version
2017.2.1.2</Description>
  </Issue>
  <Issue>
    <IssueID>2241</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ExtensionMethod.cs does not set Angular Velocity</Title>
    <CreatedDate>04/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Example/Test Scene</Name>
        <IssueID>2241</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Angular velocity is not applied when throwing objects using the grab mechanics in the example package.
I was able to fix this by adding:
`angVel = controllerAngularVelocity;`
to ExtensionMethod.cs.

Cheers!
## Mixed Reality Toolkit Release Version
Current</Description>
  </Issue>
  <Issue>
    <IssueID>2238</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>chrisfromwork</FixedById>
        <IssueID>2238</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>IPhone Spectator View and Face Detection</Title>
    <CreatedDate>04/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>2238</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>SpectatorView</Name>
        <IssueID>2238</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
We would like to use both new SpectatorView feature and Face Detection feature on iPhone

## Expected Behavior
Both Spectator View and Face Detection functionalities available

## Actual Behavior
In current MixedRealityToolkit-Unity there is no Face Detection features (or are we missing something?)

## Steps to reproduce
Add **HoloToolkit-Unity-2017.4.0.0.unitypackage** to the project
Add **HoloToolkit-Unity-PreviewFeatures-2017.4.0.0.unitypackage** to the project
Find out that UnityARSessionNativeInterface is lacking in ARFaceAnchorAddedEvent and others

## Unity Editor Version
Unity 2017.3.1p4

## Mixed Reality Toolkit Release Version
HoloToolkit-Unity-2017.4.0.0 RC2</Description>
  </Issue>
  <Issue>
    <IssueID>2237</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Improper use of Singleton.Instance in OnDisable / OnDestroy</Title>
    <CreatedDate>04/06/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview

Singleton class contains an IsInitialized property to check if there is a valid instance, without invoking an instantiation, like Singleton.Instance does. Some class check in OnDisable/OnDestroy if Instance != null, which can cause leaking of objects.

Should change all code that wishes to check if an instance is actually created to use IsInitialized instead.</Description>
  </Issue>
  <Issue>
    <IssueID>2228</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>Ecnassianer</FixedById>
        <IssueID>2228</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Proposal: In Between Solver that keeps an object between two tracked objects/transforms</Title>
    <CreatedDate>01/06/2018</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>2228</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

My team needed a solver that keeps an object in between two tracked objects. I'd like to pull this code into the June 18 release.

![image](


My implementation creates a second solverhandler (public class AdditionalSolverHandler : SolverHandler) and adds it to the gameobject at runtime. This second solverhandler updates its TransformTarget, which is used by SolverInBetween as one of the two end points. It could be used by other solver types in the future; any number of AdditionalSolverHandlers is supported.

In the process, I fixed a few bugs, particularly with the custom inspectors. Solvers can now be switched to other tracked objects while playing in editor or at runtime via script. It also adds an offset and rotation to solver handlers so you can track a virtual point near by/rotated around an actual tracked object.

I have an updated version of the SolverHandler that I've used for testing and it is 17.7x better than the old one, so I'll replace the old one with that. The only downside is my new map requires motion controllers. The upside is the old map was pretty busted without motion controllers. It will be included in this PR.

One thing that will be lacking in this pull request is a refactor of the Solver and SolverHandler's attachment coroutine. I'd like to do that in a later pull request, but for now it leaves a bit of a mess around Solvers and SolverHandlers talking to each other unnecessarily when they reattach to new tracked objects.

</Description>
  </Issue>
  <Issue>
    <IssueID>2214</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2214</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>If platform is not previously set to UWP, project settings not applied correctly</Title>
    <CreatedDate>30/05/2018</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>2214</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2214</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
If you use the MRTK's Configure menu to set your project settings, if the platform is not already set to UWP, non-default settings (ex: Target Occluded Devices) do not get applied.

Applying the settings a second time correctly updates the project.

## Steps to reproduce
- Create a new project
- Import the MRTK
- Use MRTK &gt; Configure &gt; Set Project Settings and enable Target Occluded Devices
- Click Apply
- When the dialog closes, go to File &gt; Build Settings

Settings were not correctly applied

## Unity Editor Version
2017.4.4f1

## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2208</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2208</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>A few issues with the Build Window</Title>
    <CreatedDate>30/05/2018</CreatedDate>
    <ClosedDate>30/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>2208</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>IL2CPP</Name>
        <IssueID>2208</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When building for IL2CPP the UWP folder structure is a bit different than the .NET Native, so the build window fails to locate the APPX Packages and list them correctly in the deploy tab.

- [x] Open APPX Packages Location.
- [x] Installing and Deploying to device.

Affects vNEXT, Master, May18 Patch, and June18 Patch.</Description>
  </Issue>
  <Issue>
    <IssueID>2206</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to let the object in iPhone follow in the SpectatorView?</Title>
    <CreatedDate>30/05/2018</CreatedDate>
    <ClosedDate>30/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2206</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>2206</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>SpectatorView</Name>
        <IssueID>2206</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I tried the sample scene "SpectatorViewExample" and built it both on Hololens and iPhone,and i added a "Hand Draggable" component on the object.but when i drag the object,the object in iPhone will not move.
So how can i let the object in iPhone follow?

## Unity Editor Version
2017.3.1p4
## Mixed Reality Toolkit Release Version
MRTK4.0RC2</Description>
  </Issue>
  <Issue>
    <IssueID>2203</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2203</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Proposal:We were wondering if you could add the checkbox:"Add the Spatial Mapping prefab" in "Apply Mixed Reality Scene Setting" dialog?</Title>
    <CreatedDate>29/05/2018</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>2203</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

"Apply Mixed Reality Project Setting"  has useful to add "Set Default Spatial Mapping Layer",but we might misunderstand that "Spatial Mapping" is become to available.
In actuality,we must set "SpatialMapping.prefab" to the scene, so we ware wonderring if you could add the checkbox:"Add the Spatial Mapping prefab" in "Apply Mixed Reality Scene Setting" dialog?

![image](

we can set both project and scene from configuration dialog,this should come in useful.

## Unity Editor Version
Unity 2017.4.3f1

## Mixed Reality Toolkit Release Version
MRTK 2017.4.0.0-rc1</Description>
  </Issue>
  <Issue>
    <IssueID>2199</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Issues with MeshSaver.cs</Title>
    <CreatedDate>29/05/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2199</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When I opened my computer this morning, the path.combine function was giving MeshSaver.cs issues and I don't know why. Code was working fine on Friday
## Expected Behavior
Functioning code
## Actual Behavior
Broken code
## Steps to reproduce
I would be curious to see if anyone else is getting this error or if it is just me. If you do not have this problem, please state your release version of Visual Studio, Unity, and what Libraries you included
## Unity Editor Version
2018.1
## Mixed Reality Toolkit Release Version
2017.4.0.0</Description>
  </Issue>
  <Issue>
    <IssueID>2193</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>2193</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>About TooltipExamples.unity in HoloToolkit-Unity-Examples-2017.4.0.0-rc.unitypackage</Title>
    <CreatedDate>29/05/2018</CreatedDate>
    <ClosedDate>29/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Aren't these layout of tooltip objects strange?
Open the scene "TooltipExamples.unity",it has become to following image:

![image](

I feel it has seen setting the tooltip of "LunarModule" to far from the target.

## Steps to reproduce

 1. Import "HoloToolkit-Unity-2017.4.0.0-rc.unitypackage".
 2. Import "HoloToolkit-Unity-Examples-2017.4.0.0-rc.unitypackage".
 3. Open the scene "TooltipExamples.unity",execute it.

## Unity Editor Version
Unity 2017.4.3f1

## Mixed Reality Toolkit Release Version
MRTK 2017.4.0.0-rc1
</Description>
  </Issue>
  <Issue>
    <IssueID>2192</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>how to capture an image from the frontcam</Title>
    <CreatedDate>29/05/2018</CreatedDate>
    <ClosedDate>29/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview

## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>2191</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>IT's an easy test, but  when I clicked, there 's no response,   it's right with the unity5.5, but after I change the editor to unity217.2.1p2, it failed to work right.</Title>
    <CreatedDate>29/05/2018</CreatedDate>
    <ClosedDate>29/05/2018</ClosedDate>
    <IssueLabels />
    <Description>using HoloToolkit.Unity.InputModule;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Onclid : MonoBehaviour {

	// Use this for initialization
	void Start () {
		
	}
	
	// Update is called once per frame
	void Update () {
		
	}
     void OnInputClicked(InputClickedEventData eventData)
    {
        GameObject cube= GameObject.Find("Cube");
        cube.GetComponent&lt;Renderer&gt;().material.color = Color.red;
        Debug.Log("clicked");
    }
}</Description>
  </Issue>
  <Issue>
    <IssueID>2190</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>I was wondering if you could Add dialog that has "Yes/No/Cancel" buttons?</Title>
    <CreatedDate>29/05/2018</CreatedDate>
    <ClosedDate>30/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>0 - Backlog</Name>
        <IssueID>2190</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>2190</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>2190</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
We can use dialog that is different button type following:
1.OK button
2.Yes/No button

I was wonderring if you could Add the dialog that had "Yes/No/Cancel" buttons? 
This should come in useful.

## Unity Editor Version
Unity 2017.4.3f1

## Mixed Reality Toolkit Release Version
MRTK2017.4.0.0-RC1</Description>
  </Issue>
  <Issue>
    <IssueID>2179</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>2179</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Bounding Box UX on Hololens</Title>
    <CreatedDate>27/05/2018</CreatedDate>
    <ClosedDate>28/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2179</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Using the realease Candidate for 2014.4 and using the UX Bounding Box Manipulation excample.

## Expected Behavior
When pressing DONE the object should not be draggable any more

## Actual Behavior
When pressing DONE, the manupaltion Interface disappears, but the object can still be dragged.

## Steps to reproduce
Use MRToolkit Excample .

## Unity Editor Version
Unity36 2017.4.4f1

## Mixed Reality Toolkit Release Version

</Description>
  </Issue>
  <Issue>
    <IssueID>2170</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpectatorView - HoloLens camera doesn't activate when iPhone tries to join</Title>
    <CreatedDate>26/05/2018</CreatedDate>
    <ClosedDate>26/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>2170</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2170</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>SpectatorView</Name>
        <IssueID>2170</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
HoloLens camera doesn't activate when iPhone tries to join the session.

Built &amp; tested example scene, followed all the instructions in the Readme.
iPhone successfully generates &amp; displays marker, HoloLens successfully loads and displays color changing star. But HoloLens camera never activates. Tested with multiple WiFi networks(5G &amp; non-5G) &amp; closed Wireless Lan networks, no success with any of them.

## Unity Editor Version &amp; Relevant Results
2017.4.4f1 - iOS app worked as expected. HoloLens app didn't load &amp; remained blank after displaying unity splash. Output log showed the spectatorviewplugin.dll didn't load.

2017.2.3f1 - iOS app worked as expected. HoloLens app loaded successfully with color changing star, but doesn't recognize iOS devices attempts to join &amp; therefore never loads camera to see the marker. 

## Versions
MRTK - 2017.4
iPhone X - iOS 11.3
HoloLens - OS Build: 10.0.14393.2248</Description>
  </Issue>
  <Issue>
    <IssueID>2167</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[master] Create HoloToolkit-Preview folder/package for early or experimental releases</Title>
    <CreatedDate>25/05/2018</CreatedDate>
    <ClosedDate>26/05/2018</ClosedDate>
    <IssueLabels />
    <Description>This would effectively isolate features that
- are experimental
- may change (breaking) more rapidly than other features
- may not be ready for wide adoption
- might not pass WACK (due to native dependencies)</Description>
  </Issue>
  <Issue>
    <IssueID>2166</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2166</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Can I Change length of Motion Controller pointing ray when if lost focus from a object?</Title>
    <CreatedDate>25/05/2018</CreatedDate>
    <ClosedDate>30/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2166</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Can I Change length of Motion Controller pointing ray when if lost focus from a object?
I feel short it in the setting of MRTK2017.4.0.0-RC1. 
When we lost focus from a object,we would be better to "Ray" is pointing far as possible.  We will be easer to understand the state of lost focus .

![1](

## Steps to reopen 
Open scene "InputNavigationRotateTest.unity" and execution in HoloToolkit-Unity-2017.4.0.0-rc.unitypackage.

## Unity Editor Version
Unity 2017.4.3f1
## Mixed Reality Toolkit Release Version
MRTK 2017.4.0.0-RC1</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>2166</IssueID>
        <PullRequestID>2201</PullRequestID>
        <Title>[May18] Updating pointing rays to extend out to the pointing extent off holograms</Title>
        <Description>Overview
---
This PR updates the pointing ray visualization to extend out the full length of the pointer's pointing extent (or the FocusManager's default, if no override is specified), instead of the previous cursor default.

This is implemented in a way to preserve the default behavior of the Gaze cursor being placed at 2m, which is closer than the default pointing extent.

Changes
---
- Fixes: #2166.</Description>
        <CreatedDate>29/05/2018</CreatedDate>
        <ClosedDate>30/05/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Input System</Name>
            <IssueID>2166</IssueID>
            <PullRequestID>2201</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>2201</PullRequestID>
            <IssueID>2166</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>2165</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2165</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Spectator View Build Warnings</Title>
    <CreatedDate>24/05/2018</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>IL2CPP</Name>
        <IssueID>2165</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>SpectatorView</Name>
        <IssueID>2165</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When building for .NET 4.x, with IL2CPP and .NET Standard 2 these two stack overflow warnings appear.

``</Description>
  </Issue>
  <Issue>
    <IssueID>2164</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpatialMappingSource Build Warning</Title>
    <CreatedDate>24/05/2018</CreatedDate>
    <ClosedDate>03/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>.NET Backend</Name>
        <IssueID>2164</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

When targeting .NET Scripting Backend and .NET Standard 2 using the Master Configuration, `SpatialMappingSource` throws a warning about a possible missing namespace.

``</Description>
  </Issue>
  <Issue>
    <IssueID>2163</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>may18 rc - WACK fails - spectatorview</Title>
    <CreatedDate>24/05/2018</CreatedDate>
    <ClosedDate>30/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>SpectatorView</Name>
        <IssueID>2163</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Compiling a project using the 2017.4.0.0 release candidate fails WACK with errors regarding the pinvokes into the spectatorviewplugin.dll -- the dll is NOT present in the build.

## Steps to reproduce
- Import the 2017.4.0.0 release candidate and examples unitypackages
- Open your favorite scene
- Genereate solution
- Build master config
- Generate store package
- Run local WACK

</Description>
  </Issue>
  <Issue>
    <IssueID>2162</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Remoting Play Application looses Connection on bloom</Title>
    <CreatedDate>24/05/2018</CreatedDate>
    <ClosedDate>24/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I don't know if this is the right place to post this error so feel free to redirect me. 
When using remoting play on the hololens, if you make the bloom gesture the remoting play application will get minimized. This is annoying and I wish one could prevent that (without kiosk mode), but alas it is not the real problem for me. Far worse is that when you open up the minimized app again, it has forgotten that it was connected. Unity on the other side still thinks there is a connection. Both will ignore each others status and stay like that forever. If you try to disconnect and reconnect from the unity side of things, unity will simply crash.
## Expected Behavior
Remoting App keeping the connection even while minimized
## Actual Behavior
Remoting App looses the connection.
## Steps to reproduce
Try any project with remoting.

## Unity Editor Version
2017.4.4
## Mixed Reality Toolkit Release Version
2017.2.1.4 Patch Release</Description>
  </Issue>
  <Issue>
    <IssueID>2161</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Remoting Play doesn't support anchor store</Title>
    <CreatedDate>24/05/2018</CreatedDate>
    <ClosedDate>24/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
On entering play mode I get the warning that this build doesn't support WorldAnchorStoreManager. Which strikes me as weird, as I can use all the other spatial features during remoting play and get info about the movement of the lens.
## Expected Behavior
Being able to use Anchors and Anchor sharing during remoting play
## Actual Behavior
not supported
## Steps to reproduce
The Example sharing project (with the auto join room) will do fine to experience this.
## Unity Editor Version
2017.4.4
## Mixed Reality Toolkit Release Version
2017.2.1.4 Patch Release</Description>
  </Issue>
  <Issue>
    <IssueID>2157</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[May18] Tooltip example scene's labels position</Title>
    <CreatedDate>23/05/2018</CreatedDate>
    <ClosedDate>26/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2157</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>2157</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
In the Tootip example scene, labels are in weird location.
![2018-05-23 16_17_52-unity 2017 4 3f1 64bit - tooltipexamples unity - mrtk-rc - universal windows p](

## Expected Behavior
It should be close to the object

## Unity Editor Version
2017.2.1p2 and 2017.4.3f1

## Mixed Reality Toolkit Release Version
2017.4.0.0 Release Candidate
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>2157</IssueID>
        <PullRequestID>2158</PullRequestID>
        <Title>[May18] Updating tooltip label position.</Title>
        <Description>Overview
---
Updated the position of the labels in ToolTip example scene.
![2018-05-23 17_01_04-unity 2017 2 1p2 64bit - tooltipexamples unity - mrtk-rc - universal windows p](


Changes
---
- Fixes: #2157 
</Description>
        <CreatedDate>24/05/2018</CreatedDate>
        <ClosedDate>24/05/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Input System</Name>
            <IssueID>2157</IssueID>
            <PullRequestID>2158</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>UX Controls</Name>
            <IssueID>2157</IssueID>
            <PullRequestID>2158</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>2153</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cursor works in emulator but not at deployment</Title>
    <CreatedDate>23/05/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2153</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>No Repro</Name>
        <IssueID>2153</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I am creating an application for the Hololens in Unity, when I test it in the Unity holographic emulator the cursor works properly, but when I deploy it to the Hololens it does not work.
I followed the the windows academy to get it working, but that did not help. Anyone any idea how to solve this?</Description>
  </Issue>
  <Issue>
    <IssueID>2152</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Build is failing WACK submission due to potential HoloToolkit .DLL's</Title>
    <CreatedDate>23/05/2018</CreatedDate>
    <ClosedDate>23/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Hey guys my app is packaged for submission but I am failing the WACK process due to a few rogue libraries and I'm unsure how to handle this . 

## Expected Behavior

I submit my app and it passes the Supported API sub-section of the WACK tests 

## Actual Behavior

The app fails on on the supported API sub-section of the the WACK tests 

## Steps to reproduce
Build UWP app in unity, open exported project in  Visual Studio  , export master build and then upload to WACK process , Build returns to fail .  


The following errors are displayed in the build : 

Supported APIs:
Error Found: The supported APIs test detected the following errors:
``

## Unity Editor Version
2017.2.1p2

## Mixed Reality Toolkit Release Version
2017.2.1p2</Description>
  </Issue>
  <Issue>
    <IssueID>2151</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2151</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Public variables not visible in inspector</Title>
    <CreatedDate>23/05/2018</CreatedDate>
    <ClosedDate>23/05/2018</ClosedDate>
    <IssueLabels />
    <Description>Having an issue where public variables from scripts such as Billboard.cs don't display in the inspector window, all that's visible is the title. Compiling and script functionality work as expected though.

Have tried in Unity 2017.3.1f1 and 2017.2.1f1 with no luck. Any ideas?

## Unity Editor Version
2018.1.0f2
## Mixed Reality Toolkit Release Version
2017.2.1.4
</Description>
  </Issue>
  <Issue>
    <IssueID>2146</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title> GesturesInput with id 2000000002 does not support pointing</Title>
    <CreatedDate>22/05/2018</CreatedDate>
    <ClosedDate>05/07/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2146</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Assertion failed: GesturesInput (MixedRealityToolkit.InputModule.InputSources.InteractionInputSource) with id 2000000002 does not support pointing!
UnityEngine.Debug:Assert(Boolean, String)
MixedRealityToolkit.InputModule.Focus.InputSourcePointer:OnPreRaycast() (at Assets/MixedRealityToolkit/InputModule/Scripts/Focus/InputSourcePointer.cs:68)
MixedRealityToolkit.InputModule.Focus.FocusManager:UpdatePointer(PointerData) (at Assets/MixedRealityToolkit/InputModule/Scripts/Focus/FocusManager.cs:507)
MixedRealityToolkit.InputModule.Focus.FocusManager:UpdatePointers() (at Assets/MixedRealityToolkit/InputModule/Scripts/Focus/FocusManager.cs:470)
MixedRealityToolkit.InputModule.Focus.FocusManager:Update() (at Assets/MixedRealityToolkit/InputModule/Scripts/Focus/FocusManager.cs:64)
`</Code>
    <Description>## Overview
It's actually not a bug on the Mixed Reality Portal, but on the Windows or Unity side, but I did not know where to put it.  
Since Microsofts April Update, there are certain directions, if looked at, the simulated motion controller just disappears and stays like this until moved out of that view direction area. It's completely weird as it's reproducible, so when you look at a certain direction the Motion Controller just vanishes and the console throws the following error, because the InputSoucePointer.cs class has implemented an assert checking for pointability. I did not dig into it too much because I think this should not even be thrown in any case:

``

## Expected Behavior
The Motion Controller is always visible

## Actual Behavior
At some view directions the Motion Controller just vanishes

## Unity Editor Version
2017.2.1p3

## Mixed Reality Toolkit Release Version
dev from about 3 months ago</Description>
  </Issue>
  <Issue>
    <IssueID>2143</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2143</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>june18: Update coding style guidelines</Title>
    <CreatedDate>21/05/2018</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>2143</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Re: use of WINDOWS_UWP vs UNITY_UWP, etc</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>2142</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2142</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext: Update coding style guidelines</Title>
    <CreatedDate>21/05/2018</CreatedDate>
    <ClosedDate>29/10/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>2142</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Re: use of [WINDOWS_UWP vs UNITY_UWP]( etc</Description>
  </Issue>
  <Issue>
    <IssueID>2138</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2138</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2138</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Scrub BoundaryManager TODOs re: Unity 2017.2 MRTP</Title>
    <CreatedDate>21/05/2018</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Boundaries</Name>
        <IssueID>2138</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>There are three instances of TODO comments (as well as some disabled code) re: Unity 2017.2 MRTP5.

- Assets\HoloToolkit\Boundary\Scripts\BoundaryManager.cs(115):            // TODO: BUG: Unity: configured bool always returns false in 2017.2.0p2-MRTP5.
- Assets\HoloToolkit\Boundary\Scripts\BoundaryManager.cs(162):            // But this always returns false with in 2017.2.0p2-MRTP5.
- Assets\HoloToolkit\Boundary\Scripts\BoundaryManager.cs(180):            // But this always returns false with in 2017.2.0p2-MRTP5. 

MRTK no longer supports MRTP builds. These TODOs should be removed and the code updated, as appropriate.</Description>
  </Issue>
  <Issue>
    <IssueID>2131</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>PJBowron</FixedById>
        <IssueID>2131</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>May18 branch: grip position not reported for in-Editor hands</Title>
    <CreatedDate>18/05/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>2131</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>2131</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I believe there was an oversight in my changes to address #1824 - the Left/RightHandInputControl prefabs do not have 'grip position' selected as a supported feature. Additionally the `CustomInputControl` that governs in-Editor input doesn't update grip position/rotation in the `SourcePose`.

I think perhaps that a subsequent change has introduced more use of `TryGetGripPosition` than previously existed? It's these calls that are failing now, however, they always would have, had they been there before my change!?

**Note: on device, behavior works as expected.**

I've got a local fix; I'll post a PR asap.

## Expected Behavior
Running in Editor, attempts to obtain grip position succeed and return the general hand position.

## Actual Behavior
Attempts fail, grip position returns as 0,0,0

## Steps to reproduce
1. setup an MRTK scene
2. add an object with a `HandDraggable` script
3. the object cannot be moved in-Editor, but can on device

## Mixed Reality Toolkit Release Version
May18 branch; SHA: 01876ebc6d6ca23319a5ee4aff784a5bc538e9f4</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>2131</IssueID>
        <PullRequestID>2133</PullRequestID>
        <Title>Fix to allow in-Editor hands to properly support and report a 'grip' position</Title>
        <Description>Overview
---
Fixes an issue introduced #1870 (&amp; #2050 ) whereby the in-Editor hands no longer report their position, if data is requested through `TryGetGripPosition`

Changes
---
- Fixes: #2131  .
</Description>
        <CreatedDate>18/05/2018</CreatedDate>
        <ClosedDate>18/05/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Input System</Name>
            <IssueID>2131</IssueID>
            <PullRequestID>2133</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>2130</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpeechInputSource results in loss of audio playback from other applications when running in Editor</Title>
    <CreatedDate>18/05/2018</CreatedDate>
    <ClosedDate>31/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>2130</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I'm listening to music while coding.  I hit play in the editor, and the music and all other audio from other applications goes away.  I hit stop, music is still gone.  I click away from Unity, and the music comes back.  I click back into Unity and music is gone.

Using the Settings-&gt;System-&gt;Sound panel, I "Speech Runtime Executable" in the list whenever I have no other playback.

## Expected Behavior
I am able to keep rocking out while using Unity.

## Actual Behavior
I am sad music-less programmer.

## Steps to reproduce
Play some background audio.
Hit play on a a project with SpeechInputSource
Listen to music go away.

## Unity Editor Version
2017.4.3f1.   
Running Windows April 2018 update, not sure if this is new behavior, but I didn't notice it until very recently.

## Mixed Reality Toolkit Release Version
Development head as of a few months ago.</Description>
  </Issue>
  <Issue>
    <IssueID>2128</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to access vNext current build?</Title>
    <CreatedDate>18/05/2018</CreatedDate>
    <ClosedDate>18/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2128</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I have searched and I am unable to find the code for vNext. I looked at the branch but I do not seem to have access to the code. I only see the meta files.</Description>
  </Issue>
  <Issue>
    <IssueID>2126</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>chrisfromwork</FixedById>
        <IssueID>2126</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Invalid IL detected warnings in UnityEngine.Internal</Title>
    <CreatedDate>18/05/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>.NET Backend</Name>
        <IssueID>2126</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When building against the .NET scripting backend and generating a Master build of the toolkit, there's many warnings about invalid IL and unresolved p/invoke method calls in Spectator View.

``

## Unity Editor Version
2017.4.3f1 &amp; 2018.1.0f2

## Mixed Reality Toolkit Release Version
a2871ff511690107422802f87a427def1b60666e</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>2126</IssueID>
        <PullRequestID>2148</PullRequestID>
        <Title>eliminate .net native pinvoke warnings</Title>
        <Description>Overview
---
The SpectatorView feature references, but does not ship a companion dll (it must be built from  and added to the project by the app developer). As a result, the .net native compiler (used for master builds) cannot resolve the pinvokes and reports warnings.

Changes
---
Tell the .net native compiler that it can trust the pinvoke calls by setting ExactSpelling=true in the DllImport attribute.

- Fixes: #2126
</Description>
        <CreatedDate>22/05/2018</CreatedDate>
        <ClosedDate>22/05/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>IL2CPP</Name>
            <IssueID>2126</IssueID>
            <PullRequestID>2148</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>SpectatorView</Name>
            <IssueID>2126</IssueID>
            <PullRequestID>2148</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>2125</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>timGerken</FixedById>
        <IssueID>2125</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>May18 branch does not Build IL2CPP APPX</Title>
    <CreatedDate>18/05/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>IL2CPP</Name>
        <IssueID>2125</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>SpectatorView</Name>
        <IssueID>2125</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When building the APPX package in Visual Studio the build fails to resolve external symbols for the Spectator View assemblies:

``

## Unity Editor Version
2017.4.3f1 &amp; 2018.1.0f2

## Mixed Reality Toolkit Release Version
a2871ff511690107422802f87a427def1b60666e</Description>
  </Issue>
  <Issue>
    <IssueID>2124</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Master Build warnings with IL2CPP in 2017+</Title>
    <CreatedDate>18/05/2018</CreatedDate>
    <ClosedDate>27/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>IL2CPP</Name>
        <IssueID>2124</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The `MetroHandleRef.cs` class conflicts with the imported type 'HandleRef" in mscorlib when using the IL2CPP scripting backend.

## Unity Editor Versions
- 2017.4.3f1
- 2018.1.0f2

## Mixed Reality Toolkit Release Version
84493c975fbf0fe0f3541303ce1758ca11dfe44a</Description>
  </Issue>
  <Issue>
    <IssueID>2123</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2123</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Master branch does not build for IL2CPP in 5.6</Title>
    <CreatedDate>18/05/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>GLTF</Name>
        <IssueID>2123</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>IL2CPP</Name>
        <IssueID>2123</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>2123</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(141,55): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(143,31): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(156,23): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(156,46): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(157,23): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(157,48): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(158,23): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(158,49): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(159,23): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(159,47): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(160,23): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(160,46): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(165,27): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(168,47): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(170,59): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(184,27): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(186,47): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(188,45): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(212,39): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(214,47): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(217,71): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(220,42): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(223,42): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(233,128): error CS0012: The type 'Dictionary&lt;,&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(234,57): error CS0012: The type 'Dictionary&lt;,&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(234,47): error CS1579: foreach statement cannot operate on variables of type 'System.Collections.Generic.Dictionary&lt;string, GLTF.Schema.AccessorId&gt;' because 'System.Collections.Generic.Dictionary&lt;string, GLTF.Schema.AccessorId&gt;' does not contain a public definition for 'GetEnumerator'
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(256,17): error CS0012: The type 'Dictionary&lt;,&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(302,40): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(302,34): error CS1579: foreach statement cannot operate on variables of type 'System.Collections.Generic.List&lt;GLTF.Schema.NodeId&gt;' because 'System.Collections.Generic.List&lt;GLTF.Schema.NodeId&gt;' does not contain a public definition for 'GetEnumerator'
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(337,22): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(339,44): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(339,39): error CS1579: foreach statement cannot operate on variables of type 'System.Collections.Generic.List&lt;GLTF.Schema.NodeId&gt;' because 'System.Collections.Generic.List&lt;GLTF.Schema.NodeId&gt;' does not contain a public definition for 'GetEnumerator'
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(353,72): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(356,38): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(358,38): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(382,45): error CS0012: The type 'Dictionary&lt;,&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(387,42): error CS0012: The type 'Dictionary&lt;,&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(390,41): error CS0012: The type 'Dictionary&lt;,&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(394,36): error CS0012: The type 'Dictionary&lt;,&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(398,37): error CS0012: The type 'Dictionary&lt;,&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(402,37): error CS0012: The type 'Dictionary&lt;,&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(406,37): error CS0012: The type 'Dictionary&lt;,&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(410,40): error CS0012: The type 'Dictionary&lt;,&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(418,42): error CS0012: The type 'Dictionary&lt;,&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(434,75): error CS0012: The type 'Dictionary&lt;,&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(455,31): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(455,63): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(459,36): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(459,68): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(546,25): error CS0012: The type 'Dictionary&lt;,&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(546,51): error CS0012: The type 'Dictionary&lt;,&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(548,82): error CS0012: The type 'Dictionary&lt;,&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(709,23): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(710,23): error CS0012: The type 'List&lt;&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(711,21): error CS0012: The type 'Dictionary&lt;,&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(712,21): error CS0012: The type 'Dictionary&lt;,&gt;' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Collections, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.
Assets\HoloToolkit\Utilities\Scripts\GLTF\Scripts\GLTFSceneImporter.cs(714,82): error CS0165: Use of unassigned local variable 'extension'
`</Code>
    <Description>## Overview
Using the standard build window and setting the Scripting backend to IL2CPP, the editor fails to build due to glTF libraries.

``

## Unity Editor Version
5.6.6f2

## Mixed Reality Toolkit Release Version
84493c975fbf0fe0f3541303ce1758ca11dfe44a</Description>
  </Issue>
  <Issue>
    <IssueID>2119</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>2119</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Dev branch Compile Issues</Title>
    <CreatedDate>17/05/2018</CreatedDate>
    <ClosedDate>24/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>IL2CPP</Name>
        <IssueID>2119</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Assets\MixedRealityToolkit-Examples\SharingWithUNET\Scripts\GenericNetworkTransmitter.cs(129,33): error CS1545: Property, indexer, or event 'StreamSocketListener.ConnectionReceived' is not supported by the language; try directly calling accessor methods 'StreamSocketListener.add_ConnectionReceived(TypedEventHandler&lt;StreamSocketListener, StreamSocketListenerConnectionReceivedEventArgs&gt;)' or 'StreamSocketListener.remove_ConnectionReceived(EventRegistrationToken)'
Assets\MixedRealityToolkit\Sharing\Scripts\SDK\SharingClientPINVOKE.cs(87,51): warning CS0436: The type 'SystemException' in 'Assets\MixedRealityToolkit\Common\Scripts\CrossPlatform\SystemException.cs' conflicts with the imported type 'SystemException' in 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. Using the type defined in 'Assets\MixedRealityToolkit\Common\Scripts\CrossPlatform\SystemException.cs'.
Assets\MixedRealityToolkit\Utilities\Scripts\ApplicationViewManager.cs(98,36): error CS1545: Property, indexer, or event 'CoreWindow.VisibilityChanged' is not supported by the language; try directly calling accessor methods 'CoreWindow.add_VisibilityChanged(TypedEventHandler&lt;CoreWindow, VisibilityChangedEventArgs&gt;)' or 'CoreWindow.remove_VisibilityChanged(EventRegistrationToken)'
Error building Player because scripts had compiler errors
Exception: Build Result: Failed
`</Code>
    <Description>## Overview
When targeting IL2CPP and .NET Standard 2.0 the editor fails to build a solution.
``

## Steps to reproduce


UWP SDK: 10.0.17134.0
Scripting Runtime Verison: 4.x Equivalent
Scripting Backend: IL2CPP
API Compatibility: .NET Standard 2.0
Build Config: Debug
Build Platform: x86

## Unity Editor Version
2018.1.0f2

## Mixed Reality Toolkit Release Version
Dev_Working Branch</Description>
  </Issue>
  <Issue>
    <IssueID>2022</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Shared Experience through open internet: What kind of information is transmitted? </Title>
    <CreatedDate>27/04/2018</CreatedDate>
    <ClosedDate>19/06/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>2022</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>2022</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
We want to have a shared experience that we can connect from anywhere in the world. As far as I understood this functionality works with executing an exe file to start a server on the PC. 

In our application, there are CAD models that are restricted. 

So my question is, what exactly is uploaded to the servers for sharing? Can we track what is transmitted? Does it include any information about CAD model? Or just the transforms of the objects are shared?

Is it possible to use another server possibility or cloud services and still use shared libraries from MixedRealityToolkit?

## Expected Behavior
No restricted CAD related data would be shared. Only the transforms of the objects are shared.
## Actual Behavior
Unknown
## Steps to reproduce
-

## Unity Editor Version
latest Unity version that supports UWP development
## Mixed Reality Toolkit Release Version
latest
</Description>
  </Issue>
  <Issue>
    <IssueID>2021</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>2021</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>TwoHandManipulatable script moves objects even if OneHandMovement option is unchecked</Title>
    <CreatedDate>27/04/2018</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>2021</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I hope this is not a duplicate. I checked and it seems that nobody has reported this behaviour yet.
As you can get from the title, there is a bug in TwoHandManipulatable script. It's possible to move objects using one hand even if OneHandMovement option is unchecked.

## Expected Behavior
While manipulating objects in one of TwoHand state (Scaling, Rotating, MovingScaling, RotatingScaling, MovingRotatingScaling), if I lose track of one of my hands I expect the action (move, scale, rotate) that I was doing to stop.

## Actual Behavior
However, if I lose track of one of my hands the script automatically enters into the Moving state, allowing me to move the object I was manipulating with one hand.

## How I solved it
Basically, I sorted out the problem by changing line 290 of TwoHandManipulatable script.
From:
newState = State.Moving;
To:
newState = State.Start;

Now everything seems to work as expected.


## Unity Editor Version
Unity 2017.2.0f3
## Mixed Reality Toolkit Release Version
2017.2.1.4 Patch Release</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>2021</IssueID>
        <PullRequestID>2459</PullRequestID>
        <Title>Fix bug with enableOneHandMovement in TwoHandManipulatable</Title>
        <Description>Overview
---
Previously, a lost hand would revert to one-handed move even if one-handed move wasn't enabled. Now, it falls back to `None` in that case.

Changes
---
- Fixes #2021</Description>
        <CreatedDate>18/07/2018</CreatedDate>
        <ClosedDate>19/07/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>UX Controls</Name>
            <IssueID>2021</IssueID>
            <PullRequestID>2459</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>2459</PullRequestID>
            <IssueID>2021</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>2019</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>2019</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>HolographicButton throws "Animator is not playing an AnimatorController"</Title>
    <CreatedDate>26/04/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
If one opens a Unity project, imports Toolkit and drags HolographicButton into the hierarchy the warning "Animator is not playing an AnimatorController" ist thrown. How can this warning be fixed?

## Expected Behavior
The button works and throws no warnings.

## Actual Behavior
there is a warning.

## Steps to reproduce
see Overview

## Unity Editor Version
2017.4.0f1

## Mixed Reality Toolkit Release Version
2017.2.1.4

How can this warning be fixed?
</Description>
  </Issue>
  <Issue>
    <IssueID>2018</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Motioncontroller not working with Hololens</Title>
    <CreatedDate>26/04/2018</CreatedDate>
    <ClosedDate>27/04/2018</ClosedDate>
    <IssueLabels />
    <Description>MotionController is recognized by Bluetooth on Hololens. But there is no Feedback or Input possible or visible. 
Tried the MotionControllerTest Scene from the Examples. There is no input visible.
The Motion Controller is from the Asus Mixed Reality Headset. Is this maybe a problem? I think the Motion Controllers are all the same? There is also made a firmware update on the controllers and all Updates available to the hololens (no developer preview).

## Unity Editor Version
Unity 2017.4.1f1

## Mixed Reality Toolkit Release Version
2017.2.1.4

Thank you!
</Description>
  </Issue>
  <Issue>
    <IssueID>2017</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2017</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[vNext] Update roadmap.md</Title>
    <CreatedDate>25/04/2018</CreatedDate>
    <ClosedDate>28/07/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>2017</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Scope the roadmap.md contents to focus entirely on vNext. Describe the current and post-alpha schedule / branch structure.

This will need to be updated when alpha is declared.</Description>
  </Issue>
  <Issue>
    <IssueID>2016</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2016</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[vNext] Update contributing.md</Title>
    <CreatedDate>25/04/2018</CreatedDate>
    <ClosedDate>06/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>2016</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Update with how to contribute to the vNext work.

this will need to be updated when alpha is declared</Description>
  </Issue>
  <Issue>
    <IssueID>2015</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2015</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[may18] Update roadmap.md</Title>
    <CreatedDate>25/04/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>2015</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Roadmap.md needs updating to describe changes related to how the master branch is managed, update the vNext process (two week sprints, etc) and the branch strategy when vNext hits alpha.</Description>
  </Issue>
  <Issue>
    <IssueID>2014</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2014</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[may18] Update contributing.md</Title>
    <CreatedDate>25/04/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>2014</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Contributing.md needs a refresh to detail how to find the correct branch to target your PR and to point folks toward the project pages.
</Description>
  </Issue>
  <Issue>
    <IssueID>2013</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[vNext] Add Set Default Spatial Mapping Layer</Title>
    <CreatedDate>25/04/2018</CreatedDate>
    <ClosedDate>25/04/2018</ClosedDate>
    <IssueLabels />
    <Description>vNext is going to need the ability to set the default spatial mapping layer (like may18_dev_).

for vnext, we would like to consider a prompt and a configurable layer rather than a check box with a mandated one.</Description>
  </Issue>
  <Issue>
    <IssueID>2012</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Building error with windows.devices.haptics when using latest version of holotoolkit with Unity 2017.3.1f1</Title>
    <CreatedDate>25/04/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>No Repro</Name>
        <IssueID>2012</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Hey guys,

right now I am working on a really simple MR-App with the HoloLens and therefore I wanted to use the HoloToolkit.
Right now I am using the latest version of the HoloToolkit with Unity 2017.3.1f1 and the Windows SDK has the version number 16299.371.

My only problem right now is that I get this building error when trying to build a visual studio solution:

`Assets\HoloToolkit\Common\Scripts\Extensions\InteractionSourceExtensions.cs(13,23): error CS0234: The type or namespace name 'Haptics' does not exist in the namespace 'Windows.Devices' (are you missing an assembly reference?)`

I already tried some suggested solutions from other closed issues here on git, but it still doesn't really work. Can somebody help please?

Thank you:)
</Description>
  </Issue>
  <Issue>
    <IssueID>2010</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2010</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[vNext] Add buttons from Examples\UX\Prefabs to UX\Prefabs\Buttons</Title>
    <CreatedDate>24/04/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>2010</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The HoloToolkit-Examples package has a set of highly useful buttons in it's UX\Prefabs folder that should actually be part of the toolkit itself.

The following should be moved from examples into the toolkit for greater visibility and use:
- Button
- ToggleButton
- Checkbox
- Radial
- Toggle
- Slider (not technically a button :) )

These are all featured in the InteractiveButtonComponents scene, which will need to be updated as well.</Description>
  </Issue>
  <Issue>
    <IssueID>2009</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[2017.2.1.4 Patch Release] Hololens. BoundingBoxGizmoExample. Any scene selections cause NullReferenceException</Title>
    <CreatedDate>24/04/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>2009</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Tested in Hololens emulator
[2017.2.1.4 Patch Release] Hololens. BoundingBoxGizmoExample. Clicks on objects or empty scene space cause exceptions
## Expected Behavior
Selecting an object shows a bounding box with app bar
## Actual Behavior
eventData.selectedObject produces NullReferenceException
``
## Steps to reproduce
New project. Load BoundingBoxGizmoExample scene. Build for Hololens. Click anywhere in the scene and observe the output window.
## Unity Editor Version
Unity_2017_2.1p2
## Mixed Reality Toolkit Release Version
[2017.2.1.4 Patch Release]</Description>
  </Issue>
  <Issue>
    <IssueID>2006</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2006</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[may18] remove TextMesh required component in FpsDisplay</Title>
    <CreatedDate>24/04/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels />
    <Description>With the change taken in #1993, there is no longer a requirement for a TextMesh component.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>2005</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>2005</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[Dev_Working] Update FpsDisplay to latest may18 fixes.</Title>
    <CreatedDate>24/04/2018</CreatedDate>
    <ClosedDate>25/04/2018</ClosedDate>
    <IssueLabels />
    <Description>Bring changes made in #1993 (perf fix) to the dev_working branch.

At the same time, remove the requirement for a TextMesh. The script no longer has a hard dependency on one.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>2004</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add events to listen when a BoundingBoxRig is either activated or deactivated</Title>
    <CreatedDate>24/04/2018</CreatedDate>
    <ClosedDate>02/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview

On a project using MRTK where I am currently involved, I need to know when a bounding box rig is either activated or deactivated by the user.

To do so, I would like to add and use events, which are owned by the bounding box rig, that will be used to track the state of a rig.

## Proposed Behavior

When a bounding box rig is activated, a `BoundingBoxRig.Activated` event is fired.
When a bounding box rig is deactivated, a `BoundingBoxRig.Deactivated` event is fired.</Description>
  </Issue>
  <Issue>
    <IssueID>1998</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1998</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[vNext] Add SpatialMapping layer setting option to Project Settings dialog.</Title>
    <CreatedDate>23/04/2018</CreatedDate>
    <ClosedDate>09/11/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>1998</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>1998</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Add the code from #1991 to the vNext branch</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>1998</IssueID>
        <PullRequestID>1991</PullRequestID>
        <Title>add option to set default spatial mapping layer</Title>
        <Description>This change adds a checkbox (selected by default) to the Apply Mixed Reality Project Settings dialog.

When selected, layer 31 is checked to see if it is in use (with a name other than Spatial Mapping) and if not, sets the layer name to "Spatial Mapping". If we are able to set the layer, the Spatial Perception capability is also set (setting the layer implies it will be used).

If we fail to set the layer (the preparation code fails, or layer 31 has a name that implies it is in use, a message is displayed stating that we failed and that the user should check Tags &amp; Layers in the inspector.

- Fixes: #1443.
- Fixes: #1770</Description>
        <CreatedDate>19/04/2018</CreatedDate>
        <ClosedDate>23/04/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Editor</Name>
            <IssueID>1998</IssueID>
            <PullRequestID>1991</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
          <PullRequestLabel>
            <Name>Spatial Mapping / Awareness</Name>
            <IssueID>1998</IssueID>
            <PullRequestID>1991</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>1997</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to use sync primitives</Title>
    <CreatedDate>23/04/2018</CreatedDate>
    <ClosedDate>25/04/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview

I am struggling trying to use SyncString, I cant seem to get onChanged on my data synchronizer to trigger.
I tried following,  #1107 and #944 but without success. Could someone share an example or complete steps for using any of the primitives.</Description>
  </Issue>
  <Issue>
    <IssueID>1994</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>1994</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>johnppella</FixedById>
        <IssueID>1994</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Cannot change TwoHandManipulatable.ManipulationMode at runtime.</Title>
    <CreatedDate>20/04/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Cannot change TwoHandManipulatable.ManipulationMode at runtime.
because TwoHandManipulatable.SetManipulationMode(TwoHandedManipulation mode) is private.


I think should set public this method and TwoHandedManipulation enumration.


## Unity Editor Version
Unity 2017.2.1p1+

## Mixed Reality Toolkit Release Version
2017.2.1.4 Patch Release
</Description>
  </Issue>
  <Issue>
    <IssueID>1992</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spatial Interaction Controller not available on RS4 - TapToPlace scene</Title>
    <CreatedDate>20/04/2018</CreatedDate>
    <ClosedDate>08/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>1992</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>[Copied from MixedRealityToolkit, courtesy of @ooeygui]

Repro steps:  

1. Install Insider build of RS4 on a HoloLens, enable developer mode, pair to VS
2. Create a new unity project, and import the MRTK &amp; examples
3. Add the TapToPlace sample scene
4. Ensure appropriate capabilities are set
5. Build and deploy to the HoloLens

Observe: 

Failed to get spatial interaction controller - touchpad, thumbstick, and vendor data will be unavailable to the application for InteractionController! Error code: '0x00000000'. Unable to tap to move the cubes around the scene.




</Description>
  </Issue>
  <Issue>
    <IssueID>1983</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>1983</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Cursor.prefab is missing the point light off holograms</Title>
    <CreatedDate>18/04/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
In Cursor.prefab, the CursorOffHolograms component used to be a point light. In the process of adding the new hover light (to work with the new Toolkit Standard shader), this light was incorrectly removed.

Additionally, in the port to master, the hover light was incorrectly added to CursorOffHolograms instead of CursorOnHolograms.

## Expected Behavior
[All] When I'm not looking at a hologram using Cursor.prefab, I should see a floating point light.
[master] When I'm looking at a hologram using Cursor.prefab and the Toolkit Standard shader, I should see a light around my cursor.

## Actual Behavior
[All] Nothing is displayed when looking away from holograms.
[master] The hover light does not work.

## Steps to reproduce
1. Create a scene with Cursor.prefab and an object using the Toolkit's Standard shader.
2. Look at the object.
3. Look away from the object.

## Mixed Reality Toolkit Release Version
2017.2.1.4 and latest dev
</Description>
  </Issue>
  <Issue>
    <IssueID>1980</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Best way to change back and forth between scenes?</Title>
    <CreatedDate>18/04/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1980</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>So, I am working on a project and the entire time it has been basically in only one scene and that has worked fine. However, I am trying to add a tutorial like scene to introduce the user to the controls. Once they finish going through the tutorial they will go back to the start up. What I have come to notice that because the InputManager persists through scene changes you need the camera and cursor to do so as well otherwise it throws a bunch of different errors that are really hard to track down why they are happening. By making the camera and cursor `DontDestroyOnLoad` it has solved the issue of going to a different scene. However, whenever I go back to the first scene, Unity basically yells at me for having two cursors and cameras in the scene. What is a workaround for this? Am I going about doing this the right way? Is there a certain way that we should handle scene changes?
</Description>
  </Issue>
  <Issue>
    <IssueID>1979</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cannot erase all content of KeyboardInputField which ContentType is set to password</Title>
    <CreatedDate>18/04/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>1979</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>1979</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The 'KeyboardTest' scene inside any Examples package has everything already set up, you just have to switch the "ContentType" of one of its KeyboardInputField to 'Password' . Otherwise, create a new scene with MixedRealityCameraParent prefab, DefaultCursor, Input Manager prefab, MixedRealityToolkit Keyboard prefab, a main canvas with a child InputField which script has been replaced by a KeyboardInputField component, which 'text' property has been filled with some short single line text and which 'ContentType' property has been set to 'Password'.

## Expected Behavior
When deleting the text of an KeyboardInputField with the 'ContentType' set to 'Password', using the MRT Keyboard, every character in the KeyboardInputField should be erasable until the placeholder appears (please note that the problem affects the KeyboardInputField, not the InputField of the MRT Keyboard).

## Actual Behavior
Even if the InputField of the MRT Keyboard can erase all of its textual content, the KeyboardInputField always leaves one character, preventing the placeholder to appear.

## Steps to reproduce
Use [this repo](

Otherwise, create a new project, switch to Universal Windows Platform, create a new scene, import an MixedRealityToolkit &gt;= 2017.2.1.0, import the relative 'Example' unity package (found on the releases page), open the KeyboardTest scene, search for the email input field, fill the 'text' property of its 'KeyboardInputField' with some short text and set its 'ContentType' property to 'Password'. From MixedRealityToolkit menu, select Configure -&gt; Apply MR Project Settings -&gt; Apply, add the scene to the built scenes, build and deploy. On Hololens, tap the GameObject containing the KeyboardInputField and delete every single character until the InputField of the MRT Keyboard is empty (but the KeyboardInputField is not).

## Unity Editor Version
2017.2.1p2

## Mixed Reality Toolkit Release Version
2017.2.1.4 Release Candidate 2 but the problem is in every MRT version starting from MixedRealityToolkit for Unity 2017.2.1f1 (included).</Description>
  </Issue>
  <Issue>
    <IssueID>1978</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1978</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Caret not showing on MRT Keyboard Input Field</Title>
    <CreatedDate>18/04/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>1978</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>1978</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The 'KeyboardTest' scene inside any Examples package has everything already set up. Otherwise, create a new scene with MixedRealityCameraParent prefab, DefaultCursor, Input Manager prefab, MixedRealityToolkit Keyboard prefab, a main canvas with a child InputField which script has been replaced by a KeyboardInputField component and which 'text' property has been filled with some short single line text.

## Expected Behavior
On Hololens, when I click/tap on the GameObject containing the KeyboardInputField, the MixedRealityToolkit keyboard appears and the caret on the inputfield of the keyboard should be visible and blanking.

## Actual Behavior
The MixedRealityToolkit keyboard appears but the caret of the kayboard input field does not (on Hololens).

## Steps to reproduce
Uuse [this repo](

Otherwise, create a new project, switch to Universal Windows Platform, create a new scene, import an MixedRealityToolkit &gt;= 2017.2.1.0, import the relative 'Example' unity package (found on the releases page), open the KeyboardTest scene, search for the email input field and fill the 'text' property of its 'KeyboardInputField' with some short text (e.g., an email address),  from MixedRealityToolkit menu, select Configure -&gt; Apply MR Project Settings -&gt; Apply, add the scene to the built scenes, build and deploy. On Hololens, tap the GameObject containing the KeyboardInputField.


## Unity Editor Version
2017.2.1p2

## Mixed Reality Toolkit Release Version
2017.2.1.4 Release Candidate 2 but the problem is in every MRT version starting from MixedRealityToolkit for Unity 2017.2.1f1 (included). MixedRealityToolkit for Unity 2017.2.0p1 MRTP4 and previous are not affected by this problem.</Description>
  </Issue>
  <Issue>
    <IssueID>1977</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>SimonDarksideJ</FixedById>
        <IssueID>1977</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1977</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>1977</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>MRTK vNEXT Sprint 2</Title>
    <CreatedDate>18/04/2018</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
We're starting the second sprint for vNEXT MRTK.

April 18th - 2nd May , 2018

## Sprint Goals

- [ ] Port Build tools to vNext.  tbc - @StephenHodgson 
- [x] Upgrade MRManager to support run-time managers, for scene items
- [x] Assembly definitions for vNext
- [x] Basic Unit tests for MR Manager
- [x] New setup domain for project initilization

## Outstanding Sprint items
- [ ] Refactor Input System to work with the Mixed Reality Manager. - in Progress, move to Sprint 3
- [ ] Gap review of ported features to determine critical scope for MVP - Miss
- [ ] Implement first device (Windows MR) and interact with Input System- in Progress, move to Sprint 3</Description>
  </Issue>
  <Issue>
    <IssueID>1969</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Disabled BoxCollider in button prefab</Title>
    <CreatedDate>17/04/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Example/Test Scene</Name>
        <IssueID>1969</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>1969</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>1969</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
In button prefab there is a disabled BoxCollider (Button GameObject child of ButtonOutline).
What does it do? Is it possible to safely remove it?

## Unity Editor Version
2017.4.1f1
## Mixed Reality Toolkit Release Version
2017.2.1.4 Release Candidate 2 </Description>
  </Issue>
  <Issue>
    <IssueID>1968</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Bounding Box Rotating Opposite Direction of Input Motion</Title>
    <CreatedDate>17/04/2018</CreatedDate>
    <ClosedDate>26/06/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>1968</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>1968</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When I move my hand to the left along either the X or Y axis, the object rotates to the right. Z axis works properly. I am using the included BoundingBoxExample.unity demo scene. I do not have this problem when using the MRDL bounding box.

## Unity Editor Version
Unity 2017.2.0

## Mixed Reality Toolkit Release Version
Dev_Working_Branch</Description>
  </Issue>
  <Issue>
    <IssueID>1967</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Patch4] [Unity 2017.1] Two handed manipulation not working as expected.</Title>
    <CreatedDate>17/04/2018</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels />
    <Description>## Steps to reproduce
- Build BoundingBoxGizmoExample scene
- Try to rotate or scale the blue object (two hand manipulable).

Often hits an access violation in UnityEngineProxy when trying to set HostTransform.localScale.

This does not repro on Unity 2017.2 .1p2 or later

## Unity Editor Version
2017.1.3p3

## Mixed Reality Toolkit Release Version
2017.2.1.4-rc2
</Description>
  </Issue>
  <Issue>
    <IssueID>1965</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Clients dont get  shared anchor...</Title>
    <CreatedDate>17/04/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>1965</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>1965</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'm trying to get the MixedReality250  to work with multiple holo lenses.

I'm using Unity 2018, a few minor updates and it runs without errors.. 

The hololens acting as server works fine.
But when I try to join that, I get an nullreference exeption at the HERE location,
since AnchorStore is null..
This results in no shared anchor...

Hope someone can help..

UNetAnchorManager.cs : 
``

Regards
Søren Müller

## Unity Editor Version
2018.1.0b13

## Mixed Reality Toolkit Release Version
Latests..</Description>
  </Issue>
  <Issue>
    <IssueID>1964</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1964</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[Patch4] Immersive device: NullReferenceException in FocusManager.TryGetFocusedObject</Title>
    <CreatedDate>16/04/2018</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels />
    <Description>
GetSpecificPointerEventData() returns null, which is dereferenced by TryGetFocusedObject

## Steps to reproduce
* build / deploy bounding box example scene to immersive device
* press the select/trigger button on the motion controller

## Unity Editor Version
2017.4.1f1

## Mixed Reality Toolkit Release Version
2017.2.1.4-rc2
</Description>
  </Issue>
  <Issue>
    <IssueID>1962</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Patch4] [Unity 5.6] Unable to build BoundingBox </Title>
    <CreatedDate>16/04/2018</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels />
    <Description>Matrix4x4.Rotate does not exist in Unity 5.6</Description>
  </Issue>
  <Issue>
    <IssueID>1961</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Duplication of Holotoolkit camera when switching scenes</Title>
    <CreatedDate>16/04/2018</CreatedDate>
    <ClosedDate>17/04/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1961</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>When switching to a scene that already includes a mixed reality camera, the camera is duplicated. Solution included.

## Expected Behavior- Each scene has only one mixed reality camera

## Actual Behavior-Mixed Reality camera is duplicated when a new scene that already includes one is loaded

## Steps to reproduce
-create two scenes, each with a mixed reality camera.
-run the application in the unity editor
-go to second scene
-messages 

## Unity Editor Version- 2017.3

## Mixed Reality Toolkit Release Version-2017.2.1.3

## Solution- The code in the Awake() method of the Singleton class destroys the script but not the object to which it is attached. I corrected the problem with the following code.

``
If there is a better solution, let me know.
</Description>
  </Issue>
  <Issue>
    <IssueID>1960</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Patch4] [Unity 5.6/2017.1] Fail to build InteractionSourceExtensions</Title>
    <CreatedDate>16/04/2018</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels />
    <Description>Unity 5.6 is failing to resolve DllImport correctly. Should be an easy fix (need to disable haptics unless on Unity 2017.2+)</Description>
  </Issue>
  <Issue>
    <IssueID>1959</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>1959</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>New Deploy options are confusing compared to earlier version</Title>
    <CreatedDate>16/04/2018</CreatedDate>
    <ClosedDate>11/06/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>1959</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The Deploy tab on the "Build Window" is confusing, compared to the "non-tabbed" earlier version.  

With the "Quick Options" drop down set to Hololens, but without a HL connected via USB (or an IP address), the Build all, then Install button successfully builds my app, and pops up a nice Powershell dialog as it deploys it to my local machine.   (Where it doesn't work, because it's a HL app).

So this is the same as pressing the "Install" button on the desired version.

So the current behavior is:  
1) Press Install when HL is not connected, get a Powershell dialog describing the successful installation of the .appxbundle on my local machine.  Nothing in the Unity console.
2) Press Install when a HL is connected, get a Unity "Connecting to Device Portal" box with a progress bar, and on succesful completion, in the Console say "Successfully installed blahblah.appxbundle on **Local Machine**."

So basically:
1) There is no error anymore saying "Your HL isn't plugged in".  A deploy will always succeed to somewhere.
2) The "Local Machine" is conflated with the "Device Portal On Local Machine that accesses the Hololens", which will confuse people.

In general I'd expect people to deploy AR apps Hololens for development far more often than people deploying VR apps to their local machine, and I think the dialog should reflect that.

Unity Version: 2017.4.1f1
MRTK Version:  master as of 4/9.


</Description>
  </Issue>
  <Issue>
    <IssueID>1958</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Patch4] [Unity 5.6] SpriteAtlas cannot be found (AtlasPrefabReference.cs)</Title>
    <CreatedDate>16/04/2018</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels />
    <Description>Unable to build with Unity 5.6 due to missing type or namespace: SpriteAtlas
</Description>
  </Issue>
  <Issue>
    <IssueID>1957</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Activating HandDraggable and TapToPlace by script not working</Title>
    <CreatedDate>16/04/2018</CreatedDate>
    <ClosedDate>28/06/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Setting up TapToPlace and HandDraggable scripts on one game object. Adding a button and script to enable/disable script

## Expected Behavior
When clicking on the button, activating HandDraggable to be able to drag and drop the hologram, when re-clicking on it, desactivating HanDraggable for TapToPlace, to be able to place the hologram on SpatialMapping

## Actual Behavior
At the begining, the HandDraggable script is working well, I can drag the asset everywhere I want. Then, i'm activating TapToPlace script, I can put it wherever I want. But when I want to activate HandDraggable again, it doesn't drag anymore. After clicking another time on the button to reactivate TapToPlace, this one is working

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
Unity 2017.2.1f1

## Mixed Reality Toolkit Release Version
2017.2.1.0
</Description>
  </Issue>
  <Issue>
    <IssueID>1956</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoloToolkit-Example InteractableObjectExample (2017.2.1.3)</Title>
    <CreatedDate>15/04/2018</CreatedDate>
    <ClosedDate>15/04/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Console Error CS0246

## Expected Behavior
No Console Errors

## Actual Behavior
243 Console Errors, eg. Assets/HoloToolkit-Examples/Sharing/SharingService/Scripts/SyncObjectSpawner.cs(5,27): error CS0234: The type or namespace name `Spawning' does not exist in the namespace `HoloToolkit.Sharing'. Are you missing an assembly reference?

## Steps to reproduce
Import HoloToolkit-Unity-Examples-2017.2.1.3.unitypackage, open InteractableObjectExample Scene

## Unity Editor Version
Unity 2017.2.1p2 (64-bit)

## Mixed Reality Toolkit Release Version
2017.2.1.3</Description>
  </Issue>
  <Issue>
    <IssueID>1955</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MotionControllerVisualizer crashing Unity Editor</Title>
    <CreatedDate>14/04/2018</CreatedDate>
    <ClosedDate>27/07/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
After running from the editor a few times, I get the error below which crashes the Unity Editor

## Expected Behavior
No crashing

## Actual Behavior
Crashing with the following error message:

RegisterRuntimeInitializeAndCleanup::Register has reached the limit 700 MaxLimit 700 UnityEngine.XR.WSA.Input.InteractionManager:.cctor()
MixedRealityToolkit.InputModule.Utilities.MotionControllerVisualizer:Awake() (at Assets/MixedRealityToolkit/InputModule/Scripts/Utilities/MotionControllerVisualizer.cs:79)

Posted error to Unity as well in case it is their problem: 


## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
2017.4.1f1

## Mixed Reality Toolkit Release Version
Dev_Working_Branch but a week or two back, I'll update to latest to see if it still happens</Description>
  </Issue>
  <Issue>
    <IssueID>1952</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can not open the MixedRealityToolkit-Unity</Title>
    <CreatedDate>13/04/2018</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1952</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>when I cloned the whole project to my computer,and open it,
it always has error like this:
![image](
is thre anybody know what can I do to solve this problem?

**Expected Behavior**
use MixedRealityToolkit-Unity

**Actual Behavior**

Cannot use MixedRealityToolkit-Unity


**Unity Editor Version**
Unity 2017.4.1f1 (64-bit)

**Mixed Reality Toolkit Release Version**
lasted one


In fact, I have opened it one week ago;but I don't know why there is problem now.</Description>
  </Issue>
  <Issue>
    <IssueID>1951</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>1951</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Build Options disabled on the MRTK Build Window with 2017.2.1.4-RC</Title>
    <CreatedDate>13/04/2018</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The Build option button remains disabled, even when the project can be built using the Unity build menu for HL / Immersive

## Expected Behavior
Build button on the MRTK Build Window should be active for the UWP platform

## Actual Behavior
Button is disabled

## Steps to reproduce
1: Create a new project
2: Import the 2017.2.1.4-rc package
3: Apply the MR Project settings from the MRTK menu
4: Apply the MR Scene settings from the MRTK menu
5: Save scene and add to build settings
6: Open the MRTK Build window
7: Observe button is disabled

*Note, after manually doing a build, the button becomes active :S 

## Unity Editor Version
2017.4.1

## Mixed Reality Toolkit Release Version
2017.2.1.4-RC
</Description>
  </Issue>
  <Issue>
    <IssueID>1950</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Help: Hololens Build Fail On Unity 2017.4.1.f3 with Toolkit 2.1.4</Title>
    <CreatedDate>13/04/2018</CreatedDate>
    <ClosedDate>17/04/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>1950</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>No Repro</Name>
        <IssueID>1950</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Assertion failed: Assertion failed on expression: 'FALSE != acquireNewContextResult'
UnityEditor.EditorUtility:WSACreateTestCertificate(String, String, String, Boolean)
PostProcessWinRT:CreateTestCertificate() (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/PostProcessWinRT.cs:875)
PostProcessWinRT:Process() (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/PostProcessWinRT.cs:164)
UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)

Assertion failed: Failed to open Assets\WSATestCertificate.pfx
UnityEditor.WSA:SetCertificate(String, String)
PostProcessWinRT:CreateTestCertificate() (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/PostProcessWinRT.cs:880)
PostProcessWinRT:Process() (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/PostProcessWinRT.cs:164)
UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)

FileNotFoundException: Assets\WSATestCertificate.pfx does not exist
System.IO.File.Copy (System.String sourceFileName, System.String destFileName, Boolean overwrite) (at /Users/builduser/buildslave/mono/build/mcs/class/corlib/System.IO/File.cs:107)
System.IO.File.Copy (System.String sourceFileName, System.String destFileName) (at /Users/builduser/buildslave/mono/build/mcs/class/corlib/System.IO/File.cs:86)
PostProcessWinRT.CopyTestCertificate () (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/PostProcessWinRT.cs:1179)
PostProcessWinRT.Process () (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/PostProcessWinRT.cs:177)
UnityEditor.WSA.BuildPostprocessor.DoPostProcess (BuildPostProcessArgs args) (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/ExtensionModule.cs:117)

UnityEditor.BuildPlayerWindow+BuildMethodException: 2 errors
  at UnityEditor.BuildPlayerWindow+DefaultBuildMethods.BuildPlayer (BuildPlayerOptions options) [0x0020e] in C:\buildslave\unity\build\Editor\Mono\BuildPlayerWindowBuildMethods.cs:181 
  at UnityEditor.BuildPlayerWindow.CallBuildMethods (Boolean askForBuildLocation, BuildOptions defaultBuildOptions) [0x00065] in C:\buildslave\unity\build\Editor\Mono\BuildPlayerWindowBuildMethods.cs:88 
UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)
</Description>
  </Issue>
  <Issue>
    <IssueID>1949</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1949</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[Patch4] Address potential NullReferenceException on Select</Title>
    <CreatedDate>12/04/2018</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels />
    <Description>Hitting this in 2017.2.1.4-rc, need to port #1896 from dev-&gt;patch4</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1948</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add "Create Unity C# Projects" option to Project Config dialog</Title>
    <CreatedDate>12/04/2018</CreatedDate>
    <ClosedDate>12/04/2018</ClosedDate>
    <IssueLabels />
    <Description>I love being able to set the project build settings with "one click" using the Apply Project Settings option. There is one setting, however that I **always** have to go to Unity's build dialog for: "Unity C# Projects".

It would be nice to not have to do that step manually. In fact, the same is true for devs who use the "Development Build" option.
</Description>
  </Issue>
  <Issue>
    <IssueID>1947</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>RegisterRuntimeInitializeAndCleanup Fatal Error after numerous starts/stops</Title>
    <CreatedDate>12/04/2018</CreatedDate>
    <ClosedDate>16/04/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
With a simple project (used HeadsetAdjustment scene), hitting start/stop 27 times in rapid succession eventually causes Unity to throw a Fatal Error and quit.

Error message (manually typed from the dialog) is: 
Fatal Error! 
RegisterRuntimeInitializeAndCleanup::Register has reached the limit 700 
MaxLimit 700 
UnityEngine.XR.WSA.Input.InteractonManager:.cctor()
HoloTooIkit.Unity.InputModuIe.MotionControIIerVisuaIizer::Awake() (at 
Assets/HoIoTooIkit/Input/Scripts/MotionControIIerVisuaIizer cs: 74) 
![image](

## Expected Behavior
That it doesn't do a fatal error

## Actual Behavior
That it does
## Steps to reproduce
Load HeadsetAdjustement scene.  Hit Start/Stop 27 times.  See error dialog

## Unity Editor Version
2017.4.1f1
## Mixed Reality Toolkit Release Version
2017.2.1

This could obviously be a Unity bug, I'm sending it to them also.</Description>
  </Issue>
  <Issue>
    <IssueID>1945</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SphereBasedTagAlong behind other objects</Title>
    <CreatedDate>12/04/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Solvers</Name>
        <IssueID>1945</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I use SphereBasedTagAlong to have some button follow the users gaze. But I cannot specify that the buttons should be placed in front of everything like I can do with the standard TagAlong component. 
 
## Expected Behavior
A combo of SphereBasedTagAlong and TagAlong where I can have a SphereBasedTagAlong with minimum and maximum distance and placing infront of everything.

## Actual Behavior
SphereBasedTagAlong and TagAlong do not work well together. And If I use only SphereBasedTagAlong the buttons will fall behind other objects.

## Steps to reproduce
Create MixedRealityToolkit button and add SphereBasedTagAlong

## Unity Editor Version
2017.3.1p1

## Mixed Reality Toolkit Release Version
HoloToolkit-Unity-2017.2.1.3</Description>
  </Issue>
  <Issue>
    <IssueID>1941</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unable to build project to Hololens</Title>
    <CreatedDate>11/04/2018</CreatedDate>
    <ClosedDate>12/04/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview

I am unable to build my unity project to my Hololens.

Error in VS:  The command [...] exited with code 1

## Steps to reproduce

-Create new project
-Switch platform to UWP
-Import MRT
-Set project settings
-Set scene settings
-UWP capabilities, mic , spatial , camera
-Add a random Cube

-File -&gt; build window -&gt; build
-Open in VS -&gt; x86 -&gt; device -&gt; start with debugging 
-Hololens is connected by USB

## Unity Editor Version

Unity2017.2.1f1

## Mixed Reality Toolkit Release Version

HoloToolkit-Unity-2017.2.1.3

## Windows 10 SDK version Version

SDK 10.0.16299.0

## Visual studio version

2017 15.6.2

## Windows 10 version

1709 (16299.371)

</Description>
  </Issue>
  <Issue>
    <IssueID>1940</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>XAML: Holotoolkit triggers own and system keyboard</Title>
    <CreatedDate>11/04/2018</CreatedDate>
    <ClosedDate>30/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>1940</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>1940</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I use the Holotoolkit keyboard and gaze at its input field (the one directly on the keyboard) 

## Expected Behavior
nothing should happen except for maybe focus change 

## Actual Behavior
As soon as I gaze at the input field, I am thrown out of my app and into the 2d keyboard app. if i enter my text there and submit, the text is submitted into the input field of the holotoolkit keyboard and i have to click enter on that one once more to finally submit the text. If i gaze again on the input field the external keyboard opens again. This can make the user be stuck in a loop if he keeps looking there to check his input

## Steps to reproduce
build with xaml
open holotoolkit keyboard
gaze at the input field

## Unity Editor Version
2017.2.0f3 - building for XAML with 10.0.16299.0 sdk

## Mixed Reality Toolkit Release Version
2017.2.1.0</Description>
  </Issue>
  <Issue>
    <IssueID>1939</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Enable Shared Depth Buffer in ProjectSettingsWindow (V2)</Title>
    <CreatedDate>11/04/2018</CreatedDate>
    <ClosedDate>16/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Request</Name>
        <IssueID>1939</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Maybe we should enable depth buffer sharing by default with `Enable XR`? Obviously only supported in 2017.3.1f1 and later.
</Description>
  </Issue>
  <Issue>
    <IssueID>1935</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1935</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Headset Adjustment</Title>
    <CreatedDate>10/04/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I recently came back to this and wanted to use the Headset Adjustment scene. The scene and the screen space/camera canvas modes both don't work.
## Expected Behavior
HeadsetAdjustment should show a border on the camera on startup and load the next level on command.
## Actual Behavior
The scene shows nothing except the cursor (whyever there is even a cursor object in there). There is no border image in the entire project as far as I can see. Trying to use my own image with a screen space or camera space canvas doesn't work, as it is invisible for the hololenscamera. Also I cannot put any camera inside the camera field of the canvas. It just silently fails to do it and the field stays empty.

## Steps to reproduce
just start the HeadsetAdjustment scene and try.

## Unity Editor Version
2017.3.p3

## Mixed Reality Toolkit Release Version
2017.2.1.2 (But this scene doesn't seem to have changed since then?)</Description>
  </Issue>
  <Issue>
    <IssueID>1933</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1933</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[vNext] Investigate integrating WindowsDevicePortalWrapper</Title>
    <CreatedDate>09/04/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>1933</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Investigate what it would take to replace the MRTK Windows Device Portal code with a reference to the Windows Device Portal Wrapper project's NuGet package.</Description>
  </Issue>
  <Issue>
    <IssueID>1931</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>License(s) clobbered incorrectly without permission</Title>
    <CreatedDate>09/04/2018</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels />
    <Description>@keveleigh incorrectly changed copyright headers across the entire project. Reminder: The CLA does NOT grant Microsoft copyright of submitted code, just a license to use said code in a million ways.

I was not contacted about transferring copyright.

Recommend changing attribution to reflect original owners (reformatting is fine) and reviewing all changes related to this "reformatting license headers" PR to ensure copyright is correctly maintained.



cc: @StephenHodgson @davidkline-ms 

</Description>
  </Issue>
  <Issue>
    <IssueID>1929</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoloToolKit Cursor Example scenes have errors on startup</Title>
    <CreatedDate>09/04/2018</CreatedDate>
    <ClosedDate>23/04/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Example/Test Scene</Name>
        <IssueID>1929</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>1929</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
HoloToolkit BasicCursor and Cursor example scenes under HoloToolkit/Input/Tests/Scenes error on start
## Expected Behavior
Example scenes work without errors to show proper set up of cursors 
## Actual Behavior
![screenshot 48](

## Steps to reproduce
1. Open HoloToolkit/Input/Tests/Scenes/BasicCursor
2. Play

## Unity Editor Version
2017.3.1f1
## Mixed Reality Toolkit Release Version
2017.2.1.3</Description>
  </Issue>
  <Issue>
    <IssueID>1928</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Dev -&gt; master] Add HolographicButton</Title>
    <CreatedDate>09/04/2018</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels />
    <Description>This was checked in as part of the MRTK Standard Shader integration (#1847). Filing this issue to make our changelog / release notes more complete.</Description>
  </Issue>
  <Issue>
    <IssueID>1899</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>World Anchor Issues</Title>
    <CreatedDate>30/03/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1899</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Hello,
I cloned the mixed reality toolkit for unity and I am attempting to use world anchors for an environment in Hololens.
## Expected Behavior
Ideally the app would create and remove world anchors using the airtap functionality in Hololens.
## Actual Behavior
For some reason I can not find the reference for "WorldAnchorManager" so I can not build my code.
## Steps to reproduce
Here is a picture of my code output.

&lt;img width="949" alt="screen shot 2018-03-30 at 12 05 30 pm" src="

## Unity Editor Version

## Mixed Reality Toolkit Release Version
Latest Master</Description>
  </Issue>
  <Issue>
    <IssueID>1898</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Interactions won't be recognized properly</Title>
    <CreatedDate>30/03/2018</CreatedDate>
    <ClosedDate>31/03/2018</ClosedDate>
    <IssueLabels />
    <Description>Hi to all,

I realized to move gameobjects with the interaction manager and the "CursorWithFeedback" prefab. For this I used an similar approach like here mentioned:  

It works good but when I move my head and tried to pick up and move an object,  the gestures won't be displayed. 
</Description>
  </Issue>
  <Issue>
    <IssueID>1893</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1893</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[vNext] Publish documentation guidelines</Title>
    <CreatedDate>29/03/2018</CreatedDate>
    <ClosedDate>09/04/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>1893</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Take approved documentation proposal and formalize it into a DocumentationGuide.md file.</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>1893</IssueID>
        <PullRequestID>1909</PullRequestID>
        <Title>Write documentation guidelines document</Title>
        <Description>Write documentation guidelines file based on the v.Next Documentation proposal (#1814). Add steps (and links to the Coding/Documentation guidelines) in the Implementation section of CONTRIBUTING,md to improve process clarity and visibility.

- Fixes: #1893.
</Description>
        <CreatedDate>03/04/2018</CreatedDate>
        <ClosedDate>05/04/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Documentation</Name>
            <IssueID>1893</IssueID>
            <PullRequestID>1909</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>1891</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title> Hololens application crashes randomly</Title>
    <CreatedDate>29/03/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>1891</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I'm using an asset, this [Toolbar]( but when I build and deploy on the Hololens, some times it crashes, but some times, it doesn't. I checked everything around this toolbar, but it appear randomly. This bug occurs, when we are loading a toolbar outside a scene, and we look at while a loading. When it occurs, the application freeze, and we can only stop it from the web portal of the helmet. 

## Expected Behavior

## Actual Behavior

![git](
It crash when this menu enter in the field of view, but not all the time.

## Steps to reproduce
- Scene with this toolbar
- Spawn the toolbar outside the default view
- Deploy the application in release mode
- It occurs on a physical Hololens and on an Emulator
- Pray it occurs
## Unity Editor Version
2017.3.1f1
## Mixed Reality Toolkit Release Version
Current (28/3/2018)
(168fd6f4112831a9eefade8125dad4434ea0bfbb)</Description>
  </Issue>
  <Issue>
    <IssueID>1890</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Trying to access file storage / switch between XAML and D3D causes app to get stuck trying to do spatial mapping</Title>
    <CreatedDate>29/03/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>OS Bug</Name>
        <IssueID>1890</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>1890</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Using an asset in the Unity store I was able to get files from OneDrive. I then tried adding MixedRealityToolkit to my app, some holographic buttons, the default cursor, and input manager. When I try to load files into the app now, it causes the app to get stuck on mapping the space. This is when it goes from XAML (File Explorer) back to D3D.  

This asset works using standard HoloLens Input Module and HoloToolkit from Gaze 210 HoloAcademy tutorial in Unity 5.6.5 on the new RS4 preview. (* Without the RS4 preview I have only ever been able to get this asset to work on 5.5.1, and it is slower and buggier than with the RS4+Unity 5.6.5 combo). Additionally, MixedRealityToolkit is no longer compatible with 5.6.5.

One way this could be addressed is to create standard file IO scripts that allow a D3D app to switch to File Explorer and that are known to work with this toolkit. (edit: by "file IO" I should have said "windows storage" here, as UWP apps don't use file IO)

## Expected Behavior
File should be loaded in and I am able to proceed using my app. 

## Actual Behavior
While in XAML File Explorer, D3D components of app sometimes still appear in the corner of eye. App then gets stuck trying to map my surroundings after picking a file to load and returning to D3D app.

## Steps to reproduce
On the RS4 Preview:
Create a Unity project and import this asset (or possibly any asset which switches between XAML/D3D will do this)
Put any .txt file in your OneDrive and make sure OneDrive app is synced on your HoloLens
Create a holographic button to load a file in using File Explorer
Click button and pick a .txt file from OneDrive

Sample app:

If successful, Text element should have text from first line of .txt file

## Unity Editor Version
Unity 2017.2.1

## Mixed Reality Toolkit Release Version
Current (3/28/2018)</Description>
  </Issue>
  <Issue>
    <IssueID>1889</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MR toolkit Motion controllers not rendering in app on Initial launch</Title>
    <CreatedDate>29/03/2018</CreatedDate>
    <ClosedDate>03/04/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When I make a .appx project the motion controllers are not showing up on initial launch but do appear if I suspend and re-enter the already open app . I built the project with only the Holo Toolkit  motion controller example scene and in place of the controller models I see two  white cuboids instead of the controller models.

## Expected Behavior

Every time the app launches ( 1st time or 50th) the motion controller models are rendered in my project if activated/ on

## Actual Behavior
On the very first app launch the Motion Controllers do not render at all and the custom rays I have built to connect to the controllers are  unresponsive as if the objects aren't even being instantiated.

## Steps to reproduce
-Put HoloToolkit Motion controller prefab in very fist scene which unity loads with build settings
- test that Motion controllers render in editor
- Create an .appx package
- On the first launch test if  Controller models render in scene, you can reproduce multiple times by closing the app and re-launching the application again .

When I did it using the HoloToolkit example scene , White cuboids rendered in the scene instead of the actual Motion controller models.

## Unity Editor Version
2017.4.0f1

## Mixed Reality Toolkit Release Version
2017.2.1.3</Description>
  </Issue>
  <Issue>
    <IssueID>1888</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>glTF LoadImage method throws InvalidOperationException on HoloLens</Title>
    <CreatedDate>28/03/2018</CreatedDate>
    <ClosedDate>29/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Attempting to load a glTF model on the HoloLens throws an InvalidOperation exception when the GLTFSceneImporter tries to load the first texture. It appears to be the call to www.downloadHandler.GetContent() that is causing the issue, though I'm not clear why. Replacing this line with the following resolves the issue:

var texture = ((DownloadHandlerTexture)www.downloadHandler).texture;

## Expected Behavior
I expect the glTF model to load successfully.

## Actual Behavior
Exception is thrown and loading is aborted.

## Steps to reproduce
The following code, run on HoloLens, should reproduce the issue:

var sceneImporter = new GLTFSceneImporter(
                uri,
                null,
                false);
            sceneImporter.SetShaderForMaterialType(GLTFSceneImporter.MaterialType.PbrMetallicRoughness, StandardShader);
            sceneImporter.SetShaderForMaterialType(GLTFSceneImporter.MaterialType.KHR_materials_pbrSpecularGlossiness, StandardShader);
            sceneImporter.SetShaderForMaterialType(GLTFSceneImporter.MaterialType.CommonConstant, StandardShader);
            
yield return sceneImporter.Load(-1, true);
var lastLoadedScene = sceneImporter.LastLoadedScene;


## Unity Editor Version
2017.3of3

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>1887</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1887</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Button.cs ButtonState is incorrect</Title>
    <CreatedDate>28/03/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>1887</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
**This is HoloLens-only issue.** 
Button.cs has separate states to signify when the button has been focussed and unfocussed with the user's hand(s) raised and ready or lowered. However, these states are unpredictable and quickly fall out of sync with the user's true hand state. 

## Expected Behavior
1. Hand down, not looking at button, ButtonState = Observation
2. Hand down, looking at button, ButtonState = ObservationTargeted
3. Hand ready, looking at button, ButtonState = Targeted
4. Hand down, looking at button, ButtonState = ObservationTargeted
5. Hand down, not looking at button, ButtonState = Observation

## Actual Behavior
1. Hand down, not looking at button, ButtonState = Observation
2. Hand down, looking at button, ButtonState = ObservationTargeted
3. Hand ready, looking at button, ButtonState = Targeted
4. Hand down, looking at button, ButtonState = **Targeted**
5. Hand down, not looking at button, ButtonState = **Interactive**

**From here it is not possible to get back to Observation or ObservationTargeted states.**

## Steps to reproduce
1. Open an empty scene and from the MRTK menu do 'apply mixed reality project settings' and 'apply mixed reality scene settings'
2. Create a cube in the scene and drag on the Button.cs script from MRTK
3. Hit run and go through the expected behaviour steps outlined above, observing the 'button state' property on the button component.


## Unity Editor Version
Unity 2017.3.1p3

## Mixed Reality Toolkit Release Version
2017.2.1.2</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1885</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ObjectCollection does not remove moved GameObject that is a DeepChild but not a direct child from NodeList</Title>
    <CreatedDate>27/03/2018</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The ObjectCollection script maintains a list of nodes to do its calculations on in NodeList. In some cases GameObjects that are not children of the GameObject that ObjectCollection is running on, are considered for calculations.

## Expected Behavior
When a GameObject is not a direct child of the GameObject that ObjectCollection is a component of, it should be removed from that list.

## Actual Behavior
When a GameObject is a deep child of the GameObject that ObjectCollection is a component of, it should be removed from that list.

## Steps to reproduce
Create GameObject GameObject1, add ObjectCollection to GameObject1. Create GameObject2 as Child of GameObject1. Create another GameObject GameObject3 as a sibling of GameObject2.
Use "UpdateCollection" on the GameObject1.
Move GameObject3 to be a child of GameObject2.

## Unity Editor Version
2017.2.1.3
## Mixed Reality Toolkit Release Version
2017.2.1.3 Hot Fix</Description>
  </Issue>
  <Issue>
    <IssueID>1883</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tooltip has no line in the Hololens/Emulator</Title>
    <CreatedDate>27/03/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview

Tooltip has no line when running in the Hololens/Emulator,but a rosy surface in the front.

## Expected Behavior

![default](

## Actual Behavior

## Steps to reproduce

- Create scene with "defaults" (project settings, scene settings, etc.)
- Create cube in scene
- Attach ToolTip.prefab to the cube
- Play
Or simply play the MixedRealityToolkit-Unity-Feature_UX_Tooltip\Assets\MixedRealityToolkit-Examples\UX\Scenes\TooltipExamples scene.

## Unity Editor Version

2017.2.1p4/2017.3.1p4

## Mixed Reality Toolkit Release Version

MixedRealityToolkit-Unity-Feature_UX_Tooltip</Description>
  </Issue>
  <Issue>
    <IssueID>1879</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>1879</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Button.OnButtonClicked is triggered twice on clicks</Title>
    <CreatedDate>26/03/2018</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>1879</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
`OnButtonClicked` is triggered twice on input clicks. Once from the InputClickedEvent and once from InputDown.
This happens spread over some frames and thus causes unintended side effects with dialogs and button actions that spawn gameObjects infront of the user. For example the first `InpudClicked` event will open a Dialog and the second will imediately dismiss it.

![buttonclicktrace](

## Expected Behavior
`OnInputClicked` is only fired once

## Actual Behavior
`OnInputClicked` is fired twice

## Steps to reproduce
* Create empty scene
* Add default MRTK stuff
* Add Button
* Trace `OnButtonClicked`

## Unity Editor Version
2017.3.1f1

## Mixed Reality Toolkit Release Version
dev branch @ d46126f8bfb0d27355d40e37afe3ad4dee920601

Edit: Added commit hash</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>1879</IssueID>
        <PullRequestID>2367</PullRequestID>
        <Title>Button.cs event firing fixes</Title>
        <Description>Overview
---
Part 2 of #2359. This is a rework of the way the Button.cs events are fired. Previously, duplicate events were fired in both `OnInputDown` and `OnInputClicked` (and `OnHoldStarted`). This cleans those up and makes the state logic a little clearer.

Changes
---
- Fixes: #1879
</Description>
        <CreatedDate>29/06/2018</CreatedDate>
        <ClosedDate>30/06/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>UX Controls</Name>
            <IssueID>1879</IssueID>
            <PullRequestID>2367</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>2367</PullRequestID>
            <IssueID>1879</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>1877</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>AppBar button stays focused</Title>
    <CreatedDate>24/03/2018</CreatedDate>
    <ClosedDate>20/04/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>1877</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Leftmost button in the AppBar for BoundingBoxRig never becomes unfocused after adjustment.

## Expected Behavior
![oelizc7](

## Actual Behavior


## Steps to reproduce
* Create scene with "defaults" (project settings, scene settings, etc.)
* Create cube in scene
* Attach `TwoHandManipulatable` and `BoundingBoxRig` to the cube
* Add a `BoundingBoxBasic` to the `BoundingBoxPrefab` field
* Play

Or simply play the BoundingBoxGizmoExample scene.

## Unity Editor Version
2017.3.1f1

## Mixed Reality Toolkit Release Version
Dev_Working_Branch</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1876</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>My UWP unity build seems to crash whenever I try to incorporate the Holotoolkit into the project.</Title>
    <CreatedDate>23/03/2018</CreatedDate>
    <ClosedDate>24/03/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1876</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I've been working on a Mixed reality UWP app for months prior to incorporating the holotoolkit my builds were building fine, I've actually uploaded a build to the windows store  that passed certification and everything . I decided to incorporate the Holotoolkit to make use of the motion controllers but  whenever I do multiple breakpoints are triggered and if my app doesn't crash upon launching then it takes me to a scene that is unrendered outside of the Mixed reality headsets gaze tracker.


The breakpoint functions  that seem to be highlighted in debug mode are the following in the runtimehelpers.cpp class : 
``

I understand this is an issue with IL2CPP and possibly .net4.0 but I was getting security framework errors when using a .net backend  . 

## Expected Behavior
 When the unity app is launched in debug mode or when or from a generated app package it loads into my VR experience with the motion controllers included. 

## Actual Behavior
The app launches , in debug mode it triggers breakpoints and loads into a completely black scene where the gaze tracker is the only thing visible . When I launch it from a generated app package or the Mixed reality start menu  the app actually crashes back to the cliff house scene.

## Steps to reproduce
I basically am generating a unity build , and  running a debug project in Visual Studio if not directly creating an Master app package. 

## Unity Editor Version 
2017.2.1p2

## Mixed Reality Toolkit Release Version
2017.2.1.2 Patch Release  However I have tried this with several versions of the Mixed reality toolkit .</Description>
  </Issue>
  <Issue>
    <IssueID>1874</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1874</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[master] update unity version to 2017.2.1p2</Title>
    <CreatedDate>23/03/2018</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels />
    <Description>Update the toolkit's unity version to match the recommendation on 

</Description>
  </Issue>
  <Issue>
    <IssueID>1872</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>1872</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[dev] nullreference exception when attempting to tap</Title>
    <CreatedDate>23/03/2018</CreatedDate>
    <ClosedDate>24/04/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Branch</Name>
        <IssueID>1872</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When I run the InputTapTest, or any other scene with an object that supports tap, I hit a NullReferenceException on the call to 
                ExecuteEvents.ExecuteHierarchy(inputEventData.selectedObject, pointerInputEventData, ExecuteEvents.pointerDownHandler);
in InputMananger.RaiseSourceDown()

## Expected Behavior
The tap to complete w/o exception.

## Actual Behavior
A null reference is hit when RaiseSourceDown calls ExecuteEvents.ExecuteHierarchy() is called. On inspection, inputEventData.selectedObject is null. This seems odd because the cursor is on the object implementing IInputClickHandler.

## Steps to reproduce
* Set -Examples\Input\Scenes\InputTapTest as the active scene in the app.
* Run the project on HoloLens
* Tap on the blue cube.

## Unity Editor Version
2017.2.1p2

## Mixed Reality Toolkit Release Version
Dev_Working_Branch
</Description>
  </Issue>
  <Issue>
    <IssueID>1871</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1871</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[master -&gt; dev] integrate ObjectCollection fix</Title>
    <CreatedDate>23/03/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>Ensure that dev_working_branch is updated with the fix (#1869) for #1868</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1868</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ObjectCollection does not remove moved GameObject that is no longer a child from NodeList</Title>
    <CreatedDate>23/03/2018</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
UpdateCollection() in ObjectCollection does not remove moved GameObject that is no longer a child from NodeList. It only removes GameObjects from NodeList that do not exist anymore, resulting in a wrong number of children and wrong layout
## Expected Behavior
When a GameObject is not a child, it should not be in the NodeList holding the children that should be laid out. 
## Actual Behavior
See above.
## Steps to reproduce
Add a GameObject (e.g. the cube primitive) as a child to a parent GameObject that has ObjectCollection, then call or select UpdateCollection, then move the GameObject elsewhere so it is no longer a child of the GameObject, select or call UpdateCollection on the parent GameObject. NodeList still contains the moved GameObject, resulting in the layout considering too many children.
</Description>
  </Issue>
  <Issue>
    <IssueID>1867</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Introducing SpectatorView into MRTK</Title>
    <CreatedDate>23/03/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Cross Platform</Name>
        <IssueID>1867</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>1867</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi Everyone,
Lighthouse London guys here (part of MCS Mixed Reality Studios). After some initial conversations with @timGerken , @keveleigh and @davidkline-ms  we've finished the first version of SpectatorView for the MRToolkit. This new system allows iOS ARKit-enabled devices to witness and record what HoloLens users are experiencing, just like spectator view, but cheaper and faster. SpectatorView takes care of handling multiple sessions, automatic networking, recording and syncing space so phones see where holograms are.

The files are ready to be integrated into MRTK (2017.2.1.3). In order to do so we'd like to understand where in the toolkit this section of work should sit.  Currently we have unity component and a native code component, which has a dependency on the OpenCV libraries.

Also, we have had issues building against the toolkit on the mac due to the GLTF component (inside MRTK) not being compatible with Mac. The GLTF component needs to be platform safe, and it's currently the only module inside MRTK that's not.

We'd love to know how to proceed.
Best
Dan Escudero

</Description>
  </Issue>
  <Issue>
    <IssueID>1866</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>World Anchor Usage</Title>
    <CreatedDate>23/03/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1866</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Is it okay to call world anchor api to attach or remove anchor frequently ? Does attach &amp; remove anchor has any performance effect?
Use case: User is moving a hologram. I want to attach anchor once user does finger remove gesture. If user again presses finger, to move hologram i should remove world anchor and repeat the same.

Should world anchor attach &amp; remove be tied to UI like button clicked to remove or to user actions like finger press gesture (while doing some action).</Description>
  </Issue>
  <Issue>
    <IssueID>1862</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1862</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[vNext -&gt; master] adapt coding guidelines for master branch</Title>
    <CreatedDate>22/03/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>1862</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Coding guidelines were adopted for the MRTK-Version-Next branch (#1846). Adapt them to match the expected standard of the master branch so that forward merges become easier.</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>1862</IssueID>
        <PullRequestID>1846</PullRequestID>
        <Title>MRTK vNEXT coding guidelines</Title>
        <Description>MRTK vNEXT coding guidelines</Description>
        <CreatedDate>19/03/2018</CreatedDate>
        <ClosedDate>22/03/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Documentation</Name>
            <IssueID>1862</IssueID>
            <PullRequestID>1846</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>1861</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1861</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[master -&gt; dev] integrate FixedAngularSize fix</Title>
    <CreatedDate>22/03/2018</CreatedDate>
    <ClosedDate>22/03/2018</ClosedDate>
    <IssueLabels />
    <Description>Bring the recent FixedAngularSize fix (#1855) into dev</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1860</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1860</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[master -&gt; dev] integrate audio occlusion fixes and add the lofi effect</Title>
    <CreatedDate>22/03/2018</CreatedDate>
    <ClosedDate>10/05/2018</ClosedDate>
    <IssueLabels />
    <Description>Master recently took some bug fixes to audio occlusion (#1838) and a new LoFi effect. bring these changes into dev with the following modifications:
* namespace updates
* folder location updates
* rename AudioEmitter.cs to AudioInfluencerController.cs to better match the intent of the class</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1859</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1859</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[master] Move MRTK versioning from Unity release based to SemVer</Title>
    <CreatedDate>22/03/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels />
    <Description>Our current, Unity release based versioning system is not NuGet friendly. To remedy this, we will be changing the MRTK version to be SemVer ( based.

The proposal is to use year.month.revision (ex: 2018.06.0) to version the MRTK, which will match the vNext versioning scheme. 

This will necessitate consumers of the toolkit to consult release notes and/or README.md to determine the supported Unity version(s) for the package, but will enable us to be more agile and clarify which releases contain new features and which contain only bug fixes.</Description>
  </Issue>
  <Issue>
    <IssueID>1858</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1858</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[vNext] Move MRTK versioning from Unity release based to SemVer</Title>
    <CreatedDate>22/03/2018</CreatedDate>
    <ClosedDate>28/07/2018</ClosedDate>
    <IssueLabels />
    <Description>Our current, Unity release based versioning system is not NuGet friendly. To remedy this, we will be changing the MRTK version to be SemVer ( based.


The current plan is to use year.month.revision (ex: 2018.06.0) to version the MRTK. This will necessitate consumers of the toolkit to consult release notes and/or README.md to determine the supported Unity version(s) for the package.
</Description>
  </Issue>
  <Issue>
    <IssueID>1857</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>RadialSet prefab warnings</Title>
    <CreatedDate>22/03/2018</CreatedDate>
    <ClosedDate>03/04/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
RadialSet prefab shows this warning:
Call to HoloToolkit.Examples.InteractiveElements.ElementSelectedActiveWidget's SetState removed other interactive widgets. GameObject name: RadialOutline.
Same warning is shown using CheckBoxSet
## Expected Behavior
No Warning
## Actual Behavior
Every time I select an option a warning is reported.
I am not sure what it means and if I can ignore it
## Steps to reproduce
InteractiveButtonComponentScene

## Unity Editor Version
2017.3.1p1
## Mixed Reality Toolkit Release Version
2017.2.1.3</Description>
  </Issue>
  <Issue>
    <IssueID>1852</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>1852</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Keyboard Symbols layout is broken</Title>
    <CreatedDate>21/03/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Running the Keyboard in the editor works somewhat fine. Building it to the Hololens breaks the layout of the Symbols view. The "TAB", "!", "1" and "&lt;" buttons are nowhere to be found. It looks like the first button of each of the button groups is missing. Also all the none character icons are white boxes.

## Expected Behavior
The keyboard shows everything where and how it should be like it does in the editor in Edit Mode

## Actual Behavior
Icons turn into white boxes in editor and build. Buttons are missing in the build

## Steps to reproduce
Latest Dev_Working_Branch
Add MR content to KeyboardTest scene and assign the UiRaycastCamera to the keyboard
Press play to note that the icons change
build it to a hololens and note that the layout is broken when toggling "&amp;123"

## Unity Editor Version
2017.3.1p1

## Mixed Reality Toolkit Release Version
Latest Dev_Working_Branch 17.03.2018</Description>
  </Issue>
  <Issue>
    <IssueID>1851</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Errors without Examples folder</Title>
    <CreatedDate>20/03/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
If you remove the Examples folder, the toolkit fails to compile.
Due to [BoundingBoxRig]( and [ProgressExampleLaunchButton]( 
Also [LoadingAnimation]( and [ProgressExampleLaunchButton]( are part of the Examples namespace, not sure if this is intentional.

## Expected Behavior
Compiles

## Actual Behavior
Doesn't compile

## Steps to reproduce
Create empty project, import Dev_Working_Branch, and delete the Examples folder.

## Unity Editor Version
2017.3.1f1

## Mixed Reality Toolkit Release Version
[Dev_Working_Branch](</Description>
  </Issue>
  <Issue>
    <IssueID>1850</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>A reference to null exception in HoloToolkit\SpatialMapping\Scripts\SpatialProcessing\RemoveSurfaceVertices.cs</Title>
    <CreatedDate>20/03/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>1850</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
line 179: int[] indices = mesh.GetTriangles(0);
causes a null reference exception

I was running in Debug mode but I can continue after the exception occurs. I wonder if this is a real issue.
I even tried to access mesh.submeshCount and that also threw a null reference exception. It seems like mesh becomes null somehow.

## Expected Behavior
pass

## Actual Behavior
NullReferenceException: 
   at UnityEngineProxy.InternalCalls.Mesh_Get_Custom_PropCanAccess(Object self)
   at UnityEngine.Mesh.CheckCanAccessSubmesh(Int32 submesh, Boolean errorAboutTriangles)
   at UnityEngine.Mesh.GetTriangles(Int32 submesh, Boolean applyBaseVertex)
   at UnityEngine.Mesh.GetTriangles(Int32 submesh)
   at HoloToolkit.Unity.SpatialMapping.RemoveSurfaceVertices.&lt;RemoveSurfaceVerticesWithinBoundsRoutine&gt;d__11.MoveNext()
   at UnityEngine.SetupCoroutine.InvokeMoveNext(IEnumerator enumerator, IntPtr returnValueAddress)
   at UnityEngine.SetupCoroutine.$Invoke1InvokeMoveNext(Int64 instance, Int64* args)
   at UnityEngine.Internal.$MethodUtility.InvokeMethod(Int64 instance, Int64* args, IntPtr method) 
(Filename: &lt;Unknown&gt; Line: 0)

## Steps to reproduce
my project links to a bunch of other dlls so it is difficult to reproduce. But I essentially have the SpatialMapping, SpatialUnderstand and SpatialProcessing prefabs

## Unity Editor Version
2017.3.0f3 Personal

## Mixed Reality Toolkit Release Version
2017.2.1.1
</Description>
  </Issue>
  <Issue>
    <IssueID>1845</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InputManager crash because Unity EventSystem.current is null during initialization</Title>
    <CreatedDate>19/03/2018</CreatedDate>
    <ClosedDate>23/03/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>No Repro</Name>
        <IssueID>1845</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I am hitting a crash in InputManager because the inputEventData.selectedObject can't be evaluated, resulting a null reference exception and I found that it happens because EventSystem.current is null during InputManager initialization. Any ideas why this occurs?

## Expected Behavior
No crash

## Actual Behavior
Crash 

## Steps to reproduce
Air tap anywhere results in the crash

## Unity Editor Version
Unity 2017.3.1f1

## Mixed Reality Toolkit Release Version
HoloToolkit-Unity-2017.2.1.1
</Description>
  </Issue>
  <Issue>
    <IssueID>1844</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Question about VoiceChat</Title>
    <CreatedDate>19/03/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1844</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>
## Overview
I am using VoiceChat scripts(MicrophoneReceiver.cs and MicrophoneTransmitter.cs) from MixedRealityToolkit-Unity, but I am only hearing my own voice..

## Expected Behavior
I can hear other's voice 

## Actual Behavior
I only can hear my own voice

## Steps to reproduce
1.Open the SharingTest scene which in the Assets\HoloToolkit-Examples\Sharing\SharingService\Scenes by unity.
2.Attached both MicrophoneReceiver.cs and MicrophoneTransmitter.cs onto MixedRealityCamera.
3.Publish the Unity Project to the two HOLOLENS.
4.Launch the Sharing Service on my Computer.
5.Launch the Unity App on two HOLOLENS and both two HOLOLENS successfully to connect to the server.

## Unity Editor Version
2017.2.0f3

## Mixed Reality Toolkit Release Version
2017.2.1.3 Hot Fix 
</Description>
  </Issue>
  <Issue>
    <IssueID>1843</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SharingSpawnTest scene can't spawn object</Title>
    <CreatedDate>18/03/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>Hi,

I have been trying to run the SharingSpawnTest scene from the examples folder, but I get an error whenever I try to create an object (using the voice keywords on the HoloLens, or the key presses in editor). The error message is "Can't spawn an object: PrefabSpawnManager is not initialized." I am using Unity version 2017.2.1f1, and toolkit version  2017.2.1.1. Any advice or ideas on how to fix are appreciated! Thanks in advance.

Best,
Jaylin</Description>
  </Issue>
  <Issue>
    <IssueID>1842</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Place Object with gestures and spatial mapping</Title>
    <CreatedDate>18/03/2018</CreatedDate>
    <ClosedDate>21/03/2018</ClosedDate>
    <IssueLabels />
    <Description>Hi to everyone, 

I want to move objects and place it on real objects e.g. a table. 
Therefore I used the Manipulated Function to move objects after made the pressed gesture. 
When I use the the ready gesture I'm able to touch the object. 
In both cases I use Trigger events to interact with the hologram. 

Now I want to move the object and put it on a table. 
As a preparation I made the spatial mapping tutorials but I didn't want to use the gaze for the placement.
When I tried to place the object e.g a table it fell downwards to infinity.

Do you have some hints to solve this issue ?

Chris</Description>
  </Issue>
  <Issue>
    <IssueID>1841</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Error with Build Appx Package</Title>
    <CreatedDate>17/03/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>No Repro</Name>
        <IssueID>1841</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When building Appx package with build window, get the error: Win32Exception. No change with Unity Editor and VS, could work well last day but raise this error when trying to build now.
## Expected Behavior
get the Appx package
## Actual Behavior
Win32Exception: ApplicationName='cmd.exe', CommandLine='/C vswhere -version 15.0 -products * -requires Microsoft.Component.MSBuild -property installationPath', CurrentDirectory='C:\Program Files (x86)\Microsoft Visual Studio\Installer', Native error= The system cannot find the file specified.
## Steps to reproduce
_(Links to sample github project preferred)_

![image](
![image](



## Unity Editor Version
Unity -- 2017.3.1f1
VS -- 15.6.2
## Mixed Reality Toolkit Release Version
2017.2.1.3 Hot Fix</Description>
  </Issue>
  <Issue>
    <IssueID>1840</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>`InteractionManager' does not contain a definition for `InteractionSourceDetected'</Title>
    <CreatedDate>17/03/2018</CreatedDate>
    <ClosedDate>17/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview

errors:

Assets/HoloToolkit/Input/Scripts/InputSources/GamepadInput.cs(80,36): error CS0117: `InteractionManager' does not contain a definition for `numSourceStates'

Assets/HoloToolkit/Input/Scripts/InputSources/InteractionInputSource.cs(273,32): error CS0117: `InteractionManager' does not contain a definition for `InteractionSourceDetected'

Assets/HoloToolkit/Utilities/Scripts/DebugPanelControllerInfo.cs(71,32): error CS0117: `InteractionManager' does not contain a definition for `InteractionSourceDetected'

Assets/HoloToolkit/Input/Scripts/InputSources/InteractionInputSource.cs(286,66): error CS0117: `InteractionManager' does not contain a definition for `GetCurrentReading'

And more of the same..

I get this in error in the editor while working on a Hololens project. I started a clean project from scratch. After importing the assets the errors popped again.


## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

-Import Holotoolkit 
-Added Kinect assets
-Setup the the configuration (through the mixed reality menu)
-Add Sharing and sharing services exe

-Somewhere around this moment the errors appeared

## Unity Editor Version

Unity 2017.2.1f1

## Mixed Reality Toolkit Release Version

HoloToolkit-Unity-2017.2.1.3
</Description>
  </Issue>
  <Issue>
    <IssueID>1837</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Documentation question : ImportExportAnchorManager </Title>
    <CreatedDate>14/03/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview

Hi Everyone, this is more a Documentation question. On the Sharing readme file, it is mentioned the **ImportExportAnchorManager**  as part of the SharingTest.unity scene.  ( 
However, on the example scene I can't find the instance of this singleton. I hae tried looking inside of the scripts that are actually on the scene to find if some of them attach the  _ImportExportAnchorManage_ to the anchor gameobject but I had no luck. 

Is this script actually called on the SharingTest scene or is there any other script that calls it somehow???.
Sorry if it is a silly question, I just got a little bit confused by the documentation .

Thanks in advance for any help you could provide me on this</Description>
  </Issue>
  <Issue>
    <IssueID>1836</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Room mesh not anchored in view. Sharing anchors fails sometime.</Title>
    <CreatedDate>14/03/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Recently I've been having a whole lot of weird issues with MRTK and the Hololens. Room meshes seem to get stuck in the frustum and sharing anchors works sometimes, sometimes not. These things have been working before without me doing any changes to my code.

I've been using TapToPlace to place Holograms and then share it directly P2P using TCP. This has worked fine but now I get really weird behaviour like the the wireframe mesh getting "stuck" and moves with the device and so on. When I share Holograms sometimes it works perfectly, sometimes the Hologram on the receiver gets stuck at (0,0,0 : Hololens head position). I have verified the anchor data that is sent. It is the exact same data down to the bit. Export and import is also successful. It just seems random to me. I have tried to delete spaces, no change.

Question: even if it is indeed placed in (0,0,0) shouldnt the Hologram jump to the correct position after a while when the spatial understanding is the same?

Also, I have the other Unity bugs with color separation and wobbling Holograms.

Does anyone know what is going on? I get the feeling that there is something fundamental wrong somewhere...


## Expected Behavior
Sharing anchors works, room meshes map correctly.

## Actual Behavior
Works sometimes.

## Unity Editor Version
2017.2.1f1

## Mixed Reality Toolkit Release Version
2017.2</Description>
  </Issue>
  <Issue>
    <IssueID>1835</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Custom buttons on AppBar raise no event</Title>
    <CreatedDate>14/03/2018</CreatedDate>
    <ClosedDate>16/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When adding custom buttons on the AppBar, those buttons do not raise any event when clicked, even though an OnTappedEvent has been provided.

## Expected Behavior
When clicked the buttons should raise their OnTappedEvent.

## Actual Behavior
Nothing happens on click.

## Steps to reproduce
Just add an OnTappedEvent on a custom event and nothing happens on click.

## Unity Editor Version
2017.2.1f1

## Mixed Reality Toolkit Release Version
Actual Dev_Working_Branch.

## Correction Proposed
Not sure if we are just not using the AppBar correctly. We added a behaviour in the InputClicked method of the AppBar.cs and added a getter on the template attribute of the AppBarButton.cs :

lignes 239-241 :

default:
     obj.GetComponent&lt;AppBarButton&gt;().getTemplate().OnTappedEvent.Invoke();
     break;</Description>
  </Issue>
  <Issue>
    <IssueID>1834</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unable to Deploy from Build Window</Title>
    <CreatedDate>14/03/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>1834</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>1834</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Unable to deploy to Hololens. 

## Expected Behavior
After successfully building a barebones project and building the Appx, the program deploys correctly to the Hololens

## Actual Behavior.
Builds project correctly. Appears to connect to Hololens.
Does not deploy to the Hololens when pressing "Install"

## Steps to reproduce
The correct WiFi IP address is provided and when I press "Connect" under deploy options, I get the correct Hololens device name. When I press "Open Device Portal" - IE opens the Hololens Device Portal correctly without issue. 

When I press "Install" - I get a Network Error: Request timeout. 
Then "Failed to install [APP].appx on [DEVICE].

See screenshot. 
![image](

## Unity Editor Version
2017.3.1f1

## Mixed Reality Toolkit Release Version
2017.2.1.2

## Hololens OS Version
10.0.14393.2068

## Windows OS Version (Development PC)
10.0.16299 Build 16299
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>1834</IssueID>
        <PullRequestID>1904</PullRequestID>
        <Title>Async Building and Windows Device Portal Commands</Title>
        <Description>Overview
---
- Added a heavily edited version of the [Unity Async/Await Utilities]( by @svermeulen.  It has the same license type as the project (MIT)
- Fixed an issue where users were unable to build without either specifying a wsa certificate, or building through the normal Unity Editor Build window because the certificate had not been generated yet.  (Unity Build will generate one for you if one doesn't exist.)
- Adds async building of appx project. Typical Unity Player Building still blocks the editor, but APPX building and installing happens asynchronously.
- Did a bit of cleanup for coding guidelines and renamed a few classes for clarity.
- Added ability to build appx from command line argument.
- Added `EditorAssemblyReloadManager` to control reloading assemblies in the editor so running async tasks don't get cancelled prematurely.
- Added StartAsyncProcess extension methods.
- Added Rest Utililities.
- Updated data structures for Windows Device Portal.
- Fixes #1904 
- Moved the windows device portal classes out of the editor so any application can use it at runtime.
- Fixes #2124 and other conflicts with IL2CPP builds where the toolkit has implemented some apis from mscorlib.

TODO
---
- [x] Update Device Portal with new async Rest calls.
- [x] A bit of cleanup and renaming a few async methods with Async suffix.
- [x] Fix a issue with device connections when prev paired device is unreachable the string name is lost and it's impossible to select it again in the drop down.
- [x] Add all the documentation to the public PME's in the PR.
- [x] Fix an issue with CSRF Token refreshing.
- [x] Fix an issue with incrementing versions.
- [x] Compatibility with 2018.1
- [x] Make quick options HoloLens target make sure to target HoloLens only. #1959
- [x] Fixes #2119 

Breaking Changes
---
- Removed backwards compatibility to Visual Studio 2015.
- Changed command line tool hook for VSO build task.
- Removed unused `XDEGuestLocator.cs`
</Description>
        <CreatedDate>02/04/2018</CreatedDate>
        <ClosedDate>24/05/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>BREAKING CHANGE</Name>
            <IssueID>1834</IssueID>
            <PullRequestID>1904</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>1833</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Supporting Navigation events with editor hand simulation input</Title>
    <CreatedDate>13/03/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I would like to extent the CustomInputSource.cs to support Navigation Gesture events.
I looked at how the Manipulation gestures were emulated and now have a working prototype.
I dont support NavigationRails with what i have now.
The Wiki says i should ask here first before forking. Is this something you would be interested in?
I like the ability to use MRTK in a Hololens project emulating input using Mouse/keyboard, unfortunately only the Manipulation Gesture is currently supported.</Description>
  </Issue>
  <Issue>
    <IssueID>1832</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Change modules in spatial mapping API from private to protected (where extension is plausible)</Title>
    <CreatedDate>13/03/2018</CreatedDate>
    <ClosedDate>14/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Currently the a lot of spatial mapping api capability seems private. We need to change them to virtual, protected, inherit &amp; override to use our own modification. Later if MRTK makes any update, we need to repeat the same changes. It better can be done from MRTK side. It is a suggestion. Please guide us if there is any other alternative.
## Expected Behavior
Create classes/modules that can be inherited and modified by user without requiring effort (changing protected ..virtual etc...) if it is changed from MRTK side. 
</Description>
  </Issue>
  <Issue>
    <IssueID>1831</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1831</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>FixedAngularSize</Title>
    <CreatedDate>13/03/2018</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When using the FixedAngularSize.cs on the cursor, i observed a flicker when it was going from an intersection of an object that was far to an empty area (whereby placing the cursor at the default distance).
I found that the scaling of the cursor was done in the FixedAngularSize.cs Update(), but its positioning from the GazeManager.Update(). So if the FixedAngularSize update is called first and then the Gazemanager.Update is done afterwards you would get the wrong scale for one frame.

I fixed this by changeing Update to LateUpdate in FixedAngularSize.cs to make sure that the scaling of the cursor is computed after its placement.

## Expected Behavior
No flicker
## Actual Behavior
Flickers when going form far to near.

## Steps to reproduce
Add component to a cursor. SO that the cursor stays always the same size, irrespective of near or far.
Then try to look at a few objects you have setup near and far from the camera. When the cursor leaves the focus of an object i observed a slight jump (imminent resize) of the cursor. The explanation is above.
its a really simple fix....

## Unity Editor Version
2017.3.1.p2
## Mixed Reality Toolkit Release Version
2017.2.1.1</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1830</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>NET Native failing</Title>
    <CreatedDate>13/03/2018</CreatedDate>
    <ClosedDate>14/03/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1830</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>NET Native is failing for some reason on Windows 10 Fall Creators Update. We are using HoloToolkit, Unity 2017.1 and VS2015 (minimum and target version of the app is set to Anniversary Update). The solution builds fine on another machine running Windows 10 Creators Update. The error log I get from the NET Native build is attached below. When I search for the methods it complains about, it seems like all of them were introduced in the Creators and Fall Creators updates. 

``</Description>
  </Issue>
  <Issue>
    <IssueID>1828</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tile Generator missing some image types</Title>
    <CreatedDate>12/03/2018</CreatedDate>
    <ClosedDate>12/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Upon generation / updating of project's icons, the Tile Generator process throws an ArgumentOutOfRangeException and stops. This happens at "Generating resized images 25 of 238".

## Expected Behavior
Generation of resized images and setting project attributes

## Actual Behavior
Throw an ArgumentOutOfRangeException and stops
![image](

## Steps to reproduce
1. Mixed Reality Toolkit menu &gt; Tile Generator
2. Select images of required sizes
3. Click on "Update Icons" button

## Unity Editor Version
2017.2.1f1

## Mixed Reality Toolkit Release Version
2017.2.1.2
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1827</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1827</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>UX Button disabled state doesn't prevent clicks</Title>
    <CreatedDate>12/03/2018</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Currently, if you have a button using the UX/Scripts/Buttons/Button.cs script, and have the ButtonState set to Disabled, clicking on the Button is not ignored and still causes a state change. 

Other functions, such as OnFocusEnter, OnFocusLost, OnHoldx, etc. check for disabled state, and jump out if found:

``

However, TriggerClicked, OnInputDown, OnInputUp, OnInputClicked, check for "enabled", which is not a button state but a Behaviour property (not sure what that is). As a result, control still flows through the code and eventually sets the ButtonState to Observation, as well as hitting any code you have set up to handle the click event.

## Expected Behavior
Ignore clicks, state should not change.

## Actual Behavior
Accepts click, triggers event and changes state to Observation

## Unity Editor Version
2017.3.1p2

## Mixed Reality Toolkit Release Version
Dev
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1825</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1825</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>AudioOccluder does not properly restore lowPass filter cutoff frequency</Title>
    <CreatedDate>12/03/2018</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
If a GameObject has a LowPass filter attached and configured, the AudioOccluder script will not propertly restore the original frequency.

## Expected Behavior
AudioOccluder (or the AudioEmitter) to restore the originally configured LowPass filter frequency.

## Actual Behavior
If a LowPass filter already exists on a component, the initial frequency is not cached and the cutoff will be set to 22kHz when the occlusion effect is removed.

## Mixed Reality Toolkit Release Version
All versions
</Description>
  </Issue>
  <Issue>
    <IssueID>1824</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cannot test whether grip position can be obtained from a WSA hand</Title>
    <CreatedDate>12/03/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Forgive me if this covered elsewhere: it no longer seems possible to 'properly' test **if a position can be obtained** from a WSA 'hand' input source (via InteractionInputSource). Browsing through the current code, it appears that though a hand supplies a position through its 'grip' ability, and this gets reflected up through the SourceCapabilities, **asking for the capability** fails because GetSupportedInputInfo doesn't consider grip info (position or rotation) at all.

## Expected Behavior
Asking **for 'Position'** support will succeed for an InteractionInputSource with an underlying WSA hand source

## Actual Behavior
**The only supported info from a hand is 'Selected', IIRC.**

## Repro
Set up a default scene including the InputManager with an InteractionInputSource.
Add a script that implements a Handler interface (e.g. IInputClickHandler)
In the Interface delegate, ask the InputEventData if its InputSource supports the SupportedInputInfo.Position info

## Mixed Reality Toolkit Release Version
Local version is some flavour of 2017.2, but current code as browsed on GitHub looks the same
</Description>
  </Issue>
  <Issue>
    <IssueID>1823</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InputManager Singletons prevent using Multiple scenes</Title>
    <CreatedDate>12/03/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1823</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
How is the Input system usable if you have multiple scenes using MRTK and one loading another?
I use the InputManager prefab in a Hololens menu scene, which then loads up another scene which also uses the InputManager.  
Running both scenes alone is fine, but when one is loaded after the other the input system screws up and does not work anymore!!!!
Even the suggestion of having only one InputManager prefab in the menu scene does not work because the world space canvases in the to be loaded scene need a link to the EventSystem Raycast camera which is not possible this way.

Has anyone used MRTK to load multiple scenes? What do you do?
The 1.5.5 version was fine..... without the invasive new Singletons....
 
Here  are the error messages i get, the World space UI is not interactable anymore. An i assume nothing else would work either.
![image](

Thanks

## Expected Behavior
The Input system should work acress scenes
## Actual Behavior
It does not work, because the InputManager never dies and screws up input altogether.
## Steps to reproduce
Just create 2 scenes using the InputManager where one scene loads another.

## Unity Editor Version
2017.3.1
## Mixed Reality Toolkit Release Version
2017.2.1.1</Description>
  </Issue>
  <Issue>
    <IssueID>1822</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>1822</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title> Failed to attach BoundigBoxRig to gameobject during play mode on Dev_Working_Branch</Title>
    <CreatedDate>11/03/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>1822</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>cs
private void Start()
        {
            objectToBound = this.gameObject;
            //Problem
            boxInstance = Instantiate(BoundingBoxPrefab) as BoundingBox;


Bounding box prefab is required to be assigned before play scene...
cs
        [Header("Preset Components")]
        [SerializeField]
        [Tooltip("To visualize the object bounding box, drop the MixedRealityToolkit/UX/Prefabs/BoundingBoxes/BoundingBoxBasic.prefab here.")]
        private BoundingBox boundingBoxPrefab;
`</Code>
    <Description>## Overview
When attach BoundigBoxRig to a gameobject during play mode, an ArgumentException occurs. Because BoungingBox prefab couldn't find in Start();

``

And the script doesn't retry to get BoundingBoxPrefab after the target is assigned in the runtime.

## Steps to reproduce
1. Start Play
2. Create any object in scene
3. Attach component of BoundignBoxRig to it.
4. Error
ArgumentException: The Object you want to instantiate is null.
UnityEngine.Object.CheckNullArgument (System.Object arg, System.String message) (at C:/buildslave/unity/build/Runtime/Export/UnityEngineObject.cs:238)
UnityEngine.Object.Instantiate[BoundingBox] (MixedRealityToolkit.UX.BoundingBoxes.BoundingBox original) (at C:/buildslave/unity/build/Runtime/Export/UnityEngineObject.cs:199)
MixedRealityToolkit.UX.BoundingBoxes.BoundingBoxRig.Start () (at Assets/MixedRealityToolkit/UX/Scripts/BoundingBoxes/BoundingBoxRig.cs:174)

## Unity Editor Version
Unity 2017.2.1.1p4

## Mixed Reality Toolkit Release Version
2017.2.1p2  (Dev_Working_Branch)
</Description>
  </Issue>
  <Issue>
    <IssueID>1816</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Rotate a gameobject with gesture</Title>
    <CreatedDate>09/03/2018</CreatedDate>
    <ClosedDate>09/03/2018</ClosedDate>
    <IssueLabels />
    <Description>Hi guys,

I want to rotate a gameobject e.g. a cube with gestures. 
In #448 a version is mentioned, which I tried with the HoloLens.
Are there other versions available for rotating e.g. TryGetRotation?

Thanks,
Chris</Description>
  </Issue>
  <Issue>
    <IssueID>1815</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title> Please update SpectatorView to support at least Unity 2017.2 and work with the MixedRealityToolkit</Title>
    <CreatedDate>09/03/2018</CreatedDate>
    <ClosedDate>10/03/2018</ClosedDate>
    <IssueLabels />
    <Description>We are using MixedRealityToolkit development, we will use SpectatorView, which is very important for developers, please update it
</Description>
  </Issue>
  <Issue>
    <IssueID>1814</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>v.Next Documentation</Title>
    <CreatedDate>08/03/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>1814</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Documentation for v.Next as discussed 3/7 in shiproom.

- Simple, How-To docs
Users of the MRTK should NOT be required to read the code to understand a component.
    - Overviews
    - Common tasks
- Detailed API docs
Auto-generated from MRTK source code.
    - ALL public classes, properties, methods, events, fields, enums
    - Version (of MRTK) the feature was introduced
    - Dependencies
- Visual Design docs
    - Key design requirements for designing custom objects for use with MRTK (ex: cursor models, controller visualizations, etc)
- Architecture docs
For complex components, typically managers (ex: InputManager, Cursors, ...)
    - Document architecture before coding.
    - Use pull request process for approval
    - Architecture changes need to be approved
- Performance notes and known side effects
- Breaking changes
    - Top level BreakingChanges.md links to feature level BreakingChanges.md files
    - History is maintained in feature level BreakingChanges.md files

Storage
- Investigate using GitHub pages.
    - master/docs folder?
    - gh_pages branch? (keeps docs separate from code)
- Other location?



</Description>
  </Issue>
  <Issue>
    <IssueID>1813</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Issues with UnityGLTF submodules when updating MRToolkit</Title>
    <CreatedDate>08/03/2018</CreatedDate>
    <ClosedDate>12/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview

Hello there! So, I just updated my version of MRToolkit for Unity on a project and my Editor says something strange to me: the `UnityGLTF.GLTFSceneImporter.cs` has ambiguous references between `GLTF` namespace and `GLTF.Schema`.

So far, I've only got this class impacted by those ambiguous references, and they concern the following ones:

- `GLTFRoot`
- `MeshPrimitive`
- `Scene`
- `Node`
- `TextureInfo`
- `Image`

I think the issue comes from that the two namespaces are used in the class, should it be better if we use only one? If we do this, which namespace should I keep for this class? `GLTF` or `GLTF.Schema`? 

## Expected Behavior
The package should be imported without errors in Unity.

## Actual Behavior

![image](

## Steps to reproduce
1. Take an old project made with MRToolkit
2. Update the MRToolkit with the new released one
3. Enjoy your compilation error

## Unity Editor Version
2017.3.1f1

## Mixed Reality Toolkit Release Version
2017.2.1.2</Description>
  </Issue>
  <Issue>
    <IssueID>1812</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Is there a sample for Visual Pairing?</Title>
    <CreatedDate>08/03/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>1812</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>SpectatorView</Name>
        <IssueID>1812</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>As it's stated in the documentation, Visual Pairing is possible:

**Visual Pairing**
Connect devices just by looking at them
- One device displays a QR code with connection info and security code
- Other device sees QR code, connects, and validates with security code
- Can also detect location in 3D space using built-in fiducial marker support

Is there also a sample for this, or has anyone experiences using Visual Pairing?

Best regards :)
</Description>
  </Issue>
  <Issue>
    <IssueID>1811</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Documentation improvements</Title>
    <CreatedDate>08/03/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>1811</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1811</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I'm not sure if this is the right place to ask but does a tutorial exist somewhere which describes step by step how to implement sharing of objects and data? Since weeks I'm fighting with this topic now and it is very frustrating. The documentation provided with MRT ( is unfortunately not helpful. I've read the Microsoft Academy Tutorials ( as well. Particularly the 'digging into the code' chapters are realy disappointing. 

</Description>
  </Issue>
  <Issue>
    <IssueID>1810</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[bugs/Suggestions] 关于沉浸式头显的传送方式</Title>
    <CreatedDate>08/03/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>在最新主分支（2018/3/8 master）版本中有几个问题（沉浸式头显）：

新建一个场景，添加【MixedRealityCameraParent】【DefaultCursor】【InputManager】后：

1.用控制器向前移动时，以高频率推动方向杆时，传送标记（就是地上那个箭头）会消失；
2.用控制器向前移动时，移动足够远的距离时，无法移动，传送标记没有动画，但传送标记仍然显示，建议不能移动时就让传送标记消失；
3.建议传送时，显示抛物线；</Description>
  </Issue>
  <Issue>
    <IssueID>1809</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Enable Sharing (SharingClient.dll) on Android</Title>
    <CreatedDate>08/03/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>1809</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When building for Android, I am getting errors that SharingClient.dll is not available

## Expected Behavior
I should be able to use AR Core with SharingClient.dll

## Actual Behavior
DllNotFoundException: SharingClient

## Steps to reproduce
Switch platform in Unity to Android and build sharing example

## Unity Editor Version
2017.3.1f

## Mixed Reality Toolkit Release Version
Latest
</Description>
  </Issue>
  <Issue>
    <IssueID>1808</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Suggestion: Refactor to use on other Plattforms</Title>
    <CreatedDate>08/03/2018</CreatedDate>
    <ClosedDate>09/11/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Cross Platform</Name>
        <IssueID>1808</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi, I read already that you are planning to support other VR platforms. However, i am often asked to make demos on the hololens and then transfer the same to iOs Cardboard.
Hm. In older versions of the Toolkit it wouldn't even compile, don't know how it is now.

Would be great if one could separate all User Inputs from GameObjects (namely the new UX demo stuff).

But that is just wishful thinking. All the best!</Description>
  </Issue>
  <Issue>
    <IssueID>1806</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1806</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>joekellyms</FixedById>
        <IssueID>1806</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext UAudioManager updates</Title>
    <CreatedDate>07/03/2018</CreatedDate>
    <ClosedDate>25/09/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Work with @joekellyms to update UAudioManager for MRTK vNext</Description>
  </Issue>
  <Issue>
    <IssueID>1805</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1805</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>vNext SpatialSound updates</Title>
    <CreatedDate>07/03/2018</CreatedDate>
    <ClosedDate>22/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Update / rework Spatial Sound scripts (ex: AudioOcclusion, SpatialSoundSettings) for MRTK vNext.</Description>
  </Issue>
  <Issue>
    <IssueID>1801</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Dead Link in Documentation (404 - page not found)</Title>
    <CreatedDate>07/03/2018</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Documentation</Name>
        <IssueID>1801</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Hi, I was just reading the documentation and found a dead link:
Open  in your Browser. Scroll down until you see step 4. with the text
&gt; Follow the same steps for the sample text layout prefabs in HoloToolkit-Examples\Text

and click on the Link "HoloToolkit-Examples\Text".

## Expected Behavior
documentation should open

## Actual Behavior
Error 404 page not found
</Description>
  </Issue>
  <Issue>
    <IssueID>1800</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>2017.2.1.2 Patch Release compile errors</Title>
    <CreatedDate>07/03/2018</CreatedDate>
    <ClosedDate>07/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I'm getting two compile errors on an empty project with only the toolkit package imported.

## Expected Behavior
The toolkit compiles successfully.

## Actual Behavior
Getting two compile errors:
1. Assets/HoloToolkit/SharingWithUNET/Scripts/PlayerController.cs(341,13): error CS0246: The type of namespace name `UNetSharedHologram` could not be found. Are you missing an assembly reference?

2. Assets/Holotoolkit/SharingWithUNET/Scripts/PlayerController.cs(342,13): error CS0841: A local variable `ush` cannot be used before it is decleared

## Steps to reproduce
1. Start a new project.
2. Import package "HoloToolkit-Unity-2017.2.1.2". 
3. Click "Play".

## Unity Editor Version
2017.2.1.p2

## Mixed Reality Toolkit Release Version
2017.2.1.2</Description>
  </Issue>
  <Issue>
    <IssueID>1775</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ObjectCollection doesn't manage correctly the diplay</Title>
    <CreatedDate>28/02/2018</CreatedDate>
    <ClosedDate>14/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When using an ObjectCollection, the objects are not displayed as they should.

## Expected Behavior
For example, when displaying 49 objects in 10 rows, there should be 5 objects per row except for the last one where there should be 4.

## Actual Behavior
What actually happens is that there are only 4 objects per rows and the 9 objects left are displayed at the center of the collection.

## Steps to reproduce
Just try displaying a number of objects that is not a multiple of the number of rows, and it should displau the objects in an odd way.

## Correction found
We corrected this issue at the line 180 of the ObjectCollection.cs script : 

Original code : "_columns = Mathf.CeilToInt(NodeList.Count / Rows);"

Working code : "_columns = Mathf.CeilToInt((float) NodeList.Count / (float)Rows);"


Thank you !
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1774</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Navigation gesture doesn't work in Editor but, works on HoloLens</Title>
    <CreatedDate>27/02/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I am creating a rotation method using the INavigationHandler. After triple checking my code and on the edge of giving up I deployed to the HoloLens and it actually worked to my surprise. I figured this was some sort of bug. Not sure if it is Unity or Toolkit related or if it has been discovered already and figured I'd report it.

## Expected Behavior
Navigation gesture to work in the editor.

## Actual Behavior
Navigation gesture only works on the HoloLens

## Unity Editor Version
2017.1

## Mixed Reality Toolkit Release Version
latest
</Description>
  </Issue>
  <Issue>
    <IssueID>1771</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add error logging to BuildDeployTools</Title>
    <CreatedDate>27/02/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Build / Tools</Name>
        <IssueID>1771</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I would like to add additional logging to the build window to get more information about build errors so it's easier to diagnose and solve them.

## Expected Behavior
When a build error occurs I am able to read the error message.

## Actual Behavior
When trying to build APPX through the Build Window, if there are any build errors you only get a message: 
Debug.LogError("MSBuild error (code = " + process.ExitCode + ")");
Usually reads out as "MSBuild error code = 1"
This is a generic failure message and doesn't help us diagnose and solve the problem.

## Steps to reproduce
Have any problem in your dev environment that would cause building APPX to fail. In my case I had additional VS Build Tools installed along with my VS environment and it caused build failure.

## Unity Editor Version
2017.1.3f1
## Mixed Reality Toolkit Release Version
2017.2.1.1</Description>
  </Issue>
  <Issue>
    <IssueID>1770</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add Spatial Mapping layer to "Apply Mixed Reality Project Settings"</Title>
    <CreatedDate>27/02/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>1770</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The Spatial Mapping Manager defaults to using layer 31 for the mesh. Projects generally need to set layer 31 to Spatial Mapping for easy reference (ex: configuring the Focus Manager).

I'd like to propose adding an option to the Apply Mixed Reality Project Settings dialog to set the name of layer 31 to Spatial Mapping.
</Description>
  </Issue>
  <Issue>
    <IssueID>1769</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Enable Single Pass Stereo Rendering as Default</Title>
    <CreatedDate>27/02/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Apologies if this has been suggested before, but I noticed that the stereo rendering method in the UWP player settings is set to "Multi Pass." I would recommend the default behavior be set to Single Pass (and Single Pass Instanced in the future).

Note, this won't be a performance improvement for most of the example scenes within the MRTK, but complex "production scenes" will likely see a performance improvement. We will also have to update a handful of shaders that are lacking stereo single pass support.

## Unity Editor Version
2017.2.1f1

## Mixed Reality Toolkit Release Version
Tested on [Dev_Working_Branch](
</Description>
  </Issue>
  <Issue>
    <IssueID>1768</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>AutoConfigureMenu's Scene Settings Should Be Updated to Conform to New Standards</Title>
    <CreatedDate>27/02/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
In a recent [pull request](  it was mentioned that scene managers should live under a game object named "Managers". We should change the Mixed Reality Toolkit-&gt;Apply Mixed Reality Scene Settings menu item to apply this new standard.

## Expected Behavior
When selecting the Mixed Reality Toolkit-&gt;Apply Mixed Reality Scene Settings menu item the Input Manager prefab (if selected) should be instantiated as a child of a "Managers" game object. 

## Actual Behavior
The Input Manager gets instantiated at the scenes root.

## Steps to reproduce
1) Select File-&gt;New Scene
2) Select Mixed Reality Toolkit-&gt;Apply Mixed Reality Scene
3) Assert "Add the Input Manager Prefab" is selected
4) Select Apply
5) Observe the InputManager gets instantiated at the scene root

## Unity Editor Version
2017.2.1f1

## Mixed Reality Toolkit Release Version
Tested on [Dev_Working_Branch](
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1767</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Apply Mixed Reality Project Settings causes error for MRTK 2017.2.1.1 in Unity 2017.2.1f1</Title>
    <CreatedDate>27/02/2018</CreatedDate>
    <ClosedDate>27/02/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview

I followed your readme and installed Unity 2017.2.1f1 (with Unity Hub), then imported  with `Assets &gt; Import Package &gt; Custom Package` leaving all the defaults untouched.

When clicking `Mixed Reality Toolkit &gt; Configure &gt; Apply Mixed Reality Project Settings` with the defaults untouched and then clicking `Apply` nothing happens and I get this error: `switching to universal windows platform:metrosupport is disabled`

## Expected Behavior

The project settings should be applied.

## Actual Behavior

Nothing happens and you get a `switching to universal windows platform:metrosupport is disabled` error.

## Steps to reproduce

Detailed in overview.

## Unity Editor Version

2017.2.1f1

## Mixed Reality Toolkit Release Version

2017.2.1.1</Description>
  </Issue>
  <Issue>
    <IssueID>1766</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Button (Interactive script) OnHold Event() is only called once?</Title>
    <CreatedDate>27/02/2018</CreatedDate>
    <ClosedDate>31/03/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1766</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I am trying to rotate an object to the right while a button is being pressed. The rotating is not the problem but, continuing to rotate is. I have my method attached to the OnHold Event() on a Button Prefab from the MRTK examples folder. Maybe the OnHold Event only detects holds once but, I thought it was more along the lines of the equivalent of Input.GetKey where it continues to perform while the user is Holding the button down. Is this not the case? If not, any possible solutions would be appreciated. </Description>
  </Issue>
  <Issue>
    <IssueID>1765</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity editor play does not launch on headed set</Title>
    <CreatedDate>27/02/2018</CreatedDate>
    <ClosedDate>27/02/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1765</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I am unable to get my test project to display on the VR headset anymore. I have deleted the HoloToolkit folder from my Assets and tried both loading the unity package and just downloading the master branch and unzipping and copying HoloToolkit(folder), HoloToolkit.meta, mcs.rsp and mcs.rsp.meta back into the Assets folder. I have run the project setup and scene setup from the menu section. I am at a complete loss.

## Expected Behavior
The project used to display on the head set when pressing play in Unity Editor.

## Actual Behavior
Press play, project builds and loads in the game tab. If I move the headset I can see the camera display moving. When looking through the headset it just sitting in the WMR house.

## Steps to reproduce
Not sure what causes it.

## Unity Editor Version
Unity 2017.2.1f1
## Mixed Reality Toolkit Release Version
2017.2.1.1</Description>
  </Issue>
  <Issue>
    <IssueID>1762</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>UNetAnchorManager forces you to use the Spatial Mapping Manager if it is provided</Title>
    <CreatedDate>27/02/2018</CreatedDate>
    <ClosedDate>07/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
If you include Spatial Mapping Manager in the scene the UNetAnchorManager will force you to use it when it tries to find the anchor position. 

In my project, I want to have the anchor where I have placed my SharedCollection, but with the current implementation the anchor position gets overwritten by the Spatial Mapping if it is in the scene.

Having the option to choose between using it or not would be neat.</Description>
  </Issue>
  <Issue>
    <IssueID>1760</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Send Slider Value on Update</Title>
    <CreatedDate>27/02/2018</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Allows for value to be sent when invoking **OnUpdateEvent** event of slider control (Slider Gesture Control).
## Expected Behavior
Ability to specify an object method that accepts the updated value of the slider
## Actual Behavior
Slider does not send value when invoking update method.
## Steps to reproduce
Select an object and a method to invoke.  Must specify the value to pass through.
![image](

## Unity Editor Version
2017.3.0f3 Personal
## Mixed Reality Toolkit Release Version
2017.2.1.0</Description>
  </Issue>
  <Issue>
    <IssueID>1758</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SharingWithUNET causes Hololens crash on Session Start</Title>
    <CreatedDate>26/02/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>1758</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

Cloned MRTK-Unity and opened SharingWithUNET example scene. Configured for UWP and Built. Deployed to Hololens. When I click to start a new session on the Start button, app freezes, then crashes, and returns me to Hololens home space.

Tried this with both latest .unitypackage release and by cloning MRTK repository. Same result.

Have used these Hololenses and this PC to successfully build shared experience Hololens apps. Did full reset of both Hololenses, didn't help.

## Expected Behavior

Expect example scene to run normally, but starting a new network session and beginning anchor export.

## Actual Behavior

App freezes and crashes, returns to Hololens home space.

## Steps to reproduce
Import Holotoolkit unity package. Open SharingWithUNET example scene. Build and deploy. Run the app and  click button to start session.

MRTK-Unity master branch and / or .unitypackage Release 2017.2.1.1
Unity 2017.2.1.f1
Windows 10 Fall Creators Update
Visual Studio 15.5.4 with 10.0.16299.0 SDK

## Unity Editor Version
2017.2.1.1
## Mixed Reality Toolkit Release Version
2017.2.1.1
</Description>
  </Issue>
  <Issue>
    <IssueID>1757</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>michaellperry</FixedById>
        <IssueID>1757</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>In HandDraggable, when RotationMode is Default and using motion controller, orient the object with the controller rather than the head.</Title>
    <CreatedDate>26/02/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1757</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

I plan to work on this issue.

When dragging an object using HandDraggable in an immersive headset, the orientation of the object follows the user's head by default. Twisting, turning, or yawing the motion controller has no effect.

## Expected Behavior

The orientation of the object when RotationMode is Default should be determined by the motion controller, if a motion controller was used to grab the object.

## Actual Behavior

The orientation of the object is determined by the user's head. Nodding or turning the head results in changes to object orientation, resulting in a very unnatural experience.

For example, to set a horizontal object upright, it is necessary for the user to look down at the floor when grabbing it, and then raise their head to rotate it upward before releasing it. This is more naturally done by lifting the wrist.

## Steps to reproduce

Run [MyScrapRoom]( with an immersive headset. Pick up one of the photo albums from the top shelf. Bring it down to the island table top. Notice that it is most likely diagonal, since your head went from looking up to looking straight.

Pick up one of the lava lamps. Tilt your head from side to side. The lava lamp follows your head.

Drop one of the lava lamps on its side on the floor. Now try to right it. It's very difficult to do because you have to move your head.

## Unity Editor Version

Unity 2017.3.0f3 (64-bit)

## Mixed Reality Toolkit Release Version

V1</Description>
  </Issue>
  <Issue>
    <IssueID>1755</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SharingWithUUNET in MixedRealityToolkit references -Examples project</Title>
    <CreatedDate>25/02/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The Player prefab in the SharingWithUUNET folder of MixedRealityToolkit has a PlayerController script that only exists in the MixedRealityToolit-Examples/SharingWithUUNET/Scripts folder

## Expected Behavior
No references from MRTK to MRTK-Examples

## Actual Behavior
Reference that breaks if you do not include the Examples project

## Unity Editor Version
Any

## Mixed Reality Toolkit Release Version
Dev_Working_Branch
</Description>
  </Issue>
  <Issue>
    <IssueID>1754</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Mixed Reality Toolkit Version Next</Title>
    <CreatedDate>24/02/2018</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>1754</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># What is MixedRealityToolkit-vNext?
The V1 Mixed Reality Toolkit is a collection of scripts and components intended to accelerate development of applications targeting Microsoft HoloLens and Windows Mixed Reality headsets.

This new version of the MixedRealityToolkit aims to further extend the capabilities of the toolkit and also introduce new features, including the capability to support more VR/AR/XR platforms beyond Microsoft's own Mixed Reality setup.

The vNext branch is taking all the best lessons learned from the original Mixed Reality Toolkit and refactoring / restructuring it to both:

* Support a wider audience, allowing solutions to be built that will run on multiple VR / AR / XR platforms such as Mixed Reality,  Steam/Open VR and OpenXR (initially)

* Provide an easier to use SDK, to enable rapid prototyping and ease adoption for new users (or users of previous frameworks)

* Ensure an extensive framework for advanced integrators, with the ability to swap out core components with their own should they wish to, or simply extend the framework to add new capabilities.

&gt; Learn more about the architecture behind [Windows Mixed Reality - vNext]( here.

&gt; Learn more about the approach behind the [Windows Mixed Reality - vNext SDK]( here.

# Feature areas
The Mixed Reality Toolkit vNext will includes many APIs to accelerate the development of MR / XR / VR / AR projects for a range of supported devices, including (but not limited to)

 - Microsoft HoloLens
 - Microsoft Immersive headsets (IHMD)
 - Steam VR (HTC Vive / Oculus Rift)
 - OpenXR platforms

# FAQ

&gt; **Will my old projects based on the previous version be compatible?**

Short answer, No.  Long Answer, yes, but with some significant work.  We will be providing a detailed change log and an upgrade guide for those of you who want to try and update your projects.

&gt; **When do we expect to see a first production ready version?**

No concrete date has been set, but I think the ideal is sometime in May 2018 to coincide with Build.

&gt; **Is it expected that vNext will be feature complete with the current branch?**

Yes, the new version will have most or all of the same features as the current release. Our hope is to do an A/B test to ensure no features have been lost. That being said, it's likely that some feature areas may be rewritten from the ground up.

&gt; **Should we continue to develop and test against the current branch and if so until what point?**

New development should happen against the Development branch, and bug fixes should go against both Stabilization and Development.

&gt; **Will the current branch continue to be supported / developed against or will it be abandoned?**

We haven't yet decided when to stop support for the current version. But seeing as this is an open source project, I'm sure that generous contributors will continue to post PRs against the older version.

Once vNEXT has matured and replaced the current master branch, then the old version will move from master to a new branch named HoloToolkit-Old or something similar.</Description>
  </Issue>
  <Issue>
    <IssueID>1752</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>SimonDarksideJ</FixedById>
        <IssueID>1752</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Evaluate final Stabalisation features against Dev_Working</Title>
    <CreatedDate>24/02/2018</CreatedDate>
    <ClosedDate>05/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Several fixes have gone in to stabalisation that will need replicating against Dev_Working to ensure they aren't lost for MRTP vNext

## Identified PR's (subject to Stabalisation cut off.)

- [x] #1750
- [x] #1749 
- [x] #1748
- [x] #1745
- [x] #1747
- [x] #1746
- [x] #1735
- [x] #1756
- [x] #1764


</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1751</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Motion Controller trigger mapped on Xbox controller</Title>
    <CreatedDate>24/02/2018</CreatedDate>
    <ClosedDate>24/02/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Motion Controller trigger change value on Xbox trigger

## Expected Behavior
Suppose should separate Xbox from Motion controllers

## Steps to reproduce
1) Open sample scene from MRTK
Assets\HoloToolkit-Examples\Input\Scenes\XboxControllerExample.unity

2) Star then press left/right trigger on Motion Controller.
3) Note Xbox left/right/share trigger change value

## Unity Editor Version
Unity 2017.3.1f1

## Mixed Reality Toolkit Release Version
MRTK 2017.2.1.1
</Description>
  </Issue>
  <Issue>
    <IssueID>1744</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Keyboard/UICollection Broken in Unity 2017.3.1p1</Title>
    <CreatedDate>22/02/2018</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The top left key in each UICollection is either misplaced or invisible when viewing on the device and building from Unity 2017.3.1p1
 

## Expected Behavior
All keys should be visible and placed how they are in the editor.

## Actual Behavior
When I display the keyboard.prefab the Q key is no where to be seen and the &amp;123 is displaced but in view.   If I change to other keyboards the same thing happens in that the first element of the UICollection is missing or displaced.


## Steps to reproduce
Use Unity 2017.3.1p1 and then instantiate a keyboard.prefab in your scene.   

## Unity Editor Version
2017.3.1p1

Not reproducable in 2017.2

## Mixed Reality Toolkit Release Version
2017.2.1.1 (not certain)


Possible fix:
Add this:

            if (!Application.isEditor) { return; }

To the CollectItems and UpdateLayout methods.</Description>
  </Issue>
  <Issue>
    <IssueID>1740</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>error CS1929: 'SpatialInteractionController' does not contain a definition for 'TryGetRenderableModelAsync'</Title>
    <CreatedDate>21/02/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1740</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Getting this error building 'GazeRuler' Example
This bug was reported back in Oct 2017 and discussion closed. Well, it's back.
Just install this version of Unity with needed extras for building to HoloLens, open the MRTK, find the GazeRulerExample project, and build. Boom.
Can you PLEASE fix this

## Expected Behavior
That I get no errors and it runs correctly

## Actual Behavior
I get this error when Building

## Steps to reproduce
It's today's available version of the Mixed Reality Toolkit for Unity

## Unity Editor Version
2017.3.1p1

## Mixed Reality Toolkit Release Version
Latest commit 0d54a2d  on Jan 18 2018</Description>
  </Issue>
  <Issue>
    <IssueID>1737</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title> InteractionSourceDetected  doesn't work correctly on build (HeadSet, 2017.3)</Title>
    <CreatedDate>21/02/2018</CreatedDate>
    <ClosedDate>11/12/2018</ClosedDate>
    <IssueLabels />
    <Description> I get input and controller childs via InteractionSourceDetected and InteractionSourceUpdated. In Editor its always works fine, but in build InteractionSourceDetected not work in first start app. After restart app work fine. (work correctly In 2017.2.0p1-MRTP4)
Unity 2017.3.0f3
HeadSet </Description>
  </Issue>
  <Issue>
    <IssueID>1736</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>NetworkDiscoveryWithAnchors.StartHosting(string SessionName) does not actually use SessionName parameter</Title>
    <CreatedDate>21/02/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>1736</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Function's docstring suggest that the name will only be used if a name cannot be calculated. IMO even if a name can be calculated, end-user still should be able to set a name for his/her session.

I got over this restriction by writing an adapter to NetworkDiscoveryWithAnchors class that maps desired session names to generated session names, which also changes the way events are fired. I found that instead of a `session list changed` event, firing a `new session found` event and a `session is closed` event, both containing specific session data in their callbacks, to be more useful. I don't like my adapter though and I want to remove it from my codebase :)

This is more like a suggestion than an issue and I don't know if it makes sense to you. I would love to hear your thoughts on the matter.

Cheers.

## Expected Behavior
Session name is the same as the parameter 'SessionName'

## Actual Behavior
Function does not use the parameter at all.

## Steps to reproduce
`StartHosting("a session name")` is enough to reproduce.

## Unity Editor Version
2017.3.0f3

## Mixed Reality Toolkit Release Version
v2017.2.1.1</Description>
  </Issue>
  <Issue>
    <IssueID>1733</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SyncObject.ObjectChanged not firing</Title>
    <CreatedDate>20/02/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I am trying to create a SyncModel representing a GameObject (SyncGameObject), so it has the following fields: 
 - GameObject myObject; // This is the Object being represented
 - SyncTransform myTransform; // The Transform used to sync interactions
 - SyncBool isActive; // If the gameObject is active or not
 - ChangeTransform(Transform) // Gets called through an interaction script on the GameObject to set the new values to be synced.
 - OnTransformChanged(SyncObject) // myTransform.ObjectChanged += OnTransformChanged DOES NOT FIRE... why?  However SyncTransform.OnPositionChanged gets fired.  But I dont know how to use that data, because the GameObject Reference goes null once I leave the set function.  Why? 

So if a parent container class (SyncGameObject) subscribes to any SyncObject.ObjectChanged events, they don't fire.  And I have been killing myself to figure out how to do that.

## Expected Behavior
SyncGameObject.OnTransformChanged() gets fired

## Actual Behavior
SyncGameObject.OnTransformChanged() doesn't get fired

## Steps to reproduce
**TestSpawnManager - MonoBehaviour Script placed on prefab to start initialization**

`public class TestSpawnedManager : MonoBehaviour {

	// Use this for initialization
	void Start () {
        Debug.LogFormat("TestSpawnedManager.Start(): Initiallizing the sync model...");

        ((TestSyncSpawnManager)GetComponent&lt;DefaultSyncModelAccessor&gt;().SyncModel).InitializeExternally(this);
	}
	
	// Update is called once per frame
	void Update () {
		
	}
}`

**TestSyncSpawnManager - SyncSpawnedObject Data Model**

`[SyncDataClass]
public class TestSyncSpawnManager : SyncSpawnedObject
{
    [SyncData] public SyncArray&lt;TestSyncGameObject&gt; InteractiveChildren = new SyncArray&lt;TestSyncGameObject&gt;("Interactive Children");

    public TestSpawnedManager manager;

    public override void Initialize(string name, string parentPath)
    {
        base.Initialize(name, parentPath);
    }

    public void InitializeExternally(TestSpawnedManager _myManager)
    {
        manager = _myManager;

        Debug.LogFormat("TestSyncSpawnManager.InitializeExternally(): GameObject: {0}", manager.name);

        // Initialize any interactive GameObjects
        InitializeChildren();
    }

    public void InitializeChildren()
    {
        Debug.LogFormat("TestSyncSpawnManager.InitializeChildren(): Gathering and making SyncGameObjects of the children");

        // Get and Loop through the children
        Transform[] children = manager.GetComponentsInChildren&lt;Transform&gt;(true);
        for (int i = 1; i &lt; children.Length; i++)
        {
            GameObject childObj = children[i].gameObject;

            GestureInteract gestInt = childObj.GetComponent&lt;GestureInteract&gt;();
            if (gestInt != null)
            {
                TestSyncGameObject childModel = InteractiveChildren.AddObject(new TestSyncGameObject(childObj.name + "_SyncModel", childObj));
                
                Debug.LogFormat("TestSyncSpawnManager.InitializeChildren(): GameObject: {0}. ", childObj.name);
            }
        }
    }
}
`

**TestSyncGameObject - SyncModel representing a gameobject with an Interact script on it**

`[SyncDataClass]
public class TestSyncGameObject : SyncObject
{
    [SyncData] public SyncTransform MySyncTransform = new SyncTransform("Transform");

    public GameObject gameObject { get; set; }
    public Transform transform { get; set; }

    public TestSyncGameObject()
    {
        Debug.LogFormat("TestSyncGameObject.SyncGameObject(): EMPTY CONSTRUCTOR");
    }

    public TestSyncGameObject(string _field, GameObject _object) : base(_field)
    {
        gameObject = _object;
        transform = gameObject.transform;

        Debug.LogFormat("TestSyncGameObject.TestSyncGameObject(): Initializing SyncGameObject for: {0}", gameObject.name);

        MySyncTransform.Position.Value = transform.localPosition;
        MySyncTransform.Rotation.Value = transform.localRotation;
        MySyncTransform.Scale.Value = transform.localScale;

        // Check if there is a Gesture Interact for the GameObejct
        GestureInteract gestInteract = gameObject.GetComponent&lt;GestureInteract&gt;();
        if (gestInteract != null)
        {
            // Give the Sync Field name as the ID for any GestureInteracts
            GestureInteract gestInt = gameObject.GetComponent&lt;GestureInteract&gt;();
            if (gestInt != null)
            {
                Debug.LogFormat("SyncGameObject.InitializeExternally(): Initializing GestureInteract");
                gestInt.InitializeSharing(this);
            }
            
        }

        MySyncTransform.ObjectChanged += OnSyncTransformObjectChanged;
        MySyncTransform.PositionChanged += OnSyncTransformPositionFlag;
        MySyncTransform.Position.ObjectChanged += OnSyncTransformPositionObjectChanged;

    }


    public void ChangeTransformHandler(Transform _newTransform)
    {
        Debug.LogFormat("TestSyncGameObject.ChangeTransformHandler(): {0}'s new position: {1}", _newTransform.name, _newTransform.localPosition);

        MySyncTransform.Position.Value = _newTransform.localPosition;
        MySyncTransform.Rotation.Value = _newTransform.localRotation;
        MySyncTransform.Scale.Value = _newTransform.localScale;
               
    }

    private void OnSyncTransformPositionObjectChanged(SyncObject obj)
    {
        Debug.LogFormat("TestSyncGameObject.OnSyncTransformPositionObjectChanged(): SyncTransform.Position Object Changed");  // DOES NOT FIRE
    }

    private void OnSyncTransformPositionFlag()
    {
        Debug.LogFormat("TestSyncGameObject.OnSyncTransformPositionFlag(): SyncTransform.PositionChanged Action Flag");  // DOES NOT FIRE
    }

    private void OnSyncTransformObjectChanged(SyncObject obj)
    {
        Debug.LogFormat("TestSyncGameObject.OnSyncTransformObjectChanged(): SyncTransform Object Changed");  // DOES NOT FIRE
    }
}`

** SyncTransform - Added Print statements**

`    [SyncDataClass]
    public class SyncTransform : SyncObject
    {
        [SyncData] public SyncVector3 Position = new SyncVector3("Position");
        [SyncData] public SyncQuaternion Rotation = new SyncQuaternion("Rotation");
        [SyncData] public SyncVector3 Scale = new SyncVector3("Scale");

        public event Action PositionChanged;
        public event Action RotationChanged;
        public event Action ScaleChanged;

        public SyncTransform(string field)
            : base(field)
        {
            Position.ObjectChanged += OnPositionChanged;
            Rotation.ObjectChanged += OnRotationChanged;
            Scale.ObjectChanged += OnScaleChanged;
        }

        private void OnPositionChanged(SyncObject obj)
        {
            Debug.LogFormat("SyncTransform.OnPositionChanged(): CHANGE ========="); // FIRES
            PositionChanged.RaiseEvent();
        }

        private void OnRotationChanged(SyncObject obj)
        {
            Debug.LogFormat("SyncTransform.OnRotationChanged(): CHANGE =========");  // FIRES
            RotationChanged.RaiseEvent();
        }

        private void OnScaleChanged(SyncObject obj)
        {
            Debug.LogFormat("SyncTransform.OnScaleChanged(): CHANGE =========");  // FIRES
            ScaleChanged.RaiseEvent();
        }
    }
}`
## Unity Editor Version
2017.3.1

## Mixed Reality Toolkit Release Version
2017.2.1</Description>
  </Issue>
  <Issue>
    <IssueID>1732</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How would I impliment something like OnFocusEnter/Exit for a layer/tag in my scene?</Title>
    <CreatedDate>20/02/2018</CreatedDate>
    <ClosedDate>20/02/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1732</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>So, this might be a noob question, but I want to implement basically a highlight material whenever the user's gaze enters an object with a certain layer/tag. I thought the best bet would be to implement something like IFocusable, however after I started thinking about it, I would need to add this script to each object I want to highlight, i.e. 20 to 30 objects. 

Is there a way to implement something like OnFocusEnter and apply to all objects with certain layer/tag without having to add it to each individual object? However, I still only want to highlight the individual object I am looking at.  Or am I going about this all wrong? Any assistance on the matter would be greatly appreciated.</Description>
  </Issue>
  <Issue>
    <IssueID>1731</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tracking image is not disappearing inside the application </Title>
    <CreatedDate>19/02/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
tracking image is not disappearing
## Expected Behavior
tracking image should disappear after tracking is done inside the application.
## Actual Behavior
tracking image does not disappearing even after the tracking has been completed, the tracking image keeps on following the camera.
## Steps to reproduce
_(Links to sample github project preferred)_
- open a hololens application
- lose the spatial tracking while inside the application 
- then try to track again, the tracking image will appear  
## Unity Editor Version
2017.2.1p
## Mixed Reality Toolkit Release Version
2017.2.1p</Description>
  </Issue>
  <Issue>
    <IssueID>1730</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Ambiguous call GetTypeInfo() in dev branch with .Net 4.6 runtime version.</Title>
    <CreatedDate>19/02/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When importing the latest dev branch with .Net 4.6, the following error appears:

MixedRealityToolkit/Sharing/Scripts/SyncSettings.cs(43,33): error CS0121: 
The call is ambiguous between the following methods or properties: 'MixedRealityToolkit.Common.Extensions.ReflectionExtensions.GetTypeInfo(this System.Type)' and 'System.Reflection.IntrospectionExtensions.GetTypeInfo(this System.Type)'

## Expected Behavior
No errors.

## Actual Behavior
Ambiguous call in [SencSettings.cs#L43](

## Steps to reproduce
Import latest dev branch in 2017.3.1p1.
Switch Scripting Runtime Versions to Experimental .Net 4.6
Error appears after restarting Unity.

## Unity Editor Version
2017.3.1p1

## Mixed Reality Toolkit Release Version
dev_branch 19.02.2018</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1729</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Speech duplicate</Title>
    <CreatedDate>18/02/2018</CreatedDate>
    <ClosedDate>19/02/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
`SpeechInputHandler` keyword events are called twice. `SpeechInputSource` works properly, can't trace the problem within the custom `InputManager`.
## Expected Behavior
When I say a particular keyword the response method to be called exactly once from `SpeechInputHandler `
## Actual Behavior
When I say a particular keyword the response method is called twice
## Steps to reproduce
Add a `SpeechInputSource` with a keyword ("Page up" in my situation) and a `SpeechInputHandler`  which handles that keyword. Both scripts shall reside in the `Managers` GameObject which is added by using the MixedReality Toolkit menu.
## Unity Editor Version
2017.2.1f1 Windows10 64bit
## Mixed Reality Toolkit Release Version
2017.2.1.0</Description>
  </Issue>
  <Issue>
    <IssueID>1728</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>TransformSynchronizer not sharing and receiving information</Title>
    <CreatedDate>17/02/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I'm trying to share the transform position, rotation and scale of a gameobject that is not spawned at runtime, but already exists in the scene of the two hololens.

In my project I have:

Manager GameObject with:
- SharingStage
- SharingWorldAnchorManager

WorldAnchor with:
- AutoJoinSessionAndRoom

Sphere (Child of WorldAnchor) with:
- TransformSynchronizer
Where I changed the Start method with:

``
The session and room are created but no information is synched between the two hololens.

## Expected Behavior
When I move a sphere in the scene of one Hololens, the sphere moves in the scene of the second Hololens.

## Actual Behavior
When moving the sphere in the Hololens 1, in the Hololens 2 there is no movement.
No **OnPositionChanged** events are called in TransformSynchronizer of the second hololens.

## Unity Editor Version
Unity 2017.3.1f

## Mixed Reality Toolkit Release Version
2.1.1</Description>
  </Issue>
  <Issue>
    <IssueID>1725</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[ImmersiveHeadsets] SpatialAnchorTransferManager denied access to WorldAnchor serialization</Title>
    <CreatedDate>16/02/2018</CreatedDate>
    <ClosedDate>20/02/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1725</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I'm getting an error when trying to export anchors data, using the example from Unity ([link here]( : 
Calling "WorldAnchorTransferBatch.ExportAsync" leads to 
&gt; SpatialAnchorTransferManager denied access to WorldAnchor serialization

## Expected Behavior
The anchors should be serialized and returned as a byte array.

## Actual Behavior
The following error is returned and the export fails

&gt; SpatialAnchorTransferManager denied access to WorldAnchor serialization

It happens both in editor and in build.

## Steps to reproduce
- Add an anchor into your project
- Use the [Unity anchor sharing example script]( or my version of it below to try and save it.

## Unity Editor Version
2017.3.0p4 / 2017.3.1p1 / 2017.2.0p2

## Mixed Reality Toolkit Release Version
Release from the 16th of january

Thanks for your help !
Tom


Code : 
``</Description>
  </Issue>
  <Issue>
    <IssueID>1724</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Button Icons Missing</Title>
    <CreatedDate>16/02/2018</CreatedDate>
    <ClosedDate>02/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The Buttons brought in from MRDL seem to be missing the textures for the icons. In the Compound Button Icon inspector panel, under "Profile" when expanded, many texture fields can be seen with no assigned textures. This results in being unable to set the icon via the drop down menu.

## Expected Behavior
Selecting the icon to use for the button under the "Icon" drop down menu in the Compount Button Icon inspector should change the icon of the button.

## Actual Behavior
No change is made and the icon selected remains as "ObjectCollectionSphere"

## Steps to reproduce
Dragging any of the Button prefabs under the UX folder into the scene and attempting to change the icon via the CompoundButtonIcon inspector.

## Unity Editor Version
2017.2.1p2

## Mixed Reality Toolkit Release Version
2017.2.1.1</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1722</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>client Authority(Immersive headset) to share hologram to the host(Hololens) not shared, while the Host to client was getting shared in UNET!!.</Title>
    <CreatedDate>16/02/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>1722</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Two way sharing not working in UNET bw immersive and hololens!!.
## Expected Behavior
two way sharing between hololens to immersive and immersive to hololens!!.
## Actual Behavior
sharing from immersive to hololens is not getting shared, while the host to client was getting shared!!.
## Steps to reproduce
tried with UNET Sharing scene in 2017.2.1 toolkit , added a extra cube  added network identity and transform and player was enabled to local player authority!!.
## Unity Editor Version
2017.2.1p1
## Mixed Reality Toolkit Release Version
2017.2.1</Description>
  </Issue>
  <Issue>
    <IssueID>1721</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Broken materials after obsolete shader removal</Title>
    <CreatedDate>15/02/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Some materials (mostly in the UX folders) have broken after the removal of most of the obsolete shaders. Some (the ones listed with InternalErrorShader below) were broken already anyway.

Material Name | Shader
-- | --
Balloon | StandardFast
BoundingBoxSpherical | StandardFast   (Fade)
BoundingBoxTransparent | StandardFast   (Fade)
ButtonBackground | Lambertian   Configurable Transparent
ButtonForeground | Lambertian   Configurable
ButtonHighlightCircle | Unlit Configurable   Transparent
ButtonHighlightRectangle | Unlit Configurable   Transparent
ButtonIconMaterial | Unlit Configurable   Transparent
ButtonMat | StandardFast
CeilingPlane | InternalErrorShader
FloorPlane | InternalErrorShader
Highlight | Unlit Configurable
PushButtonYellow | StandardFast
SampleBlue | StandardFast
SampleGreen | StandardFast
SampleOrange | StandardFast
SamplePink | StandardFast
SampleRed | StandardFast
TablePlane | InternalErrorShader
TeleportMarker | StandardFast
ToolTipBalloon | StandardFast
WallPlane | InternalErrorShader
White | StandardFast

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>1720</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HTK sharing is not working b/w hololens and Immersive headsets!!.</Title>
    <CreatedDate>15/02/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>1720</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
trying to sharing bw hololens and immersive headset!!.
## Expected Behavior
it supposed to be work like 2 hololenses.
## Actual Behavior
Not connected.
## Steps to reproduce
tried with HTK sharing scene , not connecting / sharing  bw hololens and immersive headsets.

## Unity Editor Version
2017.2.1p1
## Mixed Reality Toolkit Release Version
2017.2.1.0</Description>
  </Issue>
  <Issue>
    <IssueID>1719</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Incorrect lighting in HMD when using linear color space in Unity 2017.3.1f1</Title>
    <CreatedDate>15/02/2018</CreatedDate>
    <ClosedDate>15/02/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When using the linear color space in unity 2017.3.1f1 the image that is displayed in the headset is far darker than what is displayed in the unity editor. If I switch to the gamma color space I don't see this error and when using Unity 2017.2.0p2-MRTP5 linear color space is displayed correctly.
## Expected Behavior
Same image to be displayed in the headset as in the editor
## Actual Behavior
Image displayed in headset is much darker
## Steps to reproduce
_(Links to sample github project preferred)_
Set color space to linear in unity 2017.3.1f1
## Unity Editor Version
unity 2017.3.1f1
## Mixed Reality Toolkit Release Version
MixedRealityToolkit for Unity 2017.2.1f1</Description>
  </Issue>
  <Issue>
    <IssueID>1716</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MTRK Dev BuildAndDeploy Errors in Unity 2018 Beta</Title>
    <CreatedDate>13/02/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Has anyone tried Unity 2018.1.0b6 64bit with MRTK Dev_Working_Branch #1518 committed four hours ago?  Basically this is the latest MRTK as far as I can tell, matched with the latest beta Unity version 2018.  It barfs in BuildAndDeploy folder with 22 errors for types and PlayerSettings.   It barfs on editor scripts.   Yes I know the suggested Unity version is something like Unity 2017.2. 1f1 but I have to get Unity and/or Microsoft to fix an interaction that fails for FileSavePicker in UWP for MR and HoloLens, and Unity will only take bugs serious when you show they appear in their latest beta version.  It will likely prove to be a bug in MS UWP area but because it involves an interface between two systems I have to show it crops up when using  both together.

## Expected Behavior
Build basic MRTK (dev, stable or master) with Unity 2018.1.0b6 64bit with no build errors
## Actual Behavior
Can't Build basic MRTK dev version in Unity  2018.1.0b6 64bit with MRTK Dev_Working_Branch #1518 
(Also problem in stable and master)
This is a small sef the errors for editor build in latest beta: Assets/MixedRealityToolkit/BuildAndDeploy/Editor/BuildSLNUtilities.cs(145,44): error CS0029: Cannot implicitly convert type `UnityEditor.Build.Reporting.BuildReport' to `string'
Assets/MixedRealityToolkit/Utilities/Scripts/Editor/SetIconsWindow.cs(311,50): error CS0117: `UnityEditor.PlayerSettings.WSAImageType' does not contain a definition for `StoreTileLogo'
## Steps to reproduce
_(Links to sample github project preferred)_
Use the actual MRTK Dev github with Unity 2018 beta 6
## Unity Editor Version
Unity 2018.1.0b6 64bit 
## Mixed Reality Toolkit Release Version
MRTK Dev_Working_Branch #1518 committed four hours ago (20180213 2pm)</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1715</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Replace the FastConfigurable Shader System</Title>
    <CreatedDate>13/02/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Feature Branch</Name>
        <IssueID>1715</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description># Overview
Hi All, we've discussed this in the weekly ship room but here is the official proposal. I would like to replace the current FastConfigurable shader with "Fluent," a shader system our team has built and maintains. This replacement will not only contain the shading system but also example scenes we have created. I plan to rename Fluent to "MixedRealityToolkit/Standard" for integration into the MRTK. But, will refer to it for Fluent in this proposal.

## What is Fluent?
Fluent is a collection of shading techniques for mimicking [**Microsoft's Fluent Design System**]( within Unity 3D.

Fluent is useful for anyone who would like to build mixed reality experiences in Unity while adhering to Fluent Design System principles. **The goal of Fluent is to have a single, flexible shader that can achieve visuals similar to Unity's Standard Shader, implement Fluent Design System principles, and remain performant on mixed reality devices.**

## Why use Fluent?
- Dynamic Lighting - Lighting is designed to mimic the standard shader a close as possible while staying within performance guidelines. Lighting is achieved via dynamic lighting (single directional light Blinn-Phong) with specular reflections, reflection, refraction, emissive lighting, rim lighting (fresnal), image based lighting, environment lighting, and hover lighting (cursor light).

&lt;img width="1024" alt="mrsmaterialgallery" src="

- Performant - Fluent is architected to run at 60fps to ensure motion is smooth.

- Procedural UX - Procedurally generated borders will react to hover lighting, and border colors can be overwritten for desired effects. Transparent objects with rounded corners will be also be anti-aliased without the need for multisampling. Inner glow can also be emitted from borders. Procedurally generated fluent borders will preserve width even when applied to non-uniformly scaled objects. Rounded corners are calculated at runtime to support animation and infinite resolution.

![itemcontent](

- Animatable - All of Fluent's shader properties can be animated using Unity's animation system to achieve motion or via script with material property blocks.

- Configurable - Easily create any material surface you desire via check boxes in a custom material inspector.

&lt;img width="512" alt="mrsmaterialgallery" src="

## Limitations
- Only one light source is supported, the directional light.
- Performance when using normal mapping can be slow when a material that uses normal mapping takes up most of your view.
- Fluent does not support dynamic shadows.

## Questions
- I'm planning to move FastConfigurable into the Obsolete folder. Is that the proper approach or should it be removed all together?
- Should I try to port all existing materials over to Fluent or wait to have that happen gradually over time?</Description>
  </Issue>
  <Issue>
    <IssueID>1714</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Application stuck after the "Trying to map your surroundings" window pops-up</Title>
    <CreatedDate>12/02/2018</CreatedDate>
    <ClosedDate>13/02/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When Hololens can no longer recognize the environment the application is stuck, with the "Trying to map your surroundings" stuck in front of the user, without any animation.
## Expected Behavior
Hololens to map the surroundings once it can, and remove the "Trying to map your surroundings" window afterwards, allowing the user to continue using the application.
## Actual Behavior
The message remains stuck and follows the users view, blocking spatial mapping.
Holograms no longer fixed in the world
I uploaded a video with a simple demonstration here: 
Shut down the lights, then I obstructed the cameras and released them.
## Steps to reproduce
Create a very simple unity project, obstruct the spatial mapping cameras, stand close to a wall or turn off the light if it's dark.
## Unity Editor Version
2017.2.1f1
## Mixed Reality Toolkit Release Version
2017.2.1.0
## Note
Worked on all previous Holotoolkit, works as intended outside of application</Description>
  </Issue>
  <Issue>
    <IssueID>1713</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SharingTest not working, Anchor data invalid</Title>
    <CreatedDate>12/02/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>1713</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I'm trying to run the SharingTest demo, but anchors are not valid and not uploaded to the sharing service. 
I tried with 4 different Hololens, removing the Spaces, creating the anchors after 10 seconds, creating a custom scene but there is no solution.
![20180212_213018_hololens](


## Expected Behavior
SharingTest demo on two Hololens connected to the Sharing Service and sharing the WorldStage anchor of the first hololens connected. 

## Actual Behavior
When running the first Hololens and running the SharingTest, the Anchor is not uploaded.
The anchor data is 0 bytes. I checked the size in the method "ExportComplete" of SharingWorldAnchorManager class, line 588
`if (rawAnchorUploadData.Count &lt; MinTrustworthySerializedAnchorDataSize)`

The demo worked fine 2-3 times, uploading the anchors, after that it never worked again, I tried with 4 Hololens and it is not working.

## Steps to reproduce
Just compile the SharingTest project and run it on the Hololens.

## Unity Editor Version
2017.3.1f 64Bit
I tried also with 2017.2.1f and it is not working.

## Mixed Reality Toolkit Release Version
HoloToolkit-Unity-2017.2.1.1

</Description>
  </Issue>
  <Issue>
    <IssueID>1712</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>1712</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Slider range not properly working</Title>
    <CreatedDate>12/02/2018</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>1712</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The slider minimum value is set to 0 and the `MinSliderValue` variable is used subtracted from maximum value
## Expected Behavior
When proprieties `MinSliderValue` and `MaxSliderValue` are set, the value of the slider with-the knob to left-most should be `MinSliderValue` and to the right-most should be `MaxSliderValue`
## Actual Behavior
`MinSliderValue` becomes 0 and `MaxSliderValue` becomes `MaxSliderValue - MinSliderValue`. After that it works as intended.
## Steps to reproduce
Add a simple slider and set interval to 0.5-5.0, formatting 0.00.
## Unity Editor Version
2017.2.1f1
## Mixed Reality Toolkit Release Version
2017.2.1.0</Description>
  </Issue>
  <Issue>
    <IssueID>1709</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>1709</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>KevinKennedy</FixedById>
        <IssueID>1709</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add Inscribed Rectangle functionality to BoundaryManager</Title>
    <CreatedDate>09/02/2018</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Boundaries</Name>
        <IssueID>1709</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

BoundaryManager currently gives you cuboid bounds that contain the whole boundary polygon.  That means areas will be in-bounds even though there could be physical objects intersecting that area.

## Expected Behavior

BoundaryManager should calculate an inscribed rectangle from which to derive the cuboid bounds.  This is what other VR platforms do: [Open VR](

The inscribed rectangle code has been available since last fall, however, the bounds functionality has been broken in Unity 2017 so the sample code only works on Unity 5.6.  See [doc here](  There is at least one workaround now so we can port the code.

## Actual Behavior

Boundary manager is actually broken with Unity 2017.  If it did work, it gives you too large a boundary.

## Steps to reproduce

Build and run the BoundaryTest scene

## Unity Version
2017.x

## MRTK version
2017.2.1.1
</Description>
  </Issue>
  <Issue>
    <IssueID>1707</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>KeyboardInputField is triggering both the Holotoolkit Keyboard and Mixed Reality system keyboard.</Title>
    <CreatedDate>09/02/2018</CreatedDate>
    <ClosedDate>09/02/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When selecting a KeyboardInputField it is displaying both the keyboard.prefab and the Mixed Reality system keyboard
## Expected Behavior
Only the keyboard.prefab from MixedRealityToolkit to be shown
## Actual Behavior
The MixedRealityToolkit keyboard is shown, then the MR system keyboard pops up, it then closes for a fraction of a second and pops up again. When pointing at the system keyboard the controllers and the pointer from the system are displayed on top of the controllers in my game as well. This does not happen in the unity editor, but only in builds. I'm using VRTK for the pointer input. A few days ago the build I created did not have this problem. Not sure if there was an update to the WMR or if something is set up differently in my unity project.
## Steps to reproduce
_(Links to sample github project preferred)_
1. Place the keyboard.prefab into the scene 
2. Setup a KeyboardInputField
3. Make a build
4. Select KeyboardInputField
## Unity Editor Version
Unity 2017.2.0.1p2-MRTP5
## Mixed Reality Toolkit Release Version
MixedRealityToolkit 2017.2.1f1</Description>
  </Issue>
  <Issue>
    <IssueID>1702</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>run SpacialProcessing in a loop at the scanning interval</Title>
    <CreatedDate>08/02/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>1702</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>1702</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I like to rerun the plane finding whenever the ObjectSurfaceObserver did its update.

## Expected Behavior
I think adding an UnityEvent that can be Invoked in the Update-function of ObjectSurfaceObserver could do the trick.

## Actual Behavior
The Update-functions in ObjectSurfaceObserver and SpatialMappingObserver are private, so to me it looks like there is no trigger for the plane-finding after a surface-scan update.

I am also wondering if there is a better way to find walls/run plane finding</Description>
  </Issue>
  <Issue>
    <IssueID>1701</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Simple Tagalong does not move back/forth</Title>
    <CreatedDate>08/02/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
So I noticed that when I turn around until I the object is out of the view frustum, and the object comes back in the view like it should, but if you move back or forward immediately when after it is back in view, for few moments the object wont move and then suddenly it warps to the tagalong distance.
## Expected Behavior
Moves along the user at all times while staying in the frustum.
## Actual Behavior
Does not move along when interpolator is running
## Steps to reproduce
Add A cube to the scene, add a simple tagalong script to the cube.
Script Settings &gt; Default
## Unity Editor Version
2017.2.0f3
## Mixed Reality Toolkit Release Version
2017.2.1.0</Description>
  </Issue>
  <Issue>
    <IssueID>1700</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Keyboard and KeyboardInputField not receiving tap events</Title>
    <CreatedDate>08/02/2018</CreatedDate>
    <ClosedDate>24/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>1700</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>No Repro</Name>
        <IssueID>1700</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The KeyboardInputField and the Keyboard dont seem to receive tap events, only mouse click events.
**edit using toolkit 2017.2.1.1: KeyboardInputField receives events, but the Keybord is not a collider for the gaze**

## Expected Behavior
Tap events would be converted to mouse click events and pass through to the keyboard and input field
**edit using toolkit 2017.2.1.1: KeyboardInputField receives events, but the Keybord is not a collider for the gaze so cant tap on keys**

## Actual Behavior
Tap events are not passed, only mouse click events.
**edit using toolkit 2017.2.1.1: Keyboard is a collider for the gaze**


## Steps to reproduce
Create a KeyboardInputField and a Keyboard instance in a scene, play and try to edit the input field.
Will work in editor (mouse click)
Will work in emulator (when using mouse input)
Wont work in emulator and device (when using tap)
**edit using toolkit 2017.2.1.1: Input field works, keyboard inaccessible to tap**

## Unity Editor and Toolkit versions
Latest working we could find:
Unity 2017.1.2f1
MRTK 2017.1.2
SDK 10.0.16299.0
Doesnt seem to work on any later combination.
**see edits**

## Our current workaround:
Added the IInputClickHandler interface and converted Tap events to Mouse click events for the following classess:
KeyboardInputField, KeyboardValueKeys, KeyboardKeyFunc

</Description>
  </Issue>
  <Issue>
    <IssueID>1699</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Blurring and wobbling holograms</Title>
    <CreatedDate>08/02/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>OS Bug</Name>
        <IssueID>1699</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I followed this manual  and added a cube, a sphere and a capsule to the scene. After building and deploying it to the HoloLens, all 3 objects are blurring when I move or turn my head. Since this did'nt happen with previous versions of HoloToolkit, I think that this is a bug of the current version.

## Expected Behavior
No blurring of 3D objects.

## Actual Behavior
Objects are blurring and wobbling.

## Unity Editor Version
2017.2.1f1
## Mixed Reality Toolkit Release Version
HoloToolkit-Unity-2017.2.1.1</Description>
  </Issue>
  <Issue>
    <IssueID>1696</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Feature Request: HandDraggable with variables to be able to lock certain axis upon drag/move</Title>
    <CreatedDate>07/02/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>I'm in the process of modifying HandDraggable where the user has the ability to drag an object on a certain axis. For example locking an object's x and z axis and only modifying the y. I feel that this would be a great feature to add to the MRTK. Possibly do something like they did with the Rotation Mode and make an enum for Positioning mode. Something like free axis, move X, move Y, move Z. I wrote the logic up kind of quick:

this would go under the UpdateDragging method just beneath the draggingPosition assignment. The only modding necessary would be to change under the Lerp function to just draggingPosition and adding the enum as a variable

`            draggingPosition = pivotPosition + (targetDirection * targetDistance);

            //if we set it to something other than default set the lock variables to our original position and move variable to stay the same
            if (PositionMode == PositionModeEnum.MoveX)
            {
                draggingPosition = new Vector3(draggingPosition.x, HostTransform.position.y, HostTransform.position.z);
            }
            else if (PositionMode == PositionModeEnum.MoveY)
            {
                draggingPosition = new Vector3(HostTransform.position.x, draggingPosition.y, HostTransform.position.z);
            }
            else if (PositionMode == PositionModeEnum.MoveZ)
            {
                draggingPosition = new Vector3(HostTransform.position.x, HostTransform.position.y, draggingPosition.z);
            }
            //else if default grab the direction value
            else{
                draggingPosition += cameraTransform.TransformDirection(objRefGrabPoint);
            }`

A better way to do this is probably to grab the user's direction and incorporate it into the calculation. But my main need for this is the Y axis and it would be really hard to mess that up haha. 
</Description>
  </Issue>
  <Issue>
    <IssueID>1694</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Failed to get rendering parameters for main camera - view transforms may get out of sync!</Title>
    <CreatedDate>06/02/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>OS Bug</Name>
        <IssueID>1694</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Mixed Reality Toolkit Release Version
Hi,I got a bug.
Unity 2017.3.0f3 (64-bit)  
Scene    HoloToolkit-Examples/Sharing/SharingService/Scenes/SharingTest.unity

Failed to get rendering parameters for main camera - view transforms may get out of sync! Error code: '0x80004002'
(Filename: C:\buildslave\unity\build\Runtime/VR/HoloLens/VRDeviceHoloLens.cpp Line: 554)
</Description>
  </Issue>
  <Issue>
    <IssueID>1693</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tile Generator is exporting more images than required</Title>
    <CreatedDate>06/02/2018</CreatedDate>
    <ClosedDate>07/03/2018</ClosedDate>
    <IssueLabels />
    <Description>Based on the [guideline ]( here, we may need only around 8. Can you reduce the amount of exports?</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1692</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>What is the future of Grab Mechanics?</Title>
    <CreatedDate>05/02/2018</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1692</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Background
Our team is working on a sample library that makes it easy to capture online and offline analytics in Mixed Reality applications. You can read about the project and download it from here:

[Mixed Reality Analytics Sample](

We currently track events like GazeEnter, PointerEnter, GazeExit, PointerExit. We would also like to track events like Grab and Release.

The [VRTK]( has supports grab interactions through [VRTK_InteractableObject]( and [VRTK_InteractGrab]( [NewtonVR]( has a similar concept through [NVRInteractable]( 

Unfortunately the MRTK doesn't seem to have a core concept of Grab and Release. There is a sample called [Grab Mechanics]( that appears to be a "semi-official" way of doing it, but it currently only exists as a sample. It is not part of the core toolkit.

## Question
We are hoping to build analytics in a way that it does not _depend_ on any particular library, but where possible we would like to integrate it in the most sensible way that makes it easiest to use.

What will become of the Grab Mechanics sample? Will it remain only just a sample in the **HoloToolkit-Examples** folder, or will the many interfaces and scripts that are part of this sample be merged into the core toolkit?</Description>
  </Issue>
  <Issue>
    <IssueID>1691</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can't update device's status in the application.</Title>
    <CreatedDate>05/02/2018</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1691</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The motion controllers' input and the headset tracking can only be detected and set BEFORE i open my 
master build UWP application. It's highly likely that i set something wrong in the Unity, but i still need to know how to fix it.（They work perfectly in play mode）
 
## Expected Behavior
I can power on the motion controller or set the headset tracking AFTER i open my application, and still get the correct tracking.

## Actual Behavior
I have to power on the motion controller and make sure the headset already got the tracking signal BEFORE i start my application, otherwise they won't work correctly.

## Unity Editor Version
Unity 2017.2 MRTP5

## Mixed Reality Toolkit Release Version
2017.2.1.1</Description>
  </Issue>
  <Issue>
    <IssueID>1689</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>DictationInputManager and focus do not play well together</Title>
    <CreatedDate>04/02/2018</CreatedDate>
    <ClosedDate>07/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
InputManager is architected to only send events to focused objects. This is fine for things like air-tapping, but speech is different. You may start to speak, move your cursor away from the object, and the object will never receive the dictation. It is unrealistic to expect the user to keep his/her head on a small microphone target all through dictation.

Adding a globalEventListener is not a good solution either. In this case, the object will receive all events from other objects, too, so to mitigate this, the developer has to add tons of checks all over the place.

## Steps to reproduce
- Open up the keyboard sample in HoloLens or the editor. 
- Air-tap on the microphone icon
- move the cursor off the keyboard
## Actual Behavior
What you speak doesn't get shown in the input field.

## Expected Behavior
The keyboard (and anything using the DictationInputSource) should receive dictation text until the dictation finishes, even if the gameobject is no longer in focus.

## Suggestions for fixing

:
- Consider whether DictationInputManager is a good candidate to being an InputModule at all or if it should be handled differently
 - If it is to stay an InputModule, provide a mechanism for gameobjects that initiated the dictation to keep receiving dictation events regardless of focus as long as the dictation session is active. E.g. StartDictation should have an optional IDictationHandler parameter, and if not null, dictation events should be passed to this object until dictation is complete.

## Unity Editor Version
2017.3

## Mixed Reality Toolkit Release Version
2017.2.0.1</Description>
  </Issue>
  <Issue>
    <IssueID>1687</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Bug in BuildDeployWindow</Title>
    <CreatedDate>02/02/2018</CreatedDate>
    <ClosedDate>04/02/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When checking for the current Windows 10 SDK version in HoloToolkit.Unity.BuildDeployWindow in lines 309-329 the correct and isntalled version is not found if there is only one folder in C:\Program Files (x86)\Windows Kits\10\Lib
## Expected Behavior
If there exists a folder with the name "10.0.16299.0" in C:\Program Files (x86)\Windows Kits\10\Lib nothing bad shoul happen.
## Actual Behavior
If ONLY the one folder with the name "10.0.16299.0" exists unity throws the error detailed in line 328.
## Reason of Error
The variable "currentSDKVersionIndex" is initialized with 0. Then the already mentioned folder is searched. But there is only the one folder in C:\Program Files (x86)\Windows Kits\10\Lib then both conditions in lines 313-323 result in the variable staying 0 (because length (1) - 1 = 0 as well as the index being 0). When the index is checked in line 326 an error is falsly detected.
##Steps to Fix
Initiate the variable "currentSDKVersionIndex" with -1 and change the check in line 326 to checking against -1. Neither the index of the folder (if found) nor the number of subfolders - 1 (if any exist) can be negative.
## Unity Editor Version
2017.3.0f3
## Mixed Reality Toolkit Release Version
2017.2.1.1</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>1687</IssueID>
        <PullRequestID>1549</PullRequestID>
        <Title>Updated Editor to 2017.3.0p2</Title>
        <Description>- Fixes: #1552 Removed previous Editor compatibility.
- Fixes: #1548 Updated the Editor to 2017.3.0p2
- Fixes: #1398 Fixes debugging on HoloLens
- Shader Upgrade NOTE: upgraded instancing buffer 'Props' to new syntax.
- Remove stabilization plane logic
- Add app setup wizard support for enabling the shared depth buffer.
- Remove duplicate SDK verification in build window utilities.

TODO
---

- [x] Write a check to see if shared depth buffer is enabled when the editor starts and UWP build target is specified.

Known Issues
---

[`WWW` and `UnityWebRequests` have false positive errors for UWP apps built against x86](
</Description>
        <CreatedDate>19/12/2017</CreatedDate>
        <ClosedDate>07/02/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>BREAKING CHANGE</Name>
            <IssueID>1687</IssueID>
            <PullRequestID>1549</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>1686</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>When will the next release release be released?</Title>
    <CreatedDate>02/02/2018</CreatedDate>
    <ClosedDate>21/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1686</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Mixed Reality Toolkit Release Version
When will the next release versions be released?
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>1686</IssueID>
        <PullRequestID>1698</PullRequestID>
        <Title>MRTK 2017.2.1.2 Patch Release</Title>
        <Description>[See draft release notes](</Description>
        <CreatedDate>08/02/2018</CreatedDate>
        <ClosedDate>07/03/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Feature Branch</Name>
            <IssueID>1686</IssueID>
            <PullRequestID>1698</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>1577</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InteractiveElementInstantiate-Example throwing nullpointer</Title>
    <CreatedDate>03/01/2018</CreatedDate>
    <ClosedDate>07/03/2018</ClosedDate>
    <IssueLabels />
    <Description>I just started the new year with a clean checkout of the MRTK.

I don't know how that happened (I guess I just forgot to save or something got tangled up during the merge) but the InteractiveGroupSet-Script attached to the "NoteButtonSet"-GameObject in my example ([InteractiveElementInstance on Dev_Working_Branch]( does not have the GameObject for the Grid set in the Inspector anymore so the Script throws a NullPointer if you just press play.

Should I just attach it again and create a pull request for the .unity-file or should I write something that searches the scene and attach it programmatically?

In general what is best practice for that? Should scripts search for components in the scene if they are not set in the inspector?
  </Description>
  </Issue>
  <Issue>
    <IssueID>1576</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Removing Interaction Source Types from Generic Input Events</Title>
    <CreatedDate>02/01/2018</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The PressType and Handedness is really only ever used for the Interaction Input Sources, and doesn't really have a place for generic input types.

I propose we move some of the Interaction Inputs into their own classes and interfaces that inherit from the Base Events.  This will help ensure we can have better cross platform inputs, and will reduce the complexity of the Input System.

![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>1573</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>UI components not working with multiple scenes</Title>
    <CreatedDate>29/12/2017</CreatedDate>
    <ClosedDate>07/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I had all of my components nested under game objects. This was getting messy for me and I decided to switch to scenes and use UnityManager.SceneManager

Everything is working as expected, except my Input UI Elements are now are not recognized by my gaze cursor. Following the setup for the keyboard input in the Holokit examples, I was able to get it set up before. 

But now I have this issue. 

Here are some screenshots below

![pt1](

If you look at the canvas in the inspector you will see the Camera I need to reference is not allowed. 

![pt2](

If you look at Inspector when Input Manager is selected, It says UI Raycast Camera is the camera under EventSystem


Let me know if any more information is needed for this or if there is a better way to handle scene management in unity that will allow use of the camera. 

## Unity Editor Version
2017.2
## Mixed Reality Toolkit Release Version
v2017.2.1.0</Description>
  </Issue>
  <Issue>
    <IssueID>1571</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cursor teleports back to Camera position</Title>
    <CreatedDate>28/12/2017</CreatedDate>
    <ClosedDate>08/02/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I did not have this issue on Tuesday (2017/12/26) when I was working on the project, but then the next day, when I was testing the application in the Unity editor, the error first started happening. I've had a similar issue before, and IIRC, the fix was to remove duplicate HoloLensInputModules from the EventSystem, but that's not the issue right now (no duplicate managers or anything that I can find).

## Expected Behavior
The cursor should move with the camera at all times, and stay in place when not moving/looking around

## Actual Behavior
When looking up or down initially, the Cursor uses the Gaze as expected for a moment, but then teleports back to the transform.position of the Camera. Moving the camera around causes the cursor to move as if it were the player avatar.

Small gif of the error:
![cursor-error](

Zip if you want MP4
[cursor-set-at-camera.zip](

Screenshots of managers
![inputmanager](


## Unity Editor Version
2017.2.0f3
## Mixed Reality Toolkit Release Version
2017.2

Edit: I was going to close the story, but though I would keep in open for now incase someone has anything to add regarding why this issue occurred for me all of the sudden, but not for the other developers.</Description>
  </Issue>
  <Issue>
    <IssueID>1570</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Hololens] click cannot be differentiated from up</Title>
    <CreatedDate>27/12/2017</CreatedDate>
    <ClosedDate>05/04/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When the finger is raised off of an intractable element, up and click are always raised no matter where down happened.  
From the Unity UI it's known that a click only happens when the down event happened on the same element.

## Expected Behavior
Click only happens when down happened on that object.

## Actual Behavior
Click always happens</Description>
  </Issue>
  <Issue>
    <IssueID>1569</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>The gaze will be hidden behind the dropdown menu entries</Title>
    <CreatedDate>27/12/2017</CreatedDate>
    <ClosedDate>28/12/2017</ClosedDate>
    <IssueLabels />
    <Description>Hi guys,
I have troubles with the gazing at the dropdown menu items. When I gaze at one of the entries the gaze will dissapear behind the entries. 
I used the gaze cursor "CursorWithFeedback" from the HoloToolKit and the Dropdown menu from unity.

![issue](

Did you know how to solve this issue? </Description>
  </Issue>
  <Issue>
    <IssueID>1568</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>OnInputClicked with avatar</Title>
    <CreatedDate>26/12/2017</CreatedDate>
    <ClosedDate>28/12/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1568</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I have Avatar and I want to give commands with this code. I don't know it there is better ways to do it.
``
## Expected Behavior
Avatar walks when click avatar. Code works if I use it with cube and click cube, then avatar start to walk.
## Actual Behavior
Not working with avatar
## Steps to reproduce
Use that script with avatar animation.
## Unity Editor Version
2017.2.1f1
## Mixed Reality Toolkit Release Version
2017.2.1.0
</Description>
  </Issue>
  <Issue>
    <IssueID>1567</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Assertion failed: Main camera does not exist! UnityEngine.XR.WSA.HolographicSettings:get_IsDisplayOpaque() HoloToolkit.Unity.InputModule.MixedRealityCameraManager:Start() (at Assets/HoloToolkit/Input/Scripts/Utilities/Managers/MixedRealityCameraManager.cs:65)</Title>
    <CreatedDate>26/12/2017</CreatedDate>
    <ClosedDate>27/12/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview

## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>1566</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoloToolkit-Unity-Tests-v1.5.8.0.unitypackage</Title>
    <CreatedDate>26/12/2017</CreatedDate>
    <ClosedDate>21/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1566</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hello,i want to make sharing example.My Unity is 5.6.3f1,HoloToolkit is 5.8.0. So i download the test code is Sharing Test, When i upload to hololens, the app is broken,i am confused,can you help me or give me some advice,thank you.</Description>
  </Issue>
  <Issue>
    <IssueID>1564</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Network discovery broken by hololens os update</Title>
    <CreatedDate>22/12/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The latest update to the hololens os has killed the previously working shared with unet code.

## Expected Behavior
The hololens should be able to broadcast and listen for messages

## Actual Behavior
The hololens can start a room, but no one can hear the broadcasts

## Steps to reproduce
Open Unetsharing sample
build sample scene
run on 2 hololens or 1 device and 1 pc; observe the room cannot be seen after being created

## Unity Editor Version
2017.2.1f
## Mixed Reality Toolkit Release Version
v2017.2.1</Description>
  </Issue>
  <Issue>
    <IssueID>1561</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Frame rate drops to 30 fps when rendering Unity UI</Title>
    <CreatedDate>21/12/2017</CreatedDate>
    <ClosedDate>21/12/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1561</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Has anybody else experienced frame rate drops down to 30 fps using the Unity UI? Especially when using a Scroll View.</Description>
  </Issue>
  <Issue>
    <IssueID>1559</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Saving Spatial Mapping and Understanding - Meshes totally scrambled after loading</Title>
    <CreatedDate>21/12/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The saving of Spatial Map Mesh and/or Spatial Understanding Mesh is working, but when you load the saved meshes they are completely scrambled (Spatial Map Mesh) or are jittering (Spatial Understanding Mesh) like crazy.
I believe this worked when i was trying it a few weeks back, but right now in following development environment, its not working.

**Unity Editor:** 2017.2.0f3
**Visual Studio:** Enterprise 2017 15.5.2
**MixedRealityToolkit:** HoloToolkit-Unity-v1.2017.2.0, same with 2017.2.1
**MixedRealityToolkit-Examples:** HoloToolkit-Unity-Examples-v1.2017.2.0, same with 2017.2.1
**HoloLens:** 10.0.14393.1944

## Expected Behavior
Loaded mesh replaces current mesh without any problem/hickup

## Actual Behavior
Loaded mesh is
1. totally scrambled (Spatial Map Mesh), meaning the triangles/vertices are not in the correct place
or
2. jittering (Spatial Understanding Mesh) like crazy

## Steps to reproduce
Create new Unity project, import Holokit asset and Holokit-Example asset from [here](
Use the SaveSpacialUnderstanding and/or SaveSpatialMapping scene from the Examples and start.
After a short while of mapping, save with the FileSurfaceObserver and then load with the FileSurfaceObserver and see scrambling or jittering.
</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>1559</IssueID>
        <PullRequestID>2325</PullRequestID>
        <Title>Load meshes from ObjectSurfaceObserver while respecting their transforms</Title>
        <Description>Overview
---
ObjectSurfaceObserver currently loads in the mesh filters while ignoring the transforms of the GameObjects they're attached to. This change allows meshes to be placed at specific spots and have them load as expected.

Changes
---
- Fixes: #2324
</Description>
        <CreatedDate>21/06/2018</CreatedDate>
        <ClosedDate>23/06/2018</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Spatial Mapping / Awareness</Name>
            <IssueID>1559</IssueID>
            <PullRequestID>2325</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>2325</PullRequestID>
            <IssueID>1559</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>1558</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>FallbackInputHandler executing though other GameObject consumes the event </Title>
    <CreatedDate>21/12/2017</CreatedDate>
    <ClosedDate>02/01/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
A FallbackInputHandler's OnInputClicked() is executing thogh other focussed GameObject consumes the event.
## Expected Behavior
Any input handlers on the game object are given input events when no modal or focused objects consume the event.
## Actual Behavior
Event gets handled by focused object and fallbackInputStack.
## Steps to reproduce
Create a scene with HololensCamera, DefaultCursor and InputManager. Add two cubes with scripts implementing IInputClickHandler. Push one of them to fallbackInputStack. 
## Unity Editor Version
Unity 2017.1.2f1 (64-bit)
## Mixed Reality Toolkit Release Version
HoloToolkit-Unity-v1.2017.2.0</Description>
  </Issue>
  <Issue>
    <IssueID>1556</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Two methods of setting Global Listener speech recognition [Low prio]</Title>
    <CreatedDate>20/12/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>You can either check the IsGlobalListener property of the SpeechInputHandler, or you can add a SetGlobalListener behavior to the same gameobject as the SpeechInputHandler is in.</Description>
  </Issue>
  <Issue>
    <IssueID>1553</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tile Generator does not generate proper image dimensions for wide tiles</Title>
    <CreatedDate>19/12/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Wide tile icon dimensions are not properly updated and set in the PlayerSettings.asset

## Steps to reproduce
Generate Tiles for you app using the Tile Generator.
![image](

## Unity Editor Version
2017.2.1f1

## Mixed Reality Toolkit Release Version
2017.2.1.0</Description>
  </Issue>
  <Issue>
    <IssueID>1552</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Remove Editor backwards compatibility</Title>
    <CreatedDate>19/12/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>1552</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Starting in 2017.3.0f3 we will be breaking editor backwards compatibility.

- New Shader Methods are not easily backwards compatible (See 
- Removing `If UNITY_2017_2_OR_NEWER` and similar compiler definitions to keep code cleaner.</Description>
  </Issue>
  <Issue>
    <IssueID>1551</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Mapping of Xbox Controller</Title>
    <CreatedDate>19/12/2017</CreatedDate>
    <ClosedDate>08/02/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Controller is not correctly mapped. Some Buttons dont work at all.

## Expected Behavior
Working Buttons.

## Actual Behavior
Dpad is controlling the "RightTrigger"
Trigger not reacting at all.
Same with right stick.

See this youtube video. It shows a Xbox Controller example Scene with the Xbox input not working correctly.


## Steps to reproduce
With this Repo.
Boot up the example scene. (MixedRealityToolkit-Unity/Assets/HoloToolkit-Examples/Input/Scenes/XboxControllerExample.unity)
Had to apply the project settings in order to get the controller work at all.
Then just build and deploy it to the Hololens.


## Unity Editor Version
2017.2.1f1 - However, it didn't worked with earlier aswell.

## Mixed Reality Toolkit Release Version
Current release.
</Description>
  </Issue>
  <Issue>
    <IssueID>1548</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>2017.3.0p2 Released</Title>
    <CreatedDate>19/12/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels />
    <Description>[Unity Engine 2017.3.0f3]( was released today.

Windows Mixed Reality Specific Changes:
---
- XR: Added a new option in the Windows MR Player Settings called Enable Depth Buffer Sharing. This allows the OS to better stabilize images without the need to manually set the focus plane. For more information about the benefits of image stabilization, see Microsoft's documentation on Hologram Stability.
- XR: Added XR support to Experimental Scriptable Render Pipelines.
- XR: Improved the way XR devices pause/unpause applications, particularly when pausing as a result of application focus being lost. Unity now handles overlapping pause conditions correctly, regardless of the order in which they occur.
- XR: Removed padding on double-wide texture used with Single Pass.
Windows: Added support for proxy setup on UWP.
- XR: Added XRSettings.useOcclusionMesh to allow for disabling the occlusion Mesh.
- XR: Improved rendering performance of Daydream and Gear VR apps.
- XR: Improved VR Terrain Trees: Fixed billboard trees rotating all the time as viewer moves in VR, better transition of 2D to 3D trees, fast "sort-independent" trees with alpha-to-coverage blending and MSAA , billboard Texture aliasing improvements. (733507, 946544)
- XR: Updated Google VR NDK to 1.80.
- XR: Updated Vuforia to version 7.0.36
- XR: XR now supports jittered projection matrices (for use with TAA). (873685)
- XR: Added PlayerSettings Get/SetVirtualRealitySupported, Get/SetVirtualRealitySDKs, and GetAvailableVirtualRealitySDKs for aquiring and setting the XR Settings Virtual Reality Supported toggle and Virtual Reality SDKs list.
- XR: RenderViewportScale is now disabled in Deferred Rendering.
- Universal Windows Platform: Fix building project when its product name ends with a space or contains unicode characters (885265, 942554, 945345)
- Universal Windows Platform: Fixed "AssemblyConverter running on already processed assemblies. There is something wrong with your build." error message when building on top of a built project that had its UnityOverwrite.txt file deleted (940463)
- Universal Windows Platform: Fixed an inconsitent with other platforms error message "Script Error (script name): Update() can not take parameters." when those magic methods are defined in a certain order on .NET scripting backend (950025)
- Universal Windows Platform: Fixed an issue where Build &amp; Run wouldn't work with VS2017 if a project name had parentheses in it.
- Universal Windows Platform: Fixed debugging scripts on .NET scripting backend (934783, 949806)
- Universal Windows Platform: Fixed NotSupportedException being thrown on UWP builds with .NET scripting backend enabled when using Timeline (966790)
- Universal Windows Platform: Fixed project generation when project name has "&amp;" or "'" characters in it (959804)
- Universal Windows Platform: Follow up fix for runInBackground (759166)

Known Issues:
---
- Universal Windows Platform: [WSA]Unity throws a System.IO.DirectoryNotFoundException error when exporting to the WSA player (UWP/.NET Backend) with a Project folder that has a long path. (959984)</Description>
  </Issue>
  <Issue>
    <IssueID>1547</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tracking lost not recovering in HoloLens</Title>
    <CreatedDate>19/12/2017</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>1547</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When running a simple app on HoloLens and tracking is lost. The tracking is not being recovered. I thought this was [fixed with MRTP5]( But with the new stable release it looks like it's still not working.

## Expected Behavior
After tracking lost, tracking should resume after a few seconds.

## Actual Behavior
Tracking stays lost, Image of "Mapping your surroundings" is still showing.

## Steps to reproduce

Download:
[TestTracking.zip](

Or:

1. Create new project with latest stable release with Unity 2017.2.1f1 and import HoloToolkit-Unity-2017.2.1.0
2. Configure default Project, Scene and Capability settings through Mixed Reality Toolkit menu.

Than:

3. Build and run the app on HoloLens
4. Put your hand in front of scanners until tracking lost
5. Remove your hand
6. Notice, that tracking does not get restored.

## Unity Editor Version
2017.2.1f1


## Mixed Reality Toolkit Release Version
HoloToolkit-Unity-2017.2.1.0</Description>
  </Issue>
  <Issue>
    <IssueID>1546</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity 2017.2.1f1 Dumps on right click + move in Hololens emulator</Title>
    <CreatedDate>19/12/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I seem to have an issue if I create a new project, with just a cube and launch in the hololens emulator, I can see the cube but as soon as I right click the mouse and try move it or spacebar the emulator crashes with the following error:

"Exception thrown: 'System.NullReferenceException' in UnityEngine.UI.dll
An unhandled exception of type 'System.NullReferenceException' occurred in UnityEngine.UI.dll
Object reference not set to an instance of an object."


## Unity Editor Version
Unity 2017.2.1f1
## Mixed Reality Toolkit Release Version
HoloToolkit-Unity-2017.2.1.0</Description>
  </Issue>
  <Issue>
    <IssueID>1545</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity 2017.2.1f1 Not able to refind room | Hololens</Title>
    <CreatedDate>19/12/2017</CreatedDate>
    <ClosedDate>19/12/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>1545</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Regression as this was fixed in a previous MRTP and Unity build. In the scene are the standard prefabs HololensCamera, InputManager, SpatialMapping and DefaultCursor
## Expected Behavior
After losing the room, refind it and continue program
## Actual Behavior
Unity stays on the screen for looking for the room
## Steps to reproduce
Build with Unity 2017.2.1f1 and block the sensors for a second. The screen will popup but the program wont continue execution when not blocking the sensors anymore
## Unity Editor Version
Unity 2017.2.1f1
## Mixed Reality Toolkit Release Version
HoloToolkit Unity 2017.2.1.0</Description>
  </Issue>
  <Issue>
    <IssueID>1543</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Null ref exception when attempting to set Input Axes</Title>
    <CreatedDate>18/12/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When trying to update input manager axes, the editor attempts to load the InputManager.asset located in the ProjectSettings folder, but fails to do so.

## Expected Behavior
Input axes are updated

## Actual Behavior
Null reference exception on serialized Input Manager asset.

## Steps to reproduce
Mixed Reality Toolkit menu -&gt; Apply Project Settings -&gt; Toggle Use InputManager axes -&gt; Apply

## Unity Editor Version
5.6.4p4

## Mixed Reality Toolkit Release Version
2017.2.1.0</Description>
  </Issue>
  <Issue>
    <IssueID>1541</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Running in hololens Emulator</Title>
    <CreatedDate>18/12/2017</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>No Repro</Name>
        <IssueID>1541</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Unable to run any scene in emulator, get errors like below:

d3d11: failed to create staging 2D texture w=32 h=32 d3dfmt=65 [887a0005]

I point my sdk to 15063,

## Unity Editor Version
2017.1.2f1
## Mixed Reality Toolkit Release Version
1.2017.1.2</Description>
  </Issue>
  <Issue>
    <IssueID>1540</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Fog in Unity on Hololens?</Title>
    <CreatedDate>17/12/2017</CreatedDate>
    <ClosedDate>22/12/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1540</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Does anybody know a way to get fog to render in Unity for the hololens?  I've tried the native fog in Unity and a 3rd party plugin for mobile with no luck.  Any suggestions are very appreciated, thanks!</Description>
  </Issue>
  <Issue>
    <IssueID>1539</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cannot build using 2017.2.1f1</Title>
    <CreatedDate>17/12/2017</CreatedDate>
    <ClosedDate>18/12/2017</ClosedDate>
    <IssueLabels />
    <Description>Using the same version editor as the MRTK is now apparently is maintained in, trying to build an actual app from a test scene will result in:
![image](
Building in MRTP5 still works. What is the recommended Unity editor version to use&gt;
</Description>
  </Issue>
  <Issue>
    <IssueID>1538</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Controllers not working - Entering MR portal fixes issue temporarily</Title>
    <CreatedDate>17/12/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
On Unity Play the Controllers are not active. Pressing Win key on controllers to open MR portal and clicking the app again makes the controllers visible. Every time the play mode is restared the same steps are required to enable controllers

## Steps to reproduce
Happens with example scenes, and also with an empty scene with just MR toolkit activated and project/scene settings applied

## Unity Editor Version
2017.2.1f1
## Mixed Reality Toolkit Release Version
2017.2.1.0</Description>
  </Issue>
  <Issue>
    <IssueID>1537</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Left-click doesn't act as 'tap' in Unity Editor.</Title>
    <CreatedDate>17/12/2017</CreatedDate>
    <ClosedDate>21/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The mixed reality toolkit isn't recognizing the left-click (Shift and left mouse button) as an air tap when running a Mixed reality toolkit scene 'TapToPlace'.  

## Expected Behavior
The editor should also work with clicks -&gt; airtap input for all scenes/scripts.  This is required to test scenes in the editor before spending time to upload to the device.

## Actual Behavior
Right mouse works to rotate screen, but "Shift + left-click" isn't creating input events for air taps.  TapToPlace class implements IInputClickHandler, so it seems that the IInputClickHandler is generally broken in the editor with the current mixed reality toolkit unity branch.

## Steps to reproduce
* Clone MixedRealityToolkit-Unity a75c059cac50204c... commit as latest, (December 14th, latest).
* Use any Unity Editor from 2017.1 on.  

## Unity Editor Version
* I am using Unity Editor 2017.3.0f2, but I have tried on several versions of Unity Editor from 2017.1, 2017.2, upwards and all have broken response to IInputClickHandler in the editor.  

## Mixed Reality Toolkit Release Version
Latest master branch as of 2017 December 14th (a7c059cac50204c.. commit). </Description>
  </Issue>
  <Issue>
    <IssueID>1536</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Children of game object with attach to controller remain inactive when the game object is deactivate and then reactivate</Title>
    <CreatedDate>16/12/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Children of game object with AttachToController remain inactive when the game object is deactivated and then reactivated (with SetChildrenInactiveWhenDetached=true)
## Expected Behavior
The children must be activated when the parent is reactivated
## Actual Behavior
The children remain inactive
## Steps to reproduce
Place AttachToController on a game object with children (SetChildrenInactiveWhenDetached is true)
Deactivate the game object
Reactivate the game object

## Unity Editor Version
2017.2.1f1
## Mixed Reality Toolkit Release Version
Master, Dev, Stabilization</Description>
  </Issue>
  <Issue>
    <IssueID>1535</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>1535</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Crash calling Dismiss() on PopupMenu if rootAnimator is null</Title>
    <CreatedDate>16/12/2017</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>1535</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Calling Dismiss on PopupMenu with no Animator
## Expected Behavior
No crash
## Actual Behavior
Crash
## Steps to reproduce
Call Dismiss on PopupMenu with no Animator
The problem is inside Dismiss():

            if (rootAnimator.isInitialized)
            {
                rootAnimator.SetTrigger("Dehydrate");
            }
            else
            {
                gameObject.SetActive(false);
            }

## Unity Editor Version
2017.2.1.f1
## Mixed Reality Toolkit Release Version
Master, Dev, Stabilization</Description>
  </Issue>
  <Issue>
    <IssueID>1534</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>RaycastCamera cannot manually be assigned to canvas camera field</Title>
    <CreatedDate>15/12/2017</CreatedDate>
    <ClosedDate>07/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Dragging the RaycastCamera into the Camera field in WorldSpace mode of a canvas does not work, it doesn't get assigned. This scenario is only possible when adding a prefabbed canvas with WorldSpace configured already, or when adding MixedReality stuff after a canvas has already been setup that way. All other scenarios prompt for the RaycastCamera to be assigned.
Workaround: Select WorldSpace Render Mode again

## Expected Behavior
Assigning a camera should be possible at any time.Or Canvases should be checked for the the right camera being assigned on adding the MR content to a scene or when adding a new prefab to the scene that contains one.

## Actual Behavior
Assignment doesn't work

## Steps to reproduce
Create a canvas and configure it for WorldSpace rendering. Add MR stuff. Try to assign the RaycastCamera to the currently empty camera field.

## Unity Editor Version
MRTP5

## Mixed Reality Toolkit Release Version
current</Description>
  </Issue>
  <Issue>
    <IssueID>1533</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Deploying problem to Hololens</Title>
    <CreatedDate>15/12/2017</CreatedDate>
    <ClosedDate>15/02/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1533</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi guys, 

I got the following error when I try to deploy the app from the Visual Studio to Hololens: 

`Schweregrad	Code	Beschreibung	Projekt	Datei	Zeile	Unterdrückungszustand
Fehler		Der Befehl ""C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\Unity\Tools\AssemblyConverter.exe" -platform=uap -lock="C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\project.lock.json" -bits=32 -configuration=Debug -removeDebuggableAttribute=False -uwpsdk=10.0.16299.0 -path="." -path="C:\Program Files\Unity\Editor\Data\PlaybackEngines\MetroSupport\Players\UAP\dotnet\x86\Debug" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\Assembly-CSharp.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.TilemapModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.TextRenderingModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.UIModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.UIElementsModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.SpriteMaskModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.ScreenCaptureModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.PhysicsModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.TerrainPhysicsModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.TerrainModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.StyleSheetsModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.UNETModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.VRModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.VideoModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.VehiclesModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.WindModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.WebModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.UnityWebRequestAudioModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.UnityConnectModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.UnityAnalyticsModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.UnityWebRequestWWWModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.UnityWebRequestTextureModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.UnityWebRequestModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.ClothModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.AudioModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.ARModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.DirectorModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.CrashReportingModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.CoreModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.AnimationModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.AIModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.AccessibilityModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.ParticlesLegacyModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.JSONSerializeModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.Physics2DModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.PerformanceReportingModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.ParticleSystemModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.GridModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.GameCenterModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.InputModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.IMGUIModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.ImageConversionModule.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\Newtonsoft.Json.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.Timeline.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\nunit.framework.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.UI.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.HoloLens.dll" "C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\UnityEngine.Networking.dll"" wurde mit dem Code 1 beendet.	MixedRealityToolkit-Unity	C:\Users\user\Downloads\MixedRealityToolkit-Unity-master\MixedRealityToolkit-Unity-master\Gaze_HolotoolKit\MixedRealityToolkit-Unity\MixedRealityToolkit-Unity.csproj	436	
`
I use the following versions of the tools: 

- Unity (Version 2017.2.0f3)
- Visual Studio Community (Version 15.5.2)
- Latest version of the MixedRealityToolkit-Unity

Does anybody how to fix that issue?

</Description>
  </Issue>
  <Issue>
    <IssueID>1531</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Fade Culling</Title>
    <CreatedDate>15/12/2017</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1531</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Is there an example scene or script demonstrating faded culling without a harsh edge?  So that when you move through an object it has a gradient transparency along the culling edge?</Description>
  </Issue>
  <Issue>
    <IssueID>1527</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Namespace refactor work</Title>
    <CreatedDate>14/12/2017</CreatedDate>
    <ClosedDate>29/06/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>1527</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Need to align folder name and namespace names to new branding.
Also fix/add things that are missing.

Suggestions:
1. Rename HoloToolkit folders -&gt; MixedRealityToolkit verbiage.
2. Rename namespaces like HoloToolkit.Unity to:
MixedRealityToolkit.Input.&lt;SubAreaAsNeeded&gt;
MixedRealityToolkit.Common
MixedRealityToolkit.SpatialMapping etc.</Description>
  </Issue>
  <Issue>
    <IssueID>1524</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Fast Configurable Shader does not work for Per-Pixel Spotlights</Title>
    <CreatedDate>14/12/2017</CreatedDate>
    <ClosedDate>16/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Running a scene with a Pointlight facing straight down at a floor with a Fast Configurable Shader on it has problems with that light. Depending on the view direction and angle, is either on or off on that object.

## Expected Behavior
Light always works

## Actual Behavior
light turns on and off

## Unity Editor Version
MRTP5

## Mixed Reality Toolkit Release Version
latest dev branch


![screenshot 18](
![screenshot 19](
</Description>
  </Issue>
  <Issue>
    <IssueID>1523</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity Editor starts massively lagging randomly</Title>
    <CreatedDate>14/12/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Once in a while the Unity Editor suffers from a severe performance drop due to FrameEvents.XRBeginFrame -&gt; XR.WaitForGPU constantly consuming 95% of CPU time

## Expected Behavior
no performance drop

## Actual Behavior
severe drop

## Unity Editor Version
MRTP5

## Mixed Reality Toolkit Release Version
latest dev branch

![screenshot 17](

</Description>
  </Issue>
  <Issue>
    <IssueID>1522</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Is there an ETA for AppBar and BoundingBox example?</Title>
    <CreatedDate>14/12/2017</CreatedDate>
    <ClosedDate>15/02/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1522</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I was under the (quite possibly unwarranted) impression that these capabilities were coming soon after the MRDL merge began, but it seems like the process has stalled. Are there any updates in terms of timeline for these and/or any other features coming from MRDL?</Description>
  </Issue>
  <Issue>
    <IssueID>1520</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>jwittner</FixedById>
        <IssueID>1520</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Development input is not available outside the Editor</Title>
    <CreatedDate>13/12/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>We use the standalone windows builds for testing more clients in a shared experience without requiring more devices. I'd love to find a way so that this development input is kept in these builds, and if possible, enable it in my UWP application when launched on a desktop.

We don't want to ship these SKUs, just use them for testing network scenarios.

I'm thinking of adding a define, e.g. MRTK_DEVELOPMENT_INPUT, that if set in your player settings script defines would keep the development input enabled even outside the editor.

Thoughts?</Description>
  </Issue>
  <Issue>
    <IssueID>1519</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoloToolKit.Unity.XdeGuestLocator - Failed to locate internal switch adapter </Title>
    <CreatedDate>13/12/2017</CreatedDate>
    <ClosedDate>07/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I'm working on a Hololens project with two other developers. We're all on the same Unity version, and the toolkit files are in source control, so we are all using the same version of that as well. In the past, on an old version of HoloToolKit (before it was Mixed Reality Toolkit), I've been able to use "Build SLN, Build APPX, then Install" option on the Build Window to deploy to our Hololens. 

Recently I reinstalled windows on a new SSD, so I had a brand new installation of Visual Studio (VS2017 4.4.X or around there), Unity, and then made a fresh pull from our repository. When I try to build the Hololens app, I get the "Failed to locate internal switch adapter" error. This has happened on two completely different computers, but does not happen for my coworkers.

## What I've Tried
So far, I've tried a number of different options. I've updated Windows, Reinstalled Unity, checked my Visual Studio packages, tried at least two different versions of Visual Studio 2017, tried repairing Visual Studio, installing the Hololens Emulator, deleting CSPROJ/SLN files and regenerating them, and so on.

I've looked at this [old issue]( but nothing from there seemed to help. I haven't tried upgrading/downgrading Unity yet because my coworkers aren't having any problems with the same version.

At this point, I'm wondering if there's just some small or more obvious thing that I can't think of that might explain the problem.

## Unity Editor Version
Unity 2017.2.0f3

## Mixed Reality Toolkit Release Version
2017.2.0

Thanks!</Description>
  </Issue>
  <Issue>
    <IssueID>1517</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>1517</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>1517</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Stabilization branch: Xbox controller does not work in GamepadTest.unity scene</Title>
    <CreatedDate>13/12/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Connected Xbox controller.
Unity remoting the test scene into immersive HMD.

## Expected Behavior
A press makes cube bigger.

## Actual Behavior
Nothing happens.

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>1515</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Stabilization branch: Gaze highlight is broken with new shader applied to it</Title>
    <CreatedDate>13/12/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
GamepadTest.unity test scene.

## Expected Behavior
We should see a highlight when we gaze over a test object.

## Actual Behavior
No highlight since the property being set in code which is _Highlight does not actually exist on the shader. This used to work with the correct shader in the past but I don't see it anywhere now.

## Steps to reproduce
Try running the above test scene.

## Unity Editor Version
2017.2.0p2 MRTP5

## Mixed Reality Toolkit Release Version
Stabilization branch for release.</Description>
  </Issue>
  <Issue>
    <IssueID>1514</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hololens and HMD height equalization?</Title>
    <CreatedDate>13/12/2017</CreatedDate>
    <ClosedDate>24/07/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1514</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Just how do you get Hololens users and HMD users starting with the head at the same height. Due to components like NetworkTransform that's desirable, cause I'd need to write everything myself the elevate objects on the HMD side by its height. If necessary, how do you read the base height the user configured in the Cliff House?</Description>
  </Issue>
  <Issue>
    <IssueID>1513</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Keyword Manager Component</Title>
    <CreatedDate>13/12/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Looking to add component keyword manager in hololens but when I search add component it does not show up.

## Unity Editor Version
Unity Editor 2017.1.2f1
## Mixed Reality Toolkit Release Version
Latest Toolkit : MixedRealityToolkit-Unity-1.2017.2.0</Description>
  </Issue>
  <Issue>
    <IssueID>1512</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>2017.2.1 released today</Title>
    <CreatedDate>13/12/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels />
    <Description>[Latest release of the Unity Engine 2017.2.1.1f1](

Haven't heard back from Unity in a while about the MRTP builds, so I'm unsure if that's a good thing or not.</Description>
  </Issue>
  <Issue>
    <IssueID>1511</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Set Motion Controller Model at runtime</Title>
    <CreatedDate>12/12/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>Currently the motion controller models are assigned to a controller during the Awake method on the MotionControllerVisuallizer. Is there method to change the controller model during runtime?
## Expected Behavior
Upon an application event/state change code could be implemented that would assign a new model/prefab to replace the existing controller model. Also be able to easily fallback to the default controller models.</Description>
  </Issue>
  <Issue>
    <IssueID>1510</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InputManager's FocusManager and Unity InputFields</Title>
    <CreatedDate>12/12/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
In my scene I have a canvas containing an InputField, HoloLensCamera, DefaultCursor and InputManager.

## Expected Behavior
When I click or tap the InputField it should get focussed and activated.

## Actual Behavior
The InputField gets activated and immediately deactivated.

## Steps to reproduce
Create a scene. Add a canvas containing an InputField, HoloLensCamera, DefaultCursor and InputManager. Try to activate the InputField.

## Unity Editor Version
Unity 2017.1.2f1 (64-bit)

## Mixed Reality Toolkit Release Version
HoloToolkit-Unity-v1.2017.2.0</Description>
  </Issue>
  <Issue>
    <IssueID>1507</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpatialUnderstanding fails to extract the first mesh of any room model</Title>
    <CreatedDate>12/12/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>1507</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>1507</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
If you run the SpatialUnderstandingExample scene in the Editor the SpatialMappingManager uses a room model as the spatial source. The room model files contain separate meshes, for example _default_MeshPart0_, _default_MeshPart1_ and _default_MeshPart2_. This issue applies to all room models in the MixedRealityToolkit: FakeSpatialMappingMesh, MediumRoomWithHomeFurniture and SRMesh.

## Expected Behavior
All room meshes should be consumed by the SpatialMappingManager and processed by the SpatialUnderstanding scripts to create and render corresponding playspace meshes.

## Actual Behavior
The SpatialMappingManager consumes the separate meshes and creates corresponding GameObjects in the scene. The first one (always called _roomMesh-0_) is never extracted correctly by the `SpatialUnderstanding.dll`. To be exact, the `GeneratePlayspace_ExtractMesh_Setup(out int vertexCount, out int indexCount)` function in `SpatialUnderstandingCustomMesh.Import_UnderstandingMesh()` returns 0 instead of 1 for this mesh. Therefore it is not rendered in the scene.

## Steps to reproduce
Just open and play the SpatialUnderstandingExample scene in the Unity Editor and try every single room model. A corresponding playspace mesh for _roomModel-0_ is never generated.

## Unity Editor Version
2017.1.2p1

## Mixed Reality Toolkit Release Version
HoloToolkit-Unity-v1.2017.1.2
HoloToolkit-Unity-Examples-v1.2017.1.2</Description>
  </Issue>
  <Issue>
    <IssueID>1505</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>1505</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>BoundaryManager should be disabled on HoloLens</Title>
    <CreatedDate>11/12/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
This code will fail when called on HoloLens. End result is the floor quad gets instantiated at (0,0,0) which is sub-optimal on a non-opaque device.


## Expected Behavior
When on HoloLens, boundary manager is disabled

## Actual Behavior
When on HoloLens, boundary manager draws a floor quad at (0,0,0)

## Steps to reproduce
add MixedRealityCameraParent to a new unity project and run on HoloLens.

## Unity Editor Version
2017.2.0p2-MRTP5

## Mixed Reality Toolkit Release Version
branch v2017.2.0.1-Stabilization
SHA f2596ee39d740f2eab1209c869ea1e55d0478a49</Description>
  </Issue>
  <Issue>
    <IssueID>1504</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>1504</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>BoundaryManager should be disabled on HoloLens</Title>
    <CreatedDate>11/12/2017</CreatedDate>
    <ClosedDate>11/12/2017</ClosedDate>
    <IssueLabels />
    <Description>This code will fail when called on HoloLens. End result is the floor quad gets instantiated at (0,0,0) which is sub-optimal on a non-opaque device.

</Description>
  </Issue>
  <Issue>
    <IssueID>1503</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Error: Input Button CONTROLLER_LEFT_Menu is not setup </Title>
    <CreatedDate>11/12/2017</CreatedDate>
    <ClosedDate>15/02/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1503</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I'm getting this error in an existing project when I update to the latest dev branch. It wasn't there prior to the update.

## Expected Behavior
No error.

## Actual Behavior
Error:

ArgumentException: Input Button CONTROLLER_LEFT_MENU is not setup.
 To change the input settings use: Edit -&gt; Project Settings -&gt; Input
HoloToolkit.Unity.InputModule.XboxControllerInputSource.Update () (at Assets/HoloToolkit/Input/Scripts/InputSources/XboxControllerInputSource.cs:91)


## Steps to reproduce
_(Links to sample github project preferred)_
Update project to latest dev branch.

## Unity Editor Version
2017.2.0p2.MRTP5

## Mixed Reality Toolkit Release Version
v1.2017.2.0-dev
</Description>
  </Issue>
  <Issue>
    <IssueID>1502</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>AnchorStore for Hololens and Mixed Reality HMD?</Title>
    <CreatedDate>11/12/2017</CreatedDate>
    <ClosedDate>18/01/2018</ClosedDate>
    <IssueLabels />
    <Description>Just a short question. Is is possible to sync those correctly? We tried the SharedWithUNET scene and noticed that a few code passages have returns for opaque displays (HMDs).
Is it just not implemented in the correct way, or is it just not possible at the moment?</Description>
  </Issue>
  <Issue>
    <IssueID>1501</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity 2017.2.0p1-MRTP4 , Unity 2017.2.0b11 crashes in Play mode for Windows Mixed reality(tried with Samsung)!!.</Title>
    <CreatedDate>11/12/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1501</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Crashes on Play mode in Unity 2017.2.0p1-MRTP4  , was working fine previously , but crashes from Dec 7th , when playmode is enabled, with Windows Mixed reality device is connected and Mixed reality Portal is awake !!. 
My project was a UWP app, works without crash in Unity 2017.1.2f1 for Hololens support!!.

## Expected Behavior
should able to play without crashing!!.

## Actual Behavior
Crashes on Play, Windows Mixed reality is connected !!.

## Unity Editor Version
2017.2.0p1-MRTP4   , 2017.2.0b11
## Mixed Reality Toolkit Release Version
Master 2017.2.0 

attached crash log file!!.
[error.log](

</Description>
  </Issue>
  <Issue>
    <IssueID>1500</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Failed to get pointer data. Error code: '0x80004005'.</Title>
    <CreatedDate>11/12/2017</CreatedDate>
    <ClosedDate>05/04/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Developing for MR Headset (Acer), when you run the scene from the editor, have the HMD tilted up and the motion controller on the table, after a few seconds the console gets spammed with these warnings.

## Expected Behavior
no warnings, the controller is just out of sight.

## Actual Behavior
spam

## Unity Editor Version
MRTP5

## Mixed Reality Toolkit Release Version
latest Dev Branch</Description>
  </Issue>
  <Issue>
    <IssueID>1499</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>NetworkDiscoveryWithAnchors doesn't start being a server on its own</Title>
    <CreatedDate>11/12/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The only method (MaybeInitAsServer ) within NetworkDiscoveryWithAnchors that's supposed to switch from client to being the server after a certain time not receiving a broadcast is private and nowhere called. Furthermore, there's no time wait anywhere where the call could be put. One more: InitAsServer, that's called as a coroutine from MaybeInitAsServer does a few yields related to the hololens needing them, while the one other method StartHosting, doesn't.

## Expected Behavior
One should be able to use the script with a configurable interval, after which the client starts being a server.

## Actual Behavior
Script starts as client, that's it.

## Unity Editor Version
MRTP5

## Mixed Reality Toolkit Release Version
Latest dev branch</Description>
  </Issue>
  <Issue>
    <IssueID>1498</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>WorldAnchor Sharing not working between hololens devices in 2017.2.0 toolkit!!.</Title>
    <CreatedDate>11/12/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>No Repro</Name>
        <IssueID>1498</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
WorldAnchor Sharing not working!!.

## Expected Behavior
share World anchor for holograms!!.
## Actual Behavior
Sharing seems to work, but not Anchor sharing!!.
## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
2017.1.2f1

## Mixed Reality Toolkit Release Version
2017.2.0</Description>
  </Issue>
  <Issue>
    <IssueID>1497</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>1497</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>State of "App Bar and Bounding Box"</Title>
    <CreatedDate>10/12/2017</CreatedDate>
    <ClosedDate>21/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1497</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi,

In the [UX Readme]( there is a "comming soon" for the "App Bar and Bounding Box" example. In  it is mentioned that it will be one of the next things that will get ported from MRDesignLabs.

What is the state for this and what is the problem with it? 
Do you need help?</Description>
  </Issue>
  <Issue>
    <IssueID>1494</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Request for a Parabolic Pointer as an alternate Pointer Ray</Title>
    <CreatedDate>08/12/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I have been attempting to create a parabolic pointing ray as a part of the teleporting scenario. I have the logic to produce an arced line but I am combatting the FocusManager using the InputSourcePointer. 

## Expected Behavior
I would like to see a pointer that follows kinimatic trajectory rules.  Much like the teleport functions of the Mixed reality portal Cliff house, teleporting from the ground to the roof.

This would allow for a player to teleport up steps or climb rock ledges. Currently the straight ray will collide with the bottom of a step which can put the position off.

## Unity Editor Version
MRTP5

## Mixed Reality Toolkit Release Version
Dev_Branch</Description>
  </Issue>
  <Issue>
    <IssueID>1492</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SceneContentAdjuster does not compile in Unity 5.6</Title>
    <CreatedDate>08/12/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels />
    <Description># Overview
When opening the project in Unity Editor 5.6, the Scene `ContentAdjuster` class raises errors about `XRDevice` and unreachable code.

# Unity Editor
5.6
2017.1

# MRTK version
dd2eb2e36a34cc7fa3a16f59f570ca51ab977694</Description>
  </Issue>
  <Issue>
    <IssueID>1490</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Trouble with xbox one Controller</Title>
    <CreatedDate>08/12/2017</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>OS Bug</Name>
        <IssueID>1490</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
In our project we use the Xbox controller input. However, some of the buttons don't function correctly. For example, the right trigger always returns -1 instead of the correct value.
It actually works in the Unity Editor, but after deploying it on the Hololens, stuff gets weird.

## Expected Behavior
Right Trigger should return Value between 0 and 1

## Actual Behavior
Returns -1. 

Additionally, the actual action we want to perform, is somehow mapped on the left-Dpad Button.

 
## Steps to reproduce

Our xbox gameobject with all the handlers:

![grafik](

Part of the custom Handler Script.
``

## Unity Editor Version
unity 2017.2.0f3

## Mixed Reality Toolkit Release Version
Unity 2017.2.0p1 MRTP4
</Description>
  </Issue>
  <Issue>
    <IssueID>1489</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>What's with the name of the stabilization branch?</Title>
    <CreatedDate>08/12/2017</CreatedDate>
    <ClosedDate>08/12/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1489</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description> v2017.2.0.1-Stabilization?

I thought we were dropping the v prefix on the releases?

Also, shouldn't it be 2017.2.1.0 as it'll most likely reflect the new release Unity will have by the time we approve it?</Description>
  </Issue>
  <Issue>
    <IssueID>1488</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Do not clear all anchors</Title>
    <CreatedDate>07/12/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>1488</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview

I'm writing a Unity plugin, which uses `WorldAnchor`s to communicate with our native code. By itself this works fine, but in combination with the `WorldAnchorManager`, `SharingWorldAnchorManager` or `ImportExportAnchorManager` of the MixedRealityToolkit, the saved anchors do not arrive in the native code.

## Expected Behavior

A `WorldAnchor` saved via `WorldAnchorStore.Save` inside the callback from `WorldAnchorStore.GetAsync` should be available, if it was saved successfully.

## Actual Behavior

The `WorldAnchorManager`, `SharingWorldAnchorManager` and `ImportExportAnchorManager` clear all anchors inside the callback from `WorldAnchorStore.GetAsync`:
* 
* 
* 

Depending on the execution order of the callbacks and our native code, the previously successfully saved `WorldAnchor` might not be available. Whether the `WorldAnchor` can be retrieved or not, seems to be quite random.

## Steps to reproduce

Create a GameObject and attach a new script to it, which
1. retrieves the `WorldAnchorStore` using `WorldAnchorStore.GetAsync` function during the `Start` function.
2. adds a `WorldAnchor` component to the current GameObject and saves it using `WorldAnchorStore.Save` inside the callback from `WorldAnchorStore.GetAsync`.
3. waits until the `WorldAnchorStore` was retrieved and then tries to access the saved anchor during the `Update` call. For example it could try to call `WorldAnchorStore.Delete` with the name of the anchor.

Add the `WorldAnchorManager` script to any GameObject.

After deploying the application to the HoloLens, the `WorldAnchorStore.Delete` call will then fail, if the `WorldAnchorStore.GetAsync` callbacks of the MixedRealityToolkit were processed after the callback of the new script.

## Notes

We don't want to have the MixedRealityToolkit as a dependency of our plugin. Therefore we can't use the `WorldAnchorManager` instead of the `WorldAnchorStore`. However, users of our plugin are free to use the MixedRealityToolkit. The MixedRealityToolkit therefore shouldn't globally delete all anchors.

## Unity Editor Version

Unity 2017.2.0f1

## Mixed Reality Toolkit Release Version

v1.2017.2.0</Description>
  </Issue>
  <Issue>
    <IssueID>1487</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity Version for Hololens AND MR?</Title>
    <CreatedDate>07/12/2017</CreatedDate>
    <ClosedDate>15/02/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1487</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Which version of Unity incorporates both, Hololens and MR to use with the Toolkit? Or when will a version be released capable of that?</Description>
  </Issue>
  <Issue>
    <IssueID>1485</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Raycasting for Spatial Understanding</Title>
    <CreatedDate>07/12/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>1485</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1485</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>1485</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Hello! I know that there's already a way to shoot raycasts in Spatial Understanding. But that takes more lines of code than a normal unity `Physics.Raycast()`. So I have created a class, "Physics_SU", that works the same way that Unity does it: in one line.

I've also made a serialized class that acts like a `layerMask` called a `surfaceMask` that can ignore different types of surfaces. It can also have an out parameter that takes in a type RaycastHit_SU struct that contains hit position, distance and surface type.

Again, I'm not trying to reinvent the wheel but more of making it easier to use? HAHA Anyway, hope it helps someone out coz I couldn't understand Spatial Understanding for the longest time and this should be familiar to long time unity users. Sorry I don't know where to post this. If there's a better place to do this please let me know!

At the moment it only can do raycasts but I'm trying to figure out how to have Sphere/BoxCasts as well. If anyone has any ideas please do contribute! I need the help :p

[Here's the link](

Thanks all! (Again, sorry if I shouldn't be posting this here)

## Unity Editor Version
2017.1.2

## Mixed Reality Toolkit Release Version
2017.1.2 (and probably everything else that has spatial understanding) sorry I haven't tested it</Description>
  </Issue>
  <Issue>
    <IssueID>1484</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>1484</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>1484</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Ship MRTK release packages to the Unity asset store</Title>
    <CreatedDate>06/12/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>Readme / Landingpage on Github states:

Unity packages for each release will be published to the Unity asset store.

What? Where? When? Just searched the asset store for Mixed, reality, toolkit, mixedreality, microsoft etc. Did not find anything. Wrong information? </Description>
  </Issue>
  <Issue>
    <IssueID>1481</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Stabilization Plane Modifier</Title>
    <CreatedDate>06/12/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The stabilization plane modifier seems to not help with the hologram jitter. When walking around the holograms or being placed at a distance further then approx 4 m, the color separation is very noticeable. Is there an update on this issue? (of course all of the objects have colliders and all of the sorts)

## Expected Behavior
No color sepparation when importing the InputManager Prefab

## Actual Behavior
Jittering on all holograms no matter what changes I make in the stabilizationPlaneModifier
## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
Unity 2017.2.0p2

## Mixed Reality Toolkit Release Version

</Description>
  </Issue>
  <Issue>
    <IssueID>1476</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>1476</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Reference from HoloToolkit to HoloTookit-Examples breaks build</Title>
    <CreatedDate>05/12/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels />
    <Description>**Overview**
Loaded current dev branch and receive two errors on attempting to build.

The second error (see #1475  for the first) is in MicrophoneHelperSample. In this case, the MicrophoneHelper Sample class exists in the main project, HoloToolkit, but has a reference to MicrophoneHelper which is in HoloToolkit-Examples. If you don't have HoloTookit_Examples in your project you receive the error.

**Expected Behavior**
Either MicrophoneHelperSample is moved to HoloTookit-Examples or MicrophoneHelper is moved to HoloTookit.

**Actual Behavior**
Errors.

Error CS0103 The name 'MicrophoneHelper' does not exist in the current context Assets\HoloToolkit\Input\Scripts\Utilities\MicrophoneHelperSample.cs 28 Active

**Steps to reproduce**
(Links to sample github project preferred)
Build current dev branch.

**Unity Editor Version**
2017.2.0p2-MRTP5

**Mixed Reality Toolkit Release Version**
Dev working branch</Description>
  </Issue>
  <Issue>
    <IssueID>1475</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Check if UNITY_WSA in AttachToController</Title>
    <CreatedDate>05/12/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels />
    <Code>
Severity	Code	Description	Project	File	Line	Suppression State
Error	CS0246	The type or namespace name 'InteractionSourceHandedness' could not be found (are you missing a using directive or an assembly reference?)	MixedRealityToolkit-Unity	MixedRealityToolkit-Unity\Assets\HoloToolkit\Input\Scripts\Utilities\AttachToController.cs	17	Active
`</Code>
    <Description>## Overview
Loaded current dev branch and receive two errors on attempting to build.

First error (see below) is presumably a missing reference in AttachToController. Can be fixed by adding a using statement:

    using UnityEngine.XR.WSA.Input;
## Expected Behavior
No errors.

## Actual Behavior
Errors.
``
## Steps to reproduce
Build current dev branch.

## Unity Editor Version
2017.2.0p2-MRTP5

## Mixed Reality Toolkit Release Version
Dev working branch
</Description>
  </Issue>
  <Issue>
    <IssueID>1474</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>chrisfromwork</FixedById>
        <IssueID>1474</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Runtime Error with SpectatorView 1.5.7.0 UNET and Holotoolkit 1.5.7.0 sharing.</Title>
    <CreatedDate>05/12/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>1474</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Immediate crash when pressing play on Unity 5.6.2f1 with SpectatorView_1_5_7_0_UNET and HoloToolkit-Unity-v1.5.7.0:

``

[Image](

Everything was working perfectly. I built and deployed to the Hololenses and everything ran perfectly. However, I had miss-typed the server IP and quickly corrected it before building and deploying in the same manner. But now the application crashes on the hololenses, as well as in the editor with the error above. No logs are outputted.
I rebuilt the project from scratch and experienced the same error. I tried running the project on a different computer, same error.

I've tried researching the problem, but it seems oddly specific. I know that it probably doesn't fit the current issue list on here, but the issue section on the CompanionKit is immensely dead and low-populated. Was hoping any of you had experienced, and hopefully solved, this issue before.

## Expected Behavior
Plays with no error, or at least some error I can debug,

## Actual Behavior
Crashes immediately with no detailed error or logs, as shown in this [picture](

## Steps to reproduce
[Spectator View 1.5.7.2 UNET](
[HoloToolkit-Unity-v1.5.7.0](

New project -&gt; Import HoloToolkit -&gt; Set up prefabs/project/scene/target UWP/capabilities to hololens -&gt; Import SpectatorView_1_5_7_0_UNET -&gt; Add SpectatorViewManager and sharing prefab -&gt; copyDLLs from building compositor.sln to the asset folder -&gt; copy calbrationData.txt to asset folder -&gt; input correct IPs -&gt; Press play.

## Unity Editor Version
5.6.2.f1

## Mixed Reality Toolkit Release Version
HoloToolkit-Unity-v1.5.7.0
</Description>
  </Issue>
  <Issue>
    <IssueID>1461</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>What's the current status of using Vuforia with the MR Toolkit?</Title>
    <CreatedDate>30/11/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>1461</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1461</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I got confused by all the different version acknowledgements and recommendations (Unity 2017.2, 2017.1.2, MRTP4...). I just want to know which Unity version is capable of running MR Toolkit for Hololens along with Vuforia?</Description>
  </Issue>
  <Issue>
    <IssueID>1460</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Restore MicStreamSelector.dll to Input/Plugins</Title>
    <CreatedDate>30/11/2017</CreatedDate>
    <ClosedDate>07/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
MicStreamSelector.dll was moved from Input/Plugins into the Examples tree.

## Expected Behavior
MicStreamSelector.dll to be part of the Input tree.

## Actual Behavior
MicStreamSelector is not part of the core toolkit.

## Mixed Reality Toolkit Release Version
2017.2.x</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1459</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>GesturesInput.cs missing?</Title>
    <CreatedDate>30/11/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Tried to use the InputManager prefab, but none of the gestures worked. When i checked the scripts attached to the prefab I noticed that the GesturesInput.cs script is missing. Didnt find it anywhere in the toolkit


## Unity Editor Version
2017.1.0f3
## Mixed Reality Toolkit Release Version
HoloToolkit-Unity-v1.2017.2.0</Description>
  </Issue>
  <Issue>
    <IssueID>1455</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Starting App while tracking is lost player starts at origin</Title>
    <CreatedDate>29/11/2017</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When the tracking is lost and the app is started, even with MRTP5 that fixes the tracking resume bug, the player starts with the head in the floor. The controllers are actually at the correct height, one can see them floating above the head. Once tracking is resumed, it gets fixed.
Putting the head further up in that case doesn't work, because the camera still receives 0 readings.

## Expected Behavior
The player is always above the floor

## Actual Behavior
If the app is started in tracking lost state, the player starts at 0,0,0.

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
MRTP5

## Mixed Reality Toolkit Release Version
most current</Description>
  </Issue>
  <Issue>
    <IssueID>1454</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Position is off when user click on a slider or keyboard inputfield by using motion controller.</Title>
    <CreatedDate>29/11/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Once i click on the UGUI slider or inputfield on keyboard by using motion controller, slider handle or caret move to a weird position(have not test the behavior by using xbox controller).
## Expected Behavior
The silder handle  or caret should move to the position where you clicked.
## Actual Behavior
The slider or caret move to a weird position.
## Steps to reproduce
Under KeyboardTest scene , add a ugui slider under sceneContent/KeyboardTestCanvas. 
pos(0,0,2) width(1600) ,height(200) , then move the cursor to the slider, click on the 
trigger button on the motion controller.
## Unity Editor Version
2017.2.0.p1-MRTP4
## Mixed Reality Toolkit Release Version
Current</Description>
  </Issue>
  <Issue>
    <IssueID>1451</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unable to interact with UI elements in the Hololens</Title>
    <CreatedDate>28/11/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
In my project, I have a list of UI Buttons that when click will execute a function that teleports the camera position. In the Unity editor, this functionality works as expected however when deployed to the Lense clicking my buttons only seems to refresh the button list.

I thought this was an issue with the RaycastCamera naming but I changed the camera name to UIRaycastCamera and this didn't solve my problem. 

Is this an issue on my end or is it a problem with the Toolkit?

Thank you

## Expected Behavior
Building to the Lense and air tapping UI buttons should perform onClick function associated 

## Actual Behavior
Building to the Lense and air tapping UI buttons causes button list refresh and no event 

## Steps to reproduce
_(Links to sample github project preferred)_
Build scene with Mixed reality menu item config setup, create UI canvas buttons with onClick functions, deploy to Hololense  

## Unity Editor Version
2017.2.0F3

## Mixed Reality Toolkit Release Version
Current

(Please let me know if this is the correct place for this)</Description>
  </Issue>
  <Issue>
    <IssueID>1450</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Focusable events not being raised with rididbody objects.</Title>
    <CreatedDate>28/11/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When rigidbody is attached to parent or child gameobject , cursor gaze is not detected where I used  `OnFocusEnter()` , `OnFocusExit()`, eventhough `IsKinematic` selected or not.

## Expected Behavior
Gaze should work with rigidbody attached to model.

## Actual Behavior
Gaze not working with rigidbody attached to model. parent or child

## Steps to reproduce
1. Added cursor and input manager.
2. UI attached mesh collider or  box collider . 
3. with collider gaze working fine and able to use methods like OnFocusEnter() or Exit().
4. When rigidbody attached to the same model gaze not working.  
5. If rigidbody removed , gaze will work again.

## Unity Editor Version
2017.2f1 

## Mixed Reality Toolkit Release Version
2017.2.0</Description>
  </Issue>
  <Issue>
    <IssueID>1449</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Any working UNET spectator view scene available for download? Able to transform position. Unity 5.6.2f1 preferred.</Title>
    <CreatedDate>28/11/2017</CreatedDate>
    <ClosedDate>28/11/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview

## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>1448</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>UNET Spectator View Sample</Title>
    <CreatedDate>28/11/2017</CreatedDate>
    <ClosedDate>08/02/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When moving the camera which are attached to the hololens rig, the screen which are live streaming the sharing session inside the spectator view compositor are sticking to the compositor screen. It does not move like a 3D hologram in a 3D space but instead it is just like a picture sticking to the compositor screen.

## Expected Behavior
The 3D holograms should not move but stay in the 3D space just like a normal hologram.
## Actual Behavior
The 3D holograms move when i try to move the camera rig and rotate to take picture in a different angle
## Unity Editor Version
5.6.2f1
## Mixed Reality Toolkit Release Version
5.6.2f1</Description>
  </Issue>
  <Issue>
    <IssueID>1447</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Missing scripts (VoIP)</Title>
    <CreatedDate>27/11/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1447</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The [documentation]( says that I need the `MicrophoneReceiver.cs` and `MicrophoneTransmitter.cs` files in order to send and receive audio.
Those scripts are not in the repository.
## Expected Behavior
Behaviors can be added.
## Actual Behavior
Behaviors are missing
## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
2017.2.0f3
## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>1446</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Breakpoints won't reach on HoloLens Debugging in Visual</Title>
    <CreatedDate>27/11/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>OS Bug</Name>
        <IssueID>1446</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
Breakpoints unreachable on any C# scripts when debugging UWP application built from Unity. (Actually HoloLens)

## Expected Behavior
Breakpoints should reach.

## Actual Behavior
I Have actually the same problem as #1410 .
I completely reinstalled a fresh Windows 10 pro with version 1709 and it doesn't change, breakpoints just won't reach and it worked pretty well before (symbols are loaded for Assembly-CSharp.dll).

I didn't find out anything relevant on internet nor myself about why it fails to break but if it doesn't fail at all to break for you guys i would love to know how!

EDIT: I've noticed that with the new Unity, there is no more Assembly-CSharp-firstpass created on Visual Studio project, wonder if that causes the breakpoints to fail.

## Steps to reproduce
Nothing special as far as i'm concerned. Just build a visual project in Unity 2017.2 for HoloLens, open sln and build and deploy and run remotely on Hololens in debug or release mode, and try to break in C# scripts (from MRT for instance). Doesn't work on every PCs I've tested.

## Unity Editor Version
2017.2.0f3 (every Unity 2017.2)
Visual Studio 2017
SDK 10.0.16299
Windows 10 Pro v1709

## Mixed Reality Toolkit Release Version
2017.2</Description>
  </Issue>
  <Issue>
    <IssueID>1445</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>GazeManager's Raycast Layer Masks should be removed</Title>
    <CreatedDate>27/11/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>1445</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The `GazeManager`'s `RaycastLayerMask` should be coming from the `FocusManager.PrioritizedRaycastLayerMasks`.

It's only use is currently in `SpatialUnderstandingBasicCursor`, which should be updated to also use the `FocusManager.PrioritizedRaycastLayerMasks`</Description>
  </Issue>
  <Issue>
    <IssueID>1444</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>RaycastCamera should be renamed UIRaycastCamera</Title>
    <CreatedDate>27/11/2017</CreatedDate>
    <ClosedDate>07/03/2018</ClosedDate>
    <IssueLabels />
    <Description>The InputManager's event system `RaycastCamera` should be renamed to `UIRaycastCamera` reflect the `FocusManager`'s property of the same name.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1443</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spatial Mapping Physics Layer isn't visible in MRTK project's layer</Title>
    <CreatedDate>27/11/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Editor</Name>
        <IssueID>1443</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>1443</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>When users import and use the MRTK, they need to know about the special layers reserved for Spatial Mapping (layer 31) and we need a way to prompt users to let them know we'd like to add it to their project on import.
</Description>
  </Issue>
  <Issue>
    <IssueID>1442</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>EventSystem - what is UIRaycastCamera?</Title>
    <CreatedDate>27/11/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1442</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>What is the RaycastCamera on the EventSystem, which is part of the InputManager? Why does it include a Camera that is default not active, and what does this non-active camera do? What does InputManager's Raycast Layer Masks do, and what does it affect? Does it affect the gaze cursor, or the motion controller's cursor, any cursor? How does this layer mask differ from the RaycastCamera's CullingMask layers?

I'm working on RoboRaid (if any of you have worked on it, please let me know), and I want to know how to get the SR data to "turn off" after the game gets running so the cursor NEVER lands on it. But it can still light up (be shown). I don't know if this should be accomplished by putting the layer onto one that the cursor would never hit, or ... what?

thanks
</Description>
  </Issue>
  <Issue>
    <IssueID>1441</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Medical Example Create New Volume</Title>
    <CreatedDate>26/11/2017</CreatedDate>
    <ClosedDate>08/02/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When Creating a new Volume 
## Expected Behavior
New volume Created
## Actual Behavior
Error IndexOutOfRangeException: Array index is out of range
## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>1440</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>1440</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[master] Haptics doesn't work when running in-editor</Title>
    <CreatedDate>26/11/2017</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The UWP haptics APIs are currently exposed in a way that makes them incompatible with running in the Unity editor.

My recommended fix would be by adding to the DLL (we can rename it to make it more accurate) I wrote to expose the motion controller model API, [found in the MixedRealityTookit here](

Additional methods could be written, with identical code to lines 18-39, but then calling the haptics APIs like in the [existing Toolkit extensions](

I initially experimented with this addition when writing the initial DLL, but remember being blocked around creating a `TimeSpan` object, without time at the time to fully investigate.

## Expected Behavior
The haptics APIs work when running in the editor.

## Actual Behavior
The haptics APIs only work in a deployed app.

## Steps to reproduce
Run the MotionControllerTest scene and press grasp or menu to try to trigger haptics.

## Unity Editor Version
All

## Mixed Reality Toolkit Release Version
All</Description>
  </Issue>
  <Issue>
    <IssueID>1439</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add WindowsDevicePortalWrapper library to project</Title>
    <CreatedDate>26/11/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Replace custom Portal API calls with [DevicePortalWrapper](

Currently the only drawback is .Net 3.5 support for backwards compatibility with older versions of Unity
- [library only supports .NET 4.6](</Description>
  </Issue>
  <Issue>
    <IssueID>1438</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Sharing Examples Crash / How to use undocumented</Title>
    <CreatedDate>25/11/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>No Repro</Name>
        <IssueID>1438</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When putting sharing examples on Hololens when attempting to enter an IP the experience crashes with first UI interaction
## Expected Behavior
Ability to type in IP of host to start shared space example experience
## Actual Behavior
Experience crashes
## Steps to reproduce


## Unity Editor Version
2017.2.0f3
## Mixed Reality Toolkit Release Version
v1.2017.2.0 Master release tag?</Description>
  </Issue>
  <Issue>
    <IssueID>1437</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Single air tap registers as double air tap with OnInputClicked</Title>
    <CreatedDate>25/11/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>No Repro</Name>
        <IssueID>1437</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I've been creating a functionality for my project. And the functionality is that when the object (Box) collides (using OnTriggerEnter()) with another object (Cylinder) with rigidbody and certain component in the Box object should get disabled. This functionality is working fine. But a script in the Box object which has the OnInputClicked () method registers every tap as a double tap which makes a bool as true and false at the same time which messes up my work. Does anyone have this issue?

P.S. The OnInputClicked () function worked normally before the collision.

## Expected Behavior

## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
Unity Version: 2017.1.2f1.

## Mixed Reality Toolkit Release Version
HoloToolkit Version: v1.2017.2.0.</Description>
  </Issue>
  <Issue>
    <IssueID>1434</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Change the MRTK's default branch to Dev_Working_Branch</Title>
    <CreatedDate>25/11/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Changing the MRTK's default branch to Dev_Working_Branch
See [Github documentation]( for details</Description>
  </Issue>
  <Issue>
    <IssueID>1432</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Update Unity Editor to 2017.2.0p2 MRTP5</Title>
    <CreatedDate>25/11/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
New release of [Unity Editor 2017.2.0p2 MRTP5](

Release Notes:
---
- This build incorporates all changes from Unity’s 2017.2.0p2 patch; see release notes here for details.
- Fixed issue with applications not recovering correctly from tracking loss. (case 969994)
- Fixed a random threading crash.
</Description>
  </Issue>
  <Issue>
    <IssueID>1431</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Update InputManager to easily extend and add custom event data types</Title>
    <CreatedDate>24/11/2017</CreatedDate>
    <ClosedDate>25/11/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Give users the ability to extend and add custom event data types to the input system.

We would need to change [`InitializeEventDatas`]( to a protected method.</Description>
  </Issue>
  <Issue>
    <IssueID>1430</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cursor AnimationController Warnings</Title>
    <CreatedDate>24/11/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Lots of animation warnings from improper controller setup.
``

## Steps to reproduce
Open Project
Navigate to `MixedRealityToolkit-Unity\Assets\HoloToolkit\UX\Models\Cursor\Cursor_scale`
Select any of the animation controllers

OR
Reimport all assets

## Unity Editor Version
Any/All

## Mixed Reality Toolkit Release Version
405bb16be62b5d1eb18f8e5f39d9d1fe9a962013</Description>
  </Issue>
  <Issue>
    <IssueID>1429</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Animation import warnings</Title>
    <CreatedDate>24/11/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
``

Can be easily fixed by adding an extra key frame in the animation via Maya or Max, or creating a new animation asset in the editor and replacing the empty animation in the animation controller, then removing the empty animation from the model's animation import settings..

## Steps to reproduce
Open Project.
Reimport all assets.

## Unity Editor Version
Any/All

## Mixed Reality Toolkit Release Version
405bb16be62b5d1eb18f8e5f39d9d1fe9a962013</Description>
  </Issue>
  <Issue>
    <IssueID>1426</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Use Git LFS for large binary assets</Title>
    <CreatedDate>24/11/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
We should move the repository to using Git LFS for large binary data.

Updating the .gitattributes file to add the following file types:

- *.ai  
- *.dds 
- *.fbx 
- *.gif 
- *.jpg 
- *.obj 
- *.mp3 
- *.mpg 
- *.png 
- *.psd 
- *.svg 
- *.tif 
- *.tga 
- *.ttf 
- *.unitypackage
- *.wav </Description>
  </Issue>
  <Issue>
    <IssueID>1425</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>My old project don't build anymore</Title>
    <CreatedDate>24/11/2017</CreatedDate>
    <ClosedDate>24/11/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1425</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Assets\HoloToolkit-Examples\SharingWithUNET\Scripts\GenericNetworkTransmitter.cs(114,57): error CS0246: The type or namespace name 'StreamSocketListener' could not be found (are you missing a using directive or an assembly reference?)

Assets\HoloToolkit\SpatialMapping\Scripts\RemoteMapping\RemoteMeshSource.cs(140,69): error CS0246: The type or namespace name 'AsyncStatus' could not be found (are you missing a using directive or an assembly reference?)
`</Code>
    <Description>## Overview
How can I build an old unity 5.5 Hololens app with new windows 10 updates installed .
I think it is because Unity try to build with new UWP SDK but the app is intended to be build with old ones. I didn't manage to change UWP version in 5.5 like I can with 2017.x

## Expected Behavior
Build and deploy my app like 6 months ago

## Actual Behavior

I get errors like this when I try to Build : 
``

## Unity Editor Version
5.5.1f1

</Description>
  </Issue>
  <Issue>
    <IssueID>1424</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>APPX does not build on current Unity Version (Assembly-CSharp-firstpass does not exist)</Title>
    <CreatedDate>24/11/2017</CreatedDate>
    <ClosedDate>07/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When building the APPX I get the error "Failed to restore nuget packages" because the folder Assembly-CSharp-firstpass does not get created during the build process. When I remove the RestoreNugetPackages-check in line 240 (  ) it builds a fine APPX that I can deploy to Hololens without problems. I do not know enough about the build process to say if it is really needed and if my workaround is a valid fix for the current version.

## Expected Behavior
The APPX should just build without any error/the test for Assembly-CSharp-firstpass should (maybe?) be removed.

## Actual Behavior
"Failed to restore nuget packages" is shown (which is also a misleading error message).

## Steps to reproduce
Build an APPX from any project using current Master branch and the stable unity and VS-Versions

## Unity Editor Version
2017.2.03f

## Mixed Reality Toolkit Release Version
master-branch</Description>
  </Issue>
  <Issue>
    <IssueID>1423</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Interactive Mesh Cursor gets bigger after each teleport</Title>
    <CreatedDate>24/11/2017</CreatedDate>
    <ClosedDate>17/12/2017</ClosedDate>
    <IssueLabels />
    <Description>Just what it says. It's nice that it scales in the distance, but it's not very handy do to so after a teleport ;). Fix is very simple:
Line 124 is
``</Description>
  </Issue>
  <Issue>
    <IssueID>1422</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unable to build for HoloLens</Title>
    <CreatedDate>23/11/2017</CreatedDate>
    <ClosedDate>29/11/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I am working with Unity to make an application, however, each time I try to build the application in Visual Studio there is an error.
## Expected Behaviour
Builds to HoloLens without any errors
## Actual Behaviour
When build is clicked in Visual Studio an error occurs saying 

&gt; System.IO.FileNotFoundException: ...\UnityEngin.dll

This is due to the letter e being randomly removed from "UnityEngine.dll". It is not limited to files, each time I build it removes a seemingly random letter / number / non-alphanumeric character from a link for a dll file.

A full example of the output can be found [here](
## Steps to reproduce
Create a new unity project in one of the versions mentioned below, set it up for deploying onto the HoloLens, see image &lt;br&gt;
![screenshot 2](

Import the HoloLens version mentioned below and set up your scene however you like.

Attempt to build in the visual studio version mentioned below.

## Unity Editor Version
2017.2.0p1, 2017.2.0p1-MRTP4, 2017.2.0p2
## Visual Studio Version
15.4.4
## Windows SDK
10.0.16299.0
## Mixed Reality Toolkit Release Version
[Latest Release](
___
I apologise if I just made a mistake in the setup which is causing this</Description>
  </Issue>
  <Issue>
    <IssueID>1421</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Adding support for devices that use touchscreens</Title>
    <CreatedDate>23/11/2017</CreatedDate>
    <ClosedDate>17/04/2018</ClosedDate>
    <IssueLabels />
    <Description>I've recently been looking into getting apps developed with the toolkit working on mobile devices, especially now following the addition of the WSA buildswitches. One of the sticking points has of course been handling input.

To that end, I've locally added a simple `TouchscreenInputSource` class, following the paradigm of the existing input sources, and propose adding it to the toolkit.

Thoughts at this point? Thanks.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1420</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Easy Legacy uGUI Canvas Raycast Camera updater</Title>
    <CreatedDate>22/11/2017</CreatedDate>
    <ClosedDate>07/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Provide an easy way to update the default canvas raycasting camera for projects using uGUI.  New users are not affected, because we're already prompting them when they create new canvases.

Currently the only easy way to do this is by using the scene configuration menu and re-adding the InputManager.

More advanced users can also manually call the update using `FocusManager.Instance.UpdateCanvasEventSystems();`

## Expected Behavior
When devs open legacy projects, we should prompt them once if they wish to update their canvases default raycasting camera if the canvas' render mode is set to world space.

## Actual Behavior
Currently older projects are automatically opted out to using the new UIRaycastCamera as the default raycaster, and devs need to manually assign the camera to each canvas who's render mode is set to world space.

## Unity Editor Version
Any/All

## Mixed Reality Toolkit Release Version
405bb16be62b5d1eb18f8e5f39d9d1fe9a962013</Description>
  </Issue>
  <Issue>
    <IssueID>1418</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ReflectionExtensions take BindingFlags parameter but ignore it</Title>
    <CreatedDate>22/11/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>

In ReflectionExtensions.cs there is an extension method to get the fields of a type.  This takes BindingFlags as an argument, but doesn't use them.

We were trying to get the public and private member variables like this:

    t.GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance);

Which works on platforms other than WSA with the native API, but with the extension method the flags are ignored and we got all fields including properties, constants, etc.

This also applies to some of the other methods in that file, at least GetMethods() and GetProperties().

I'd be happy to contribute a patch to implement the filtering.</Description>
  </Issue>
  <Issue>
    <IssueID>1417</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Holograms do not to scale correctly</Title>
    <CreatedDate>22/11/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1417</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
In a past project I had to work with bigger holograms (&gt;10m) and found that the holograms aren't scaled correctly. 10 Unity units should be 10 meters, but the scale differs by a small margin (1.55% to 1.8%).

I tested this with multiple HoloLenses in different environments (warehouse, office) at different lighting conditions to make sure it's not an issue with the sensors.

Not even sure if this is a HoloLens/MRTK issue or if this is simply Unity, not sure how to test that.

## Expected Behavior
If I add a cube in Unity and make its size to be 10 units the hologram will be 10 meters in reality too.

## Actual Behavior
The size seems to be off by 1.55% to 1.8%.

## Steps to reproduce
I created a small example project [HERE]( I stripped out some parts like the Mixed Reality Toolkit in order to have a small repo. After importing it you should be able to deploy it onto a HoloLens.

The app shows a cube with a lenght of 10m that you could position anywhere around you (usability is not the best, but it is good enough for the purpose). Measure a distance in your area to be 10m long and put the hologram besides it. You'll see that it is shorter than 10m.

## Unity Editor Version
Unity 2017.2.0.f3

## Mixed Reality Toolkit Release Version
MixedRealityToolkit-Unity-1.2017.2.0</Description>
  </Issue>
  <Issue>
    <IssueID>1416</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Internet connection slowdown</Title>
    <CreatedDate>22/11/2017</CreatedDate>
    <ClosedDate>22/11/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>OS Bug</Name>
        <IssueID>1416</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When running ANY internet based application in Mixed Reality (Store, Browser, Holograms, etc.), the internet connection gets very slow. (Down to 4 bytes/s) I won't get better, even after shutdown of mixed reality portal. Restarting the router helps.

## Expected Behavior
Access internet in fullspeed.

## Actual Behavior
Connection slowdown.

## Steps to reproduce
_(Links to sample github project preferred)_
Start Mixed Reality Portal, go into mixed reality and open up any internet-based application. eg. Store or Holograms.

## Unity Editor Version
Not Relevant

## Mixed Reality Toolkit Release Version
Not Relevant

## Note:
This my first bug report, so please excuse me if I did anything wrong. I found bug reports of the portal here, so I also posted it here. If it belongs somewhere else, please tell me.</Description>
  </Issue>
  <Issue>
    <IssueID>1414</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>1414</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Removing GamepadInput.cs from InputManager.prefab breaks Xbox gamepad support</Title>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>18/01/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I understand new events were added for Xbox gamepad but GamepadInput.cs maps A to InputManager air tap. This is now all broken unless I write special code.

## Expected Behavior
Gamepad just works with HTK input manager.

## Actual Behavior
Its broken.

## Steps to reproduce
Use GamepadTest.unity and it does not work.

FIX:
Re-add GamepadInput.cs to GesturesInput under InputManager prefab.
</Description>
  </Issue>
  <Issue>
    <IssueID>1413</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Is there an issue with Unity2017.2.p2</Title>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Experiencing severe color seperation when walking around an anchored object. Even with explicitly set stabilization plane. 

## Expected Behavior
Anchored Hologramm should be in focus and is absolutly not expected to show color seperation as described here: 

## Actual Behavior
After anchoring an Object view is fine. Walking around it (after 90 degrees) shows extreme Color Separation, although movement is slow.  Downgrading to Unity3D 2017.2.f1 shows normal behaviour.

## Steps to reproduce
Use Unity3D patch release 2017.2.p2. Use MRT demoscene tab to place. Place object in spatial room. Walk around.

## Unity Editor Version
2017.2.p2

## Mixed Reality Toolkit Release Version
latest i guess.
</Description>
  </Issue>
  <Issue>
    <IssueID>1411</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpatialMappingTap.shader is not working with single-pass stereo rendering</Title>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview

[SpatialMappingTap.shader](  not working in single-pass stereo rendering

## Expected Behavior

SpatialMappingTap.shader is working in single-pass stereo rendering.

## Actual Behavior
only rendered in one eye. 

## Steps to reproduce

use spatial mapping tap shader in single-pass sterero rendering.

I already write patch. 



I read this document, then apply it.


I don't know how to contribute, so I write issue.

## Unity Editor Version

2017.2.0p2
</Description>
  </Issue>
  <Issue>
    <IssueID>1410</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can't set breakpoints when deploying on HoloLens</Title>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>OS Bug</Name>
        <IssueID>1410</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When I set a breakpoint in the code and I remote deploy on the HoloLens, the breakpoints get disabled. This worked some time ago, maybe it broke after I updated to Unity 2017.2 or to Windows SDK 10.0.16299.0.

Build is set to Debug and x86 and Windows SDK 10.0.16299.0.

Maybe related to #1398 

## Expected Behavior
Breakpoints should work. The code should stop and be debugabble.

## Actual Behavior
Breakpoints don't get hit. They are disabled when debugging.

## Unity Editor Version
2017.2.0.p1-MRTP4
## Mixed Reality Toolkit Release Version
Probably around 22ade4fa7a1ab4082ab1dd7f5e01b55dca83a5a7</Description>
  </Issue>
  <Issue>
    <IssueID>1409</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Build Window make IP Address editable</Title>
    <CreatedDate>21/11/2017</CreatedDate>
    <ClosedDate>23/11/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The build window doesn't let me choose an IP Address. I only see the 127.0.0.1 IP Address. If there is a network discovery happening, it is restricted by the corporate network, so it won't find the HoloLens. I have to enter the IP Address manually.

## Expected Behavior
Can we make the textbox editable so that I can enter the IP Address manually?</Description>
  </Issue>
  <Issue>
    <IssueID>1408</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How would someone go about saving Audio Clips?</Title>
    <CreatedDate>20/11/2017</CreatedDate>
    <ClosedDate>21/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1408</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Sound / Audio</Name>
        <IssueID>1408</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I've seen in several Microsoft promotional videos of users being able to record their voice and have it saved so that they can come back to it later (i.e Ford spotlight). I am able to record and play back my recording but how would I go about saving them for later use? 

I didn't see any scripts in the tool kit relating to this so, possible future request also. </Description>
  </Issue>
  <Issue>
    <IssueID>1406</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Clipping Plane Issue</Title>
    <CreatedDate>20/11/2017</CreatedDate>
    <ClosedDate>21/11/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Since I've updated to Unity 2017.2.0f3 now my clipping plane has become extremely large.
## Expected Behavior
I have set the  clipping plane near setting to 0.01 on the MixedRealityCamera and I want the hologram to clip just inches in front my my face.
## Actual Behavior
I have set the  clipping plane near setting to 0.01 on the MixedRealityCamera however the hologram clips out 2-3 feet in front of me.
## Steps to reproduce
Described above.

## Unity Editor Version
Unity 2017.2.0f3
## Mixed Reality Toolkit Release Version
HoloToolkit-Unity-v1.2017.2.0</Description>
  </Issue>
  <Issue>
    <IssueID>1405</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>EditorPrefsUtility's filename does not match the class name</Title>
    <CreatedDate>20/11/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
EditorPrefsUtility should match it's file name

## Mixed Reality Toolkit Release Version
2c59d07b574cbde904b7ad6bd2e249438597440d</Description>
  </Issue>
  <Issue>
    <IssueID>1404</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Update ignore file to exclude UnityPackageManager</Title>
    <CreatedDate>20/11/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The file manifest.json file is a nuisance that sneaks into commits constantly.

Since we have no immediate plans for using the Package Manager, should we add UnityPackageManager to our .gitignore?

## Unity Editor Version
2017.2.0p1 MRTP4</Description>
  </Issue>
  <Issue>
    <IssueID>1402</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Build window increments the reserved number for Windows Store Apps</Title>
    <CreatedDate>20/11/2017</CreatedDate>
    <ClosedDate>07/03/2018</ClosedDate>
    <IssueLabels />
    <Description>## Overview
When Increment version is toggled on, the version number will increase from 1.0.0.0 to 1.0.0.1, but the last version number is reserved for Windows Store only.

## Expected Behavior
We should probably give devs the option about _which_ major/minor version to increment, while keeping the last number 0 to comply with WACK.

## Actual Behavior
Build number goes from 1.0.0.0 to 1.0.0.1

## Steps to reproduce

1. Open Project
2. Open Build Window
3. Verify Increment build is enabled
4. Verify current build number
5. Build
6. Run Windows Certification Tests on new APPX
7. Certification test will fail indicating that the build version number is invalid

## Unity Editor Version
Any/All

## Mixed Reality Toolkit Release Version
2c59d07b574cbde904b7ad6bd2e249438597440d</Description>
  </Issue>
  <Issue>
    <IssueID>1401</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Issues with nullreferenceexception error with voice commands in Unity. Is it a HoloToolKit problem?</Title>
    <CreatedDate>20/11/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1401</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
NullReferenceException: Object reference not set to an instance of an object
HoloToolkit.Unity.InputModule.SpeechInputSource.OnPhraseRecognized (ConfidenceLevel confidence, TimeSpan phraseDuration, DateTime phraseStartTime, UnityEngine.Windows.Speech.SemanticMeaning[] semanticMeanings, System.String text) (at Assets/HoloToolkit/Input/Scripts/InputSources/SpeechInputSource.cs:166)
HoloToolkit.Unity.InputModule.SpeechInputSource.ProcessKeyBindings () (at Assets/HoloToolkit/Input/Scripts/InputSources/SpeechInputSource.cs:147)
HoloToolkit.Unity.InputModule.SpeechInputSource.Update () (at Assets/HoloToolkit/Input/Scripts/InputSources/SpeechInputSource.cs:88)


This is the only reason why my voice commands don't work after building but I am not sure how I can reoslve this in Unity.

Firstly is it actually my coding or workflow in unity or is the problem from the holotoolkit.

I only ask because when I double click the null reference error on Unity, it highlights this line of code within the SpeechInputSource.cs file. 


InputManager.Instance.RaiseSpeechKeywordPhraseRecognized(this, 0, confidence, phraseDuration, phraseStartTime, semanticMeanings, text);


Am I missing something? This actually happened with another script I created to change colors of a shape. I just keep getting the nullreferencexception errors

Here is the code I attached on the 3d text 


using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class ColorChange : MonoBehaviour {

	TextMesh textMesh;

	// Use this for initialization
	void Start () {

		textMesh = GetComponent&lt;TextMesh&gt; ();
		
	}
	
	public void ColorBlue ()
	{
		textMesh.color = Color.blue;
	}


	public void ColorRed ()
	{
		textMesh.color = Color.red;
	}
		

	public void ColorGreen ()
	{
		textMesh.color = Color.green;
	}
}
`</Code>
    <Description>Hey guys,

So I followed the tutorial below regarding voice commands and the 'keyword manager' which is now obsolete.  Instead I used 'speech input source' and 'speech input handler' and followed the tutorial 



Problem now is, why do I keep receiving this error after following the same tutorial step by step? 

``
</Description>
  </Issue>
  <Issue>
    <IssueID>1399</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>What is the maximum size of SharingService</Title>
    <CreatedDate>20/11/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1399</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I wanted to send mesh through hololens sharing service

## Expected Behavior
The mesh could be sent immediately

## Actual Behavior
I need to wait seconds or minutes if the mesh is large.
I wonder how sharing service behave if the content is too large. Therefore I can improve it in my side.

## Steps to reproduce
[how to pack a mesh into sharing service](

## Unity Editor Version
2017.1

## Mixed Reality Toolkit Release Version
vs2017</Description>
  </Issue>
  <Issue>
    <IssueID>1398</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can not debug Hololens UWP-Applications</Title>
    <CreatedDate>19/11/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>OS Bug</Name>
        <IssueID>1398</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
My Hololens/MRTK-Applications are crashing and the output is not showing why, I am also not seeing any debug log.
This might be a bug in Unity and/or Visual Studio.

## Expected Behavior
Visual Studio should show the exact position  the Code and the full log of the stacktrace.

## Actual Behavior
The Program is compiled and run as Unity-UWP-Project from Visual Studio. When an error occurs I see the error message "A debugger is attached to &lt;your app&gt;.exe but not configured to debug this unhandled exception".

## Steps to reproduce
create a new Unity-Project copy the Mixed Reality Project into it, use the build Menu to add all MR and UWP settings and add a script that has an runtime error to your scene.
Build the app from File &gt; Build settings as unity project, activate the "Unity C# Projects" and "Development build". After building open the Project with Visual Studio and run it as "Debug", "x86" on your Local Machine

## Unity Editor Version
2017.2.0f3

## UWP-SDK Version 
10.0.16299.0

## Visual Studio Version
15.4.0 (Community 2017)

## Mixed Reality Toolkit Release Version
current master </Description>
  </Issue>
  <Issue>
    <IssueID>1397</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to change cursor at runtime </Title>
    <CreatedDate>19/11/2017</CreatedDate>
    <ClosedDate>14/02/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1397</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>How can I change cursor style/prefab when hover over certain object then set it back to its defsult design once not in focus anymore?
Thanks
</Description>
  </Issue>
  <Issue>
    <IssueID>1396</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Garbage Upgrade to Unity 2017</Title>
    <CreatedDate>19/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I have upgraded my Unity software and it has totally screwed up everything that I have been working on for months. Past projects that I have created are now obsolete, new projects can not even be built.
## Expected Behavior
I just want to be able to build a project.
## Actual Behavior
After Installing a bunch of different versions of the software I now finally do not have any compiling errors within Unity, however I cannot get VS to build the Hololens project. When I build or debug the software only a blank/black window shows up. Unity software does not even load upon build.
## Steps to reproduce
Build from Unity then debug in VS2017

## Unity Editor Version
Unity 2017.1.2f1

## Mixed Reality Toolkit Release Version
HoloToolkit-Unity-v1.2017.2.0

VS Version 15.4.4</Description>
  </Issue>
  <Issue>
    <IssueID>1395</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>1395</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Headset tracking lost when the app is resumed</Title>
    <CreatedDate>19/11/2017</CreatedDate>
    <ClosedDate>19/11/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
In MotionControllerTest scene, the app runs fine on the first run. However, **when it is resumed from cliff house**, headset tracking lost and the scene/controller moves with your body. This might happen in any scenes that uses MixedRealityCamera. 
**This only happens in deployed app. Unity's game mode is fine.**

## Expected Behavior
Tracking should work.

## Actual Behavior
Tracking is not working when the app is resumed. Entire scene moves with your head/body.
The symptom shows up only when it is resumed.

## Steps to reproduce
Build and deploy MotionControllerTest scene with Visual Studio. 

## Unity Editor Version
Unity 2017.2.0p1-MRTP4 (64-bit)

## Mixed Reality Toolkit Release Version
Latest master clone.</Description>
  </Issue>
  <Issue>
    <IssueID>1394</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Enable XR shows checked after unchecking</Title>
    <CreatedDate>18/11/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>## Overview
There is inconsistent behavior in the Configure menu. The initial settings in the configure menu are presumably the most common default settings. For some settings, "Enable Sharing Services" for example, once you change them the value (checked or unchecked) retains the new value after you Apply the settings and then later return to the configure menu. 

However, for "Enable VR", if you uncheck the box and Apply, when you next return to the Configure menu it shows as checked, even though the Virtual Reality Supported checkbox (Player Settings | XR Settings) is still unchecked.

## Expected Behavior
Enable VR checkbox shows unchecked if you have unchecked it

## Actual Behavior
Enable VR checkbox shows checked even after unchecking

## Steps to reproduce
1.
Create new project. Select from menu: Mixed Reality Toolkit | Apply Mixed Reality Project Settings, 
Enable VR checkbox is checked by default
Click Apply

Check that in Edit | Project Settings | Player that XR Settings show s Virtual Reality Supported is checked and Virtual Reality SDKs shows Windows Mixed Reality

2.
Repeat process but now uncheck the Enable VR checkbox. Player XR Settings now shows Virtual Reality Unsupported is unchecked.

3.
Open menu: Mixed Reality Toolkit | Apply Mixed Reality Project Settings. Note that Enable VR checkbox shows as checked even though Player XR Settings is still unchecked.

## Unity Editor Version
2017.2.0p1-MRTP
## Mixed Reality Toolkit Release Version
master</Description>
  </Issue>
  <Issue>
    <IssueID>1393</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ButtonIconProfileTexture not saving</Title>
    <CreatedDate>18/11/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I am trying to edit the [DefaultButtonIconProfileTexture]( to add my own Icons. I don't know if I am doing this right, but if I press on "Add custom icon" and then I select my icon, the file is not automatically saved. I tried saving the scene and everything, but it also didn't help. This means I can't check-in my changes into the SCM.

Is this intended behavior or is this a bug?

## Expected Behavior
Persist the changes after changing the profiles.

## Actual Behavior
The changes are not persisted. The file is not changing if I add or remove icons from the profile.

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version
2017.2.0f3

## Mixed Reality Toolkit Release Version
Master branch 272d5fd10c0b836a2a7bcb021a655dcf2288d7e9</Description>
  </Issue>
  <Issue>
    <IssueID>1391</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>1391</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Standalone Build configuration does not compile.</Title>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
    <IssueLabels />
    <Code>
Error:
Assets/HoloToolkit/Input/Scripts/Utilities/AttachToController.cs(59,53): error CS1061: Type `HoloToolkit.Unity.InputModule.MotionControllerVisualizer' does not contain a definition for `TryGetControllerModel' and no extension method `TryGetControllerModel' of type `HoloToolkit.Unity.InputModule.MotionControllerVisualizer' could be found. Are you missing an assembly reference?
`</Code>
    <Description>## Overview
Opened a freshly synced project in MRTP4 0p1

## Expected Behavior
No compile errors

## Actual Behavior
``

## Steps to reproduce
Open project and switch to Mac, PC, &amp; Linux Standalone build.

## Unity Editor Version
2017.2.0p1 MRTP4

## Mixed Reality Toolkit Release Version
Current master</Description>
  </Issue>
  <Issue>
    <IssueID>1390</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Missing controller reference on MRCP prefab</Title>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Missing Game Object references on Mixed Reality Camera Parent prefab.
![image](

## Unity Editor Version
Any

## Mixed Reality Toolkit Release Version
272d5fd10c0b836a2a7bcb021a655dcf2288d7e9</Description>
  </Issue>
  <Issue>
    <IssueID>1389</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Mixed Reality Camera Parent Fade Plane impacts perf on HoloLens</Title>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
MRCP Fade Plane is transparent instead of black, and adds a full frame render that impacts performance on HoloLens

## Unity Editor Version
Any

## Mixed Reality Toolkit Release Version
272d5fd10c0b836a2a7bcb021a655dcf2288d7e9</Description>
  </Issue>
  <Issue>
    <IssueID>1388</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Teleport Marker doesn't survive scene change</Title>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1388</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
MissingReferenceException: The variable teleportMarker of MixedRealityTeleport doesn't exist anymore.
You probably need to reassign the teleportMarker variable of the 'MixedRealityTeleport' script in the inspector.

HoloToolkit.Unity.InputModule.MixedRealityTeleport.EnableMarker () (at Assets/HoloToolkit/Input/Scripts/Utilities/Managers/MixedRealityTeleport.cs:285)
HoloToolkit.Unity.InputModule.MixedRealityTeleport.StartTeleport () (at Assets/HoloToolkit/Input/Scripts/Utilities/Managers/MixedRealityTeleport.cs:214)
HoloToolkit.Unity.InputModule.MixedRealityTeleport.HandleGamepad () (at Assets/HoloToolkit/Input/Scripts/Utilities/Managers/MixedRealityTeleport.cs:124)
HoloToolkit.Unity.InputModule.MixedRealityTeleport.Update () (at Assets/HoloToolkit/Input/Scripts/Utilities/Managers/MixedRealityTeleport.cs:103)

MissingReferenceException: The object of type 'Animator' has been destroyed but you are still trying to access it.
Your script should either check if it is null or you should not destroy the object.
HoloToolkit.Unity.InputModule.MixedRealityTeleport.PositionMarker () (at Assets/HoloToolkit/Input/Scripts/Utilities/Managers/MixedRealityTeleport.cs:316)
HoloToolkit.Unity.InputModule.MixedRealityTeleport.Update () (at Assets/HoloToolkit/Input/Scripts/Utilities/Managers/MixedRealityTeleport.cs:109)

MissingReferenceException: The variable teleportMarker of MixedRealityTeleport doesn't exist anymore.
You probably need to reassign the teleportMarker variable of the 'MixedRealityTeleport' script in the inspector.
HoloToolkit.Unity.InputModule.MixedRealityTeleport.DisableMarker () (at Assets/HoloToolkit/Input/Scripts/Utilities/Managers/MixedRealityTeleport.cs:298)
HoloToolkit.Unity.InputModule.MixedRealityTeleport.FinishTeleport () (at Assets/HoloToolkit/Input/Scripts/Utilities/Managers/MixedRealityTeleport.cs:236)
HoloToolkit.Unity.InputModule.MixedRealityTeleport.HandleGamepad () (at Assets/HoloToolkit/Input/Scripts/Utilities/Managers/MixedRealityTeleport.cs:129)
HoloToolkit.Unity.InputModule.MixedRealityTeleport.Update () (at Assets/HoloToolkit/Input/Scripts/Utilities/Managers/MixedRealityTeleport.cs:103)
`</Code>
    <Description>## Overview
Running a project with multiple scenes, when a new scene is loaded the Mixed Reality Teleport Script loses its reference to the initial instance of Teleport Marker instantiated in the first scene. The Teleport Manager doesn't survive the scene load and a new one isn't created in the new scene. 

## Expected Behavior
No errors, can select using Controller

## Actual Behavior
Three errors, xbox controller no longer functions, can't select or interact
``

## Steps to reproduce
Create a project with two scenes. Load initial scene then load second scene. Use xbox left thumbstick.  

You can see that the Mixed Reality Teleport Script on MixedRealityCameraParent in the Unity Editor is null.

## Unity Editor Version
2017.2.op1-MRTP4
## Mixed Reality Toolkit Release Version
master</Description>
  </Issue>
  <Issue>
    <IssueID>1386</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity 5.6/2017.1 Builds not compatible with 16299 SDK</Title>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I noticed that Unity 5.6/2017.1 Builds throw null refs from `InputManager` when targeting the 16299 SDK.
We should probably target 15063 for versions less than 2017.2

## Problem Behavior
Null references in `InputManager` events because the Windows API is targeting the wrong SDK.
``

## Unity Editor Version
5.6.x
2017.1.x

## Mixed Reality Toolkit Release Version
272d5fd10c0b836a2a7bcb021a655dcf2288d7e9</Description>
  </Issue>
  <Issue>
    <IssueID>1385</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Error CS0012 when building for Hololens</Title>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>1385</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Severity	Code	Description	Project	File	Line	Suppression State
Error	CS0012	The type 'IAsyncAction' is defined in an assembly that is not referenced. You must add a reference to assembly 'Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime'.	Assembly-CSharp	D:\Users\cmdann\Development\Games\TurbineAR\Assets\HoloToolkit\Utilities\Scripts\ApplicationViewManager.cs	62	Active
`</Code>
    <Description>## Overview
I am working on a simple prototype. I have a 3D scan of a part which we have prepared into an FBX and would like to view  in augmented reality. Scan is fine and object is added to unity however when I build using the latest release of the toolkit on the latest release of Unity I am met with errors on the Visual Studio side of things.

Unity Scene:
![1](

Unity Build Window:
![2](

Visual Studio Window:
![3](

Error I am receiving:
``
All error output: 

Notes:
- I tried cleaning the solution which resulted in more CS0012 errors
- I am running Visual Studio 2017 Enterprise

## Expected Behavior
I would like to deploy the application to the Hololens hardware.

## Actual Behavior
Errors (CS0012) in visual studio preventing the application from building.

## Steps to reproduce

- Prepare Scene
- Build to visual studio
- Attempt to run on device

## Unity Editor Version
- Unity 2017.2.0b11

## Mixed Reality Toolkit Release Version
- HoloToolkit-Unity-v1.2017.2.0
- HoloToolkit-Unity-Examples-v1.2017.2.0</Description>
  </Issue>
  <Issue>
    <IssueID>1384</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InteractionReceiver NRE OnDisable()</Title>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels />
    <Code>
NullReferenceException: Object reference not set to an instance of an object
HoloToolkit.Unity.Receivers.InteractionReceiver.OnDisable () (at Assets/HoloToolkit/UX/Scripts/Receivers/InteractionReceiver.cs:73)
`</Code>
    <Description>## Overview
I am getting a `NullReferenceException` when I exit my application in Editor mode. The NRE comes from the [InteractionReceiver](

It is possible that it is a bug on my side, but the `InteractionReceiver` class does not check for null. In my opinion, this shouldn't be possible because the part of the code is closed in itself, I don't see it referencing a part of my project (except that it is assigned to a GameObject as a component).

## Expected Behavior
Be able to stop the editor from running without getting an exception.

## Actual Behavior
After stopping the execution in the editor:
``

## Unity Editor Version
2017.2.0f3

## Mixed Reality Toolkit Release Version
Last master 
</Description>
  </Issue>
  <Issue>
    <IssueID>1383</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Exiting and returning to app sometimes messes up head tracking</Title>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1383</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I exit the app by pressing the windows button and return to the app by selecting its open window and the positional tracking sometimes doesn't work anymore. 
## Expected Behavior
When I return to the app i expect the camera to behave the same way as when i left. Moving my head forward moves the camera forward.

## Actual Behavior
When I return the Camera sometimes doesn't move anymore. I can still rotate it but not move.
I move forward with my head but the camera doesn't move. Instead the motion controller is moving forwards by the distance I moved my head forward.

## Steps to reproduce
1. Start app
2.  press windows button
3. return to app by selecting app window
4.  test head movement.
4.1 movement is correct: continue with 2. (repeat several times)
4.2 head doesn't move: start crying, but without moving your head
5. Profit

I'll test this on the repo examples
## Unity Editor Version
MRTP 4
## Mixed Reality Toolkit Release Version
from yesterday</Description>
  </Issue>
  <Issue>
    <IssueID>1382</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Buttons missing in MRTK</Title>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>20/11/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1382</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
According to  there should be buttons from MRDL included in the MRTK. The only part I can find them is in the example scene, but I don't want to include the example scene in my project. I am not able to port the buttons to my project either, there are several materials / scripts missing that prevent that.

If I want to export the HolographicButton with the dependencies, I get dependencies in all HTK projects (HTK, Examples and UnitTests).

## Expected Behavior
I want to be able to use the Buttons (specially: Holographic Button) from the HoloToolkit.

## Actual Behavior
There are no buttons in the HoloToolkit.

## Unity Editor Version
2017.2.0f3

## Mixed Reality Toolkit Release Version
Last master </Description>
  </Issue>
  <Issue>
    <IssueID>1381</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Assertion failed: Main camera does not exist!  Error</Title>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>17/11/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I get assertion failed errors when I am using the `MixedRealityCameraParent`.
The `MixedRealityCamera` inside the parent is tagged as `MainCamera`.

It works with the `HololensCamera` prefab.

## Expected Behavior
The application should run with no errors.

## Actual Behavior
There are 3 assertion errors like this:
`Assertion failed: Main camera does not exist!
UnityEngine.XR.WSA.HolographicSettings:get_IsDisplayOpaque()
HoloToolkit.Unity.Boundary.BoundaryManager:RenderFloorQuad() (at Assets/HoloToolkit/Boundary/Scripts/BoundaryManager.cs:107)
HoloToolkit.Unity.Boundary.BoundaryManager:Awake() (at Assets/HoloToolkit/Boundary/Scripts/BoundaryManager.cs:94)`

## Unity Editor Version
2017.2.0f3

## Mixed Reality Toolkit Release Version
Last master </Description>
  </Issue>
  <Issue>
    <IssueID>1380</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Error InteractionSourceHandedness in 2017.1.2f1</Title>
    <CreatedDate>17/11/2017</CreatedDate>
    <ClosedDate>29/12/2017</ClosedDate>
    <IssueLabels />
    <Code>
Assets/HoloToolkit/Input/Scripts/Utilities/AttachToController.cs(25,19): error CS0246: The type or namespace name 'InteractionSourceHandedness' could not be found. Are you missing an assembly reference?
`</Code>
    <Description>## Overview
Errors thrown when using latest master in 2017.1.2f1 Unity version.
In the following files:
- [AttachToController](
- [MotionControllerInfo](

## Expected Behavior
No errors thrown when using the HTK.

## Actual Behavior
``

## Steps to reproduce
Import the HTK in Unity 2017.1.2f1

## Unity Editor Version
Unity 2017.1.2f1

## Mixed Reality Toolkit Release Version
Last master </Description>
  </Issue>
  <Issue>
    <IssueID>1378</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>TapToPlace using SpatialMappingManager</Title>
    <CreatedDate>16/11/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>Hi!

The TapToPlace script in the example does not use the Spatial Mapping manager for the placement of objects. I created a small script based on Placeable.cs from  and TapToPlace and called it MoveToPlace.
See 

If it is OK with you I'd create a small example of show to use it and create a pull request. Alternatively I could extend the existing TabToPlace-Example.</Description>
  </Issue>
  <Issue>
    <IssueID>1377</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Dynamically Created SyncTransform and TransformSynchronizer Doesnt Sync</Title>
    <CreatedDate>16/11/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>1377</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
I am trying to dynamically create and link GameObject Transforms with the SyncModel.  The idea is my SyncSpawnModel will go iterate through its GameObject's children looking for a script &lt;DynamicallyCreateTransformArr&gt; and when it finds a child with it, it adds a new SyncTransform to the SyncArray.  However, when I use the SyncArray no changes get synced up, but if I use a single SyncTransform it works.  Which can be seen below with the Script &lt;DynamicallyCreateTransformArr&gt; where it is just a single SyncTransform.

Also what are the tags [SyncData] and [SyncDataClass] specifically used for, I see that none of the MRTK SyncModels have [SyncDataClass] above them, what is this for?

I have been trying to get this to dynamically add models to the SyncArray for 4 straight days and have nothing to show for it.  So any tips are greatly appreciated!

## Expected Behavior
I should be able to dynamically add Transforms to the model using a SyncArray&lt;SyncTransform/SyncGameObject&gt; and all the changes get synced with the network.

## Actual Behavior
Does not sync using the SyncArray, but it does when its just a single SyncTransform

## Steps to reproduce
MySyncSpawnModel: which gets initialized by a MonoBehavior Script I have on the prefab itself, and calls InitializeExternally().

``

## Unity Editor Version
2017.1.2

## Mixed Reality Toolkit Release Version
2017.1.2</Description>
  </Issue>
  <Issue>
    <IssueID>1376</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Pure orientation-only experience places motion controllers off</Title>
    <CreatedDate>16/11/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1376</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
The current MixedRealitytoolkit does not provide the possibility to completely restrict the player to head rotation (At least I found nothing). According to the following page `InputTracking.disablePositionalTracking = true;` has to be set:

&gt; 

In doing so, the head is restricted to rotation, however the Motion Controllers are not properly mapped into space, they're somewhere besides the player.

## Expected Behavior

The BoundaryManager should incorporate this feature. Toggling the boolean shouldn't ruin the relative controller position.

## Actual Behavior
Motion Controllers are somewhere in the space, Can't really tell relative to what they are positioned.

## Steps to reproduce
Create a script and set `InputTracking.disablePositionalTracking = true;`

## Unity Editor Version
MRTP4

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>1375</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Anchors</Title>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>14/02/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1375</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hello,
I am having terrible difficulties with Anchor Managers! The hologram that I have sways and jumps all over the place it also jitters and jutters even though the fps is above 60...
What scene example or documentation is the best for me to reference to get the best understanding of how to us implement anchors? I have searched everywhere and nothing is of value!
Thanks!

## Unity Editor Version
5.6.3.p2</Description>
  </Issue>
  <Issue>
    <IssueID>1374</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Some classes not in the HoloToolkit namespace</Title>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>11/11/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>1374</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>We need to update the classes to be in the HoloToolkit namespace</Description>
  </Issue>
  <Issue>
    <IssueID>1371</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>1371</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>What is the purpose of the SceneContentAdjuster?</Title>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>14/06/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>1371</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>What is the purpose of the SceneContentAdjuster? It puts objects at eye level? 
How does it relate to the experience scale described at: </Description>
  </Issue>
  <Issue>
    <IssueID>1370</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Issues using the keyboard prefab on PC</Title>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1370</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>## Overview
When using a uGUI text field and the virtual keyboard prefab on PC, both the virtual keyboard and OS keyboard shows up in the application.

HoloLens is unaffected.

## Expected Behavior
A single keyboard

## Actual Behavior
OS and keyboard prefab shows up

## Steps to reproduce
- Open keyboard test scene
- Play in editor
- Attempt to write in text field

## Unity Editor Version
2017.2.0p1 MRTP4

## Mixed Reality Toolkit Release Version
db59a1c7fa0c0c463466028c5f3e70088bbfda52</Description>
  </Issue>
  <Issue>
    <IssueID>1369</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity Throws assertions for main camera</Title>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>19/12/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
In 2017.2.0f3 and 2017.2.0p1 unity throws assertions for the main camera when checking is the display is opaque.

``

## Steps for work around
Use the MRTP editor builds

## Unity Editor Version
2017.2.0f3 and 2017.2.0p1

## Mixed Reality Toolkit Release Version
db59a1c7fa0c0c463466028c5f3e70088bbfda52</Description>
  </Issue>
  <Issue>
    <IssueID>1368</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to fix floor height offset issues for the VR headsets?</Title>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
Floor height postion is not never matches with the real ground Floor( hope it is supposed to work in this way). So the charactor with normal height will always rendered beyond  your eye level while you are standing.
## Expected Behavior


## Actual Behavior

## Steps to reproduce
_(Links to sample github project preferred)_

## Unity Editor Version

## Mixed Reality Toolkit Release Version
</Description>
  </Issue>
  <Issue>
    <IssueID>1366</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Holotoolkit.Unity.UX namespace casing does not match rest of HoloToolkit.Unity.*</Title>
    <CreatedDate>15/11/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
The classes in the Holotoolkit.Unity.UX namespace do not match the casing for the rest of HoloToolkit, which is Pascal cased with a capital T.</Description>
  </Issue>
  <Issue>
    <IssueID>1365</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>UI Buttons Not Responding in HoloLens</Title>
    <CreatedDate>14/11/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
    <IssueLabels />
    <Description>## Overview
I can't select UI Buttons when I build out to the HoloLens. They work in Editor and on the HoloLens the cursor seems to still see my hand and the tap gesture. 

## Expected Behavior
I select a button and get the behavior out of it. 

## Actual Behavior
Nothing, the tap gesture doesn't seem to effect Unity UI Buttons anymore. 

## Steps to reproduce
Create a Unity UI Button
Add a Behavior to it.
Build and try to select the Button on HoloLens.

## Unity Editor Version
Unity 2017.2.0p1

## Mixed Reality Toolkit Release Version
v1.2017.2.0
</Description>
  </Issue>
  <Issue>
    <IssueID>1267</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>uGUI OnPointerClick not being raised properly</Title>
    <CreatedDate>30/10/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
    <IssueLabels />
    <Description>We raise our internal `RaiseInputClicked` properly but for some reason we're not raising `UnityEngine.EventSystems.OnPointerClick` properly on input up with multiple pointers.</Description>
  </Issue>
  <Issue>
    <IssueID>1266</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InterpolatedValue might be able to use a method "Await" ?</Title>
    <CreatedDate>30/10/2017</CreatedDate>
    <ClosedDate>21/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1266</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I inherited some code that uses a modified version of InterpolatedValue.cs, that has a method Await( ). Every time I import the toolkit, I have to re-add this method, and I'm not sure how to get rid of calling that method in the code I inherited. Could be by any chance add this method to InterpolatedValue.cs on the grounds it might be useful?

here is the code:

        /// &lt;summary&gt;
        /// Waits for the interpolator to complete, unless cancelled.
        /// The token won't cancel the execution of the interpoloatr
        /// &lt;/summary&gt;
        /// &lt;param name="token"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public CoroutineEx Await(CancellationToken token)
        {
            return CoroutineEx.Run(Awaiter(), token);
        }

        private IEnumerator&lt;Yield&gt; Awaiter()
        {
            while (IsRunning)
            {
                yield return Yield.WaitForNextFrame;
            }
        }

</Description>
  </Issue>
  <Issue>
    <IssueID>1264</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MotionControllerTest gaze does not highlight cube</Title>
    <CreatedDate>30/10/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>changing the cube's shader to "Standard", and changing OnFocusEnter/Leave function's calls to EnableKeyword("_EMISSION") works, but what is currently there doesn't seem to highlight anything!
</Description>
  </Issue>
  <Issue>
    <IssueID>1263</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Input Manager Tests no longer pass</Title>
    <CreatedDate>30/10/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
    <IssueLabels />
    <Description>Input is working, but recent changes and updates have broken the test runner.

![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>1262</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>App build crashes on Windows 10 without HMD/ Certification Kit fails</Title>
    <CreatedDate>30/10/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>OS Bug</Name>
        <IssueID>1262</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>We are developing for the Acer Mixed Reality Development Edition HMD. On a PC with the HMD connected our app will pass the Windows App Certification Kit tests. Without the HMD it fails:

``

Is this known? Will this be addressed (hopefully soon)?</Description>
  </Issue>
  <Issue>
    <IssueID>1261</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Scene: GrabMechanics doesn't seem to work</Title>
    <CreatedDate>30/10/2017</CreatedDate>
    <ClosedDate>06/11/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1261</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1261</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Machine: Windows 10 Fall Creators update, Unity: 2017.2. I tried this scene (GrabMechanics) in the editor, and compiled to debug, and in neither one can I pick up and control anything. Should this scene still work? And if not, I wonder if anybody has a quick answer why not? There isn't much in the scene to begin with!
</Description>
  </Issue>
  <Issue>
    <IssueID>1260</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Request: Add a version readme to the root folder</Title>
    <CreatedDate>29/10/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>I would like to be able to quickly identify the version of the MRTK used in projects that I downloaded from GitHub (for instance the Holographic Academy). </Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1258</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Mixed Reality Camera Manager settings not stored/retained</Title>
    <CreatedDate>29/10/2017</CreatedDate>
    <ClosedDate>31/10/2017</ClosedDate>
    <IssueLabels />
    <Description>![image](
I tried to set near clip to 0.3 and quality to simple. Save scene, close Unity, Start Unity, settings are reverted again. At least in Unity 2017.1.2.f1, which is the recommended Unity version for a HoloLens app</Description>
  </Issue>
  <Issue>
    <IssueID>1257</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>1257</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>[master] cursor ray, etc</Title>
    <CreatedDate>29/10/2017</CreatedDate>
    <ClosedDate>26/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>1257</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Q1: In MotionControllerTest, when using the CK controller, how do I get it to show a ray, any ray, like in the cliff house? I want my cursor to have a ray pointing out!!

I am trying to figure out the toolkit, for want of better (or any?) docs, and am trying to figure out the function of everything below "Manager" and "DefaultCursor". 

Q2: In Managers/InputManager, why does Managers have a sub-object called "EventSystem" and InputManager, a sub-object of Manager, also have a sub-object "EventSystem"?

Q3: Why does InputManager have a GazeStabilizer script, and it's sub-object ControllerPointerStabilizer also has a GazeStabilizer script? Why not forward from one input set of events to a single GazeStabilizer?

Q4: What does InputManager's MouseInputControl do? What the business with "Simulate Hands in Editor"? Why would you want to simulate a Hand, and is a Hand an input method? Does it mimic a gesture for HoloLens?

Q5: The chain goes DefaultCursor -&gt; AnchorCursor -&gt; CursorVisual... AnchorCursor is basically blank. Why isn't the chain DefaultCursor -&gt; CursorVisual?

Q6: Why does FadePlane's MeshRenderer cast and receive shadows?

Q7: What does InputManager's GazeManager's DebugDrawRay do?  apparently, nothing, as far as I can tell. Debug.DrawRay, can I see that in the editor?

Q8: What is DefaultCursor's AnimatedCursor (script)'s "EnableStateData" and "AnimatedCursorStateData" for? What do these do?!

Q9: StabilizationPlaneModifier script's TrackVelocity and DrawGizmos don't seem to do anything either. What do these do? I don't see them on the Game screen, or in the headset! I don't have that stuff turned off, specficially.

these answers will be greatly appreciated!
</Description>
  </Issue>
  <Issue>
    <IssueID>1253</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tagalong Script not working as intended</Title>
    <CreatedDate>28/10/2017</CreatedDate>
    <ClosedDate>30/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1253</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Device: HoloLens

I have added the Tagalong script to a GameObject. It follows me, but it always stays behind me, when I walk away. How can I make it stay inside my Field of View?</Description>
  </Issue>
  <Issue>
    <IssueID>1252</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Save Spatial Mapping/Understanding Scenes have broken script reference</Title>
    <CreatedDate>28/10/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>1252</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Both the `SaveSpatialMapping` and `SaveSpatialUnderstanding` scenes have missing script references on the Scene root object.

Probably related to #817</Description>
  </Issue>
  <Issue>
    <IssueID>1249</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MixedRealityTeleport does not get disabled on HoloLens</Title>
    <CreatedDate>27/10/2017</CreatedDate>
    <ClosedDate>29/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>1249</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>`MixedRealityTeleport` does not get disabled on HoloLens.  Most noticeable when using Xbox Controller.</Description>
  </Issue>
  <Issue>
    <IssueID>1248</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>LeftController is not valid</Title>
    <CreatedDate>27/10/2017</CreatedDate>
    <ClosedDate>27/10/2017</ClosedDate>
    <IssueLabels />
    <Description>Running toolkit example scene for motion controller in unity latest MRTP, with .NET3.5/4.6 and getting the following error from within the scene. please advice.

transform.localRotation assign attempt for 'LeftController' is not valid. Input rotation is { NaN, 0.000000, 0.000000, 0.000000 }.
UnityEngine.Transform:set_localRotation(Quaternion)
HoloToolkit.Unity.InputModule.MotionControllerVisualizer:Update() (at Assets/HoloToolkit/Input/Scripts/Utilities/MotionControllerVisualizer.cs:128)


</Description>
  </Issue>
  <Issue>
    <IssueID>1245</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity 2017.2.0f3 MRTP3 Released</Title>
    <CreatedDate>27/10/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels />
    <Description>**Release Notes:**
- Fixed performance regression on Microsoft HoloLens
- Fixed several XAML application issues:
    - XAML applications now correctly launch on desktop
    - Applications properly resume when reactivating after blooming to the shell
    - Applications which include the None VR device will fallback to "flat" desktop mode if launched on a machine without an attached HMD

**Known issues:**
- Applications that do not include "None" device will enter a paused state when launched on a machine without an HMD when MRP is not running. This should be addressed by a future OS fix.

**Download URL:**
</Description>
  </Issue>
  <Issue>
    <IssueID>1244</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>1244</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Pointers do not raycast from pointer tip when calc uGUI hits</Title>
    <CreatedDate>27/10/2017</CreatedDate>
    <ClosedDate>09/11/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1244</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Currently pointers do not raycast against uGUI properly.

Raycasts are generated from the main camera, when they should be generated from the tip of the pointer.

Currently does not affect HoloLens users.</Description>
  </Issue>
  <Issue>
    <IssueID>1243</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Not sure where to post: What about re-importing the toolkit?</Title>
    <CreatedDate>27/10/2017</CreatedDate>
    <ClosedDate>21/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1243</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>First, I don't know where is a good place to connect w/ the MR devs from MS and the ones at Unity, to ask general questions about toolkit usage. Is GitHub the place? seems awkward.

Second - suppose I have a project, and I've exported the toolkit as a .package prior, and have imported that package into my project. Now, I pull down some toolkit updates from GitHub. Do I re-export the MRToolkit to the .package? If I do that, what is the accepted procedure to re-import that package into my project? I can think of 2 reasonable choices: 1. Select the entire folder HoloToolkit in my project and right-click deleting it, then reimporting it. 2. Simply re-import it. and if I do that, what if there were files in the old toolkit which are not in the new toolkit? Will I have crusty puffs laying around in my Unity tree?

Third - When I import the MR Toolkit, I would have expected ALL the code to be within the HoloToolkit folder, but when I import it, some of the imported files go to different directories. I think this is because Unity tries to do some matching on something or other and it thinks the toolkit's classes are ones that are already in my project. Probably (not sure) that it's because I inherited this project and the previous devs tool the Toolkit's files and put them directly into the project instead of keeping them in the HoloToolkit directory. Can anybody confirm or deny?

(eric frazer) (yeah, I work at ms)
</Description>
  </Issue>
  <Issue>
    <IssueID>1241</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Replacement for Unlit/NoDepth and how to make 3D text always visible (not blocked by anything)</Title>
    <CreatedDate>26/10/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1241</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi there, 

I was developing using the HoloLensToolKit before. To make target indicator not blocked by anything, the shader is set to Unlit/NoDepth. After I switched to MixedRealityToolKit, I see that the NoDepth shader is considered as obsolete now. Is there a replacement for the Unlet/NoDepth shader now? I cannot find it in the shader options. 

Also, before, a 3D text would always be visible even if there is an object in front of it. Now, this is not the case. With the default shader from MixedRealityToolKit, a 3D text would not be visible if there is an object between the camera and the text. What do I need to do to change this?

Thanks in advance.
</Description>
  </Issue>
  <Issue>
    <IssueID>1239</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity 2017.2.0f3 and Unity 2017.2.0f3-MRTP Build Fail</Title>
    <CreatedDate>26/10/2017</CreatedDate>
    <ClosedDate>26/10/2017</ClosedDate>
    <IssueLabels />
    <Description>I've tried to build the commit 72d33d9c854c05fea32c825878e6dff68f6b0818 on Unity 2017.2.0f3 and Unity 2017.2.0f3-MRTP but both are failing.

On Unity 2017.2.0f3 no errors are provided.
On Unity 2017.2.0f3-MRTP it gives me 2 compiler errors:

`Assets\HoloToolkit\Input\Scripts\Utilities\Extensions\InteractionSourceExtensions.cs(101,39): error CS1929: 'SpatialInteractionController' does not contain a definition for 'TryGetRenderableModelAsync' and the best extension method overload 'InteractionSourceExtensions.TryGetRenderableModelAsync(InteractionSource)' requires a receiver of type 'InteractionSource'
`

`Assets\HoloToolkit-Examples\MotionControllers-GrabMechanics\Scripts\BaseGrabber.cs(189,21): error CS0103: The name 'UnityEditor' does not exist in the current context
`

I'm building using SDK 10.0.15063.0.
Any thoughts on that would be appreciated.</Description>
  </Issue>
  <Issue>
    <IssueID>1238</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>360° video player prefabs</Title>
    <CreatedDate>26/10/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>I noticed this on the main Readme, and was wondering if there'd been any progress on this? 

Is the aim to have something like what's mentioned in the [HoloTour case study]( where only the bits of the video that are currently in the user's view is decoded?

I've experimented a bit with 360° video with the HoloLens, and I've found the HoloLens is only able to handle 720p panoramic video.

Thanks,</Description>
  </Issue>
  <Issue>
    <IssueID>1237</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Exit-and-reenter app makes app horribly slow (also when tracking is lost)</Title>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1237</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>OS Bug</Name>
        <IssueID>1237</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Start app, look around, press start button, reactivate app. App becomes extremely slow. This also seems to happen when tracking is lost (cover the camera for a few secs). Possibly related</Description>
  </Issue>
  <Issue>
    <IssueID>1236</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Often (but not always) 'double vision' of close by objects</Title>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>08/11/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1236</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I have not been able to put a definite repo for this, but using Unity 2017.2.0.f3 MRTP I often get 'double vision' of objects that are close by. It feels like anything closer than about 1.5 meters. Cursor seems displayed twice close to each other, I also see two instances of the same controllers through each other when I use only one. It looks like the stereoscopic view does not work properly. When I download my app from the store, everything is fine.

Sometimes restarting the Mixed Reality portal helps, sometimes not even a reboot helps. I thought it had something to do with tracking, but apparently not
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1235</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Consider refactoring InputManager, MixedRealityCameraParent, Cursor to reduce dependencies</Title>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Code>    
NullReferenceException: Object reference not set to an instance of an object
    HoloToolkit.Unity.InputModule.SetGlobalListener.OnEnable () (at 
    Assets/HoloToolkit/Input/Scripts/Utilities/SetGlobalListener.cs:16)


InputManager without a cursor throws:

Couldn't find cursor for "InputManager.SimpleSinglePointerSelector".   UnityEngine.Debug:LogErrorFormat(Object, String, Object[])
    HoloToolkit.Unity.InputModule.SimpleSinglePointerSelector:FindCursorIfNeeded() (at     Assets/HoloToolkit/Input/Scripts/Focus/SimpleSinglePointerSelector.cs:135)
    HoloToolkit.Unity.InputModule.SimpleSinglePointerSelector:Start() (at     Assets/HoloToolkit/Input/Scripts/Focus/SimpleSinglePointerSelector.cs:51)



DefaultCursor (I assume the other versions as well) without an InputManager throws:

NullReferenceException: Object reference not set to an instance of an object
    HoloToolkit.Unity.InputModule.Cursor.RegisterManagers () (at     Assets/HoloToolkit/Input/Scripts/Cursor/Cursor.cs:183)
    HoloToolkit.Unity.InputModule.Cursor.Start () (at assets/HoloToolkit/Input/Scripts/Cursor/Cursor.cs:136)
 


NullReferenceException: Object reference not set to an instance of an object
    HoloToolkit.Unity.InputModule.Cursor.UpdateCursorTransform () (at     Assets/HoloToolkit/Input/Scripts/Cursor/Cursor.cs:289)
    HoloToolkit.Unity.InputModule.Cursor.Update () (at     Assets/HoloToolkit/Input/Scripts/Cursor/Cursor.cs:143)
`</Code>
    <Description>Currently scenes that have any of InputManager, MixedRealityCameraParent or a Cursor all have hard dependencies on the others. 

If this is an absolute requirement, then the documentation should reflect this. Otherwise, this dependency chain along with Unity's uncertain load and unload order creates extra complexity around scene load and unload as well as enabling and disabling objects, or having scenes that might not require one of the components.


MixedRealityCameraParent without an InputManager throws:
``

I'm not sure of all the interconnections and implications for how to refactor these, but for example, the MixedRealityCameraParent's SetGlobalListener OnEnable method requires an InputManager or it will throw a nullreference exception. Wrapping this in an if statement to check for null would remove the error but at the risk of the MixedRealityCameraParent never being added to the InputManager's GlobalListener if an InputManager is later added to the scene. 

In this case, you could have the InputManager check for the existence of a MixedRealityCameraParent in the scene and then add it if it has not already been added to the GlobalListener array. </Description>
  </Issue>
  <Issue>
    <IssueID>1234</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can a SyncSpawnModel get notified when a new User joins the session, and filter content based on specific components to that User</Title>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1234</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>1234</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>So my ideal scenario is this: 

- There are two User "roles": Instructor and Viewer.  Where the Instructor has all the interactive power and a viewer can simply just view whats going on.  
- On App start, but before connecting to the Sharing Server the User will choose to either Instructor or Viewer.  Which this info will be contained locally in SharingUserInfo.cs
- I have a SceneContainer, that as you guessed contains multiple scenes (As GameObjects, not Unity Scenes)
-  I only want 1 scene container to be spawned.  So currently, only the instructor spawns the scene container.  But if I add another instructor, it spawns another.  Is there a way to check the sharing server to see what has been spawned, so we don't have repeats?
- Is there a way for the Model to get Notified when a User joins the session?  I found SessionUsersTracker.UserJoined, which I think will suit my needs
- Once a User joins, can the existing SyncSpawnModel access the new User's SharingUserInfo component?  And then Filter content based on that?  This is the main thing I am concerned with, I think the SyncSpawnModel would just call SharingUserInfo.Instance.getUserInfo() to get the info (since its local).  And then to filter the content I would need to link somehow the HoloToolkit User to SharingUserInfo so they are the same User.  Which I would then check if that User needs any filtering on On_Property_Changed in the Model?

Im pretty sure this is pretty solid logic, I just don't know how to check for existing spawned models, and accessing User specific components.
</Description>
  </Issue>
  <Issue>
    <IssueID>1233</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>multi-line in keyboard input field</Title>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>when use a multi-line and add a big paragraph in the input field i can't see the right position and text where the next text will be added
![keyboard](
</Description>
  </Issue>
  <Issue>
    <IssueID>1232</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tapping doesn't work in SpatialUnderstandingExample scene</Title>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>26/10/2017</ClosedDate>
    <IssueLabels />
    <Description>Just a practice, I used SpatialUnderstadingExample scene in HoloToolkit-Example.
There's no error during building the project in Unity and VS both, but after executing the application in HoloLens or Emulator, tapping the button and panel button in scene is not working.

However, I don't know why, the tapping gesture to stop the spatial scanning works well.

How I click the panel / button in the scene only with hands (without mouse)?</Description>
  </Issue>
  <Issue>
    <IssueID>1230</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Vuforia and MRTK?</Title>
    <CreatedDate>25/10/2017</CreatedDate>
    <ClosedDate>14/02/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1230</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi I'm having a bit of a dilemma. I'm currently working on a game that will require both MRTK and Vuforia. But the problem is that Vuforia asks for the Unity version to be 2017.2 while MRTK only has releases till 2017.1.2. So I'm a bit stuck. Any suggestions? 

Unless I'm missing something. In which case, I apologise.</Description>
  </Issue>
  <Issue>
    <IssueID>1229</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>XBox Controller "A" not responding with latest MRTK</Title>
    <CreatedDate>24/10/2017</CreatedDate>
    <ClosedDate>02/11/2017</ClosedDate>
    <IssueLabels />
    <Description>Create a new Unity project, import MRTK, configure for immersive head sets, add default scene settings. Enable Xbox Controller Support. Start project in Unity, observe how nothing happens when you press "A". The cursor should at least react in some way</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>1227</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>cre8ivepark</FixedById>
        <IssueID>1227</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>How do I use the UX controls with a RigidBody?</Title>
    <CreatedDate>24/10/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1227</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi!

In order to use the Bounding Box component that's part of the MRDL, the root gameobject needs a rigidbody component attached to it.

However, it seems that the slider component (and the other UX components) don't work when there is a rigidbody on any of their parent gameobjects.

Does anyone know of a way around this?

Thanks in advance!</Description>
  </Issue>
  <Issue>
    <IssueID>1225</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InteractionInputSource TryGetPointerPosition lags behind</Title>
    <CreatedDate>24/10/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>I've tried to implement a LineRenderer from Motion Controller origin to cursor. However, the readings from TryGetPointerPosition lag behind the actual controller's visual representations. I am pretty sure that it has to do with the difference in querying the InteractionManager. While the controllers poll InteractionManager.GetCurrentReading(), the InteractionInputSource uses the callback InteractionManager.InteractionSourceUpdated.
Is this intentional? Do I have to write my own code that uses InteractionManager.GetCurrentReading() too?</Description>
  </Issue>
  <Issue>
    <IssueID>1224</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity doesn't send image to HMD</Title>
    <CreatedDate>24/10/2017</CreatedDate>
    <ClosedDate>20/02/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1224</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I installed the mixed reality toolkit und it worked quite long. The problem now is that apparently Unity does not send any picture of debug mode from my application to the HMD. Even with everyting set up in Unity and with focus on Unity itself. The MR portal is running in the backround. The Headset stays in the cliff house. Also Unity does recognize the headset. It's even recognize any motion from the HMD. Does anybode know what's the problem here?</Description>
  </Issue>
  <Issue>
    <IssueID>1223</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Project Settings window incorrectly targets wrong device for 5.6 &amp; 2017.1</Title>
    <CreatedDate>23/10/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels />
    <Description>Should target `HoloLens` not `WindowsMR` for 5.6 &amp; 2017.1


</Description>
  </Issue>
  <Issue>
    <IssueID>1221</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Events for TapToPlace component</Title>
    <CreatedDate>22/10/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>Hi, it would be useful to have starting/ending placement events for this component to make it easier to integrate with other components. I have implemented two events OnStartedPlacing and OnStoppedPlacing as a PR.</Description>
  </Issue>
  <Issue>
    <IssueID>1220</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>GameControllerManipulatorTest scene missing script</Title>
    <CreatedDate>22/10/2017</CreatedDate>
    <ClosedDate>22/10/2017</ClosedDate>
    <IssueLabels />
    <Description>Open the HoloToolkit-Examples/GameControllerManipulator/GameControllerManipulatorTest scene and the Managers object is missing a mono script

![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>1219</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Request example with ui buttons with motion controller or gaze</Title>
    <CreatedDate>22/10/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>hi, I've reviewed the example scenes but don't see an example for Immersive VR of a UI canvas with buttons that work with hand controllers (when on and tracked) or gaze (with generic select including motion controller trigger or other input). And ensure that the OnClick is actually triggers. I tried making my own example but befuddled by a variety of things not working for me. A clean simple example may help.


</Description>
  </Issue>
  <Issue>
    <IssueID>1218</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Motion Controller throw issue</Title>
    <CreatedDate>20/10/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1218</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>There appears to be an issue with the Throwable logic.  When the main camera's parent is rotated, the velocity from the controller does not take this into account and causes the throw to be offset.  I have provided a very primitive solution below:


``
I would have submitted a pull request, but I assume theirs a more eloquent solution.</Description>
  </Issue>
  <Issue>
    <IssueID>1217</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Any chanches to build solution in new version of unity?</Title>
    <CreatedDate>20/10/2017</CreatedDate>
    <ClosedDate>20/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1217</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Assets\Scripts\HoloToolkit\Input\Scripts\Utilities\Extensions\InteractionSourceExtensions.cs(101,39): error CS1929: 'SpatialInteractionController' does not contain a definition for 'TryGetRenderableModelAsync' and the best extension method overload 'InteractionSourceExtensions.TryGetRenderableModelAsync(InteractionSource)' requires a receiver of type 'InteractionSource'
`</Code>
    <Description>Hi. Unity 2017.2.f03 now released and, as i see, there is a branch for Unity 2017.2 (Dev_Unity_2017.2.0).
I trying tu build something, but i can't. I can't even build your example scenes.

Error:
``

And then:
Error building Player because scripts had compiler errors

This errors occurs only during the build process (Build project in your Build Window). 
Really will be gratefull if you help me with this errors or maybe say, what version of Unity, version \ branch of SDK i need to use, to get stable work) It will save me a lot of time, thanks)
</Description>
  </Issue>
  <Issue>
    <IssueID>1216</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Compiler error when build app</Title>
    <CreatedDate>20/10/2017</CreatedDate>
    <ClosedDate>20/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1216</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Assets\HoloToolkit\Input\Scripts\Utilities\Extensions\InteractionSourceExtensions.cs(103,39): error CS1929: 'SpatialInteractionController' does not contain a definition for 'TryGetRenderableModelAsync' and the best extension method overload 'InteractionSourceExtensions.TryGetRenderableModelAsync(InteractionSource)' requires a receiver of type 'InteractionSource'
`</Code>
    <Description>I've an empty Projekt, just with the Toolkit inside. My Scene is just Setup with prefabs: camera, Cursor, inputmanager and spatialmapping.

But when i try to build the app, I'm getting the following Compiler error:

``</Description>
  </Issue>
  <Issue>
    <IssueID>1214</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>What MRTK + Unity version for stable sharing?</Title>
    <CreatedDate>20/10/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1214</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hey Devs, 
I'm trying to build a sharing experience for the HoloLens but it seems that everything newer than Unity2017.1 seems to be very buggy and crashes the editor when pressing play.
 
However the UNET sharing seems to only work for Unity2017.2 and above.

So what would be the ideal MRTK + Unity version to get a stable sharing to work 
(Preferably with UNET since then you don't need a pc running as server)

Thanks alot</Description>
  </Issue>
  <Issue>
    <IssueID>1213</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Make Singleton accept Callbacks to run when ready</Title>
    <CreatedDate>20/10/2017</CreatedDate>
    <ClosedDate>23/10/2017</ClosedDate>
    <IssueLabels />
    <Description>### Disclaimer
I am a beginner in Unity and HoloLens development. I do not have special knowledge about performance tuning a Unity application (or anything a that's a bit more than basic).

## Current State
Right now, there is no way to efficiently use check, if the Singleton instance is initialized. I have seen applications check for `IsInitialized() == true` in the `Update()` method, but I don't believe this is a good approach for various reasons, like Performance and Code Style (maintainability).

In traditional projects, when you are using the Singleton pattern (_urgh..._), you can either do an eager initialization or a lazy initialization. In HTK's case, the Singleton initializes the Singleton in the `Awake()` method. This means, often the Singleton will be already initialized when you use it, but for example if you require it inside an other `Awake()` method, you can't be sure about that.

## Proposal
Why does the Singleton class not provide a method like `WhenInitialized(Action action)`. This method runs the `action` as soon as the singleton is initialized, or it runs the `action` immediately, if the Singleton is already initialized.

In this way, we provide the users of the Singleton class a way avoid having to poll until the Singleton is available and make their code smarter. Singletons that are never available (`WorldAnchorManager` in Editor?) will never use the callbacks and the code will never get executed.</Description>
  </Issue>
  <Issue>
    <IssueID>1211</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>UAudio Update</Title>
    <CreatedDate>20/10/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>I've spent some time looking at UAudioManager and have some changes I'd like to make but thought I'd start this conversation before diving in with a pull request.

1. Remove UAudioMiniManager.
This looks like a very specific solution to a very specific problem.  It would also prevent (2) from occurring since the MiniAudioEvent directly references scene components (AudioSource).

2. Author audio events as AudioBank assets.
At present all the events for your application would need to live inside the UAudioManager component.  
Changing to a bank style asset based system has the following advantages.
 - You can load / unload banks at run-time
 - Your sound engineer does not need the scene to modify events
 - You can load different banks depending on application settings/events (language, chosen the "Metal" theme etc)
 - It is easier to transport audio events between projects (you can "Export" the audio bank asset)

Now the above are reasonably straight forward changes, but the question really is should we go deeper on these changes to allow for an extensible system.  i.e. it is impossible to add a new container type without modifying the library source.  Should the system support more external customisation?

Finally, is there any real requirement/desire for this system since it seems that the audio system hasn't really changed over time.
</Description>
  </Issue>
  <Issue>
    <IssueID>1210</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hololens with Unity 2017.2.0f3 not working?</Title>
    <CreatedDate>20/10/2017</CreatedDate>
    <ClosedDate>14/02/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>1210</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1210</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hello!

There is a mention in the front page of this repository that:

"Currently we are waiting on a fix for HoloLens development from Unity, for how you should use the following versions of Unity and the "Release" version of the MRTK Asset: ..."

Also, issue #1184 says that one should stick with 2017.1.x. So, I presume one should not use 2017.2.0 with Hololens but wait for fixes? 

If I try to use the Holographic Emulation in Unity, it freezes the whole editor. I am able to deploy and run examples from the example package, but I do get these:

&gt; Run-Time Check Failure #0 - The value of ESP was not properly saved across a function call.  This is usually a result of calling a function declared with one calling convention with a function pointer declared with a different calling convention.

... also, trying to run my own application that uses the VRTK - Unity package, I fall short when the SDK Manager from that package informs me this:

&gt; Ignoring SDK Setup 'HoloLens' because the following VR device names are missing from the PlayerSettings:
&gt; HoloLens

I guess these are issue that hopefully Unity fixes in near future?

bests,
Markus
</Description>
  </Issue>
  <Issue>
    <IssueID>1209</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Exception on BoundaryManager.Awake()</Title>
    <CreatedDate>20/10/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels />
    <Description>Any idea why its throws exception like as follows. Its only happens when you build through VS and works fine in Editor.

``</Description>
  </Issue>
  <Issue>
    <IssueID>1207</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Adding DontDestroyOnLoad to Singletons</Title>
    <CreatedDate>19/10/2017</CreatedDate>
    <ClosedDate>21/10/2017</ClosedDate>
    <IssueLabels />
    <Description>I propose adding `DontDestroyOnLoad` to singleton objects to make them persist through scenes.

Some users get [intermittent null refs]( when transitioning scenes, and `Singleton`s should probably persist.

Also see #1123 for in depth discussion.

Let's discuss the pros/cons of this change.

``</Description>
  </Issue>
  <Issue>
    <IssueID>1205</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Motion Controller not working with Unity UI Buttons</Title>
    <CreatedDate>19/10/2017</CreatedDate>
    <ClosedDate>19/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1205</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Tried to use Motion Controllers together with Unity UI buttons, using latest MixedRealityToolkit from master branch, Unity 2017.2 f3 MRTP, Windows Fall Creator Update and the "InputManagerTest" sample scene from HoloToolkit examples.

When starting the InputManagerTest scene and moving the cursor above the UI canvas button, the cursor is correctly drawn above the button and the button is highlighted.

But after the first click on the button, suddenly the cursor jumps to a different spot and is not drawn above the button anymore when moving over it. 

And even worse: clicks are not triggering the button onClick event anymore.

Tried different things but failed to get the motion controller working properly with ui buttons, so that the ui button can be pointed at with the motion controller cursor and pressed by a motion controller button click.

Is there a working sample that shows how point and submit works with motion controllers and ui buttons?</Description>
  </Issue>
  <Issue>
    <IssueID>1203</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HandDraggable example broken in 2017.2</Title>
    <CreatedDate>19/10/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
    <IssueLabels />
    <Description>The "GetSupportedInputInfo" function incorrectly appears to return false when checking support for Positional information after receiving OnInputDown events in the HandDraggable.cs script, effectively breaking the ability to move objects on HoloLens using finger input.

I've confirmed position does exist, by checking the Position data contains a valid non-zero location: 

&gt; FocusDetails? det = FocusManager.Instance.TryGetFocusDetails(eventData);
&gt; if (det != null) {
&gt; 	Debug.Log(det.Value.Position);
&gt; }</Description>
  </Issue>
  <Issue>
    <IssueID>1202</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Motion Controller receives cursor after second trigger pull</Title>
    <CreatedDate>19/10/2017</CreatedDate>
    <ClosedDate>25/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>OS Bug</Name>
        <IssueID>1202</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Starting the MotionControllerTest scene, it takes two trigger pulls to switch between gaze and motion controller. The first time, one "Left Controller Lost" and one "Left Controller Detected" show up on the debug wall. Only the second trigger switches the cursor over to the controller. (have tested this only with the touchpad too, with which the problem does not occur)</Description>
  </Issue>
  <Issue>
    <IssueID>1201</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Graphics.Blit doesn't work when the "Single pass Instanced" is chosen. </Title>
    <CreatedDate>19/10/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels />
    <Description>Graphics.Blit doesn't work when the "Single pass Instanced" is chosen.
Regardless which kind of shader is being exploited during the call, embedded unity shaders don't work as well as a custom. The custom shaders have been written in accordance with all instructions from the next unity doc:
Unity HoloLens one pass stereo rendering
Thanks )

P.S. the issue #821 was initially opened on Aug 2, 2017 but I checked it yesterday (Oct 18, 2017) with the 2017.2 version of unity, unfortunately the issue still persists...

BTW Mixed reality toolkit, along with all proposed by the hololens academy lessons haven't get image based (screen space) shaders, maybe because of that the issue wasn't listed/treated before...
I'll be very thankful if some one from the Microsoft team would try to reproduce the issue. And maybe then you could advise how to get along with the issue

Thank you again!</Description>
  </Issue>
  <Issue>
    <IssueID>1200</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Some question about the MotionControllerVisualizer</Title>
    <CreatedDate>19/10/2017</CreatedDate>
    <ClosedDate>14/11/2017</ClosedDate>
    <IssueLabels />
    <Description>Hi，SDK开发者：

关于MotionControllerVisualizer我有一些疑问。 我知道MotionControllerVisualizer类是用于加载手柄模型的。

但是出现了一些奇怪的问题，当我在Editor模式下运行MotionControllerTest Scene来测试手柄功能时，我仅开启了一个手柄（右手），但是我发现MotionControlles下却出现了两个RightController。

![image](

我跟踪了代码，我发现右手的手柄的source.id出现了两个（200004 200008），我不知道为什么会这样，我明明只开启了一个右侧手柄。


此外，手柄的位置追踪也有问题，如下：


![image](


我不知道为什么会出现这些情况，是由于我在Editor模式下运行程序造成的么？

Unity 2017.2.0f3 MRTP

希望得到帮助！
</Description>
  </Issue>
  <Issue>
    <IssueID>1199</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>1199</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>XboxControllerInputSource throwing IndexOutOfRangeException/ NullReferenceException</Title>
    <CreatedDate>19/10/2017</CreatedDate>
    <ClosedDate>29/06/2018</ClosedDate>
    <IssueLabels />
    <Description>The XboxControllerInputSource throws IndexOutOfRangeException because the default for the mapping array seems to be 0 items. Interestingly enough, the array is initialized to 20 entrys in the XBoxControllerExample scene, so it works. But it fails with a NullReferenceException after calling reset on the script in the inspector. When checking the "Use Custom mapping" button to show the entries, they're all there, based on the number of elements of the serialized mapping array. The serialized info seems to be not propagated to the actual array.</Description>
  </Issue>
  <Issue>
    <IssueID>1194</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Should add existing controllers to controllerDictionary in Awake instead of OnInteractionSouorceUpdated</Title>
    <CreatedDate>18/10/2017</CreatedDate>
    <ClosedDate>18/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1194</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>After talking with @keveleigh , by "noticing" controllers in OnInteractionSourceUpdated, we try to add the same controller multiple times to the dictionary which causes a collections exception.



Instead, we should get all the controllers currently tracked from the InteractionManager and add them to the dictionary in Awake() and then rely on InteractionSourceDetected to notice any new controllers.</Description>
  </Issue>
  <Issue>
    <IssueID>1192</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Remote Mapping</Title>
    <CreatedDate>18/10/2017</CreatedDate>
    <ClosedDate>21/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>1192</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1192</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hello guys, I am kind of new here. I am trying to upload the spatial mapping meshes to a server. Not all at once (as in Remote Mapping) but progressively, only sending the new, updated or the removed mesh data. I think I will have to rewrite the SpatialMappingObserver for this. Maybe you have a better idea how to approach the problem.
Anyway, looking into the code I looked at the SendMeshes() method in RemoteMappingManager.cs:
Is there a reason why the List meshesToSend is inside the foor loop sending only the first element per iteration or am I missing something? I just put the lines 104, 119 &amp; 120 out of the loop, so that all the data is sent over one single tcp connection (only one serialize and one senddata call).</Description>
  </Issue>
  <Issue>
    <IssueID>1190</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Speech recognition is not supported on this machine error</Title>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>1190</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>1190</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Speech</Name>
        <IssueID>1190</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
UnityException: Speech recognition is not supported on this machine.
UnityEngine.Windows.Speech.PhraseRecognizer.CreateFromKeywords (System.String[] keywords, UnityEngine.Windows.Speech.ConfidenceLevel minimumConfidence) (at C:/buildslave/unity/build/artifacts/generated/Metro/runtime/SpeechBindings.gen.cs:47)
UnityEngine.Windows.Speech.KeywordRecognizer..ctor (System.String[] keywords, UnityEngine.Windows.Speech.ConfidenceLevel minimumConfidence) (at C:/buildslave/unity/build/Runtime/Export/Windows/Speech.cs:221)
HoloToolkit.Unity.InputModule.SpeechInputSource.Start () (at Assets/HoloToolkit/Input/Scripts/InputSources/SpeechInputSource.cs:70)
`</Code>
    <Description>I've started getting a speech recognition error as of the most recent updates.
``

Though not sure if this is MRTK problem and not a Unity or Windows issue as there have been updates to all three. </Description>
  </Issue>
  <Issue>
    <IssueID>1189</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Getting intermittent null ref on SetGlobalListener</Title>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>24/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1189</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
NullReferenceException: Object reference not set to an instance of an object
HoloToolkit.Unity.InputModule.SetGlobalListener.OnEnable () (at Assets/HoloToolkit/Input/Scripts/Utilities/SetGlobalListener.cs:16)
`</Code>
    <Description>Using the new MixedRealityCameraParent prefab, InputManager, etc. with updated code (both on master and 2017.2.0 versions) I'm getting an intermittent null ref exception on 

    InputManager.Instance.AddGlobalListener(gameObject)

``

Specifically, the instance variable is null.

In the current version of the script, OnDisable and OnDestroy wrap the RemoveGlobalListener call in an if statement

    private void OnDisable()
        {
            if (InputManager.Instance != null)
            {
                InputManager.Instance.RemoveGlobalListener(gameObject);
            }
        }

But OnEnable does not:

    private void OnEnable()
        {
            InputManager.Instance.AddGlobalListener(gameObject);
        }

Presumably, this should be 

    private void OnEnable()
        {
           if (InputManager.Instance != null)
            {
                InputManager.Instance.AddGlobalListener(gameObject);
            }
        }</Description>
  </Issue>
  <Issue>
    <IssueID>1188</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Toggle/Button behavior unreliable in ScrollViewer</Title>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>When Toggles or Buttons are placed in a ScrollView, the Toggle/Button air tap is unreliable.

My thought is that the ScrollView drag is interfering with the tap. The ScrollView hold and drag works very well.

To reproduce, create a ScrollView and add a number of Toggles. Add ScrollView and Toggles to gaze layer mask. Using gaze, place the cursor over a Toggle and air tap. Sometimes the Toggle will work, most of the time, it wont.

This only happens on HoloLens - it does not happen in editor.
</Description>
  </Issue>
  <Issue>
    <IssueID>1186</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Error at InteractionSourceExtensions when building</Title>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
    <IssueLabels />
    <Description>Unity 2017.2.0f3
MRTK v1.2017.2.0
Target Release 10.0.15063.0
Scripting Backend .NET ( IL2CPP build - which was selected as the Default - was incompatible with my Visual Studio 2017 Fall Creator Update Version)

EDIT: I'm building for HoloLens, with the regular MRTK, not the MRTP like in #1172

When trying to build the Visual Studio Unity Project (via Build Window - didn't test normal build before making changes to my copy) with only the TapToPlace Example Scene, I got an error in InteractionSourceExtensions.cs at

101                         returnValue = sourceState.Source.Controller.TryGetRenderableModelAsync();

that SpatialInteractionController did not have a method TryGetRenderableModelAsync() and that the closest overload required a receiver of type InteractionSource

I "fixed" the problem for myself by getting rid of the Extension class and removing all references to the StartHaptics() and StopHaptics() Methods, but you might want to look into this.

Sorry if this is a non-issue and stems from my own inability.

Cheers</Description>
  </Issue>
  <Issue>
    <IssueID>1185</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>RigidBody prevents the taptoplace script from working.</Title>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
    <IssueLabels />
    <Description>I'm using the latest master branch and Unity 2017.1.2f1

Not sure if this is intended behaviour, but I'm pretty sure this was possible before the input updates from a few weeks ago.

To repro:
-Open the TapToPlace scene
-attach a rigidbody component to the base cube
-play scene, and observe how trying to tap the cube does nothing

EDIT: I just tried this again with use kinematic on and use gravity off and it was fine

Actually I think it was just because some of the spatialmapping mesh was in front of the cube...</Description>
  </Issue>
  <Issue>
    <IssueID>1184</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Important announcement for building for HoloLens or HMDs</Title>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>10/11/2017</ClosedDate>
    <IssueLabels />
    <Description>If you're building for the HoloLens use the Vanilla **[Unity 2017.1.x]( Release  and the **10.0.15063.0 SDK**

If you're building for the WMR HMDs use the **[Unity 2017.2.0f3 MRTP]( and the latest **10.0.16299.0 SDK**</Description>
  </Issue>
  <Issue>
    <IssueID>1183</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MRDesignLabs Bounding Box Problems</Title>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
    <IssueLabels />
    <Description>I need help please and I ask you to be patient with me.
This is very concerning to me because I do not know what is going wrong and this is something I need to implement into my projects ASAP.
I have been trying for almost a month to try to get the bounding box to function and I am not successful.
I have followed everything that I can reference online to get this bounding box to function and nothing seems to be helping. I have set it up before but only with a simple 3D box element,
The way I have set things up is by putting the Appbar and Bounding box into the main hierarchy. Then I have added the Box Collider, Bounding Box Target and Compound Button to the parent layer of an imported FBX asset. This FBX prefab within my hierarchy has multiple layers of child objects.
The Hololens prefab is also within my hierarchy.
Please let me know what else I should be adding or give me some ideas as to what I could look for. Maybe I should ask if the Bounding Box is meant for prefab with multiple layers. 
Thank you!
@Railboy #has helped me before regarding this issue.</Description>
  </Issue>
  <Issue>
    <IssueID>1181</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>1181</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Teleporting up and down changes base height</Title>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>01/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1181</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Changing heights by teleporting onto colliders with different heights eventually changes the overall base height. This results in floating in air or stuck in the ground. It's not very predictable when this happens (last time it worked properly 3 times teleporting, but failed the forth time trying to get from a sofa onto the floor and staying at sofa level)</Description>
  </Issue>
  <Issue>
    <IssueID>1180</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Adding LayerMask to control where teleport can be done.</Title>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1180</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Some form of implementation to control where the user is able to teleport.
 
In **MixedRealityTeleport.cs"**, add the following lines

`public LayerMask ignoreTeleportInLayers = 0;`

In the same file in 'PositionMarker' function, update the comparison to:

` if (focusDetails.Object != null &amp;&amp; ! focusDetails.Object.IsInLayerMask(ignoreTeleportInLayers) &amp;&amp; (Vector3.Dot(focusDetails.Normal, Vector3.up) &gt; 0.90f))
`

Is there any other optimized way this can be done?
</Description>
  </Issue>
  <Issue>
    <IssueID>1179</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Orientations of motion controllers do not match MR headset Heading</Title>
    <CreatedDate>17/10/2017</CreatedDate>
    <ClosedDate>27/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1179</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>When running any scene while the MR headset is oriented in the direction it was setup, the motion controllers look like they're setup correctly.
When rotated any degree from the setup position, starting the app results in the motion controllers being off. Rotated 180 degree and it's as if someone infront of you were holding the controllers, mimiking your movements. The controllers common reference position and rotation seems to be bound to the setup ones.</Description>
  </Issue>
  <Issue>
    <IssueID>1176</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hand source kind wasn't properly handling position</Title>
    <CreatedDate>16/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
    <IssueLabels />
    <Description>`HandDraggable` Script needs to be updated to support new Input Update.

The issue is that the hands aren't being recognized as supporting position.</Description>
  </Issue>
  <Issue>
    <IssueID>1174</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MotionControllerVisualizer doesn't support default models</Title>
    <CreatedDate>16/10/2017</CreatedDate>
    <ClosedDate>21/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1174</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>MotionControllerVisualizer allows you to specify an override model for the left and right controller, but it doesn't allow you to specify a default model if the controller model can't be loaded, for example in a non-networked scenario.

One possible solution would be to add a Boolean to specify if the alternate controllers are overrides or defaults. If defaults, it would try to use the OS's model first and if that fails it would fall back to the default.</Description>
  </Issue>
  <Issue>
    <IssueID>1173</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Input on Unity UI not working with 2017.2 and MRTK 2017.2 DEV branch</Title>
    <CreatedDate>16/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
    <IssueLabels />
    <Description>Hi,

I just updated my Unity to 2017.2 and checked out the latest DEV branch commit for 2017.2. Exported the unity package and imported it into my project that was running fine previously. 

Now with Unity 2017.2 and the latest MRTK any input on Unity UI elements is not working anymore. Also gazing at a button e.g. will not trigger on pointer enter or exit. This worked fine previously.

It seems like Unity UI does not get any input events anymore.

Has anyone experienced the same?</Description>
  </Issue>
  <Issue>
    <IssueID>1172</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title> 'SpatialInteractionController' does not contain a definition for 'TryGetRenderableModelAsync'</Title>
    <CreatedDate>16/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>1172</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi, trying to build example scene (MotionControllerTest). It runs in editor. Get this error when try to build:

Assets\HoloToolkit\Input\Scripts\Utilities\Extensions\InteractionSourceExtensions.cs(97,39): error CS1929: 'SpatialInteractionController' does not contain a definition for 'TryGetRenderableModelAsync' and the best extension method overload 'InteractionSourceExtensions.TryGetRenderableModelAsync(InteractionSource)' requires a receiver of type 'InteractionSource'

Using Unity 2017.2.0f3-MRTP
Windows 10 Pro build 16299.19
MRTK Dev_Unity_2017.2.0 branch

</Description>
  </Issue>
  <Issue>
    <IssueID>1171</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SharingSpawnTest scene throws null reference exception on device</Title>
    <CreatedDate>16/10/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
    <IssueLabels />
    <Description>I'm using latest version of the master branch, unity 2017.1.2f1.

I've made sure the Internet client server and private network server are checked.

![image](

I get this error in the roomandanchortest scene as well.

Thanks,</Description>
  </Issue>
  <Issue>
    <IssueID>1170</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Notified when a specific SyncPrimitive changes</Title>
    <CreatedDate>16/10/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>1170</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>1170</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I am trying to understand how to setup sharing, while setting up an exploratory test I was wondering something.  From what I can tell, if a SyncPrimitive child changes in a SyncObejct, the ObjectChanged flag will be fired.  But does that ObjectChanged flag tell you which particular SyncPrimitive Child changed? Or does it just say, "hey, there was a change in the children"?  Which is the way I think it works.  Is that correct?

So based on above, if I want to be notified of which particular SyncPrimitive Changed, I wrap SyncBool in a SyncObject wrapper.  Like this: 
``

Is that generally the right idea overall?</Description>
  </Issue>
  <Issue>
    <IssueID>1169</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Bug: Keyboard not deleting final character</Title>
    <CreatedDate>16/10/2017</CreatedDate>
    <ClosedDate>16/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>UX Controls</Name>
        <IssueID>1169</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Using the Keyboard prefab to type into an inputfield-
When using backspace to remove characters, the final character is not deleting from the input field.
If you highlight the character and type any other character, it still does not delete or replace.</Description>
  </Issue>
  <Issue>
    <IssueID>941</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cannot build Release target appx in VS</Title>
    <CreatedDate>07/09/2017</CreatedDate>
    <ClosedDate>07/09/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>941</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>In the current 2017.2 branch building to the appx fails.

![image](

Unity 2017.2.0b10
Visual Studio 2017 5.3

Build Platform target: 
Release x64</Description>
  </Issue>
  <Issue>
    <IssueID>940</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Input Manager &amp; BaseEventData uses parameter that hides inherited property</Title>
    <CreatedDate>07/09/2017</CreatedDate>
    <ClosedDate>03/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>940</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>the `tag` property when initializing event data hides inherited `UnityEngine` property `tag`.</Description>
  </Issue>
  <Issue>
    <IssueID>939</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Sharing Service schema Backwards Compatibility.</Title>
    <CreatedDate>07/09/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>939</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>HI, I have a problem with sharing service. I developed few hololens apps using HTK V 1.5.6. For all those apps I used sharing service executable file provided in HTK 1.5.6 with schema 15 hosted on a public IP.

Recently I developed 2 hololens apps with VOIP features using HTK V 1.5.8. In order to make this app work, I updated my sharing server with the new version available in 1.5.8 with schema 17. After that all my old apps using sharing service stop working.
With out migrating my previous apps, how can I make the sharing server to understand schema 17 and previous schema 15.

Thank you in advance</Description>
  </Issue>
  <Issue>
    <IssueID>937</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Creating World Anchor application</Title>
    <CreatedDate>06/09/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>937</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi guys,

First, congrats for amazing project, the Mixed Reality Toolkit for Unity o/

I'm building a project with World Anchor but I can't find a tutorial with makes what I want.

I want build an application exactly like this: 

I'm using the latest version of Unity and Visual Studio.

Someone can help me?
How I can build it?</Description>
  </Issue>
  <Issue>
    <IssueID>934</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unable to build with C# Project enabled.</Title>
    <CreatedDate>05/09/2017</CreatedDate>
    <ClosedDate>02/10/2017</ClosedDate>
    <IssueLabels />
    <Description>Hello!

I am able to generate the Visual Studio solution file, but am then unable to build the UWP app and deploy to the emulator.

I'm using the latest version of HTK, and I'm only including a blank scene with a sphere in it in the build.

 I get the following error:

![image](

Loving the ToolKit otherwise, hope someone can help!

Thanks,</Description>
  </Issue>
  <Issue>
    <IssueID>933</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>motion controllers are off...</Title>
    <CreatedDate>05/09/2017</CreatedDate>
    <ClosedDate>08/09/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>933</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>with current gltf implementation... the controllers seem to be tilted by a few degrees (like 5) when placed in a flat surface..  
Also, they don't pivot correctly. Put the two controllers next to each other, touching and rotate them and see that at some angles, they can't touch, they are like 5-10 cm apart, at other angles they overlap... 

</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>933</IssueID>
        <PullRequestID>942</PullRequestID>
        <Title>Fix glTF loader rotation calculation.</Title>
        <Description>Removed a workaround for Grip/Position rotation returning incorrect values. Removing a manual calculation (which wasn't working properly with the provided glTF models) in favor of Unity's built in rotation matrix.</Description>
        <CreatedDate>07/09/2017</CreatedDate>
        <ClosedDate>07/09/2017</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Immersive HMD</Name>
            <IssueID>933</IssueID>
            <PullRequestID>942</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>keveleigh</FixedById>
            <PullRequestID>942</PullRequestID>
            <IssueID>933</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>928</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>928</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Unity Editor 2017.1.1f1 released</Title>
    <CreatedDate>04/09/2017</CreatedDate>
    <ClosedDate>08/09/2017</ClosedDate>
    <IssueLabels />
    <Description>[Unity Editor 2017.1.1f1 released]( with the following MRTK related changes:

&gt; - Universal Windows Platform: Fixed building generated UWP projects with Visual Studio 2017.3 when using .NET scripting backend.
&gt; - UWP: Fixed the issue where locking the mouse in UWP player would cause wrong values returned from Input.GetAxis() on the next Update. - (911008)
&gt; - Windows: Crash dumps are written to users' Persistent Data Path, resolving an issue where installing Unity games to Program Files caused crash dumps to fail. - (928646)
&gt; - XR: Added missing Editor icons for world anchor, spatial mapping, touch input, and audio spatialization components. - (857023)
&gt; - XR: Added VRUsage parameter to GetTemporary(). This fixes an issue with blitting to a temporary renderTexture. - (918634)
&gt; - XR: Fixed an issue where stereo Convergence setting had no actual impact. - (923806)
&gt; - IL2CPP: Prevent a compilation error in the generated code for some Windows Store apps.
&gt;    - Prevent a failure during code conversion when a constrained method call is made on a volatile type.
&gt;    - Prevent a possible crash in List.AddRange. - (921467, 936096, 929802, 930163)</Description>
  </Issue>
  <Issue>
    <IssueID>925</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Speech input source: Add a confidence level selector</Title>
    <CreatedDate>04/09/2017</CreatedDate>
    <ClosedDate>05/09/2017</ClosedDate>
    <IssueLabels />
    <Description>As it is in SpeechInputSource, new keyword recognizers are created with the default confidence level. This is problematic epsecially if the application targets non native speakers of the spoken language, because confidence cannot be set to ConfidenceLevel.Low.  This can be solved by adding confidence level enumeration selector for a property in the inspector and using the alternative constructor for the new KeywordRecognizer in the Start() function as in:

`keywordRecognizer = new KeywordRecognizer(keywords, ConfidenceLevelSelection);`

</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>923</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to avoid double handling in the inputManager</Title>
    <CreatedDate>01/09/2017</CreatedDate>
    <ClosedDate>18/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>923</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I am developing a HoloLens project that has the following feature: User can use the voice command to instruct a game Object to do several things. For example, if the user says "Give me a candy", the game object will generate a candy and the total number of candies will increment by one. 

I want to set the gameObject to be a global listener in the inputManager so that it can listen to the user's command without requiring user to look at it. But in the real implementation, it comes a problem. When user is indeed looking at it and saying "Give me a candy", the game object will actually generate two candies: one is handled as global listener, one is handled as the focused gameobject. 

I want to prevent this scenario happening, which means when game object should be able to filter out either the global listener command or the focused gameobject command. One way I can think of right now is to unregister the game object away from the global listener queue when it becomes the focused game object and register it back when it becomes not focused game object.  But I am suspicious about the performance. Actively register/unregister a gameobject (sounds) a lot of overhead. But I am not familiar with the architecture behind it, so can anyone help me better evaluate this solution?

Or is there any other ways that are more efficient to handle this double handling problem? 

Thanks in advance

DK </Description>
  </Issue>
  <Issue>
    <IssueID>922</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Using SpatialUnderstanding Saved Mesh in Unity Editor</Title>
    <CreatedDate>01/09/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>922</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>922</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Using the SaveSpatialUnderstanding scene from the SavingSpatialMeshes example, I have saved a nice mesh of my environment. After converting the room to a .obj, In the SpatialUnderstandingExample scene, I have set the Room Model to use this mesh.
When I run the example in the editor, it loads the mesh (white color to represent SpatialMapping) but it doesn't properly scan and process the space.  I only see the green mesh sporadically spaced out. I don't think this is expected behaviour.

Better yet, is it possible to use this saved Mesh and have the scanned state = Done? This would really speed up development because we can test in the editor, as opposed to continuously deploying to a HoloLens or the emulator.</Description>
  </Issue>
  <Issue>
    <IssueID>920</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hiding the Keyboard when using a bluetooth keyboard</Title>
    <CreatedDate>01/09/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>I have a bluetooth keyboard paired with my hololens and when I tap on a input field that opens the HoloToolkit keyboard, the keyboard does not disappear when typing with the bluetooth keyboard. I'd expect it to hide itself when using an external keyboard, like it does when you type in the address bar in Microsoft Edge in the HoloLens.

Having both the HoloToolkit Keyboard visible and a bluetooth keyboard, causes problems if you tap on any of the keys on the HoloToolkit keyboard. It will start ignoring input from the bluetooth keyboard until you tap in the HoloToolkit keyboard's textbox or reopen the keyboard again.</Description>
  </Issue>
  <Issue>
    <IssueID>919</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>BuildWindow sometimes opens out of screen with 2 monitors running on different DPI</Title>
    <CreatedDate>01/09/2017</CreatedDate>
    <ClosedDate>02/09/2017</ClosedDate>
    <IssueLabels />
    <Description>After strugling a bit with my BuildWindow not appearing whenever I clicked it from the HoloToolkit menu I found out that it had gone out of my screen.

To get it back I had to change the DPI of my main monitor to 100% after which it would appear somewhere on my right screen again.

To reproduce the issue:

1. Open Unity + BuildWindow on screen running on 100% dpi
2. Drag Unity to screen running 200% dpi
3. Start dragging buildwindow from screen with 100% dpi to screen with 200% dpi. It now disappears into infinity. (When you now release your mouse it's gone).

I'm not sure if this an issue that can be solved in the MRT, but if we can do something like whenever you open the window that it will appear in a visible position, that would be great.</Description>
  </Issue>
  <Issue>
    <IssueID>908</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Holographic Emulator throws error about render texture missing mipmaps</Title>
    <CreatedDate>30/08/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
    <IssueLabels />
    <Description>``

Used versions: Unity 2017.1.0p5 / HoloToolkit-Unity-v1.2017.1.0

Thanks!</Description>
  </Issue>
  <Issue>
    <IssueID>907</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Build Deploy Tools fails to install app package</Title>
    <CreatedDate>30/08/2017</CreatedDate>
    <ClosedDate>01/09/2017</ClosedDate>
    <IssueLabels />
    <Description>Some machines do not install app package correctly to the HoloLens, but a success message is still printed in the console log of the editor.</Description>
  </Issue>
  <Issue>
    <IssueID>906</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>BuildDeployTools Launch Application returns 500 error code.</Title>
    <CreatedDate>30/08/2017</CreatedDate>
    <ClosedDate>02/09/2017</ClosedDate>
    <IssueLabels />
    <Description>Build Window -&gt; Launch Application returns 500 error code when attempting to launch application.

``</Description>
  </Issue>
  <Issue>
    <IssueID>901</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cursor invisible</Title>
    <CreatedDate>29/08/2017</CreatedDate>
    <ClosedDate>14/02/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>901</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hello when i add prefab Basic Cursor to my project its invisible for somre reason.

in editor and in demos it is visible

don't see any errors in console, what can be the problem?</Description>
  </Issue>
  <Issue>
    <IssueID>900</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>errors: caused by “Unity C# Projects" option checked and Blank Screen app startup</Title>
    <CreatedDate>29/08/2017</CreatedDate>
    <ClosedDate>02/09/2017</ClosedDate>
    <IssueLabels />
    <Description>Hello, friends!
Currently, i'm using **Win 10(Professional)+Unity 5.6+VS2017(15.3)** to develop HoloLens apps.

Following the tutorial: _**Chapter 1 - "Holo" world**_([ i checked the “**Unity C# Projects**" and "**Copy References**" options as following pic, it **succeeds** in building the project. (All settings are the same as Alex Turner told).
![image](

After that, i opened the solution with VS2017, setting the configuration as Release, x86 and Hololens Emulator 10.0. While pressing the Play button, errors pushed out as following pic:
![image](

I've searched for many solutions to this problem, such as @NeerajW gave ([ But it still doesn't work.

As a tradeoff, i unchecked “**Unity C# Projects**" and "**Copy References**" options when building Unity project into VS solution. Luckily, the errors about "Assembly-CSharp-xxx.dll" are no longer occur. And the only error is also fixed with the usage given by @Handosa
([

Finally, the VS solution can be compiled and deployed into Emulator successfully. However, when i started the app, only **a blank screen** is rendered in the Emulator. I can rotate the environment, select items with Space or Enter key.
![image](

I'm aware of the information in the **Output window** in VS as following:
&gt; 
&gt; d3d11: failed to create 2D texture id=48 width=64 height=64 mips=7 dxgifmt=65 [D3D error was 887a0005] 
&gt; (Filename: C:\buildslave\unity\build\Runtime/GfxDevice/d3d11/TexturesD3D11.cpp Line: 498)
&gt; d3d11: failed to create 2D texture shader resource view id=48 [D3D error was 80070057]
&gt; (Filename: C:\buildslave\unity\build\Runtime/GfxDevice/d3d11/TexturesD3D11.cpp Line: 517)
&gt; 
![image](

The all information printed in Output window:
[output.txt](

Can anybody give me a solution to my question? Thanks! 🍡 
Best wishes!

Edison</Description>
  </Issue>
  <Issue>
    <IssueID>899</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tagalong EnforceDistance set to false by default</Title>
    <CreatedDate>29/08/2017</CreatedDate>
    <ClosedDate>08/02/2018</ClosedDate>
    <IssueLabels />
    <Description>Hi,

I would like to know (or understand) why EnforceDistance is set to false by hardcoding it and what is (might be) or was that mentioned "detrimental effect". I understand that _Maintain Fixed Size_ is kind of simulating what is probably expected behavior but in my specific setup it brings more pain than good stuff.

Just quickly about my case.
TL;DR; - **I need Z axis of GameObject to be updated when user moves instead of scaling it.**

In the project there is one Main scene with MainCamera and two other scenes (eg.: A and B) are loaded by additive mode. Scene A contains some welcome info and headset adjustment screen. Scene B contains object with Tagalong component. User can jump between these two scenes anytime. 
_Maintain Fixed Size_  is working correctly on first iteration but every time when user is in scene A and moves around before switching to scene B, Size Ratio of _Fixed Angular Size_ component is calculated wrongly (due to camera being somewhere else than before I guess) and therefore the object is resized incorrectly. It looks closer or more far than what is expected.

To sum it up. In my specific setup I want EnforceDistance to be true. Of course I changed it for me but it would be useful to know why it was set like that and if its really expected then it should have a tooltip with description what is happening.


_Utilities\Scripts\Tagalong.cs_
``</Description>
  </Issue>
  <Issue>
    <IssueID>898</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to launch Unity UWP app as 2D instead of Mixed Reality Portal</Title>
    <CreatedDate>28/08/2017</CreatedDate>
    <ClosedDate>28/08/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>898</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>898</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Anyone know how to prevent a Unity App build as a UWP from launching in the Mixed Reality Portal if running on a local machine?</Description>
  </Issue>
  <Issue>
    <IssueID>897</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HandGuidance.cs: error CS0619</Title>
    <CreatedDate>28/08/2017</CreatedDate>
    <ClosedDate>29/08/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>897</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hey, guys!
I just download the master branch and use the package in my unity project. Before i build my project into VS solution, 8 errors are pushed out as the following picture:
![image](
it recommends to use the functions with a prefix of '**_Interaction_**' in **_UnityEngine.XR.WSA.Input.InteractionManager.xxxx()_**
Can anybody help me out on this problem? Thanks!
Edison</Description>
  </Issue>
  <Issue>
    <IssueID>896</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hololens Re-scanning the environment with spatial understanding</Title>
    <CreatedDate>28/08/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>896</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>896</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'm using spatial understanding to scan the environment and generate the spatial meshes. (According to the example in the HoloToolkit spatial understanding example)

After generating the meshes initially, i want to have an option to re-scan the environment again(removing the old meshes and regenerating new meshes or updating the old meshes). Is there any possible ways where i can achieve this. Any help would be much appreciated.</Description>
  </Issue>
  <Issue>
    <IssueID>895</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>We should reconsider the Set Scene Settings option(s) that are in the Toolkit Menu</Title>
    <CreatedDate>27/08/2017</CreatedDate>
    <ClosedDate>03/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>895</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>895</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Those settings right now are very HoloLens centric.  Almost all the settings that are being done in that are not what is needed for Immersive Headsets.  I would like to see a discussion on how this can be better implemented for all cases, Immersive Apps, Holographic Apps, and Hybrid/Asymmetric Apps.</Description>
  </Issue>
  <Issue>
    <IssueID>893</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Build module can't find msbuild for VS 2017</Title>
    <CreatedDate>27/08/2017</CreatedDate>
    <ClosedDate>02/09/2017</ClosedDate>
    <IssueLabels />
    <Description>The underlying process call to cmd.exe is returning the error "'vswhere' is not recognized as an internal or external command". Verified that vswhere.exe is in the installation directory. Call works fine when I open up a command window and paste it in. Just not working from System.Diagnostics.Process .</Description>
  </Issue>
  <Issue>
    <IssueID>892</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Error not clearing after adding Holotoolkit</Title>
    <CreatedDate>25/08/2017</CreatedDate>
    <ClosedDate>25/08/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>892</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'm getting an error I cant clear after adding the Holotoolkit to the Assets folder in Unity (5.6.1f1). I can't seem to clear it and therefore the menu isn't loading in Unity.

Can anyone help please?

Thanks

![2017-08-25 14_58_27-unity 5 6 1f1 personal 64bit - untitled - tutorial - pc mac linux standalon](
![2017-08-25 14_58_40-unity 5 6 1f1 personal 64bit - untitled - tutorial - pc mac linux standalon](
![2017-08-25 14_59_03-tutorial - microsoft visual studio](
</Description>
  </Issue>
  <Issue>
    <IssueID>891</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Plane Generation</Title>
    <CreatedDate>24/08/2017</CreatedDate>
    <ClosedDate>21/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>891</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>891</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>(I am sorry if this should not be posted here. I tried to find a button to add "Question" L abel, but was unable to find it when I create this issue)

I am trying to get a surfacePlane for a wall in a room. I built my program based on the SpatialMapping/SpatialUnderstanding example from the HoloLenToolKit example. 

From my understanding, the scanning part is trying to figure our where you are in the already stored mesh in Hololens. Then, the planes are generated based on that mesh. Currently, when I face a wall and try to find a plane for that wall. It does not always give me the same plane. For the wall in front of me, there can be multiple plane generated and the result would depend on which plane is processed first. Then, I try to find the largest plane in front of me instead. However, there are planes that are similar size and the resulted plane is still inconsistent.

Is there a way to make sure you always find the same plane? I am currently using remote holographic to run my program due to some constraint, I am unsure whether that is the cause of the problem.

Thanks in advance.</Description>
  </Issue>
  <Issue>
    <IssueID>890</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Detect headset removed</Title>
    <CreatedDate>24/08/2017</CreatedDate>
    <ClosedDate>29/08/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>890</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Can we detect if the headset has been removed?</Description>
  </Issue>
  <Issue>
    <IssueID>889</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>In sharing, How to know if two hololens are in the same space before import the anchor </Title>
    <CreatedDate>24/08/2017</CreatedDate>
    <ClosedDate>14/02/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>889</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>889</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>889</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>in sharing my app between two Hololens i need to know if they are at the same space, so both Hololens can see the holograms at the same position in real word and if it not the same space then we will not share the world anchor? </Description>
  </Issue>
  <Issue>
    <IssueID>885</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Fail to compile under VS2017</Title>
    <CreatedDate>23/08/2017</CreatedDate>
    <ClosedDate>24/08/2017</ClosedDate>
    <IssueLabels />
    <Description>Hello,

Upgraded a couple of days ago Unity to 2017.1, HoloToolkit to MixedRealityToolkit release 1 and Visual Studio to 2017 and cannot compile under VS with the guideline workflow : 

2&gt;CSC : error CS0006: Metadata file '***\Unity\WindowsStoreApp\GeneratedProjects\UWP\Assembly-CSharp-firstpass\bin\x86\Debug\Assembly-CSharp-firstpass.dll' could not be found
3&gt;------ Build started: Project: AdB, Configuration: Debug x86 ------
3&gt;CSC : error CS0006: Metadata file '***\Unity\WindowsStoreApp\GeneratedProjects\UWP\Assembly-CSharp-firstpass\bin\x86\Debug\Assembly-CSharp-firstpass.dll' could not be found
3&gt;CSC : error CS0006: Metadata file '***\Unity\WindowsStoreApp\GeneratedProjects\UWP\Assembly-CSharp\bin\x86\Debug\Assembly-CSharp.dll' could not be found</Description>
  </Issue>
  <Issue>
    <IssueID>884</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Sharing service doesn't support loopback when server doesn't exist</Title>
    <CreatedDate>23/08/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>884</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The SpanManager doesn't work if there is no server. 

I expect we could have a single user mode, where we could still work with only one device when server is not available, without writing another set of spawners. So the SpawnManager needs a single user mode, which is convenient to not needing a computer.</Description>
  </Issue>
  <Issue>
    <IssueID>882</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>2017.2 Upgrade Guide</Title>
    <CreatedDate>22/08/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>882</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>We need a document that describes all the breaking changes and best practices for upgrading a project from 2017.1 to 2017.2</Description>
  </Issue>
  <Issue>
    <IssueID>881</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Disable Mixed Reality Portal Minimizes Other Windows</Title>
    <CreatedDate>21/08/2017</CreatedDate>
    <ClosedDate>02/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>881</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>881</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi, I'm using the Acer Immersive Headset to do some demos and I want the application to be in full screen on the monitor without the Mixed Reality Portal window.  As a work around I've published two versions of the app, one for MR and one for desktop with the hopes that the desktop version would stay in full screen.  However when I have the desktop version in full screen with the MR portal minimized, when I pick up the HMD the desktop version is immediately minimized and the portal pops up.  Is there anyway to prevent this?  The black box nature of the MR Portal along with its limited settings could use some work.</Description>
  </Issue>
  <Issue>
    <IssueID>880</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Popup Menu button issue</Title>
    <CreatedDate>19/08/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
    <IssueLabels />
    <Description>The first time I use the popup menu button it works fine. However, once I close the popup menu and try to activate it again it doesn't work and no other input works. Anyone else get this problem? Is it an easy fix?</Description>
  </Issue>
  <Issue>
    <IssueID>879</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>chrisfromwork</FixedById>
        <IssueID>879</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Tap to Place Sharing</Title>
    <CreatedDate>18/08/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>879</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi, is there a simple way to modify the tap to place script so it is supported across shared sessions?  I'd like for people to see each other pick up, move, and place holograms. </Description>
  </Issue>
  <Issue>
    <IssueID>877</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity 2017.2.0b8 has some breaking changes to the HTK</Title>
    <CreatedDate>18/08/2017</CreatedDate>
    <ClosedDate>19/08/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>877</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>877</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Upgrading to 2017.2.0b8 has surfaced a few types that have changed names or I just can't find.  To repro, just start a new project, and import the Dev_Unity_2017.2 version of the HTK, and the errors will surface themselves.</Description>
  </Issue>
  <Issue>
    <IssueID>876</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Thoughts on the Input system for MRToolkit</Title>
    <CreatedDate>18/08/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>876</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>![longbow_input_diagram](
[InputSandbox.zip](

Hello!

I'm from the Horizon team in London (Microsoft) and I've recently joined this repo as a contributor. :) We (Horizon) had developed an Input module for Unity over a year ago that is simple yet elegant. However, in order to avoid duplicating systems we've decided to start using the MRToolkit's input system. We would encourage you to have a look at it (attached) if you are interested. We've taken the approach to make input work "out-of-the-box" keeping inline with Unity's style of input. Simply add "HoloLensInputModuleEx" (bad name, I know...) to your EventSystem, set your cursor, and you're done! Uses IPointerHandlers for the gaze handlers. Doing this enables you to take advantage of using built in systems in Unity without adding additional scripts on your objects. It also simplifies input interaction. Note that you can click on the "Help" field in the component in the Inspector to see how to use the in-Editor simulation.

Documentation:
- Docs/Input/html/index.html

Samples:
- Gaze Input: Assets/Longbow/Input/Gaze/Samples
- Hand Input: Assets/Longbow/Input/Hands/Samples
- Speech Input: Assets/Longbow/Input/Speech/Samples

A few good takeaways would be a few extra features we have in the input module:
- When running in the editor you can tilt the camera left and right using "q" and "e" (You need to press "shift+cntrl" first to initiate camera movement).
- You can change the depth of the hand positions in the Editor by using the scroll wheel on your mouse.
- You can do two-hand simulations by pressing '1' (left hand) + '2' (right hand) or simply '3'.
- Input Module doesn't require special handlers. Works with the Canvas without adding any extra handlers or listeners to UI components.
- HandRecognizer can run independently from the input module. It also will allow simulation when running in the editor.
- Speech Recognition is simple. Just attach the "Contextual Speech Recognition" component to any object in your scene and you get instant speech reco! It also understand gaze context.

Cheers,
William</Description>
  </Issue>
  <Issue>
    <IssueID>875</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Input System is not cross platform friendly</Title>
    <CreatedDate>18/08/2017</CreatedDate>
    <ClosedDate>03/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>875</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The updated input system for `Gaze and Commit` and `Point and Commit` changes breaks cross platform support.</Description>
  </Issue>
  <Issue>
    <IssueID>872</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to test in Editor and build for VR</Title>
    <CreatedDate>16/08/2017</CreatedDate>
    <ClosedDate>16/08/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>872</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>872</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'm having issues testing in the editor and making builds with the Acer headset.

Does anyone have a link or some info on how this process should work?
Thanks.

Acer Headset &amp; Controllers
Unity 2017.2.0b7
Visual Studio 2017 15.3</Description>
  </Issue>
  <Issue>
    <IssueID>871</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MeshSaver 'StorageFile' does not contain definition for 'OpenStreamForReadAsync'</Title>
    <CreatedDate>16/08/2017</CreatedDate>
    <ClosedDate>04/09/2017</ClosedDate>
    <IssueLabels />
    <Description>I'm having an issue building the project due to this error. I can't seem to find any info on this.</Description>
  </Issue>
  <Issue>
    <IssueID>870</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can't build solution due to Field Serialization Error</Title>
    <CreatedDate>16/08/2017</CreatedDate>
    <ClosedDate>08/09/2017</ClosedDate>
    <IssueLabels />
    <Description>Hello!

I tried to update the Toolkit from a old version which used unity 5.5.2f1 to the current release tagged v1.2017.1.0.

Whenever I try to create the sln (unity version 2017.1.0f3) using the HoloToolkit -&gt; Build Window -&gt; Build SLN, Build APPX Button I get the following errors:


    Type '[Assembly-CSharp]HoloToolkit.Unity.InputModule.HandGuidance' has an extra field 'Cursor' of type 'UnityEngine.GameObject' in the player and thus can't be serialized 
    UnityEditor.BuildPipeline:BuildPlayer(String[], String, BuildTarget, BuildOptions)
    HoloToolkit.Unity.BuildSLNUtilities:PerformBuild(BuildInfo) (at Assets/HoloToolkit/Build/Editor/BuildSLNUtilities.cs:145)
    HoloToolkit.Unity.BuildDeployTools:BuildSLN(String, Boolean) (at Assets/HoloToolkit/Build/Editor/BuildDeployTools.cs:67)
    HoloToolkit.Unity.&lt;OnGUI&gt;c__AnonStorey0:&lt;&gt;m__2() (at Assets/HoloToolkit/Build/Editor/BuildDeployWindow.cs:273)
    UnityEditor.EditorApplication:Internal_CallDelayFunctions()

    ----

    Type '[Assembly-CSharp]HoloToolkit.Unity.InputModule.HandGuidance' has an extra field 'HandGuidanceIndicator' of type 'UnityEngine.GameObject' in the player and thus can't be serialized 
    UnityEditor.BuildPipeline:BuildPlayer(String[], String, BuildTarget, BuildOptions)
    HoloToolkit.Unity.BuildSLNUtilities:PerformBuild(BuildInfo) (at Assets/HoloToolkit/Build/Editor/BuildSLNUtilities.cs:145)
    HoloToolkit.Unity.BuildDeployTools:BuildSLN(String, Boolean) (at Assets/HoloToolkit/Build/Editor/BuildDeployTools.cs:67)
    HoloToolkit.Unity.&lt;OnGUI&gt;c__AnonStorey0:&lt;&gt;m__2() (at Assets/HoloToolkit/Build/Editor/BuildDeployWindow.cs:273)
    UnityEditor.EditorApplication:Internal_CallDelayFunctions()

    ----

    Type '[Assembly-CSharp]HoloToolkit.Unity.InputModule.HandGuidance' has an extra field 'HandGuidanceThreshold' of type 'System.Single' in the player and thus can't be serialized 
    UnityEditor.BuildPipeline:BuildPlayer(String[], String, BuildTarget, BuildOptions)
    HoloToolkit.Unity.BuildSLNUtilities:PerformBuild(BuildInfo) (at Assets/HoloToolkit/Build/Editor/BuildSLNUtilities.cs:145)
    HoloToolkit.Unity.BuildDeployTools:BuildSLN(String, Boolean) (at Assets/HoloToolkit/Build/Editor/BuildDeployTools.cs:67)
    HoloToolkit.Unity.&lt;OnGUI&gt;c__AnonStorey0:&lt;&gt;m__2() (at Assets/HoloToolkit/Build/Editor/BuildDeployWindow.cs:273)
    UnityEditor.EditorApplication:Internal_CallDelayFunctions()

    ----

    Fields serialized in Editor, class 'HoloToolkit.Unity.InputModule.HandGuidance'

    UnityEditor.BuildPipeline:BuildPlayer(String[], String, BuildTarget, BuildOptions)
    HoloToolkit.Unity.BuildSLNUtilities:PerformBuild(BuildInfo) (at Assets/HoloToolkit/Build/Editor/BuildSLNUtilities.cs:145)
    HoloToolkit.Unity.BuildDeployTools:BuildSLN(String, Boolean) (at Assets/HoloToolkit/Build/Editor/BuildDeployTools.cs:67)
    HoloToolkit.Unity.&lt;OnGUI&gt;c__AnonStorey0:&lt;&gt;m__2() (at Assets/HoloToolkit/Build/Editor/BuildDeployWindow.cs:273)
    UnityEditor.EditorApplication:Internal_CallDelayFunctions()

    ----

    Fields serialized in target platform, class 'HoloToolkit.Unity.InputModule.HandGuidance'
    'Cursor' of type 'UnityEngine.GameObject'
    'HandGuidanceIndicator' of type 'UnityEngine.GameObject'
    'HandGuidanceThreshold' of type 'System.Single'

    UnityEditor.BuildPipeline:BuildPlayer(String[], String, BuildTarget, BuildOptions)
    HoloToolkit.Unity.BuildSLNUtilities:PerformBuild(BuildInfo) (at Assets/HoloToolkit/Build/Editor/BuildSLNUtilities.cs:145)
    HoloToolkit.Unity.BuildDeployTools:BuildSLN(String, Boolean) (at Assets/HoloToolkit/Build/Editor/BuildDeployTools.cs:67)
    HoloToolkit.Unity.&lt;OnGUI&gt;c__AnonStorey0:&lt;&gt;m__2() (at Assets/HoloToolkit/Build/Editor/BuildDeployWindow.cs:273)
    UnityEditor.EditorApplication:Internal_CallDelayFunctions()

    ----

    Error building player because script class layout is incompatible between the editor and the player.


I opened the Unity project in the new unity version, deleted the Toolkit directories and reimported the assets.

I can run the project normally inside the editor and everything works there.

Could somebody help, please?</Description>
  </Issue>
  <Issue>
    <IssueID>869</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Program syntax error!!!</Title>
    <CreatedDate>16/08/2017</CreatedDate>
    <ClosedDate>16/08/2017</ClosedDate>
    <IssueLabels />
    <Description>There are some syntax errors in the Class  "ApplicationViewManager"

``</Description>
  </Issue>
  <Issue>
    <IssueID>868</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Script that implements IInputClickHandler is invoked multiple times with Dev_Unity_2017.2.0 branch</Title>
    <CreatedDate>16/08/2017</CreatedDate>
    <ClosedDate>17/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>868</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>868</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hello,
I've created a while ago a very simple app for HoloLens: you tap in the air and it creates a prefab in front of you, which then falls down and collides with the objects in the room thanks to Spatial Mapping. Now I'm trying to port this application to Mixed Reality in order to support both HoloLens and immersive headsets, so I did the following steps:

1. I've installed the latest Windows Insider build in the Fast Ring
2. I've installed the latest Windows 10 SDK
3. I've installed Unity Beta 2017.2.06b
4. In my original Unity project, I've removed from the Assets folder the old version of the HoloToolkit and I've replaced it with the one from the Dev_Unity_2017.2.0 branch
5. I've removed the HoloCamera from the project and replaced it with the MixedRealityCameraParent one

I didn't change anything related to how I've implemented the prefab creation with air tap. In the InputManager prefab in the scene I have a custom script, which implements the IInputClickHandler interface. Then, in the OnInputClicked() method, I just create a new instance of the prefab:

``

However, since I've ported the app to the new toolkit, when I execute the action (either with the gesture on the HoloLens or by pressing the joypad button on an immersive headset or in the Unity editor), my script isn't invoked anymore just once but four times. The result is quite easy to see: the prefab is created 4 times and, if I place a breakpoint in Visual Studio in the OnInputClicked() method and I choose to launch the app in the Unity editor, I can see the breakpoint being hit 4 times.

Am I doing something wrong or is there any breaking change I'm not aware of?
Thanks!</Description>
  </Issue>
  <Issue>
    <IssueID>867</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Rename HoloToolkit folders to MixedRealityToolkit</Title>
    <CreatedDate>16/08/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>867</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I know this is already on the roadmap but I'd like to put it here for tracking purposes.</Description>
  </Issue>
  <Issue>
    <IssueID>866</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Merge Examples and Test folders</Title>
    <CreatedDate>16/08/2017</CreatedDate>
    <ClosedDate>06/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>866</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'd like to propose we merge the Examples and Tests folders into one.

There seems to be many tests in examples and examples in tests.
Also we already have a folder for Unit Testing.
This would also reduce the number of asset packages in each release.

If this proposal is accepted we should do it at the same time we rename the folders from `HoloToolkit` to `MixedRealityToolkit` (See </Description>
  </Issue>
  <Issue>
    <IssueID>862</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Loading overlays for Windows Mixed Reality in Unity</Title>
    <CreatedDate>15/08/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>862</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>It seems that Steam and OVR plugins in Unity ship with a script that can be used during transitions (scene change, load behavior, etc.) to display overlays (instead of the screen going all dark). This is a pretty useful out-of-box script that anyone can use while developing their games.

Attached are the scripts.

Can we do something similar for Windows MR, so that not everyone has to write one from scratch?

[OVROverlay.cs.txt](
[SteamVR_Overlay.cs.txt](
</Description>
  </Issue>
  <Issue>
    <IssueID>861</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Build folder conflicts with gitignore defaults</Title>
    <CreatedDate>15/08/2017</CreatedDate>
    <ClosedDate>16/08/2017</ClosedDate>
    <IssueLabels />
    <Description>Hey,

I just spotted it today, that Build folder from MixedRealityToolkit won't be recognized in git if you generate by default a .gitignore for Unity:

![image](

I had to remove [Bb]uild to fix this issue.

I understand, that's not a bug per se and it's not your fault, but it would be nice if new users could avoid it in the future :)</Description>
  </Issue>
  <Issue>
    <IssueID>860</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Building UWP in all versions of Unity not working for Visual Studio 2017 15.3</Title>
    <CreatedDate>15/08/2017</CreatedDate>
    <ClosedDate>25/08/2017</ClosedDate>
    <IssueLabels />
    <Description>**Be advised, do not update visual studio to 15.3!**
See 

&gt;There is a compatibility issue between Unity and upcoming Visual Studio 2017 update 3 when targeting UWP, using .NET scripting backend (IL2CPP scripting backend is not affected) and building generated Visual Studio project.

[Read full details here.](


Here is the status of patches with the fix:
- 5.5 version with the fix: 5.5.4p5 (not released yet)
- 5.6 version with the fix: [5.6.3p2](
- 2017.1 version with fix: [2017.1.0p5](
- 2017.2 version with fix: [2017.2.0b7](

[Potential Work Around.](</Description>
  </Issue>
  <Issue>
    <IssueID>859</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>send data from android app to hololens</Title>
    <CreatedDate>15/08/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>859</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>859</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi,
I am trying to connect android (As server) to hololens. i tried tcp connection but uwp does not supported.
What connection can i make between the devices?

If i want to use the SharingStage.cs -"Allows you to communicate between a Windows and non-Windows device" how can i connect android device?

Thanks,
Chen</Description>
  </Issue>
  <Issue>
    <IssueID>857</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ApplicationViewManager.cs throws error when building VS solution</Title>
    <CreatedDate>15/08/2017</CreatedDate>
    <ClosedDate>14/10/2017</ClosedDate>
    <IssueLabels />
    <Description>After you build the initial solution from unity, the VS solution produced fails when building because of ApplicationViewManager.cs. 

I delete the file to get it to build, but it seems consistent across every project. </Description>
  </Issue>
  <Issue>
    <IssueID>856</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Icon Generator does not support transparency</Title>
    <CreatedDate>14/08/2017</CreatedDate>
    <ClosedDate>02/09/2017</ClosedDate>
    <IssueLabels />
    <Description>Icon Generator does not support transparency.</Description>
  </Issue>
  <Issue>
    <IssueID>855</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to appear cursor object</Title>
    <CreatedDate>14/08/2017</CreatedDate>
    <ClosedDate>16/08/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>855</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi

I use holotoolkit in my unity hololens project.

But my cursor object do not appear at my gaze position.

I use prefab inputmanager, hololenscmera, cursorwithfeedback.
</Description>
  </Issue>
  <Issue>
    <IssueID>853</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Keyboard Performance</Title>
    <CreatedDate>13/08/2017</CreatedDate>
    <ClosedDate>26/10/2017</ClosedDate>
    <IssueLabels />
    <Description>I was tracking a warning in `Keyboard.cs` that is a potential bug when dictating text. On [this]( line the inserted text does not actually get assigned. To test this I ran the `KeyboardTest` scene on the HoloLens and noticed that the performance is really bad. I could barely use the Keyboard as it was lagging so much. If you want to test this, make sure to add the keyboard to one of the input fields in the test scene because otherwise, it will just throw errors (also disable the slider)   

I've added the FPSDisplay to the scene and recorded a short clip showing this. Note that the FPS drops to about 19 due to the recording:  The FPS then proceeds to drop to 7 while looking at the keyboard.

I kinda went down the rabbit hole and started investigating this issue within the editor. The problem I found has to do with how Unity draws UI in batches. Similiar objects on the same canvas can be drawn at the same time when certain conditions are met. These conditions are NOT met with the keyboard and the result is that each individual key is drawn separately like so in the frame debugger:  You can see the batch count at the top right from the scene stats goes up to 96 and I've seen it go up as high as **98** when moving the cursor.

### 1. Z-Positions
The first thing that breaks batching is different z-positions. All the main sections of the Keyboard have a slight z-offset which totally destroys batching. Setting all the sections  to a z-position of 0 reduced the batches to **21**. This has solved most of the problem, however we can do better.

### 2. Sprite Atlas
Looking at the new UI profiler one can see that a lot of batches are broken due to different textures on the elements like the back button, shift keys, button highlights and pretty much all images and textures that are used here. Unity 2017 has a pretty good new feature for this called a sprite atlas. It builds a single sprite out of all the added ones to be able to make them similar. This has to be enabled in Editor settings &gt; Sprite Packer &gt; Always enabled. Creating a new atlas somewhere under HoloToolkit/UI and adding both the Images and Textures folders in there gets it down to **15** 
We are getting an additional batch from the `InputFieldBackground` on the input field on the keyboard. I couldn't figure out how to get the actual sprite for that so I can add it to the atlas so I just removed that sprite from the input field for now, which puts us at **14**.

### 3. Hierarchy Order
The last one took me a while to figure out. In the profiler, it's shown that the currently highlighted keyboard key has its own batch. It turns out that the order of elements can be an issue too. The hierarchy for most of the keys looks like this: 

* X_Button

    * Highlight

    * keyboard_X

Swapping the order of the 2 child elements will add the keyboard key to the batch with all the other ones. This reduced the batches down to **13**, 3 of which are actually from the Keyboard  The rest of the batches come from other elements in the scene.

### The Result

Drawing the keyboard has been sped up tremendously as you can see in the frame debugger:  And the FPS does not drop into oblivion anymore on the HoloLens 

The frame rate still drops when not recording when using the keyboard but it's not near as bad as before. Another issue I think is that there are a lot of unnecessary ray cast targets that we don't require. Like all the highlight and text elements are ray cast targets when just the parent would suffice. The keyboard is a world canvas and has an attribute for an event camera. Not setting this will call `Camera.main` for every ray cast.

I'm not sure if the issue with the gaze manager and UI elements with the same z-position still exists (#620). If it does this probably has to be fixed first so that the keyboard can be rebuilt like this.

### Resources

Most of this I've gathered from the 2 recent unity optimization talks which are really great to listen to.



I've got a branch over at  with these changes in the `KeyboardTest` scene.</Description>
  </Issue>
  <Issue>
    <IssueID>851</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HTK Build Window not compatible with Immersive Headset build and deploy</Title>
    <CreatedDate>12/08/2017</CreatedDate>
    <ClosedDate>03/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>851</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Right now the Build Window is specifically targeted at building out to either the emulator or to IpOverUsb and deploying to device.  It is not capable of deploying to local machine like is needed for the immersive headsets.</Description>
  </Issue>
  <Issue>
    <IssueID>850</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to share custom SyncObject via SharedStage?</Title>
    <CreatedDate>12/08/2017</CreatedDate>
    <ClosedDate>21/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>850</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>850</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi,

I am trying to use Sharing in my project.
I would like to share some data without transformation (I don't need to create it on scene in some place).

Now SyncRoot contains list of SyncSpawnedObject that as far as I understand is created specially for objects that placed on the scene (it has transformation, rotatation, etc).

According to the documentation I can create own SyncRoot implementation with another SyncArray.

&gt; By default, the SyncRoot object (which inherits from SyncObject) only contains an array of InstantiatedPrefabs, which may not be enough for your application.

But how can I use new sync model with SharedStage? I noticed that it creates SyncRoot directly in Connect method, so I can't create my own sync model.

&gt; Root = new SyncRoot(Manager.GetRootSyncObject());

Probably I missed something, how can I share data via SharedStage?

Thanks for help. </Description>
  </Issue>
  <Issue>
    <IssueID>849</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>2017.1.0p5 Released</Title>
    <CreatedDate>12/08/2017</CreatedDate>
    <ClosedDate>25/08/2017</ClosedDate>
    <IssueLabels />
    <Description>[Unity Editor 2017.1.0p3]( released with Mixed Reality Toolkit Specific Fixes:

(911008) - UWP: Fixed the issue where locking the mouse in UWP player would cause wrong values returned from Input.GetAxis() on the next Update.
(923806) - XR: Fixed an issue where stereo Convergence setting had no actual impact.
(918634) - XR: Added VRUsage parameter to GetTemporary(). This fixes an issue with blitting to a temporary renderTexture.</Description>
  </Issue>
  <Issue>
    <IssueID>848</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Usage of Camera.main throughout the repository</Title>
    <CreatedDate>12/08/2017</CreatedDate>
    <ClosedDate>15/08/2017</ClosedDate>
    <IssueLabels />
    <Description>Using `Camera.main` basically, does a `FindByTag` on the scene and searches through all tagged objects to find the main camera. With more tagged objects the performance gets worse and worse. Instead, the reference should be cached in Awake/Start.
There are a lot of occurrences of `Camera.main` in the repository that doesn't do this and might potentially cause performance issues at some point or at least drain the performance unnecessarily. Some scripts call `Camera.main` up to 8 times on every `Update`.
There are functions that will have to be made obsolete like `MathUtils.IsInFOV(position)` to include the camera reference in the call.
</Description>
  </Issue>
  <Issue>
    <IssueID>847</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Basic 3D objects for Prototyping</Title>
    <CreatedDate>11/08/2017</CreatedDate>
    <ClosedDate>18/10/2017</ClosedDate>
    <IssueLabels />
    <Description>I have a set of basic primitive 3D objects that I plan to add to HoloToolkit-Examples/Prototyping. Included in the set are diamonds, disks, pyramids, crosshairs, torus and wedges.</Description>
  </Issue>
  <Issue>
    <IssueID>845</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hand tracking with Acer headset?</Title>
    <CreatedDate>09/08/2017</CreatedDate>
    <ClosedDate>15/08/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>845</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>None of the hand tracking / air tap stuff seems to be working with my new Acer MR headset. Is it meant to or is this disabled? I'm running Unity 2017.2.0b5 and trying the scenes in Assets\HoloToolkit-Examples\InteractiveElements\Scenes. Everything else seems to work great.</Description>
  </Issue>
  <Issue>
    <IssueID>844</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Built in Transform menu available in Holotoolkit?</Title>
    <CreatedDate>09/08/2017</CreatedDate>
    <ClosedDate>09/08/2017</ClosedDate>
    <IssueLabels />
    <Description>When I select a 3D hologram; Is there a built in transform prefab that can be used to Edit the 3D gameObject (Move, scale or rotate)?</Description>
  </Issue>
  <Issue>
    <IssueID>843</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Teleport and other controls should match the shell</Title>
    <CreatedDate>09/08/2017</CreatedDate>
    <ClosedDate>25/09/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>843</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Right now the HTK has a teleport script which uses the Xbox Y button for teleport, and the bumpers for rotation.  However, in the recent versions of the Mixed Reality Portal, the navigation uses the left thumb stick forward to teleport, and the right thumbstick to rotate.  

I think it would be best if the default behavior of the HTK matched that of the shell.

Thoughts?</Description>
  </Issue>
  <Issue>
    <IssueID>842</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Question] SliderSamples </Title>
    <CreatedDate>08/08/2017</CreatedDate>
    <ClosedDate>09/08/2017</ClosedDate>
    <IssueLabels />
    <Description>I am trying to control a holographic architectural model in Hololens with a slider. 
For the first step, I've been trying different things with SliderSamples in HoloToolkit to scale and rotate a simple cube. didn't work out...

I wanted to add Slider.onValueChanged on SliderGestureControl.cs to use the following simple script attached to the cube. I couldn't find a solution.

How can I use SliderValue in SliderGestureControl to change a rotation speed of the cube?
Or other ways to achieve the goal (especially scaling a cube)?  
I would really appreciate it if you could help me, a beginner.,., figure this out Thanks! 

`using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class RotateCube : MonoBehaviour {

    public float speed = 10f;
	
	// Update is called once per frame
	void Update () {
        transform.Rotate(0, speed * Time.deltaTime, 0);
	}

    public void AdjustSpeed(float newSpeed)
    {
        speed = newSpeed;
    }
}
`



 </Description>
  </Issue>
  <Issue>
    <IssueID>840</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can't build appx from solution.</Title>
    <CreatedDate>07/08/2017</CreatedDate>
    <ClosedDate>16/08/2017</ClosedDate>
    <IssueLabels />
    <Description>I trying to build APPX from solution, but i getting error code -1 while building appx... 

This console appears, show me this error and close automatically. 
![image](

Tryed to build with VS 2015 on clean windows (virtual machine), on VS 2017, on VS 2017 with 2015 installed too, nothing good happens... Error code -1.</Description>
  </Issue>
  <Issue>
    <IssueID>837</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>AnchorLoaded event in ImportExportAnchorManager</Title>
    <CreatedDate>07/08/2017</CreatedDate>
    <ClosedDate>09/08/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>837</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Why is the AnchorLoaded Event in ImportExportAnchorManager class disabled for UnityEditor?




I can not build an app were i hook up on this event because unity throws an error because AnchorLoaded is  unknown.

Is this a bug or design decision?</Description>
  </Issue>
  <Issue>
    <IssueID>836</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>paseb</FixedById>
        <IssueID>836</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Merge stuff from MRDesignLabs over to HTK</Title>
    <CreatedDate>07/08/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>Hi,

The [MRDesignLab]( has some parts that might be useful in the standart HTK. 
It would for example be nice to have the the AnimCursor as part of HTK together with the other cursors.</Description>
  </Issue>
  <Issue>
    <IssueID>835</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add "Apply Lighting Settings" to project settings wizard</Title>
    <CreatedDate>07/08/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>The default settings in Unity set a Skybox and Realtime and Mixed Lighting. You can manually set

* Skybox Material to None,
* Environment Lighting to Gradient,
* Disable Realtime Lighting and
* Disable Mixed Lighting

in the Lighting Window of Unity 3D, but it would be nice if there would be a point for this in the HoloToolkit-Menu.</Description>
  </Issue>
  <Issue>
    <IssueID>834</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Keyboard.cs Refactor</Title>
    <CreatedDate>06/08/2017</CreatedDate>
    <ClosedDate>07/03/2018</ClosedDate>
    <IssueLabels />
    <Description>- Seeing as this class is a singleton we should also probably rename it to `KeyboardManager`.
- `Keyboad.cs` should implement the `IDictationHandler`.</Description>
  </Issue>
  <Issue>
    <IssueID>833</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Building Unity C# projects does not work with the Dev_Unity_2017.2.0 branch</Title>
    <CreatedDate>06/08/2017</CreatedDate>
    <ClosedDate>15/08/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>833</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>- Make a basic app using Unity 2017.2.0b5, with the Dev_Unity_2017.2.0 branch HoloToolkit in it
- Put only a MixedRealityCameraParent in it
- Select .NET as scripting backend
- Select "Unity C# Projects" 
- Fails with "KeyNotFoundException" and two more
![capture](

This is currently blocking my progress into MR
</Description>
  </Issue>
  <Issue>
    <IssueID>830</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Holotoolkit-Examples/InteractiveElements widget bug on toggles with selection on start</Title>
    <CreatedDate>04/08/2017</CreatedDate>
    <ClosedDate>04/09/2017</ClosedDate>
    <IssueLabels />
    <Description>When there are multiple InteractiveToggle objects and some are set to be selected (HasSelection: true) in the inspector, some will not show the proper visuals on start. After a user interacts with the object everything catches up. I found that the initial SetState call, on the objects, sometimes happens before the theme was found, so the object never properly took on the correct properties. I have some fixes for this, will be submitting them shortly.</Description>
  </Issue>
  <Issue>
    <IssueID>829</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ControllerVisualizer.cs is calling on WSA properties and classes that dont exist yet</Title>
    <CreatedDate>04/08/2017</CreatedDate>
    <ClosedDate>29/08/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>829</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>In the ControllerVisualizer.cs file in the Dev_Unity_2017.2.0 branch, there are some calls that are throwing errors.  These are calls to WSA API's that don't exist yet. 
SpatialInteractionSource.Handedness is one of them, on line 108 (called as source.Handedness)
SpatialInteractionSourceHandedness type is also missing, on line 113

There are a few other instances of this same error from other locations.
Is there a more recent SDK I should be using?</Description>
  </Issue>
  <Issue>
    <IssueID>826</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpatialMappingObserver.cs Error CS1525</Title>
    <CreatedDate>03/08/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
    <IssueLabels />
    <Description>Dear everyone,
I was studying a book to start developing with Hololens. The problem is that, when i copy the Assets folder from the HoloToolkit, i have this problem and i can't build the project.


`Assets/HoloToolkit/SpatialMapping/Scripts/SpatialMappingObserver.cs(444,136): error CS1525: Unexpected symbol ';', expecting ':'`

The corrisponding line code is:
` SurfaceObject? replacedSurface = UpdateOrAddSurfaceObject(outstandingMeshRequest.Value, destroyGameObjectIfReplaced: false);`

I tried to reimport the assets folder and also to automatically modify the Line Endings in Visual Studio but it didn't help to resolve the problem.

Can anyone help?
Thank you in advance


</Description>
  </Issue>
  <Issue>
    <IssueID>825</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>KeywordManager script component-assign its variables dynamically at run time ?</Title>
    <CreatedDate>02/08/2017</CreatedDate>
    <ClosedDate>02/08/2017</ClosedDate>
    <IssueLabels />
    <Description>How do I assign the' Response' editor fields for object and function at run-time in the Keyword Manager script component? Link to a visual of what I am attempting to describe here

If I need to reassign the Size and Keywords as well I am fine with that.
Basically how do I use the KeywordManager script at run time?

My situation is such that I have objects that are generated indeterminably at run time, meaning whenever the user decides to interact with the code that creates these objects. I can add my script with the functions I'd like to be able to use voice to call at run time, but I don't know how to alter the Keyword Manager script Response object variable to the object I attach the script too.</Description>
  </Issue>
  <Issue>
    <IssueID>824</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tilegenerator creates icons which then result in an "Failed to build appx from Solution.  Error 1"</Title>
    <CreatedDate>02/08/2017</CreatedDate>
    <ClosedDate>02/09/2017</ClosedDate>
    <IssueLabels />
    <Description>I used the Tilegenerator to make all the icons.   When I went to build via Holotoolkit, the AppX build failed -- red text flashed by and I got an error 1.

Running MSBuild from the command line brought up:

`"C:\dev\AugmntrHoloTest\WindowsStoreApp\AugmntrHoloTest.sln" (default target) (1) -&gt;
"C:\dev\AugmntrHoloTest\WindowsStoreApp\AugmntrHoloTest\AugmntrHoloTest.csproj" (default target) (2) -&gt;
(_ValidateAppxPackage target) -&gt;
  Package.appxmanifest(19,54): error APPX3207: App manifest references the wide 310x150 logo image 'Assets\Wide310x150Logo.scale-400.png' which is larger than the maximum image file size. It must be no larger than 204,800 bytes.`

The outputted icon is 236KB.

`[C:\dev\AugmntrHoloTest\WindowsStoreApp\AugmntrHoloTest\AugmntrHoloTest.csproj]
  Package.appxmanifest(20,27): error APPX1619: App manifest references the splash screen image 'Assets\SplashScreen.scale-400.png' which does not have valid dimensions. It must be 2480x1200 pixels. [C:\dev\AugmntrHoloTest\WindowsStoreApp\
AugmntrHoloTest\AugmntrHoloTest.csproj]`

The outputted icon is 2400x1200.


</Description>
  </Issue>
  <Issue>
    <IssueID>823</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Typo in PanelLayout scene name</Title>
    <CreatedDate>02/08/2017</CreatedDate>
    <ClosedDate>08/08/2017</ClosedDate>
    <IssueLabels />
    <Description>In HoloToolkit-Unity/Assets/HoloToolkit-Examples/Prototyping/Scenes/ PlanelLayout.unity and PlanelLayout.unity.meta should instead be named PanelLayout. I am not sure if the typo is referenced anywhere else in the project.</Description>
  </Issue>
  <Issue>
    <IssueID>822</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Voice command implementations?</Title>
    <CreatedDate>02/08/2017</CreatedDate>
    <ClosedDate>02/08/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>822</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Can I assign the' Response' editor fields for object and function at run-time in the KeyManager script component? Link to a visual of what I am attempting to describe here</Description>
  </Issue>
  <Issue>
    <IssueID>821</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Graphics.Blit doesn't work when the "Single pass Instanced" is chosen.</Title>
    <CreatedDate>02/08/2017</CreatedDate>
    <ClosedDate>14/10/2017</ClosedDate>
    <IssueLabels />
    <Description>Graphics.Blit doesn't work when the "Single pass Instanced" is chosen.
Regardless which kind of shader is being exploited during the call, embedded unity shaders don't work as well as a custom. The custom shaders have been written in accordance with all instructions from the next unity doc:
[Unity HoloLens one pass stereo rendering](

Thanks )</Description>
  </Issue>
  <Issue>
    <IssueID>818</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Link in wiki to "Gestures in Unity" does not work</Title>
    <CreatedDate>01/08/2017</CreatedDate>
    <ClosedDate>01/08/2017</ClosedDate>
    <IssueLabels />
    <Description>[Input]( points to [Gestures in Unity]( which does not exist.</Description>
  </Issue>
  <Issue>
    <IssueID>812</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpatialUnderstanding.dll Access violation causing editor to crash</Title>
    <CreatedDate>27/07/2017</CreatedDate>
    <ClosedDate>10/08/2017</ClosedDate>
    <IssueLabels />
    <Description>I was messing about with the SpatialUnderstandingExample, and after changing the object placement definition call from:
`                SpatialUnderstandingDllObjectPlacement.ObjectPlacementDefinition.Create_OnWall(new Vector3(MenuWidth * 0.5f, MenuHeight * 0.5f, MenuMinDepth * 0.5f), 0.5f, 3.0f);
`
to
`                    SpatialUnderstandingDllObjectPlacement.ObjectPlacementDefinition.Create_OnEdge(new Vector3(MenuWidth * 0.5f, MenuHeight * 0.5f, MenuMinDepth * 0.5f), new Vector3(0.5f,0.5f,0.5f));
`
then running it (both in the editor and on a device), SpatialUnderstanding.dll throws and access violation, causing the unity editor to crash to desktop.

I've contacted unity support and they've said they're able to reproduce it, but I thought I'd post here in case anyone knows what's causing it.

Thanks,</Description>
  </Issue>
  <Issue>
    <IssueID>811</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Input Manager makes Unity Player in Editor Freeze</Title>
    <CreatedDate>27/07/2017</CreatedDate>
    <ClosedDate>01/08/2017</ClosedDate>
    <IssueLabels />
    <Description>This is somewhat of a strange issue and it is not consistent across machines.  For some reason whenever the Input Manager is active Unity will freeze when I hit play within the editor.  If I disable the Input Manager everything plays fine.  I can also reactivate the manager for build and it works fine when published to the headset, its just a little tedious to have to disable/enable the manager every time I want preview my progress.  Any ideas at as to what might cause this and a way to resolve it?  Thanks.

Using the latest Unity 2017 &amp; Holotoolkit package.  
</Description>
  </Issue>
  <Issue>
    <IssueID>807</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>dbastienMS</FixedById>
        <IssueID>807</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Missing Prefab in DoubleSidedTest scene</Title>
    <CreatedDate>26/07/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
    <IssueLabels />
    <Description>![image](

I'd fix this, but I'm not sure what it's supposed to be. Any idea @dbastienMS?</Description>
  </Issue>
  <Issue>
    <IssueID>806</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hologram Navigation Gesture gaze issue</Title>
    <CreatedDate>26/07/2017</CreatedDate>
    <ClosedDate>27/07/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>806</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Using the InputManager prefab from the HoloToolkit and this code:

``

The user can tap and hold and move their hand left or right (x-plane) to rotate along the Y axis and up and down (y-plane) to rotate the object on the X axis.

However there appears to be a bug. If the users gaze comes off the object, the rotation stops immediately until the users gaze returns to the object. Is this the intended functionality? Is there a way to preserve the current object being changed via the navigation gesture and allow it to continue being manipulated until the users hand leaves the FOV or releases the tap and hold?</Description>
  </Issue>
  <Issue>
    <IssueID>804</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cursors Render behind UnityUI on Unity 2017</Title>
    <CreatedDate>26/07/2017</CreatedDate>
    <ClosedDate>02/08/2017</ClosedDate>
    <IssueLabels />
    <Description>The problem is that the cursor now renders behind the UnityUI at about the same distance as the "near clipping plane" in the Main Camera. I've set the canvas to Z depth 2. And my "near clipping plane" is 0.85

![image](

I've been comparing the results between unity 5.6 and 2017. Nothing much seems to have changed in the GazeManager.cs but in "RaycastUnityUI"

`EventSystem.current.RaycastAll(UnityUIPointerEvent, raycastResultList);`

Seems to account for the near clipping distance too in unity 2017 and always returns 2.9 as the distance for the objects in "raycastResultList". It does not in unity 5.6. In GazeManager.cs - RaycastUnityUI there is code to manually account for this

`float uiRaycastDistance = uiRaycastResult.distance + Camera.main.nearClipPlane;`

So in 2017 it accounts for the nearClipPlane twice and renders all cursors behind the UI elements. I'm guessing that you do not need the "+ Camera.main.nearClipPlane" anymore.



</Description>
  </Issue>
  <Issue>
    <IssueID>803</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Sessions list not properly updated in ServerSessionsTracker</Title>
    <CreatedDate>26/07/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
    <IssueLabels />
    <Description>In ServerSessionsTracker.cs, there is an [OnSessionClosed()]( event handler. It takes the _session_ param and removes it from the local _Sessions_ list. However, the session actually doesn't get removed from the list. Adding debug messages shows that Sessions.Contains(session) returns false, and Sessions.Remove(session) also returns false. Sessions.Count remains the same both before and after the Remove() method is called.

The session passed as a param has the same name and hash code as an existing session inside Sessions. I'm not sure how equality is checked here, but perhaps it's comparing by reference and a new copy was made somewhere along the way.

One problem I've encountered with this bug is using the [AutoJoinSession.cs]( script. It checks whether the local Sessions list contains a session with the same name as the one we want to join. That means if I want to connect to the same session again, it will find the local session inside Sessions, and try to connect to that. The server doesn't receive anything, and will not send back any events. 

To reproduce:

1. Attach an AutoJoinSession script to join a session.
2. Call SessionManager.GetCurrentSession().Leave(). You will successfully leave the server, but the local Sessions list is not updated.
3. Attach a new AutoJoinSession script to join a session of the same name, and it will not connect.</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>803</IssueID>
        <PullRequestID>742</PullRequestID>
        <Title>Update to WorldAnchorManager and added MultiLens capabilities</Title>
        <Description>- Fixes #571 If a parent is referenced, then the anchor is added to the parent.
- Fixes #698 Updated `WorldAnchorManager`. Handles creating and deleting Anchors better.
- Fixes #737 Added `SharedWorldAnchorManager` that inherits from `WorldAnchorManager`.
- Updated `SharingTest` scene.
- Updated Sharing prefab to include the `SharedWorldAnchor` component by default.
- See #567. Updated `TapToPlace`.  No longer uses a friendly anchor name, but instead uses the `GameObject.name` of the object that is being moved.
- Fixes #652 Refactored and Renamed `AutoJoinSession` to `AutoJoinSessionAndRoom` and anchors the whole scene appropriately. See #728.
- Refactored `SharingStage` to handle server disconnections better.
- Fixes #803 Sessions list not properly updated in `ServerSessionsTracker`.
- IP address input prefab that remembers the server on subsequent sessions!

![image](

- Added Manual IP Configuration Utility prefab.
- Updated Sharing Test scene.
- Updated `SphereBasedTagalong` to have the option to hide itself after initialization.
- Replaced `AnchorText.prefab` with `AnchorDebug.prefab`.
- Added `SharingManagerDisconnected` event to `SharingStage`.

See #493, #178 and #70

# Breaking Changes
- `GameObjects` that utilize the `WorldAnchorStore` need to have unique names.
    - This is important so you can spawn identical objects across the network without needing to know the anchor names ahead of time.</Description>
        <CreatedDate>27/06/2017</CreatedDate>
        <ClosedDate>13/09/2017</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>BREAKING CHANGE</Name>
            <IssueID>803</IssueID>
            <PullRequestID>742</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>802</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Is there a way create a menu, similar to the holo start menu (Movement)?</Title>
    <CreatedDate>21/07/2017</CreatedDate>
    <ClosedDate>26/07/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>802</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I wanted to know if there a way to create a menu/gameObject which will follow the movements of camera; just like the Holo Start menu.
To describe a little more, Just like how the start menu doesn't move until you look away from the FOV, can I create a menu which moves similar to it?</Description>
  </Issue>
  <Issue>
    <IssueID>800</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Trouble with Gaze following movement?</Title>
    <CreatedDate>21/07/2017</CreatedDate>
    <ClosedDate>21/07/2017</ClosedDate>
    <IssueLabels />
    <Description>Prefabs related to the input features.

BasicCursor.prefab

Torus shaped basic cursor that follows the user's gaze around.

I'm essentially trying to use my own code to accomplish what the BasicCursor does. I've viewed the Cursor.cs and tried to understand its UpdateCursorTransform() method, but I'm confused.
 
At the moment right now I have the cursor following the users gaze but it appears to be off center. The cursor is lower and to the left of where the users actual gaze is. What gives?

Here is my code..


` //For Hololens (camera position input)

        // Do a raycast into the world based on the user's
        // head position and orientation.
        var headPosition = Camera.main.transform.position;
        var gazeDirection = Camera.main.transform.forward;

        RaycastHit hitInfo;
        Ray ray;
        Camera c = Camera.main;

        ray = c.ScreenPointToRay(headPosition);

        if (Physics.Raycast(headPosition, gazeDirection, out hitInfo))
        {


            // If the raycast hit a hologram...
                objHit = hitInfo.transform;

            // Move the cursor to the point where the raycast hit.
                this.transform.position = hitInfo.point;

            // Rotate the cursor to hug the surface of the hologram.
                this.transform.rotation = Quaternion.FromToRotation(Vector3.up, hitInfo.normal);
            }`</Description>
  </Issue>
  <Issue>
    <IssueID>799</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Holographic emulation not rendering to Hololens</Title>
    <CreatedDate>21/07/2017</CreatedDate>
    <ClosedDate>26/07/2017</ClosedDate>
    <IssueLabels />
    <Description>I'm experiencing an issue with the holographic emulation, not being able to render any scene to my Hololens as remote device. 

The Holographic emulation tab shows the green Connected indicator, and the "Remote holographic player" in the Hololens gets in ready state, but when I press Play nothing renders to the Hololens. In the editor, I see the camera is moving along with the Hololens with my head movements, and the Game tab shows correctly what should be rendered in them, but nothing is rendered in the Hololens, neither in the Camera preview in the Scene tab of the editor, just black.

I've already tried formatting my laptop, updating Windows10 Pro to the very last version, reinstalling all the necessary tools, connecting to different Wifi networks, and tried with Unity versions 5.5.4f1, 5.6.1f1, 5.6.2f1, 2017.1f. In all of them I get the exact same problem.

I'd really appreciate any help with this, thank you!</Description>
  </Issue>
  <Issue>
    <IssueID>798</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Spatial Mapping] A room mesh orientation</Title>
    <CreatedDate>21/07/2017</CreatedDate>
    <ClosedDate>21/07/2017</ClosedDate>
    <IssueLabels />
    <Description>I've done Planetarium (Holograms 230). When I deploys it, the room mesh is not aligned with an actual room. It seems always rotated almost 180 degrees on y axis. Do you have any idea why this is happening?</Description>
  </Issue>
  <Issue>
    <IssueID>794</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity 2017.1.0f3 - HoloToolkit Menu not available after import</Title>
    <CreatedDate>19/07/2017</CreatedDate>
    <ClosedDate>19/07/2017</ClosedDate>
    <IssueLabels />
    <Description>Hey,
i tried to import the HoloToolkit (Build by me with  Unity 2017.1.0f3 and the guide:  into new projects in Unity 2017.1.0f3. 
The import itself runs with one error:
"Assets/HoloToolkit/UI/Scripts/Keyboard.cs(582,9): error CS0103: The name `m_Dictation' does not exist in the current context"

But my main problem is that the HoloToolkit Menu is not available. Is there a option to bring it back? Or is this a Problem with Unity 2017.1.0.f3?</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>791</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity Crash with Air Tap in Example Scenes</Title>
    <CreatedDate>18/07/2017</CreatedDate>
    <ClosedDate>21/07/2017</ClosedDate>
    <IssueLabels />
    <Description>I successfully imported the toolkit (Thanks to keveleigh!) and tried out some example scenes through Holographic emulation (Remote to Device). All scenes seem to work fine until I air-tap. Unity crashes every single time and of course Hololens disconnects. Anyone experience the same crash issue with Air tap?  
</Description>
  </Issue>
  <Issue>
    <IssueID>790</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Editor 2017.2 compilation issues</Title>
    <CreatedDate>18/07/2017</CreatedDate>
    <ClosedDate>29/08/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Immersive HMD</Name>
        <IssueID>790</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi,

I got a HoloLens for a research project at school. I have downloaded a Toolkit here.
I am on Unity 2017.2.0b3. I believe I set everything right... But at my console, I am getting this error, only this one.

Assets/HoloToolkit-Examples/SpatialUnderstanding/SpatialUnderstanding-FeatureOverview/Scripts/SpaceVisualizer.cs(8,22): error CS0234: The type or namespace name `WSA' does not exist in the namespace `UnityEngine.VR'. Are you missing an assembly reference?

I googled for the issue. I couldn't solve the problem. Any idea?</Description>
  </Issue>
  <Issue>
    <IssueID>789</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Navigation gesture (tap and hold) in Unity Editor?</Title>
    <CreatedDate>18/07/2017</CreatedDate>
    <ClosedDate>26/07/2017</ClosedDate>
    <IssueLabels />
    <Description>Hi! 
I want to strip out the Navigation feature solely and bare bones the clutter to create a simple example.

Here below is what I am using:
[(

As of now I can use the Navigation gesture and the Air Tap gesture in the Hololens, but I want to be able to use both, for testing purposes, in Unity's Editor. The air tap, as expected, works great in the Editor. 

The tap and hold gesture eludes me. No amount of left and/or right click holds emulate the tap and hold gesture. Any ideas on how to accomplish this in the Editor?</Description>
  </Issue>
  <Issue>
    <IssueID>788</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to use Navigation gesture via INavigationHandler, HoloToolkit ?</Title>
    <CreatedDate>18/07/2017</CreatedDate>
    <ClosedDate>18/07/2017</ClosedDate>
    <IssueLabels />
    <Description>Hi! 

I found a post on the Unity forums pertaining to using the Navigation gesture from this HoloToolkit, akin to what Microsoft does in their Hololens Academy 211 'course', really just a set of 5-6 videos. Unfortunately the code is quite mangled and I want to strip the Navigation feature solely, sort of bare bones the mess and use in a simple example.

Here below is the post/follow up where a user, cgmagic, achieved success in doing what I'm hoping to do.


"Trying to use 
Having trouble implementing INavigationHandler

Trying to achieve Navigation gesture, like:  but using the holoToolkit instead

How do I access, NavigationPosition.x in GesturesInput ?"

``

Now I have the GestureAction.cs with the code he provided, as well as the edited OnNagivationUpdated, in an empty project that contains a cube, a camera, and a cursor in the scene.

I have attached the GestureAction script to the cube, and I know when I am on the cube as I have a cursor that enables its mesh when its on an object and disables when off.

Also, the control structure if(LogGesturesUpdateEvents) I have commented out as it won't compile (though I do see that specific bool is from the InputTest.cs).

Essentially I don't know which scripts I need to get just the Navigation gesture working. I'm trying to create the simplest Unity project possible that just allows you to use the Navigation gesture.</Description>
  </Issue>
  <Issue>
    <IssueID>787</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Holograms sticks to holocamera</Title>
    <CreatedDate>18/07/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>787</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The hologram in the scene is being moved to the origin (the cameras position) on startup. 

Using SpatialMapping, WorldAnchorManager, TapToPlace and InputManager in the scene.

</Description>
  </Issue>
  <Issue>
    <IssueID>786</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MicrophoneTransmitter / MicrophoneReciever network stream mismatch</Title>
    <CreatedDate>18/07/2017</CreatedDate>
    <ClosedDate>09/09/2017</ClosedDate>
    <IssueLabels />
    <Description>In the MicrophoneTransmitter class the direction of the audio source is added to the network stream:
[MicrophoneTransmitter.cs#L274](

But in the MicrophoneReciever the code to extract this has been commented out:
[MicrophoneReceiver.cs#L258](

Immediately following the audio source direction in the stream is the audio buffer.  I think this means the audio data is read incorrectly, it actually takes the first 12 bytes from the direction vector and misses the last 12 bytes.

Fix is either to not add it to the stream, or to decode it and ignore it (or skip the stream forward by 12 bytes).</Description>
  </Issue>
  <Issue>
    <IssueID>785</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InteractiveMeshCursor SetVisibility doesn't affect the spotlight</Title>
    <CreatedDate>18/07/2017</CreatedDate>
    <ClosedDate>12/08/2017</ClosedDate>
    <IssueLabels />
    <Description>The InteractiveMeshCursor implements SetVisiblity by adjusting visibility of the nested dot and ring items. However there is also a Spotlight in the GameObject that doesn't get adjusted, so you still see the light effect, just without the cursor when you set Visiblity to false.</Description>
  </Issue>
  <Issue>
    <IssueID>784</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Memory Leak in the SpatialMappingObserver</Title>
    <CreatedDate>17/07/2017</CreatedDate>
    <ClosedDate>01/09/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>784</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>[Note] this is not an issue for the latest version HoloToolkit-Unity but an issue for the older version of HoloToolkit-Unity. However, due to the limited information I found in Google, I still post this issue here. 

I observe a memory leak from the SpatialMappingObserver. I suspect this is causes by this line of code:
``

`surfaces` creates to much GameObjects and prevents the Garbage Collector to clean the memory. The memory goes from initially 225 MB to 900 MB after 10 mins of operation. I observe this issues in the Unity version 5.5.2f1. But in the Unity version 5.4.0f3 there is no memory leak. 

I use the Diagnostic Tools -&gt; Memory Usage to measure the memory in my program. I notice that the latest build of HoloToolkit-Unity has abandoned this Dictionary data structure. I wonder if the community has already fixed this problem and should I move my development to the latest Unity version 5.6 and the latest HoloToolkit-Unity or is there a quick fix for it. There is a similar discussion [here](

Thanks for any help in advance. 
</Description>
  </Issue>
  <Issue>
    <IssueID>783</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>"Enable Instancing" in StandardFast doesn't enable GPU Instancing</Title>
    <CreatedDate>15/07/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>783</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hello all-

I'm building a HoloLens app, and GPU instancing would improve performance significantly in some cases. The issue is that checking "Enable Instancing" in a material using HoloToolkit/StandardFast doesn't enable instancing, whereas checking the same box for Unity's Standard does. I really prefer to use HoloToolkit/FastConfigurable, but "Enable Instancing" isn't exposed (enhancement request, please!).

To reproduce, create a new project set up with HoloToolkit. Create 2 materials, one with Standard and one with HoloToolkit/StandardFast, both with "Enable Instancing" checked. Add a GameObject with this script:
``
Drag the Standard material to the script field. 

Play. In the Frame Debug window you'll see "Draw Mesh (instanced) TRIANGLE". That's what I'm looking for.

Switch the field to StandardFast and repeat. You'll see "Dynamic Batch". 

Unfortunately, most of my instance-able meshes are oversize for dynamic batching. If we disable batching in the player settings we see that this results in more draw call overhead.

Thanks everyone!</Description>
  </Issue>
  <Issue>
    <IssueID>782</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Messages brodcasted lost with Sharing Service</Title>
    <CreatedDate>14/07/2017</CreatedDate>
    <ClosedDate>14/02/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>782</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>782</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi all,
I'm using the Sharing Service with CustomMessage to create a Master/Slave configuration between 2 hololens.

It's working fine but I have one problem, in some moments, specially when the slave joins the room, the master sends lot of messages and someone get lost and don't arrive to the slave.
If I put a Log before sending messages all works fine because the log slows the sending process.

I'm using the following method:

``

Anyone has an idea of how to solve the problem?

Thank you.</Description>
  </Issue>
  <Issue>
    <IssueID>781</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoloToolkit Tap to Place issue</Title>
    <CreatedDate>14/07/2017</CreatedDate>
    <ClosedDate>03/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>781</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'm using the TapToPlace form the HoloToolkit in order to move the hologram (duh). But on runtime, i cant seem to get any response from the script, only from another script that i created that uses the IInputClicker interface.

On a blank scene, the TapToPlace does not still seem to respond and the AnchorManager projects the hologram on a point far away from the origin, in the range of the +/- 40's. 

Thanks</Description>
  </Issue>
  <Issue>
    <IssueID>780</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Using Unity 2017.2.0b2 with HoloToolkit causes Unity to not build project</Title>
    <CreatedDate>13/07/2017</CreatedDate>
    <ClosedDate>14/07/2017</ClosedDate>
    <IssueLabels />
    <Description>Once I add the HTK to my project, even if I am not using anything in it, and I try to build for the HoloLens from Unity, it fails with the following errors, however, if I pull the HTK out of my assets folder, it builds just fine.  I just tried this with the very latest merged code as of noon on 7/13 and am still seeing the same behavior.

&gt; KeyNotFoundException: The given key was not present in the dictionary.
System.ThrowHelper.ThrowKeyNotFoundException () (at &lt;aa1756d827e14afe8f4b9355672b2ab4&gt;:0)
System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item (TKey key) (at &lt;aa1756d827e14afe8f4b9355672b2ab4&gt;:0)
MetroCSharpVisualStudioSolutionCreator.WriteSolutionFile (System.String solutionFileName, UnityEditor.Scripting.ScriptCompilation.ScriptAssembly[] csharpAssemblies) (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/MetroCSharpVisualStudioSolutionCreator.cs:166)
MetroCSharpVisualStudioSolutionCreator.CreateSolutionFileFrom () (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/MetroCSharpVisualStudioSolutionCreator.cs:716)
PostProcessWSA.CreateVisualStudioSolution () (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/PostProcessWSA.cs:320)
PostProcessWinRT.Process () (at C:/buildslave/unity/build/PlatformDependent/WinRT/SharedSources/CSharp/PostProcessWinRT.cs:221)
UnityEditor.WSA.BuildPostprocessor.DoPostProcess (UnityEditor.Modules.BuildPostProcessArgs args) (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/ExtensionModule.cs:142)
UnityEditor.WSA.BuildPostprocessor.PostProcess (UnityEditor.Modules.BuildPostProcessArgs args) (at C:/buildslave/unity/build/PlatformDependent/MetroPlayer/Extensions/Managed/ExtensionModule.cs:149)
UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr)

</Description>
  </Issue>
  <Issue>
    <IssueID>779</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>TextToSpeech not working at Scene initialisation</Title>
    <CreatedDate>13/07/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
    <IssueLabels />
    <Description>After loading a new scene I use the `TextToSpeechManager `within the `Start()` function of one of my scripts. If Unity calls the `Start()` function of the TextToSpeechManager prior to my `Start()` function TextToSpeech works, otherwise not. The reason is that the `SpeechSynthesizer` is created during `Start()` but when calling a function of a script it is not guaranteed that `Start() ` has already been called. Therefore I encapsulated the synthesizer behind the following function inside the `TextToSpeechManager`:
``

This works for me but is not my suggested solution. I suggest using a proper Singelton of the `SpeechSynthesizer ` or maybe the initialisation inside the `Awake()` function would solve the problem as well.

I am using HoloToolit 1.5.7, Unity 5.6.2f1 and Vuforia 6.2.10</Description>
  </Issue>
  <Issue>
    <IssueID>778</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>GazeManager default GazeTransform does not always default to Camera.main.transform</Title>
    <CreatedDate>13/07/2017</CreatedDate>
    <ClosedDate>02/08/2017</ClosedDate>
    <IssueLabels />
    <Description>After deleting a GameObject and adding a new one I observed the following behaviour:
Before the mentioned change the HoloToolkit Basic Cursor worked perfectly. After that change I managed seeing the cursor by fast moving my had (I see the cursor at the right edge of the HoloLens screen). Without any head movement the cursor is not visible. The cursor works fine in the Unity Play mode.
The reason for that behaviour was that the Camera.main.transform reference address changed after the GazeManager initialisation `GazeTransform = Camera.main.transform;`. I figured that out by modifying the function  UpdateGazeInfo of the GazeManager:
``
The two approaches were not returning the same values!

I fixed the issue by setting the GazeTransform explicitly to the HoloLens Camera.

Due to this observation I suggest referring to the Camera.main directly in the GazeManager and not via a stored reference (in the default case where the GazeTransform is not set by the user).

I am using HoloToolit 1.5.7, Unity 5.6.2f1 and Vuforia 6.2.10
</Description>
  </Issue>
  <Issue>
    <IssueID>775</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Build &amp; Deploy fails to build APPX if more than one instance of VS is detected by vswhere</Title>
    <CreatedDate>12/07/2017</CreatedDate>
    <ClosedDate>17/07/2017</ClosedDate>
    <IssueLabels />
    <Description>Invalid string output from `CalcMSBuildPath`.
Expected: a single path to vs instance.
Result: two paths on a single line. 
What should happen: Unity should choose the path based on the `Default Scripting Editor` choice in `Editor Preferences`. 
``

Workaround: Uninstall second visual studio instance.</Description>
  </Issue>
  <Issue>
    <IssueID>774</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Apply Mixed Reality Settings menu causes the Editor to hang</Title>
    <CreatedDate>11/07/2017</CreatedDate>
    <ClosedDate>04/09/2017</ClosedDate>
    <IssueLabels />
    <Description>[Migrated from internal feedback 10996587]
"Inside of Unity, when selecting the HoloToolKit -&gt; Configure -&gt; Apply Mixed Reality Project/Scene/Capability Settings

Issue:
When hitting the X button, the Unity editor visibly hangs for a moment. This is particularly inconvenient when trying to explore the options available. I noticed this to be more prominent when leaving the Capability Settings window open and switching to the feedback portal. It was difficult to gain control of the Unity editor again and I almost did a force close. (It started to slowly show life again, so I held off.)

Repo Steps:
1. Open one of the settings windows through HoloToolKit -&gt; Configure -&gt; Apply Mixed Reality Project/Scene/Capability Settings
2. Check/Uncheck a few buttons to read the description.
3. Click the X to close the window."</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>773</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity Editor Extension - Surface the description of a change without requiring the user to click the checkbox</Title>
    <CreatedDate>11/07/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>[Migrated from internal feedback 10996530]
"My suggestion is to surface the description of the change without requiring the user to click the checkbox. At a minimum (since it's a lot of information), even surfacing the first line of the description would give an increased user experience."</Description>
  </Issue>
  <Issue>
    <IssueID>772</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Do not require full HoloToolkit import for Holographic settings</Title>
    <CreatedDate>11/07/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>[Migrated from internal feedback 10977867]
"I like the HoloToolkit menu, but importing HoloToolkit to get just that is too much. Please split that into a separate package."</Description>
  </Issue>
  <Issue>
    <IssueID>771</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoloToolkit 3D text cannot be hidden behind 3D objects</Title>
    <CreatedDate>11/07/2017</CreatedDate>
    <ClosedDate>25/07/2017</ClosedDate>
    <IssueLabels />
    <Description>[Migrated from internal feedback 10976715]
"Using HoloToolkit UI/Prefabs/3DText is not able to be hidden behind 3D objects"</Description>
  </Issue>
  <Issue>
    <IssueID>770</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Applying HoloToolkit scene and project settings should show proper status in menu items</Title>
    <CreatedDate>11/07/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>[Migrated from internal feedback 10971165]
"When we use the HoloToolkit menu to setup camera, field of view, etc., please look at what is already set. If it is set, check it in the little menu you show, that way we don't have to remember or wonder if something has been set previously."</Description>
  </Issue>
  <Issue>
    <IssueID>769</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Building for WSA x64 fails due to a missing WSA x64 PlaneFinding.dll</Title>
    <CreatedDate>11/07/2017</CreatedDate>
    <ClosedDate>04/09/2017</ClosedDate>
    <IssueLabels />
    <Description>Probably related to #746, at least for x64.</Description>
  </Issue>
  <Issue>
    <IssueID>767</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity 2017.1.0f3 Released</Title>
    <CreatedDate>11/07/2017</CreatedDate>
    <ClosedDate>13/07/2017</ClosedDate>
    <IssueLabels />
    <Description>[Introducing Unity 2017](

- Windows: "Visible In Background" player setting now defaults to on.
- Windows: Renamed "Windows Store" to "Universal Windows Platform"
- Universal Windows Platform: Removed support for building Windows 8.1 and Windows Phone 8.1 applications.
- Universal Windows Platform: Unity player binaries are now signed.
- Build Pipeline: Fixed issue where the selected build target wasn't being changed on projects created from command line. This affected changes made to player settings via scripts in these projects.
- Editor: Added missing component icons for the HoloLens WorldAnchor, SpatialMappingRenderer, SpatialMappingCollider, InputModule, and AudioSpatializer.
- Scripting: Editor recompilation is no longer triggered when adding WinRT dlls which are not used by the editor. (861189)
- VR: Camera target eye masks now work under single pass stereo rendering. (817492)
- VR: Fix crash in Editor when attempting to do Holographic Simulation when graphics API forced to DX9 (885634)
- VR: Fixed crash on HoloLens and Windows Mixed Reality caused by large amounts of input data overflowing queue
- VR: Fixed particle shader errors when using instanced single pass. (872164)
</Description>
  </Issue>
  <Issue>
    <IssueID>766</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tap To Place starting in placing mode results in hologram returning to previously anchored position</Title>
    <CreatedDate>11/07/2017</CreatedDate>
    <ClosedDate>11/07/2017</ClosedDate>
    <IssueLabels />
    <Description>If IsBeingPlaced starts out as true, then when AttachAnchor is called the first time the previously attached anchor from the last session is loaded and the object returns to that anchored position instead of being placed properly. My current brute force solution is to insert this line of code before AttachAnchor.
`anchorManager.AnchorStore.Delete(SavedAnchorFriendlyName);` 
(RemoveAnchor does not work in this case as it only removes anchors that are currently active in the scene).



</Description>
  </Issue>
  <Issue>
    <IssueID>763</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Detect location in 3D space using built-in fiducial marker support</Title>
    <CreatedDate>10/07/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>763</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>763</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi all,

this is not exactly an issue but I found following text in the documentation:

&gt; Visual Pairing
&gt; 
&gt; Connect devices just by looking at them
&gt; 
&gt; One device displays a QR code with connection info and security code
&gt; Other device sees QR code, connects, and validates with security code
&gt; **Can also detect location in 3D space using built-in fiducial marker support**

That would be great because I would not be forced to use Vuforia or any of those AR plattforms.
However I can not find any other informations on  #this in the document or in code.
I would be very thankful for some tipps where to find this functionality, if its really built-in.

Many thanks</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>759</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How could we delete all the anchors inside the room on the server(clear the room)?</Title>
    <CreatedDate>07/07/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>759</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>759</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>How could we delete all the anchors inside the room on the server(clear the room) when it's connected to the server (SharingService)? 
When we try to import the anchor from the room all the anchors are uploaded (WorldAnchorTransferBatch.ImportAsync). It's just wasting of time. I need just one anchor. How can I clear the room of the anchors or send the request to get the particular anchor?</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>759</IssueID>
        <PullRequestID>742</PullRequestID>
        <Title>Update to WorldAnchorManager and added MultiLens capabilities</Title>
        <Description>- Fixes #571 If a parent is referenced, then the anchor is added to the parent.
- Fixes #698 Updated `WorldAnchorManager`. Handles creating and deleting Anchors better.
- Fixes #737 Added `SharedWorldAnchorManager` that inherits from `WorldAnchorManager`.
- Updated `SharingTest` scene.
- Updated Sharing prefab to include the `SharedWorldAnchor` component by default.
- See #567. Updated `TapToPlace`.  No longer uses a friendly anchor name, but instead uses the `GameObject.name` of the object that is being moved.
- Fixes #652 Refactored and Renamed `AutoJoinSession` to `AutoJoinSessionAndRoom` and anchors the whole scene appropriately. See #728.
- Refactored `SharingStage` to handle server disconnections better.
- Fixes #803 Sessions list not properly updated in `ServerSessionsTracker`.
- IP address input prefab that remembers the server on subsequent sessions!

![image](

- Added Manual IP Configuration Utility prefab.
- Updated Sharing Test scene.
- Updated `SphereBasedTagalong` to have the option to hide itself after initialization.
- Replaced `AnchorText.prefab` with `AnchorDebug.prefab`.
- Added `SharingManagerDisconnected` event to `SharingStage`.

See #493, #178 and #70

# Breaking Changes
- `GameObjects` that utilize the `WorldAnchorStore` need to have unique names.
    - This is important so you can spawn identical objects across the network without needing to know the anchor names ahead of time.</Description>
        <CreatedDate>27/06/2017</CreatedDate>
        <ClosedDate>13/09/2017</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>BREAKING CHANGE</Name>
            <IssueID>759</IssueID>
            <PullRequestID>742</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>755</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Autodiscover server not working</Title>
    <CreatedDate>04/07/2017</CreatedDate>
    <ClosedDate>12/07/2017</ClosedDate>
    <IssueLabels />
    <Description>I've been trying to get the UNet sharing examples to work. In fact I've been trying to get connections to the Hololens to work for a couple of days. So far I've tried:

- UDP server/client (UWP). Works flawless in Windows 10 and other devices.
- UNet dito. Also works fine on other devices.
- HoloToolkit SharingTest scene with autodiscover (on device and on localhost)
- I have tried on multiple routers, even with the server running ON the router itself.

The ONLY thing that works seems to be the SharingTest scene IF I disable Auto Discover Server setting and fill in a specific IP address. 

But that is not what I need. I need a flexible system hence me trying to get a UDP broadcast working.

All Capabilities are set and no firewalls are interupting. On ALL of the above I can clearly see the packets on the network.

This makes me wonder if there is a firewall blocking on the Hololens? I'm on the way of giving this up. It seems the Hololens does in fact not follow the UWP standard. Can anyone point me in the right direction?

Of course the above should also be considered a bug report. Just opening the scene and running it I find no servers, even on localhost.

</Description>
  </Issue>
  <Issue>
    <IssueID>751</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can not jump to shared location</Title>
    <CreatedDate>03/07/2017</CreatedDate>
    <ClosedDate>05/07/2017</ClosedDate>
    <IssueLabels />
    <Description>Hi,
 
in share Holograms , sometimes when the anchor and locations have been downloaded from the service,the game object has  jumped and lock on ,but the location is not the original  lcoation. How can 
I let the object relocation ?

Thank you.
</Description>
  </Issue>
  <Issue>
    <IssueID>749</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Very long SyncStrings are truncated when sent over sharing service</Title>
    <CreatedDate>30/06/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>749</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi,
I am attempting to transmit image data (e.g. a photo taken at runtime) from one device to another using the sharing service. My current approach is to take the Texture2D, encode it into a JPG byte array, then base64-encode it and set it up as a SyncString as part of a SyncObject model.

However, it appears that very large SyncStrings are not being completely transmitted to other clients. For example, after encoding one particular image in this way, I get a string of size 1057988 characters, but when the other device receives the updated SyncString, it contains only the first 9412 characters. (When loading the data into a Texture2D I see the first couple pixel-rows of the image, a sign of truncated JPG data).

Is there anything I can do to allow for larger sizes of this kind of data when using the sharing service? For specific implementation reasons I would prefer not to have to upload the images to an external site and transmit just a URL via the sharing service.</Description>
  </Issue>
  <Issue>
    <IssueID>748</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>DirectPairing crashes or fails to connect</Title>
    <CreatedDate>29/06/2017</CreatedDate>
    <ClosedDate>06/10/2017</ClosedDate>
    <IssueLabels />
    <Code>
Runtime Error!

Program:

This application has requested the Runtime to terminate it in an unusual way.
Please contact the application's support team for more information.


If ran on Hololens, Visual Studio debug prints:


The program '[3412] NetworkDemo.exe' has exited with code -1073740791 (0xc0000409).


I am using `HoloToolkit-Unity-v1.5.7.0.unitypackage` and `Unity 5.6.2f1`.

Player settings have the following capabilities enabled:


- InternetClientServer
- PrivateNetworkClientServer
- SpatialPerception


Receiver device is configured as follows:


# DirectPairing.cs
Pairing Role: Receiver
Remote Address:  &lt;IP of Receiver&gt;
Remote Port: 2603
Local Port: 2603

# SharingStage.cs
Client Role: Primary
Server Address: localhost
Server Port: 20602
Connect On Awake: False
Auto Discover Server: False
Ping Interval Sec: 2
Is Audio Endpoint: True
Show Detailed Logs: True


Connector device is configured the same, except `Pairing Role` is set to `Connector` or `Unspecified` and `Client Role` is set as `Secondary`:


# DirectPairing.cs
Pairing Role: Connector
Remote Address:  &lt;IP of Receiver&gt;
Remote Port: 2603
Local Port: 2603

# SharingStage.cs
Client Role: Secondary or Unspecified
Server Address: localhost
Server Port: 20602
Connect On Awake: False
Auto Discover Server: False
Ping Interval Sec: 2
Is Audio Endpoint: True
Show Detailed Logs: True


If both devices' `Client Roles` are set to `Primary` then the application does not crash, but still fails to connect. The Receiver device prints the following message:


SharingService [..\..\Source\Common\Private\SyncManagerImpl.cpp (573)]: Two machines with equal authority levels have connected: breaking the connection to avoid sync data corruption
`</Code>
    <Description>I am having trouble using Direct Pairing. Depending on how I configure it, a crash results or the devices fail to connect.

When direct pairing two devices, the device with `DirectParing`'s `Pairing Role` set to `Connector` crashes if its `SharingStage`'s `Client Role` is set to `Secondary` or `Unspecified` and the device with a `Pairing Role` set to `Receiver` has it's `SharingStage` `Client Role` set to `Primary`.
  
If ran in Unity Editor an error box pops up, then Unity crashes and closes:

``

It seems no matter how I configure DirectPairing it either crashes or fails to connect because of authority levels.


**EDIT:**

After further testing it seems that setting `DirectPairing` `Pairing Role` to  `Receiver` and `Sharing Stage` `Client Role` to  `Secondary` or `Unspecified` results in the `Receiver` client crashing immediately on launch (no need to configure a `Connector` device).</Description>
  </Issue>
  <Issue>
    <IssueID>746</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>planefinding.dll and spatialunderstanding.dll causing validation errors in WACK</Title>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>12/02/2019</ClosedDate>
    <IssueLabels />
    <Description>We are trying to submit our UWP app to the Store, but we are getting WACK errors regarding unsupported APIs:
For x64, we are getting the following:
``

x86 passes the WACK validation with no errors.

We are using HoloToolkit-Unity-1.5.6.0. What should we do to fix this? The app is not HoloLens-only, so we need to support all platforms.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>745</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Which one is the most reliable ? Unet sharing or HTK Sharing</Title>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>745</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi,

I've been working on a project for 4 months, and we've used the HTK sharing to share Holograms. We have a lot of Holograms to share, and we also made made a custom event trigger system that allows us to trigger events and send data from one device to another.

Everything works fine with 2 or 3 devices, but once we have more than 3 devices, the SharingService is unreliable and we have a lot of crashes.

I guess the problem is due to the high traffic between so much devices, so before starting to change everything, I would like to know if any of you have worked with the Unet sharing ?

If so, how reliable is it ? did you encounter any problems with it ? Is it stable with a lot of devices ?
Every bit of information would be usefull to me, so please share your experience.

Thank you.</Description>
  </Issue>
  <Issue>
    <IssueID>744</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>744</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>`SceneLoader` uses obsolete `KeywordManager`</Title>
    <CreatedDate>28/06/2017</CreatedDate>
    <ClosedDate>09/09/2017</ClosedDate>
    <IssueLabels />
    <Code>
Assets/HoloToolkit/Utilities/Scripts/SceneLauncher.cs(43,13): warning CS0618: `HoloToolkit.Unity.InputModule.KeywordManager' is obsolete: `Use HoloToolkit.Unity.InputModule.SpeechInputSource'
Assets/HoloToolkit/Utilities/Scripts/SceneLauncher.cs(44,17): warning CS0618: `HoloToolkit.Unity.InputModule.KeywordManager' is obsolete: `Use HoloToolkit.Unity.InputModule.SpeechInputSource'
Assets/HoloToolkit/Utilities/Scripts/SceneLauncher.cs(21,16): warning CS0618: `HoloToolkit.Unity.InputModule.KeywordManager' is obsolete: `Use HoloToolkit.Unity.InputModule.SpeechInputSource'
`</Code>
    <Description>``</Description>
  </Issue>
  <Issue>
    <IssueID>741</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Moving objects in HandDraggable.cs</Title>
    <CreatedDate>26/06/2017</CreatedDate>
    <ClosedDate>15/11/2017</ClosedDate>
    <IssueLabels />
    <Description>In line 225 and 227, the position and the rotation of the targeted object are manipulated directly. However, this causes some ugly glitches if you e. g. try to push your dragged object against a static, kinematic object. The problem seems to be [this issue here](

So instead of
``

Or are there any other reasons (like performance) that made you choose to manipulate the transform directly?</Description>
  </Issue>
  <Issue>
    <IssueID>739</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Asynchronous functions in Unity</Title>
    <CreatedDate>24/06/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>739</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>In meshsaver.cs, asynchronous functions are utilized. However, when I try to implement them in my own application, I get a 'Feature asynchronous functions cannot be used because it is not part of the C# 4.0 language specification' error. How do I implement async functions in Unity?</Description>
  </Issue>
  <Issue>
    <IssueID>738</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>WorldAnchors not saving</Title>
    <CreatedDate>23/06/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>738</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>738</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I tried to implement WorldAnchors into my Project so the next time i start it, the holograms would be at the same position.
When this didn't work, no matter what i did, i started a new Project which just has a cube, the camera, Cursor and the spatial mapping aswell as the worldanchormanager. the cube got the script taptoplace. everything works fine, the room is beeing recognized and i can move the cube to the desired location, but as soon as i restart the app, the cube is in it's original position. What am i doing wrong?</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>738</IssueID>
        <PullRequestID>742</PullRequestID>
        <Title>Update to WorldAnchorManager and added MultiLens capabilities</Title>
        <Description>- Fixes #571 If a parent is referenced, then the anchor is added to the parent.
- Fixes #698 Updated `WorldAnchorManager`. Handles creating and deleting Anchors better.
- Fixes #737 Added `SharedWorldAnchorManager` that inherits from `WorldAnchorManager`.
- Updated `SharingTest` scene.
- Updated Sharing prefab to include the `SharedWorldAnchor` component by default.
- See #567. Updated `TapToPlace`.  No longer uses a friendly anchor name, but instead uses the `GameObject.name` of the object that is being moved.
- Fixes #652 Refactored and Renamed `AutoJoinSession` to `AutoJoinSessionAndRoom` and anchors the whole scene appropriately. See #728.
- Refactored `SharingStage` to handle server disconnections better.
- Fixes #803 Sessions list not properly updated in `ServerSessionsTracker`.
- IP address input prefab that remembers the server on subsequent sessions!

![image](

- Added Manual IP Configuration Utility prefab.
- Updated Sharing Test scene.
- Updated `SphereBasedTagalong` to have the option to hide itself after initialization.
- Replaced `AnchorText.prefab` with `AnchorDebug.prefab`.
- Added `SharingManagerDisconnected` event to `SharingStage`.

See #493, #178 and #70

# Breaking Changes
- `GameObjects` that utilize the `WorldAnchorStore` need to have unique names.
    - This is important so you can spawn identical objects across the network without needing to know the anchor names ahead of time.</Description>
        <CreatedDate>27/06/2017</CreatedDate>
        <ClosedDate>13/09/2017</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>BREAKING CHANGE</Name>
            <IssueID>738</IssueID>
            <PullRequestID>742</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees />
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>737</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>737</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>World Anchor Manager does not work in MultiLens</Title>
    <CreatedDate>22/06/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
    <IssueLabels />
    <Description>Noticed that when saving and deleting anchors using the world anchor manager, that the anchors do not get exported and updated across shared experiences.

We should add the sharing service anchor feature.</Description>
  </Issue>
  <Issue>
    <IssueID>735</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Japanese Keyboard 日本語のキーボード入力です。</Title>
    <CreatedDate>21/06/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels />
    <Description>皆様、IME(InputMethodEnvironment)なしに、基本的なひらがなとカタカナ文字の入力ができるHoloLens用キーボードを作りました。ひらがな・カタカナと濁音・半濁音を支援します。濁音・半濁音は一般的な入力方法とは違ってトグル方法で作りました。（やはり、IMEの支援なしで）便利な入力方法ではないですが、日本語の入力が必要する時に役立ちます。
日本の開発者コミュニティからのフィードバックで、50音キーボードレイアウトタイプを追加しました。距離に応じていくつかのキーにフォーカスバグがまだあります。

これは、キーボードをテストすることができるUnityのSceneです。Text fieldをエアータップするとキーボードが表現されます。


このフォルダの中で、Keyboard_Japanese_50on.prefabが日本語のキーボードです。


Demo Video: 

[備考]
HoloLensデフォルトで使われているキーボードを変更するためのものではありません。


![2017-06-21 16_06_15-unity 5 6 0f3 personal 64bit - keyboardtest unity - holotoolkit-unity - pc ma](

Hi everyone, I am sharing very basic level of Japanese keyboard which supports Hiragana input with dakuon/hantakuon support (without IME). Since this is based on [Patrick Sebring's EN keyboard]( it supports English and Symbol mode too. Since this is temporary basic level keyboard, I am sharing through my forked repo.

Thanks!
Yoon
</Description>
  </Issue>
  <Issue>
    <IssueID>734</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>PrefabSpawnManager is not working without sharingstage</Title>
    <CreatedDate>20/06/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>734</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>we are working on a new app that has to work with a multi device but also standalone. we tried to use the PrefabSpawnManager but without the SharingStage connected ends up in being not functional. Does someone has good alternative? if no alternative would be interested in a updated version that works also without the sharing stage active?</Description>
  </Issue>
  <Issue>
    <IssueID>726</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>"Float" holograms</Title>
    <CreatedDate>16/06/2017</CreatedDate>
    <ClosedDate>14/02/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>726</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Our development team is doing a medical project. When you insert your foot into the dummy and start to look at it from different sides, it creates the feeling that the model in the dummy "swims". Is there any way to solve this problem?</Description>
  </Issue>
  <Issue>
    <IssueID>725</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Securing Direct Headset Pairing</Title>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>725</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>725</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi all,

We are a group of security researchers from the University of Oxford who are currently focusing on the security of HoloLens devices and the general Microsoft Mixed Reality platform.

As part of our research, we are looking into methods of securely establishing initial communication between two HoloLens devices to establish shared holographic experiences, but without relying on a third-party service or online connectivity.
This is crucial in order to prevent man-in-the-middle attacks and subsequent eavesdropping on the communication that can happen if the integrity of the information exchanged over unsecured wireless channel is not verified via some out-of-band channel.

Unfortunately, even though many apps for the Windows Mixed Realiry rely on direct communication between AR devices, there is currently no implementation or an achievable proposal for secure direct pairing of two AR headsets.
The previous proposals for device pairing are not directly applicable to AR headsets, since they assume a single user that controls both devices, which is the case for AR.

In order to close this gap, we proposed a pairing protocol, built a working prototype and experimentally evaluated the security and usability of our proposal, which we describe in our latest paper.

Given that our goal is not only to publish research, but to actively contribute to improving the security of the Platform, we have recently been instructed that raising an issue in this repository and potentially adding our prototype as one of the HoloToolkit-Unity examples might be the best way forward.
Our current prototype implementation is available as a fork under a repository which was anonymised for the double-blind submission: 

Ideally, some form of secure direct pairing should be integrated in the core Sharing module, but we are aware that this is process that depends on many other factors.

Since we plan to continue improving the code, we would greatly appreciate if you could give your opinion:
     
_Would such an application make sense as one of the HoloToolkit-Unity Examples, or is there a more suitable place to make it available to the wider development community?_</Description>
  </Issue>
  <Issue>
    <IssueID>724</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Need a App View Manager to switch To a Xaml View And Return to Unity With a return value </Title>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>19/07/2017</ClosedDate>
    <IssueLabels />
    <Description>In most cases with keyboard input,  (Asia IME) we need a XAML view to input data. But we have not standard example or prefab to help.

Hope we can add one.

  </Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>723</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MicrophoneStream Test Scene Runtime Error</Title>
    <CreatedDate>15/06/2017</CreatedDate>
    <ClosedDate>15/06/2017</ClosedDate>
    <IssueLabels />
    <Description>The MicrophoneStream Test Scene, both with 5.6.1f1 and 5.6.1p3, using current code with no changes, crashes on run:

Runtime Error!
Program:
This application has requested the Runtime to terminate in an unusual way. Please contact the application's support team for more information.

</Description>
  </Issue>
  <Issue>
    <IssueID>722</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>darax</FixedById>
        <IssueID>722</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>SharingWithUNET - Non-Player-Objects not syncing on other clients. </Title>
    <CreatedDate>14/06/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>722</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Using the SharingWithUnet as the starting point for a project, I can get things up and going fine with player objects. Network spawning non-player objects work fine(using the InputModule to control it, specifically IInputClickHandler). And of course, it moves around and works correctly on the system that is moving it. For some reason, nothing I have tried over the last 2 days has been about to get transform to sync on the other clients. If I parent the non-player object to the player it syncs fine as well.  My research tells me this is an issue with the unet authority system and I have tried everything I can think of to alleviate this issue. My question is this- is there something in the Generic Network Transmitter that could be messing with the Unet authority system? </Description>
  </Issue>
  <Issue>
    <IssueID>720</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ShareingServer</Title>
    <CreatedDate>13/06/2017</CreatedDate>
    <ClosedDate>13/06/2017</ClosedDate>
    <IssueLabels />
    <Description>unity5.6.1f1&amp;HoloToolkit-Unity-v1.5.7.0

UnityLog:
SharingService [..\..\Source\Common\Private\XSocketManagerImpl.cpp (728)]: Failed to create incoming connection on port 20605.  Error code: 5
UnityEngine.Debug:LogError(Object)
HoloToolkit.Sharing.Utilities.ConsoleLogWriter:WriteLogEntry(LogSeverity, String) (at Assets/HoloToolkit/Sharing/Scripts/Utilities/ConsoleLogWriter.cs:23)

ShareingServerLog:
Warning: SharingService [..\..\Source\Common\Private\SessionListHandshakeLogic.cpp (96)]:
***************************************************************
List Server Handshake Failed: Invalid schema version.
Expected: 15, got 17
Please sync to latest XTools
***************************************************************
SharingService: ListServer: Handshake failed with error 2</Description>
  </Issue>
  <Issue>
    <IssueID>718</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Update project settings .net target to 4.6</Title>
    <CreatedDate>12/06/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
    <IssueLabels />
    <Description>Unity Editor 5.6 now support .net target 4.6

Some features would be beneficial.

Pros? Cons?</Description>
  </Issue>
  <Issue>
    <IssueID>712</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Scene Launcher does not compile without dependencies on Examples</Title>
    <CreatedDate>07/06/2017</CreatedDate>
    <ClosedDate>08/06/2017</ClosedDate>
    <IssueLabels />
    <Description>Scene Launcher class has external dependencies on `HoloToolkit.Examples.InteractiveElements`.

See </Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>710</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>GesturesInput freezes Unity Editor</Title>
    <CreatedDate>05/06/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>710</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi all!

I've experiencing some issues with the GesturesInput script attached to the InputManger prefab: 

On my Surface Pro 3, Windows 10 Pro (15063.296), Visual Studio 2017, Unity 5.6.1f1 setup, the Editor freezes immediately after pressing play. The "play" button doesn't event turn blue, there are no console messages and Unity doesn't have any CPU activity (0,0 %). I could isolate the GesturesInput script as the troublemaker by disabling all GameObjects in the hierarchy and enabling them one by one again. One can also notice that a running application freezes as soon as the checkbox for the GesturesInput component is enabled again in an already running scene (started with disabled GesturesInput).

I couldn't fix the issue by neither reinstalling Unity nor re-downloading my repo or deleting all created files by the build process.

Strange thing is, that this issue doesn't appear on my desktop computer (same software) or my work laptop (also the same, but VS 2015).
</Description>
  </Issue>
  <Issue>
    <IssueID>709</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[Input] Manipulation update breaks if focus is lost</Title>
    <CreatedDate>02/06/2017</CreatedDate>
    <ClosedDate>28/11/2017</ClosedDate>
    <IssueLabels />
    <Description>When implementing manipulations I found that when the focused object being manipulated is lost by the gaze manager, the `InputManager` does not raise events for manipulation correctly.

[Update] Tested this out on device. Broken there too.</Description>
  </Issue>
  <Issue>
    <IssueID>707</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Start the work to getting RS2 and Master synced up</Title>
    <CreatedDate>02/06/2017</CreatedDate>
    <ClosedDate>01/09/2017</ClosedDate>
    <IssueLabels />
    <Description>This could be quite the undertaking, but we should start looking at updating small parts of master to closer reflect the changes in RS2.

This should happen in many small increments so we can review and test changes.</Description>
  </Issue>
  <Issue>
    <IssueID>706</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spatial Mapping Observer not stopped when Spatial Understanding scanning is finished</Title>
    <CreatedDate>02/06/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>706</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Spatial Mapping / Awareness</Name>
        <IssueID>706</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Is there a reason why the SpatialMappingObserver is not stopped when the RequestFinishScan function is called in SpatialUnderstanding?

In my opinion it should be stopped and started via the SpatialUnderstanding script, or am i wrong?

**Edit:** and what is the use for the UpdatePeriod_AfterScanning variable? just setting the time between updates in the SpatialMappingObserver, so it doesnt update that often? why not just stop it as mentioned?</Description>
  </Issue>
  <Issue>
    <IssueID>704</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Reset All command in SpeechInputSource scene doesn't function</Title>
    <CreatedDate>01/06/2017</CreatedDate>
    <ClosedDate>11/06/2017</ClosedDate>
    <IssueLabels />
    <Description>1) Run SpeechInputSource scene
2) Gaze at a sphere and say "green". The sphere turns green.
3) Say "reset all".
expected: Sphere turns back to grey.
result: Sphere remains green.
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>692</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>io exception</Title>
    <CreatedDate>25/05/2017</CreatedDate>
    <ClosedDate>11/06/2017</ClosedDate>
    <IssueLabels />
    <Description>io exception is occurred when build at 2nd time, VS project from unity.
1st time is no problem</Description>
  </Issue>
  <Issue>
    <IssueID>691</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity 5.6.2f1 Released</Title>
    <CreatedDate>24/05/2017</CreatedDate>
    <ClosedDate>28/06/2017</ClosedDate>
    <IssueLabels />
    <Description>[Unity 5.6.1p1 Released](
---
**HoloLens Specific Fixes:**
- (899087) - Windows Store: Fixed a crash when animating scripting objects on .NET scripting backend.
- (866141) - Windows Store: Fixed an out of bounds array access assert in Mesh code.
- (897807) - Windows Store: Fixed Build &amp; Run with VS2017.
- (888029) - Windows Store: Fixed building player when some files (like UnityOverwrite.txt, WSATestCertificate.pfx, project.lock.json) are set to read-only.
- (880362) - Windows Store: Fixed issue where pasting an item in the InputField always pastes the item that was first in the clipboard before launching the player.
- (875834) - Windows Store: Fixed issue where pressing and holding Xbox One controller button A led to false keydown events during the first frame of a Scene.
- (892653) - Windows Store: Fixed serialization when a serializable type derives from another serializable type in another assembly that has a serializable private field.</Description>
  </Issue>
  <Issue>
    <IssueID>690</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>NearFadePlane sample</Title>
    <CreatedDate>24/05/2017</CreatedDate>
    <ClosedDate>24/06/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>690</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>are there any examples how the nearfadeplane works? tried to get it working but not getting it to work
</Description>
  </Issue>
  <Issue>
    <IssueID>688</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HTK will not build as XAML</Title>
    <CreatedDate>24/05/2017</CreatedDate>
    <ClosedDate>10/07/2017</ClosedDate>
    <IssueLabels />
    <Description>

This line forces build to D3D regardless of how the user has it set in Build settings. This is very confusing when trying to enable the built-in Hololens keyboard support as Microsoft's documentation claims it can be done by switching the build mode to XAML.

This is made all the more confusing as the Unity Editor menu option HoloToolkit &gt; Configure &gt; Apply Hololens Project Settings dialog calls out this editor setting suggesting it be set to D3D. However it appears this setting is ignored by the HTK Build window.

The line above should be changed to pull the user's selection from build settings.

(There is also a bug where the XAML project won't build into an APPX but I think that is a Unity bug and is worked around by fixing the XAML project template's naming collision between UnityEngine.blahblah.Window and Windows.UI.Xaml.Window. The Unity team will ultimately need to fix that.).</Description>
  </Issue>
  <Issue>
    <IssueID>687</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How does SurfaceMappingSource's EventHandlers work?</Title>
    <CreatedDate>23/05/2017</CreatedDate>
    <ClosedDate>21/05/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>687</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>687</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>csharp
// SpatialMappingSource.cs
public event EventHandler&lt;DataEventArgs&lt;SurfaceObject&gt;&gt; SurfaceAdded;
public event EventHandler&lt;DataEventArgs&lt;SurfaceUpdate&gt;&gt; SurfaceUpdated;
public event EventHandler&lt;DataEventArgs&lt;SurfaceObject&gt;&gt; SurfaceRemoved;
public event EventHandler&lt;EventArgs&gt; RemovingAllSurfaces;

protected void AddSurfaceObject(SurfaceObject toAdd)
{
    ...
    var handlers = SurfaceAdded;
    if (handlers != null)
    {
        handlers(this, DataEventArgs.Create(toAdd));
    }
}
...

I also checked out [`DataEventArgs.cs`](https://github.com/Microsoft/HoloToolkit-Unity/blob/master/Assets/HoloToolkit/Utilities/Scripts/DataEventArgs.cs).

csharp
namespace HoloToolkit.Unity
{
    public static class DataEventArgs
    {
        public static DataEventArgs&lt;TData&gt; Create&lt;TData&gt;(TData data)
        {
            return new DataEventArgs&lt;TData&gt;(data);
        }
    }

    [Serializable]
    public class DataEventArgs&lt;TData&gt; : EventArgs
    {
        public TData Data { get; private set; }

        public DataEventArgs(TData data)
        {
            Data = data;
        }
    }
}
`</Code>
    <Description>Hi, 

I've been reading [`SpatialMappingSource.cs`](
I couldn't understand how this works.
``
But this didn't really tell me anything.

How does this event handler works? When are they called and what do they do?
I assume that this is used by `SurfaceMappingObserver` as a subclass but I can't figure out how.</Description>
  </Issue>
  <Issue>
    <IssueID>686</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Are the examples no longer included in the Holotoolkit Unity Package or is it just me? </Title>
    <CreatedDate>23/05/2017</CreatedDate>
    <ClosedDate>25/05/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>686</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Do we just download the examples individually or is there a separate package I need to download?</Description>
  </Issue>
  <Issue>
    <IssueID>685</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Failure to compile APPX with VS2017-only versions of Windows 10 SDK does not instruct the user on how to fix (HTU/Unity only seems to support VS2015 which needs an older SDK version)</Title>
    <CreatedDate>22/05/2017</CreatedDate>
    <ClosedDate>10/07/2017</ClosedDate>
    <IssueLabels />
    <Description>[Edit: Correction: I had VS2015 installed but none of the bundled Windows 10 SDKs. The SDKs I had were for VS2017.]

I receive an error about missing the Windows Mobile SDK 10.0.15063.0 (eg Windows 10 Creator Update version) even if the SDK is installed.

The issue seems to be that the HoloToolkiit-Unity is trying to use MSBuild v14 (which is present) but the Windows 10 SDK download page specifically says the 15063 SDK is not usable in VS2015 (v14?) or earlier versions.

If I manually invoke the build process using MSBuild v15 from a VS2017 developer cmd.exe (using the start menu shortcut) the APPX build works fine.

If I try to switch to MSBuild v15 using the HoloToolkit-Unity UI it can't find it. It seems like it is looking for a registry key which does not contain an entry for v15. I have to manually patch the code to hardcode the location (in C:\Windows\Microsoft.NET\v4.0.XXXX whatever\MSBuild.exe).

However there are still further issues since it still won't compile using HoloToolkit-Unity as I receive the error: MSB4019: The imported project "C:\Program Files (x86)\MSBuild\Microsoft\WindowsXaml\v11.0\Microsoft.Windows.UI.Xaml.CSharp.targets" was not found. There must be something else the Developer console shortcut for VS2017 is doing that HTU needs to do.

(It may be relevant that I am targeting XAML in Unity for Hololens keyboard support.)

I am running Unity v5.6.1 on Windows 10 x64 Build 14393.1198. (This is a work PC and that is the newest approved version of Windows to my knowledge.)</Description>
  </Issue>
  <Issue>
    <IssueID>684</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Errors after importing HoloToolKit-Unity-v1.5.7.0.unitypackage</Title>
    <CreatedDate>22/05/2017</CreatedDate>
    <ClosedDate>22/05/2017</ClosedDate>
    <IssueLabels />
    <Description>I downloaded the latest package (see header) today and after importing into a new Unity 5.5.2f1 project I get the three errors below. I got the package from Master Branch/HoloToolkit-Unity/External/Unitypackages/.

Assets/HoloToolkit/Build/Editor/BuildSLNUtilities.cs(174,37): error CS1501: No overload for method `SwitchActiveBuildTarget' takes `2' arguments

Assets/HoloToolkit/Build/Editor/BuildSLNUtilities.cs(248,41): error CS1501: No overload for method `SwitchActiveBuildTarget' takes `2' arguments

Assets/HoloToolkit/Utilities/Scripts/Editor/ProjectSettingsWindow.cs(207,41): error CS1501: No overload for method `SwitchActiveBuildTarget' takes `2' arguments

I'm not sure how to fix this. You assistance is greatly appreciated.
</Description>
  </Issue>
  <Issue>
    <IssueID>683</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InputManager causing UI events to fire twice</Title>
    <CreatedDate>22/05/2017</CreatedDate>
    <ClosedDate>07/06/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>683</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Rotating 90 degrees (frame 605).
UnityEngine.Debug:LogFormat(String, Object[])
MoveProjectMenu:RotateProject(Single) (at Assets/Scripts/UI/MoveProjectMenu.cs:217)
UnityEngine.EventSystems.ExecuteEvents:ExecuteHierarchy(GameObject, BaseEventData, EventFunction`1)
HoloToolkit.Unity.InputModule.InputManager:HandleEvent(BaseEventData, EventFunction`1) (at Assets/HoloToolkit/Input/Scripts/InputManager.cs:256)
HoloToolkit.Unity.InputModule.InputManager:RaiseInputClicked(IInputSource, UInt32, Int32) (at Assets/HoloToolkit/Input/Scripts/InputManager.cs:352)
HoloToolkit.Unity.InputModule.GesturesInput:OnTappedEvent(InteractionSourceKind, Int32, Ray) (at Assets/HoloToolkit/Input/Scripts/InputSources/GesturesInput.cs:154)
UnityEngine.VR.WSA.Input.GestureRecognizer:InvokeTapEvent(InteractionSourceKind, Ray, Int32)


Rotating 90 degrees (frame 620).
UnityEngine.Debug:LogFormat(String, Object[])
MoveProjectMenu:RotateProject(Single) (at Assets/Scripts/UI/MoveProjectMenu.cs:217)
UnityEngine.EventSystems.EventSystem:Update()
`</Code>
    <Description>Greetings,

I've recently started running into an issue that causes my button events to fire twice.

To allow users to drag and drop objects to move them around, I use the IInputHandler interface to detect user input. This requires the InputManager and a call to it's `AddGlobalListener` method. The implementation worked great, but ever since I've been trying to figure out why my button events would fire twice (not always, just most of the time).
I'm using a world space canvas with simple button On Click events (defined in the Unity Inspector), which are handled by the HoloLensInputModule.

After digging around, it appears that the InputManager handles UI input as well, but doesn't prevent the main event system from calling the same method. As such, I'm left with the below two stacktraces. Despite the frame difference, this is the result of one tap gesture:

``

I found a somewhat related issue ( but it didn't help since both calls were handled by the HoloToolkit, allowing the user to set and read the used flag.

I also found a thread on the HoloLens forums ( where a user seemingly 'solved' the issue by increasing certain intervals. I did try out this workaround, but without any positive results.

Apologies if I'm misunderstanding the big picture of the InputManager. Any alternatives or solutions are very much appreciated.</Description>
  </Issue>
  <Issue>
    <IssueID>681</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpatialUnderstandingExample shows spatial mesh in pink</Title>
    <CreatedDate>21/05/2017</CreatedDate>
    <ClosedDate>22/05/2017</ClosedDate>
    <IssueLabels />
    <Description>Run the SpatialUnderstandingExample scene.
result: Spatial mesh is shown as solid pink. (Or doesn't show at all. I was getting inconsistent results.)
expected: Spatial mesh is shown as green wireframe.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>678</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>WindowsStoreApp folder should be ignored in Git</Title>
    <CreatedDate>18/05/2017</CreatedDate>
    <ClosedDate>24/05/2017</ClosedDate>
    <IssueLabels />
    <Description>In Unity editor menu choose HoloToolkit &gt; Build Window.
Click Build Visual Studio SLN to build.
Run "git status" in command window or check Git changes window in Visual Studio.

result: WindowsStoreApp shows as untracked files.
expected: WindowsStoreApp folder isn't shown. It should be ignored, similar to other automatically generated or built files such as solutions and projects.</Description>
  </Issue>
  <Issue>
    <IssueID>676</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to implement In app Windows Store purchase with UWP?</Title>
    <CreatedDate>18/05/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>676</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Is possible (or will be) to implement Windows Store purchase with hololens?</Description>
  </Issue>
  <Issue>
    <IssueID>675</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unit tests fail in Unity editor: Vector3_TransformPoint and Vector3_InverseTransformPoint are not implemented</Title>
    <CreatedDate>18/05/2017</CreatedDate>
    <ClosedDate>24/05/2017</ClosedDate>
    <IssueLabels />
    <Description>In the Unity editor, do Window &gt; Test Runner and click Run All

result: The tests Vector3_TransformPoint and Vector3_InverseTransformPoint faiol with NotImplementedException

expected: All tests pass. (Tests that aren't yet implemented should be disabled per [contributing]( guidelines.)</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>674</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Need an easy way to switch between scenes when testing HoloToolkit-Unity</Title>
    <CreatedDate>18/05/2017</CreatedDate>
    <ClosedDate>17/06/2017</ClosedDate>
    <IssueLabels />
    <Description>There are currently more than 50 scenes in the project. Someone may want to try out multiple different scenes in order to browse the features that are available in HoloToolkit or in order to test a change to make sure it hasn't broken things.

Currently, in order to run scenes on HoloLens, I open them in Unity, make a Unity build, make a Visual Studio build, and wait for the HoloLens app to load.

Is there a easier way to do this that I'm missing?</Description>
  </Issue>
  <Issue>
    <IssueID>673</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Sharingservice connect attempt causes app to die on HoloLens</Title>
    <CreatedDate>17/05/2017</CreatedDate>
    <ClosedDate>03/10/2017</ClosedDate>
    <IssueLabels />
    <Description>Updated - I reported the issue a few days ago. Having spent a day or two looking at it I think its the issue mentioned here 
*********************************************************************

Hi have a problem with the HoloToolKit for Unity. I am using the current version of the HoloToolKit (download yesterday)  running in a Unity 5.60f3, built and debugging using VS 2017.

When I add the ImportExportAnchorManager to a simple test app the app dies as it loads on HoloLens with no debug output. Tracing it through it appears to execute line 225 in ImportExportAnchorManager which in my build reads SharingStage.Instance.SharingManagerConnected += Connected; (see below for the full function)

and returns - it appears to die just after the return.
Sorry for the lack of precision here I don't seem to be able trace it any closer as the debugger is jumping and missing the exact line that is tripping it up.

private void Start()
{
// SharingStage should be valid at this point, but we may not be connected.
if (SharingStage.Instance.IsConnected)
{
Connected();
}
else
{
SharingStage.Instance.SharingManagerConnected += Connected;
}
}


The only debug I get after this line is in SharingStage.cs in HandleLog which is an Assert with the log message logString = "WinRTScriptingObjectWrapper::InternalAddRef Reference Count cannot be zero"

When I remove ImportAnchorManager   and just run the sharingstage and autojoin scripts I can see the Hololens connecting to the sharing service (running via WIFI on my local machine with no firewall) just fine.

The project is a brand new one with a single empty  parent game object and a single child with only AnchorText  for debuging.

The sharing service log records
SharingService: Created Session "Default" with ID 0 on port 20601
SharingService:  ** Logging Session Began at 22:25:36, 5-18-2017
SharingService: ***********************************
SharingService: ****** Sharing Service OnStart ******
SharingService: ***********************************
SharingService: Server Info: 
	Build Version: 1.1.0.0 
	Schema Version: 17
SharingService: Listening for session list connections on port 20602 of all network devices of the local machine.
SharingService: Local IP addresses are:
SharingService: 	172.16.80.1
SharingService: 	169.254.80.80
SharingService: 	10.10.1.130
SharingService: Created Session "Default" with ID 0 on port 20601
SharingService: ListServer: Handshake failed with error 1


Any ideas gratefully received</Description>
  </Issue>
  <Issue>
    <IssueID>672</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How do I cache a spatial map?</Title>
    <CreatedDate>16/05/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>672</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>672</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Like in fragments.

So players don't need to scan their room every time they start my app?

thx</Description>
  </Issue>
  <Issue>
    <IssueID>671</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoloToolkit menu item not visible</Title>
    <CreatedDate>15/05/2017</CreatedDate>
    <ClosedDate>18/05/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>671</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hello,
I followed the gettingStarted guide but after Step 2 there is no "HoloToolkit" menu item displayed in Unity. I tried to install it several times but unfortunately without success. I have tried to install HoloToolkit-Unity with Unity Version 5.5.0f3 (with Version 1.5.5.0 of HoloToolkit-Unity) and 5.6.0f3 (with Version 1.5.6. of HoloToolkit-Unity).
What am I doing wrong? Or is it a bug? Thank you for your help in advance.
Cheers,
CarpeTempus</Description>
  </Issue>
  <Issue>
    <IssueID>670</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>New Changes in IInputClickHandler to method OnInputClicked right?</Title>
    <CreatedDate>13/05/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>670</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>error CS0535: `HoloToolkit.Examples.SharingWithUNET.PlayerController' does not implement interface member `HoloToolkit.Unity.InputModule.IInputClickHandler.OnInputClicked(HoloToolkit.Unity.InputModule.InputClickedEventData)'

Did I make a mistake or is there an error in the Toolkit? I upgraded my local HoloToolkit with the newest version and receive everywhere an error where IInputClickHandler is used but "public void OnInputClicked(**InputEventData** eventData)" is implemented. The System suggest to implement "public void OnInputClicked(Input**Clicked**EventData eventData)" instead.

Should I change the parameter to InputClickedEventData on my system? </Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>669</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity 2017 beta, error on compile</Title>
    <CreatedDate>12/05/2017</CreatedDate>
    <ClosedDate>30/05/2017</ClosedDate>
    <IssueLabels />
    <Description>In case this comes up for anyone else, I just installed the latest Unity beta, 2017.1.0b56 to give it a try, and using latest HoloLens code. A single error blocks build:

CustomMaterialEditor.cs, line 103

    matEditor.BeginAnimatedCheck(scaleOffsetProp);

Looks like the signature changed and it now requires (Rect totalPosition,...)  as a first param. Easy fix to get it to compile (though not sure of any other impact).

    matEditor.BeginAnimatedCheck(new Rect(), scaleOffsetProp);
</Description>
  </Issue>
  <Issue>
    <IssueID>666</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>World Anchor and tap to placement</Title>
    <CreatedDate>12/05/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>666</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I just want to build a scene like this,but I have several problems: 
1. tap my finger in the real world, there will be a cube Instantiated at the cursor hit point; but when I want to instantiate more cube , the cube position wasn't the cursor hit point, them were at the previous cube position. I tried to disable  "World Anchor Manager.cs"and "Tap To Place.cs"  in unity ,there were what I wanted, but I cannot tap and place the cube any more;
2. tap my finger on the cube (which was instantiated),that I can put it any where I wanted in the real world.SomeTimes they worked not very well, you should restart the scene several times that can worked well;
3. placed the cube,adjusted the button on UI to controll the cube to move to every directions and rotate to every directions;but when I click the button ,there is no reaction,I had tried disabled the "World Anchor Manager.cs"and "Tap To Place.cs" after placed the cube,  but the button was no reaction either;
4.when I used model with a big scale (the count is only one),the machine running very card; but when I do it as the Academy Holograms 101, without holotoolkit 1.5.6 ,there is no problem;
PS: you can _also_ contact with me by email anger37@sohu.com


</Description>
  </Issue>
  <Issue>
    <IssueID>665</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MappingStanding Mesh</Title>
    <CreatedDate>11/05/2017</CreatedDate>
    <ClosedDate>12/05/2017</ClosedDate>
    <IssueLabels />
    <Description>How to  delete understanding mesh?</Description>
  </Issue>
  <Issue>
    <IssueID>662</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Extensive interactive examples and prototype components</Title>
    <CreatedDate>09/05/2017</CreatedDate>
    <ClosedDate>12/05/2017</ClosedDate>
    <IssueLabels />
    <Description>I have a bunch of examples of interactive buttons with full input feedback and some prototyping components. I figured the safest place was HoloToolkit-Examples. You can check out the pull request and let me know what you think. #661 </Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>660</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Simplify options of FastConfigurable, provide advanced mode</Title>
    <CreatedDate>09/05/2017</CreatedDate>
    <ClosedDate>10/05/2017</ClosedDate>
    <IssueLabels />
    <Description>I really appreciate the performance and variability of the new FastConfigurable shader. But I'd suggest to simplify the settings a little bit:

I had a few issues when trying to use transparent or semi-transparent materials. After reading up on Alpha Blending, I was able to configure the shader in the way I wanted to use it (SrcAlpha-&gt;One, Add), but objects in the depth were hidden by a completely transparent object until I noticed that I have to turn ZWrite off.

Therefore, for easier usage of the shader, I propose to wrap some settings into a easier understandable setting (e.g. "Opaque", "Transparent", etc. as given in the standard shader) and maybe add a more advanced mode, enabled by setting a simple flag in the shader settings. This would enable users which are new to "rendering mathematics" to simply select a descriptive option such as "Transparent" to automatically set the more advanced settings for SrcBlend and DestBlend and ZWrite and so on.</Description>
  </Issue>
  <Issue>
    <IssueID>659</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to not load system-global space data on start?</Title>
    <CreatedDate>08/05/2017</CreatedDate>
    <ClosedDate>09/05/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>659</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'm trying to build an app like "Young Conker" where you can have your own spatial mapping, isolated from the system-global space data. I looked at `SpatialMappingObserver` and `SpatialMappingManager` but cannot find where it's loading from the system.</Description>
  </Issue>
  <Issue>
    <IssueID>655</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Make SpatialUnderstanding's ScanSearchDistance configurable</Title>
    <CreatedDate>05/05/2017</CreatedDate>
    <ClosedDate>23/03/2018</ClosedDate>
    <IssueLabels />
    <Description>Is there a reason to make the setting mentioned above constant? 

Otherwise this makes the whole usage more unflexible. This parameter specifies how much of area has to be scanned and walked along until the scanning process is completed and the understanding module determines the surfaces, right? Because I'd like specify for myself how big my "play area" should be.

So just removing the const would enable me to do this on my own.</Description>
  </Issue>
  <Issue>
    <IssueID>652</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>why is ImportExportAnchorManager part of tests?</Title>
    <CreatedDate>04/05/2017</CreatedDate>
    <ClosedDate>12/07/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>652</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The ImportExportAnchorManager is a pretty important part of making a great shared experiences. Why is this part of HoloToolkit-Tests and not more in the core?

Beside i have two issues with this class:

- If InitRoomApi is unable to move to the next state of the class within the same frame it will be called multiple times. While this is not happening very often it will happen sometimes. I suggest adding an extra state that it is initializing the room api

- running the app in the unity editor (for the recording in the spectator view) causes to create new room while there is already a room.

This happens on this line of code: if (roomManager.GetRoomCount() == 0)
one on the time times the roomcount is 0 while i am sure there is a room already created. when adding a second delay before really initializing works around it. Any ideas on this. Fixing the GetRoomCount() seems impossible since not having the code</Description>
  </Issue>
  <Issue>
    <IssueID>650</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Display Mirrored Top to Bottom</Title>
    <CreatedDate>03/05/2017</CreatedDate>
    <ClosedDate>03/05/2017</ClosedDate>
    <IssueLabels />
    <Description>I usually only see this effect with Image Effects, but when running any of the HoloToolkit example scenes on 5.6, everything is upside down.  *Everything* including the wireframe mesh of the real world.

I tried using a matrix transformation on the camera to flip things around again, but it didn't work.

Not sure what else to try.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>649</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Publish Remote Host Desktop App</Title>
    <CreatedDate>02/05/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>649</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>This is less of an issue and more of a feature request.
I was wondering if there is a way to publish an application from Unity with remote hosting built in.  I can run remote hosting from the Unity Editor but would love to do this with a self contained app.  Is there a way to do this without going into the VS project that Unity publishes?  And if not, is there a guide for how to do this with a VS project published through Unity?  Thanks!

</Description>
  </Issue>
  <Issue>
    <IssueID>648</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Build window crashes unity</Title>
    <CreatedDate>02/05/2017</CreatedDate>
    <ClosedDate>04/05/2017</ClosedDate>
    <IssueLabels />
    <Description>Hello , I recently upgraded to unity 5.5 2f1 and to latest realase of HTK and I'm using VS15.
Cant seem to build, unity crashes right away and only thing I can find from logs is  "Read from location 00000010 caused an access violation."

There are similar topics but did not find a clear answer to this issue.
</Description>
  </Issue>
  <Issue>
    <IssueID>647</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Best practice sending over image files from backend server to HoloLens?</Title>
    <CreatedDate>01/05/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>647</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'm currently using a JSON txt file as a configuration file to get several lightweight stuff like strings and numbers. But for my current project I want to get some images from my own webserver and show it into the HoloLens app. 

The thing is: I want it to be configurable, and for that purpose I'm currently using a Base64 byte array in a JSON file to get the image. Problem is, when I read and process this array the HoloLens app freezes for a couple of seconds when the app gets started and I initialize the JSON. 

I presume there is a better way to load images dynamically, but what is the better way?</Description>
  </Issue>
  <Issue>
    <IssueID>646</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Text to speech script not working</Title>
    <CreatedDate>30/04/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>646</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I followed this guide ( on how to use the text to speech manager. I have verified that I have attached the audio source to the textToSpeech.cs script, but when the project loads I get the following output:

“An AudioSource is required and should be assigned to ‘Audio Source’ in the inspector.”
Speech not initialized. “Hello World”

Am I missing something?
</Description>
  </Issue>
  <Issue>
    <IssueID>643</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Play audio on gaze</Title>
    <CreatedDate>28/04/2017</CreatedDate>
    <ClosedDate>23/08/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>643</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
public class PlaySoundOnGaze : MonoBehaviour
{
    protected SpatialMappingManager spatialMappingManager;

    private bool isAudioPlaying = false;

    void Start()
    {
        spatialMappingManager = SpatialMappingManager.Instance;
    }

    void Update()
    {
        if (!isAudioPlaying)
        {
            Vector3 headPosition = Camera.main.transform.position;
            Vector3 gazeDirection = Camera.main.transform.forward;

            RaycastHit hitInfo;
            if (Physics.Raycast(headPosition, gazeDirection, out hitInfo, 30.0f, spatialMappingManager.LayerMask))
            {
                Debug.Log("Playing audio...");
                GameObject child = gameObject.transform.GetChild(0).gameObject;
                child.GetComponent&lt;AudioSource&gt;().Play();
                Debug.Log("is playing? " + child.GetComponent&lt;AudioSource&gt;().isPlaying);
                isAudioPlaying = true;
            }
        }
    }
}
`</Code>
    <Description>I'm looking to have some my object AudioSource components start playing when they first gazed at (I actually need to figure out something better, because I need to place them in the spatial mesh first, then, later on, have the audio start, but first I need to fix this issue!).

How do I do a raycast from the camera (head position) to the various objects in the scene (that already have colliders available, as they use TapToPlace)

I have tried the following, but the audio starts right away (audio source property "play on awake" is off)

``

I _think_ the problem is that I'm raycasting into the spatial mesh? The raycast code was lifted out of the TapToPlace script.

How do I make it so the cursor has to be on the object for the raycast to be true?</Description>
  </Issue>
  <Issue>
    <IssueID>642</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Align to spatial mesh?</Title>
    <CreatedDate>27/04/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>642</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>642</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
if (Physics.Raycast(headPosition, gazeDirection, out hitInfo, 30.0f, spatialMappingManager.LayerMask))
                {
                    // Rotate this object to face the user.
                    Quaternion toQuat = Camera.main.transform.localRotation;
                    toQuat.x = 0;
                    toQuat.z = 0;

                    var cursorRotation = cursor.transform.localRotation; // get cursors rotation

                    // Move this object to where the raycast
                    // hit the Spatial Mapping mesh.
                    // Here is where you might consider adding intelligence
                    // to how the object is placed.  For example, consider
                    // placing based on the bottom of the object's
                    // collider so it sits properly on surfaces.
                    if (PlaceParentOnTap)
                    {
                        // Place the parent object as well but keep the focus on the current game object
                        Vector3 currentMovement = hitInfo.point - gameObject.transform.position;
                        ParentGameObjectToPlace.transform.position += currentMovement;
                        ParentGameObjectToPlace.transform.rotation = toQuat;
                    }
                    else
                    {
                        gameObject.transform.position = hitInfo.point;
                        //gameObject.transform.rotation = toQuat; // old code
                        gameObject.transform.rotation = cursorRotation; // new rotation
                    }
                }
`</Code>
    <Description>I want to align gameobjects that use "TapToPlace" to the mesh created by spatial mapping.

I think I'm on the right track by modifying the TapToPlace.cs script. I have added a public gameobject which I drag the cursor object to, and then I have modified the following code:

``

However, it just doesn't seem quite right. Especially, when trying to place an object on a ceiling, it does not face downwards.</Description>
  </Issue>
  <Issue>
    <IssueID>641</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to occlude part of placeable object that intersect room mesh?</Title>
    <CreatedDate>27/04/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>641</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>641</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Seeing as object are placed using their transform origin, how can I occlude any part of the mesh that intersects the room mesh and would appear "outside" the room?

Example; make a sphere and add TapToPlace script. You can place this around the room, but half of it will be "behind" the room mesh, as it's origin is in the middle of the sphere.

In addition, let's say I have a cylinder, aiming straight up, with its base at ZY 0, 0. If you place it on the floor, it would point straight up, fine. But if you place it on a wall (vertical mesh/plane) how would you make it lie horizontally, following the orientation of the mesh it is placed on?</Description>
  </Issue>
  <Issue>
    <IssueID>640</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>World Anchor Store never ready</Title>
    <CreatedDate>27/04/2017</CreatedDate>
    <ClosedDate>31/05/2017</ClosedDate>
    <IssueLabels />
    <Description>I stumbled upon this problem yesterday, when i first got into world anchors. Basically what i tried is to get the World Anchor Manager working, but the problem i had is that the callback when the anchor store is ready never got called. So i thought maybe i just messed up and created a new project with just the spatialmapping and world anchor store manager in it. Well the end of the story was that it still didnt work.

So i fiddled around a little bit and changed:
``

Basically i let the code in the Awake() function run in the Start() function. Maybe there is something not yet initialized when Awake() gets called, cause i also got an NullReference Error.

Is this a bug? Should the code in Awake() run in the Start() function?</Description>
  </Issue>
  <Issue>
    <IssueID>638</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>CursorModifier does not hide cursor on focus</Title>
    <CreatedDate>25/04/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>Unless I missed something, ICursorModifier.GetCursorVisibility() does not seem to be called so the CursorModifier.HideCursorOnFocus property is useless at the moment.

Also, as it is implemented, GetCursorVisibility() returns HideCursorOnFocus which seems quite misleading as I would expect it to return !HideCursorOnFocus.</Description>
  </Issue>
  <Issue>
    <IssueID>636</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>TapToPlace script Small Issue</Title>
    <CreatedDate>21/04/2017</CreatedDate>
    <ClosedDate>31/05/2017</ClosedDate>
    <IssueLabels />
    <Description>Have a feeling that we should check if the anchorManager.AnchorStore exists and are ready before Attach or Remove Anchors in the OnInputClicked handler.
Something like:
if (anchorManager.AnchorStore != null)
{
// Add world anchor when object placement is done.
anchorManager.AttachAnchor(gameObject, SavedAnchorFriendlyName);
}</Description>
  </Issue>
  <Issue>
    <IssueID>635</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Example SharingwithUnet not working with Unity 5.6</Title>
    <CreatedDate>21/04/2017</CreatedDate>
    <ClosedDate>14/08/2017</ClosedDate>
    <IssueLabels />
    <Description>I tried with 5.5.2f which worked fine for me. After Upgrading to 5.6 the Client gets the Anchor ID but the Anchor dont sync.</Description>
  </Issue>
  <Issue>
    <IssueID>634</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity hololens using holotoolkit FOV always 16.97196</Title>
    <CreatedDate>21/04/2017</CreatedDate>
    <ClosedDate>05/06/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>634</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I am using unity with holotoolkit for developing app for hololens. The issue is the Field of View (FOV) of the main camera is always 16.97196 no matter what values is input. I even added a script to deliberately set the FOV value to 60 but it resets to 16.97196. Can the FOV value be set the user requirements. 
![fov](
</Description>
  </Issue>
  <Issue>
    <IssueID>632</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>I just pushed to master</Title>
    <CreatedDate>20/04/2017</CreatedDate>
    <ClosedDate>20/04/2017</ClosedDate>
    <IssueLabels />
    <Description>I was trying to get my local and remote branches updated to the latest version of HoloToolkit-Unity, but now I see one of them points to our master. Can someone revert may latest commit or let me know how to do it?</Description>
  </Issue>
  <Issue>
    <IssueID>629</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>PlaneFinding.dll is missing for Plugins\WSA\x64</Title>
    <CreatedDate>19/04/2017</CreatedDate>
    <ClosedDate>05/09/2017</ClosedDate>
    <IssueLabels />
    <Description>Under `Assets\HoloToolkit\SpatialMapping`, there are two versions of `PlaneFinding.dll` for x86 (one in `Plugins\WSA\x86` and the other in `Plugins\x86`.) There is, however, only one version of `PlaneFinding.dll` for x64, found in `Plugins\x64`.

I think this causes the VisualStudio side of the build to fail because it can't find the dll it is looking for.
&gt; Could not copy the file `"D:\Project\App\Project\Plugins\x64\PlaneFinding.dll"` because it was not found.</Description>
  </Issue>
  <Issue>
    <IssueID>628</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Move existing materials to FastConfigurable, delete old shaders</Title>
    <CreatedDate>19/04/2017</CreatedDate>
    <ClosedDate>28/07/2017</ClosedDate>
    <IssueLabels />
    <Description>With the superior performance in the new FastConfigurable and growth of features there, all my older shaders should be removed:

1. BlinnPhongConfigurable
2. BlinnPhongConfigurableTransparent
3. LambertianConfigurable
4. LambertianConfigurableTransparent
5. StandardFast
6. UnlitConfigurable
7. UnlitConfigurableTransparent
8. UnlitNoDepthTest
9. VertexLitConfigurable
10. VertexLitConfigurableTransparent

And matierals using them moved to use FastConfigurable.</Description>
  </Issue>
  <Issue>
    <IssueID>626</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Question: Why was GestureManager removed</Title>
    <CreatedDate>19/04/2017</CreatedDate>
    <ClosedDate>19/04/2017</ClosedDate>
    <IssueLabels />
    <Description>Why was GestureManager was removed in commit 3c404ad3adf2570bd227b4a989f2999ea9522659 ? 

Is there a replacement or this should be handled individually ? </Description>
  </Issue>
  <Issue>
    <IssueID>625</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>DLL Not Find，I try to Config DLL into X64 or X86,while ,this does not help</Title>
    <CreatedDate>19/04/2017</CreatedDate>
    <ClosedDate>16/09/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>625</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>DllNotFoundException: SpatialUnderstanding
</Description>
  </Issue>
  <Issue>
    <IssueID>624</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Multiple errors on build</Title>
    <CreatedDate>18/04/2017</CreatedDate>
    <ClosedDate>20/04/2017</ClosedDate>
    <IssueLabels />
    <Description>I was having issues with the latest download so I created a blank project with just the Holotoolkit package. Applied settings.

Versions:
Unity 5.5.0f3
VS 2017 15.1 (26403.7)

Build:
Universal 10
Holoens
D3D
Unity C# Projects

Error list:
Assets\HoloToolkit-Examples\SharingWithUNET\Scripts\GenericNetworkTransmitter.cs(114,57): error CS0246: The type or namespace name 'StreamSocketListener' could not be found (are you missing a using directive or an assembly reference?)

Assets\HoloToolkit-Examples\SharingWithUNET\Scripts\GenericNetworkTransmitter.cs(114,86): error CS0246: The type or namespace name 'StreamSocketListenerConnectionReceivedEventArgs' could not be found (are you missing a using directive or an assembly reference?)

Assets\HoloToolkit-Examples\SharingWithUNET\Scripts\GenericNetworkTransmitter.cs(159,55): error CS0246: The type or namespace name 'IAsyncAction' could not be found (are you missing a using directive or an assembly reference?)

Assets\HoloToolkit-Examples\SharingWithUNET\Scripts\GenericNetworkTransmitter.cs(159,79): error CS0246: The type or namespace name 'AsyncStatus' could not be found (are you missing a using directive or an assembly reference?)

Assets\HoloToolkit-Examples\SharingWithUNET\Scripts\GenericNetworkTransmitter.cs(81,17): error CS0246: The type or namespace name 'StreamSocket' could not be found (are you missing a using directive or an assembly reference?)

Assets\HoloToolkit-Examples\SharingWithUNET\Scripts\GenericNetworkTransmitter.cs(86,17): error CS0246: The type or namespace name 'StreamSocketListener' could not be found (are you missing a using directive or an assembly reference?)

Assets\HoloToolkit\SpatialMapping\Scripts\RemoteMapping\RemoteMeshSource.cs(140,45): error CS0246: The type or namespace name 'IAsyncAction' could not be found (are you missing a using directive or an assembly reference?)

Assets\HoloToolkit\SpatialMapping\Scripts\RemoteMapping\RemoteMeshSource.cs(140,69): error CS0246: The type or namespace name 'AsyncStatus' could not be found (are you missing a using directive or an assembly reference?)

Assets\HoloToolkit\Utilities\Scripts\TextToSpeechManager.cs(228,51): error CS0246: The type or namespace name 'IAsyncOperation&lt;&gt;' could not be found (are you missing a using directive or an assembly reference?)

Assets\HoloToolkit\Utilities\Scripts\TextToSpeechManager.cs(228,67): error CS0246: The type or namespace name 'SpeechSynthesisStream' could not be found (are you missing a using directive or an assembly reference?)

Assets\HoloToolkit\Utilities\Scripts\TextToSpeechManager.cs(66,17): error CS0246: The type or namespace name 'SpeechSynthesizer' could not be found (are you missing a using directive or an assembly reference?)

Assets\HoloToolkit\Utilities\Scripts\TextToSpeechManager.cs(67,17): error CS0246: The type or namespace name 'VoiceInformation' could not be found (are you missing a using directive or an assembly reference?)
v

Assets\HoloToolkit\SpatialMapping\Scripts\RemoteMapping\RemoteMeshSource.cs(182,37): error CS0246: The type or namespace name 'IAsyncOperation&lt;&gt;' could not be found (are you missing a using directive or an assembly reference?)

Assets\HoloToolkit\SpatialMapping\Scripts\RemoteMapping\RemoteMeshSource.cs(182,70): error CS0246: The type or namespace name 'AsyncStatus' could not be found (are you missing a using directive or an assembly reference?)

Assets\HoloToolkit\SpatialMapping\Scripts\RemoteMapping\RemoteMeshSource.cs(31,17): error CS0246: The type or namespace name 'StreamSocket' could not be found (are you missing a using directive or an assembly reference?)

</Description>
  </Issue>
  <Issue>
    <IssueID>622</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HeadsUpDirectionIndicator +  TapToPlace =&gt;  wrong pointing direction</Title>
    <CreatedDate>14/04/2017</CreatedDate>
    <ClosedDate>14/04/2017</ClosedDate>
    <IssueLabels />
  </Issue>
  <Issue>
    <IssueID>621</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpatialUnderstandingCursor is hidden behind UI elements</Title>
    <CreatedDate>13/04/2017</CreatedDate>
    <ClosedDate>19/07/2017</ClosedDate>
    <IssueLabels />
    <Description>The cursor in the SpatialUnderstandingExample disappears behind UI elements if it gets slightly rotated. For example if you look at the UI canvas in a 90° angle the cursor is displayed properly but after rotating
 the camera towards the edges, the cursor will disappears behind the canvas after a few degress.

Visible:
![cursorangle](
Disappears at this point:
![cursorangle2](
Edge of the frame:
![cursorangle3](

In this case it's enough to up the DistanceFromCollision of the cursor from 0.01 to ~0.08 to work around it but this doesn't really fix the underlying issue. This also only works because the UI is always facing the camera so the set of angles will always be the same.
</Description>
  </Issue>
  <Issue>
    <IssueID>620</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpatialUnderstandingExample needs to have UI fixed</Title>
    <CreatedDate>13/04/2017</CreatedDate>
    <ClosedDate>19/07/2017</ClosedDate>
    <IssueLabels />
    <Description>Trying out the SpatialUnderstandingExample I noticed that the buttons kept flickering when you keep your cursor on them. Turns out the GazeManager keeps cycling through the different layers of the UI elements and fires `GazeManager_FocusedChanged` of the InputManager constantly.

How to reproduce:
1. Open SpatialUnderstandingExample scene in the Unity-Editor.
2. Scan the room till you can complete the scan process to get the UI to pop up.
3. Place your cursor on any layered UI elements (tab buttons, regular buttons).
4. GazeManager will now keep firing focus changed event with the different elements in layers under the cursor.

For exampling just printing the name of the `HitObject` element when placing the cursor on one of the buttons and leaving it there for a few seconds:
![hitobject](

</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>616</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>editor extension to create the windows tile images</Title>
    <CreatedDate>11/04/2017</CreatedDate>
    <ClosedDate>19/06/2017</ClosedDate>
    <IssueLabels />
    <Description>we build a extension so you can create the different tile images automatically based one master image. we use it a lot to get our apps in the store so can do LOB distrubition via the business store. While its not fully hololens related is it still very useful to have in your hololens app. Is this relevant for this the holotoolkit?</Description>
  </Issue>
  <Issue>
    <IssueID>615</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>exporting the holotoolkit example to windows store (UWP) gives error</Title>
    <CreatedDate>11/04/2017</CreatedDate>
    <ClosedDate>10/07/2017</ClosedDate>
    <IssueLabels />
    <Description>When i try to run the holotoolkit example and export to windows store (UWP) i get the following error.

Assets\HoloToolkit\SpatialMapping\Scripts\RemoteMapping\RemoteMeshSource.cs(142,45): error CS0246: The type or namespace name 'IAsyncAction' could not be found (are you missing a using directive or an assembly reference?)

Assets\HoloToolkit\SpatialMapping\Scripts\RemoteMapping\RemoteMeshSource.cs(142,69): error CS0246: The type or namespace name 'AsyncStatus' could not be found (are you missing a using directive or an assembly reference?)

Assets\HoloToolkit\SpatialMapping\Scripts\RemoteMapping\RemoteMeshSource.cs(184,37): error CS0246: The type or namespace name 'IAsyncOperation&lt;&gt;' could not be found (are you missing a using directive or an assembly reference?)

Assets\HoloToolkit\SpatialMapping\Scripts\RemoteMapping\RemoteMeshSource.cs(184,70): error CS0246: The type or namespace name 'AsyncStatus' could not be found (are you missing a using directive or an assembly reference?)


Assets\HoloToolkit\SpatialMapping\Scripts\RemoteMapping\RemoteMeshSource.cs(33,17): error CS0246: The type or namespace name 'StreamSocket' could not be found (are you missing a using directive or an assembly reference?)

and in 

#if !UNITY_EDITOR &amp;&amp; UNITY_METRO 
using System.Collections.Generic;
using Windows.Networking.Sockets;
using Windows.Storage.Streams;
using Windows.Networking;
using Windows.Foundation;
#endif

if I comment the #if and #endif I get the following error
Error	CS0246	The type or namespace name 'Windows' could not be found (are you missing a using directive or an assembly reference?)
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>613</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Build error</Title>
    <CreatedDate>10/04/2017</CreatedDate>
    <ClosedDate>11/04/2017</ClosedDate>
    <IssueLabels />
    <Description>i always get the following error when trying to build (tried Unity3d 5.5.2 and 5.6f2):

Assets\HoloToolkit\CrossPlatform\Scripts\Reflection\ReflectionExtensions.cs(47,37): error CS1061: 'Type' does not contain a definition for 'GetBaseType' and no extension method 'GetBaseType' accepting a first argument of type 'Type' could be found (are you missing a using directive or an assembly reference?)</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>612</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoloToolkit build is not compatible with Visual Studio 2017 and MSBuild 15.0</Title>
    <CreatedDate>10/04/2017</CreatedDate>
    <ClosedDate>10/07/2017</ClosedDate>
    <IssueLabels />
    <Description>In the official HoloLens documentation, Visual Studio 2017 is supported (

Since Visual Studio 2017, MSBuild 15.0 is not longer a standalone package and we can install different versions, each are in a subfolder of Visual Studio.

However, Holotoolkit is relying on registry key, that is right with previous version of Visual Studio 2017 :


``

The file  should be changed to take new MSBuild location into account.


Thanks</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>611</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity Editor Task Support</Title>
    <CreatedDate>10/04/2017</CreatedDate>
    <ClosedDate>21/07/2017</ClosedDate>
    <IssueLabels />
    <Description>Hi Guys 

I have a Task.Editor.dll, which can be used as a plugin, make Unity Editor supports System.Threading.Tasks TAP feature.  It is quite useful for UWP unity programming, and I hope I can add it to HoloToolkit， but I am not sure if it is fit HoloToolkit's aim, and I am not sure which folder it should be in.

The dll is compiled  from the code of  "Async CTP Extenssion for VS2010" which runs perfectly in .net 2.0-.net 3.5 platforms.

Thanks


Wayne   </Description>
  </Issue>
  <Issue>
    <IssueID>608</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Need to update test sections of all readme files</Title>
    <CreatedDate>07/04/2017</CreatedDate>
    <ClosedDate>07/04/2017</ClosedDate>
    <IssueLabels />
    <Description>Test asset refactoring should have included updates to the readme files.</Description>
  </Issue>
  <Issue>
    <IssueID>607</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Wiki Update Request</Title>
    <CreatedDate>07/04/2017</CreatedDate>
    <ClosedDate>07/04/2017</ClosedDate>
    <IssueLabels />
    <Description>Is it possible for someone to put a direct link to the UnityPackage in the wiki?  Also can you put the current released package number?  Just so we all know what version of the kit to be using until the next is released.  Thanks!</Description>
  </Issue>
  <Issue>
    <IssueID>605</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>605</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>InputManager does not support ability to use Unity ScrollBars and ScrollRects </Title>
    <CreatedDate>05/04/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>HoloToolkit InputManager does not use ExecuteEvents.beginDragHandler and ExecuteEvents.dragHandler when handling input sources events. As the result Unity ScrollBars and ScrollRects does not receive any events or calls from InputManger</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>601</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Build Failure due to App Name with Space</Title>
    <CreatedDate>04/04/2017</CreatedDate>
    <ClosedDate>10/07/2017</ClosedDate>
    <IssueLabels />
    <Description>I tried a make a build of my HL application using Holotoolkit. The build is successful if App Name doesn't contain spaces. In player settings if i keep "GoogleCloud" as name it works while "Google Cloud" fails the build.</Description>
  </Issue>
  <Issue>
    <IssueID>600</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Bump Unity Editor Version to 5.6.1f1</Title>
    <CreatedDate>03/04/2017</CreatedDate>
    <ClosedDate>16/05/2017</ClosedDate>
    <IssueLabels />
    <Description>

Lots of API changes.
Please reference any 5.6 related bugs to this issue.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>595</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spatial Understanding Issue with Videos/Animations</Title>
    <CreatedDate>30/03/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>595</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>595</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hello,

we experienced big issues/difficulties as soon as we include the spatialunderstanding in our Project (spatialmapping alone works just fine). To clarify the Situation i explain briefly what we are trying to do:

We have sceneloader-scene which loads different scenes. Our spatialmapping/understanding is attached to a managerobject in the sceneloader scene ... we scan our room (during the sceneloader scene) finalize the scan via RequestFinishScan() ... the scan finishs we attach the occlusion material, everything is just fine. Then we load another scene, in this scene there are mecanim animations ... if we calculate the **rotations** of these **animations via "euler"** solver (rightclick the rotation parameter in the animation tab) the whole object **flickers** even after completing the animation. Ok we found a solution to this behaviour in changing the solver to "quaternion euler" ... remember this all works fine **WITHOUT** the spatialunderstanding module included. Also the behaviour is visible in the editor + hololens. We can also not get rid of this behaviour if we just delete the spatialunderstanding prefab ... the problem still exists. Only a restart of unity itself resets the state. There might be some weired stuff going on in the background with the .dll functions ... also we didn't even use any of our own functions for the spatialunderstanding yet. This happens with the BASIC module.
So lets move away from the animation problem which we eventually "fixed" (more like avoided the problem). The next big issue is using spatial understanding with movie textures ... same procedure with sceneloader etc. ... this time we include movie textures in scene 1. The quality of the textures were set to 0.5 they are like 100 mb in total ... this time around in the editor all works fine and without any issues. As soon as we deploy it to our hololens and load scene 1 the app crashes ... ok maybe a performance issue we thought ---&gt; lower quality to 0.3. Look at that the movie plays but we got NO Sound .... ---&gt; we remove spatialunderstanding ---&gt; everything works fine!

I hope I could clarify our Situation ... its very frustrating because we invested much time into spatialunderstanding functions and just wanted to use them -.-. Also even in case I repeat myself this all happens only with the spatialunderstanding module ... spatialmapping works fine!</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>593</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity "StreamingAssets" folder with HoloToolkit Build &amp; Deploy</Title>
    <CreatedDate>28/03/2017</CreatedDate>
    <ClosedDate>31/03/2017</ClosedDate>
    <IssueLabels />
    <Description>I'm experiencing a weird situation right now. I am trying to add multilanguage assets (audio and images) to my app, grouped per language in a named folder ("en", "nl", etc). I do this inside the [StreamingAssets folder in Unity]( so I can search through the supported languages at runtime by folder paths.

This works fine when Building the app manually via Unity -&gt; Build Settings and then Build &amp; Deploy the app in Visual Studio. At runtime I can loop through the language folders, I can see "en" and "nl" are present.

However, when I choose to "Build SLN, Build APPX, then Install" in the Build Windows of the HoloToolkit, I only see 1 folder "en" when trying to loop through the StreamAssets at runtime. 

With the following code I try to get the folders at runtime. Which, as stated above, works fine when building and deploying without the Build Window.

`    public string[] GetSupportedLanguages()
    {
        var dir = new DirectoryInfo(Application.streamingAssetsPath);
        return dir.GetDirectories().Select(x =&gt; x.Name).ToArray();
    }
`

Anyone has an idea what could be wrong? I really like to use the Build window:)
</Description>
  </Issue>
  <Issue>
    <IssueID>589</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Move test code/folders/assets into their own top level folder</Title>
    <CreatedDate>24/03/2017</CreatedDate>
    <ClosedDate>07/04/2017</ClosedDate>
    <IssueLabels />
    <Description>I'd like to create a new top level folder called `HoloToolkit-Tests` that contains all the test assets that are currently in the main `HoloToolkit` folder.

The purpose of this is to clean up the main folder for people who want to use the core assets in their projects without the clutter/bloat of the testing assets.

Should not break functionality (unless a dev has based their code on test code, but seriously why do that?)

Some of these may get moved into `UnitTests` later in the future if people decide to take it upon themselves to do.

- Assets
    - HoloToolkit
    - HoloToolkit-Examples
    - HoloToolkit-UnitTests
    - HoloToolkit-Tests</Description>
  </Issue>
  <Issue>
    <IssueID>588</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Problem with ReflectionExtensions and why is it needed?</Title>
    <CreatedDate>24/03/2017</CreatedDate>
    <ClosedDate>11/04/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>588</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hello,

I faced an issue with holotoolkit today on Unity 5.5.1.f1
I had a line of code in one of my scripts that was 
`FieldInfo[] fieldArray = GetType().GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance);`

And when adding holotoolkit, the ReflectionExtensions raised an error when trying to build, due to the GetFields method returning an IEnumerable instead of an array in the extension.
I temporarily fixed the problem by doing this :
`#if UNITY_METRO &amp;&amp; !UNITY_EDITOR
        FieldInfo[] fieldArray = GetType().GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance).ToArray();
#else
        FieldInfo[] fieldArray = GetType().GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance);
#endif`
as I need my code to be able to work with and without holotoolkit. But I was wondering why this extension is needed ? I guess it was useful at some point or on older versions of Unity maybe ? Or did I miss a detail somewhere ?

Thanks</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>586</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cursor that resembles the shell cursor</Title>
    <CreatedDate>24/03/2017</CreatedDate>
    <ClosedDate>18/10/2017</ClosedDate>
    <IssueLabels />
    <Description>I've been working on a mesh based cursor that looks and functions like the shell cursor. It shows a dot when not in contact with a collider, turns into a ring when colliding. The size changes when a source and gesture are detected. It also has a point light similar to the shell. I'm submitting a pull request for my branch so you can let me know what you think. #587 </Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>584</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cursor.cs' TargetedCursorModifier is not cleared when TargetedObject is cleared</Title>
    <CreatedDate>23/03/2017</CreatedDate>
    <ClosedDate>07/04/2017</ClosedDate>
    <IssueLabels />
    <Description>This can cause issues when extending Cursor. Compare these two pieces of code:
``

Fix incoming shortly...</Description>
  </Issue>
  <Issue>
    <IssueID>583</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>BuildWindow crashes Unity if Windows Store platform isn't installed</Title>
    <CreatedDate>23/03/2017</CreatedDate>
    <ClosedDate>10/07/2017</ClosedDate>
    <IssueLabels />
    <Description>Instead of crashing, it should put up an error dialog informing the user to download the required Windows Store dependencies through Unity's "Build Settings..." window.</Description>
  </Issue>
  <Issue>
    <IssueID>580</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to clean memory of taptoplace?</Title>
    <CreatedDate>22/03/2017</CreatedDate>
    <ClosedDate>23/03/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>580</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi,

I'm using the TapToPlace script for a game I'm working on, but every time I close the app and reopen it, the object is where I put it last time, I try to change the initial position but it does not Work.

It's any way to clean the position when the app restarts?
</Description>
  </Issue>
  <Issue>
    <IssueID>579</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Acoustic feedback for successful speech recognition</Title>
    <CreatedDate>22/03/2017</CreatedDate>
    <ClosedDate>24/03/2017</ClosedDate>
    <IssueLabels />
    <Description>Hi everyone!

When starting to develop my app, I used the Academy tutorial as a reference for my speech recognition manager. It's been a while and if I remember correctly, the KeywordManager script wasn't available then. So I hard-coded my voice commands into my script.

Now I'd like to use the KeywordManager because I prefer the flexibility of defining the commands and their reactions in the Unity Editor. But as far as I can figure it, it is not possible to play a sound when a voice command is recognized correctly as it is right now. Since I'd like to have some kind of acoustic feedback after a recognition, I've got three ideas for enhancing the KeywordManager with this functionality:

1.  Adding an AudioSource and a public AudioClip to the class which is played when the registered action is called

or

2. adding a new event handler and a new event to the class (e.g. OnKeywordRecognized) which allows us to subscribe to this event and play a sound in another class (e.g. SoundManager)

or

3. making the created KeywordRecognizer a public accessible property ( get; private set; ). This would enable us to also subscribe to the KeywordRecognizer's OnPhraseRecognized event.

I'd like to hear about your thoughts!

// edit: I've just discovered that the SpeechInputSource now has the same functionality. I'm using the latest release of the HTK, so when I looked into it, I just could assign keyboard shortcuts. So just see this issue as an improvement to the SpeechInputSource instead of the KeywordManager.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>575</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to know when an Anchor is loaded?</Title>
    <CreatedDate>21/03/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>575</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>575</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>csharp
anchorManager.AttachAnchor(gameObject, SavedAnchorFriendlyName);

foreach(Transform seq in sequences)
{
    seq.position = transform.position;
    seq.rotation = transform.rotation;
}
`</Code>
    <Description>Hey,

I modified the HandDraggable script for being able to use Anchors. I don't need *SpatialMapping* if I don't make raycast with the environment, right?

My anchor is used on a specific object which is hidden to the final user (available via Speech Recognition). This object is used to place my final object. So at the beginning of the application, I wish it had the anchor position:
``
But it hasn't due to the asynchronous anchors loading. The method `Anchor_OnTrackingChanged` from class `WorldAnchorManager` is private. How can I know the anchor is loaded?

Obviously I could check its transform in an update with *hasChanged* property.</Description>
  </Issue>
  <Issue>
    <IssueID>574</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>MicStream.StartRecording throws an exception in the MicrophoneStream demo scene</Title>
    <CreatedDate>21/03/2017</CreatedDate>
    <ClosedDate>19/06/2017</ClosedDate>
    <IssueLabels />
    <Description>There is an error in the MicrophoneStream demo when you start recording.

The demo scene builds and works when you first run it streaming from the Mic which you can hear, but if you then go into the Awake function and comment the MicStartStream line and swap it with a MicStartRecording call like below:

if (AutomaticallyStartStream == true)
{
   //CheckForErrorOnCall(MicStream.MicStartStream(KeepAllData, false));
   CheckForErrorOnCall(MicStream.MicStartRecording(SaveFileName, false));
}
You get the following error:
SEHException: External component has thrown an exception.
at HoloToolkit.Unity.InputModule.MicStream.MicStartRecording(String filename, Boolean previewOnDevice)
at HoloToolkit.Unity.InputModule.Tests.MicStreamDemo.Awake()
at HoloToolkit.Unity.InputModule.Tests.MicStreamDemo.$Invoke0(Int64 instance, Int64* args)
at UnityEngine.Internal.$MethodUtility.InvokeMethod(Int64 instance, Int64* args, IntPtr method) 
(Filename: Line: 0)

You still get this error even if you defer the MicStartRecording call until the Update function.

Triggering the microphone recording works when running the demo scene in the editor on PC. This saves recordings to Username/Music/MicStreamRecordings, this issue seems to be specifically when built and run on HoloLens.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>573</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cursor  disappears  when i gaze at the UGUI Canvas</Title>
    <CreatedDate>21/03/2017</CreatedDate>
    <ClosedDate>26/03/2017</ClosedDate>
    <IssueLabels />
    <Description>I create a  UGUI Gameobject, And add box collider on it.  When I  gaze at the canvas, sometimes the cursor appear,     sometimes The Cursor  disappears.   It seems like the cursor gameobject hide behide the UGUI gameobject.  I do not know what is wrong. </Description>
  </Issue>
  <Issue>
    <IssueID>571</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tap to place parent</Title>
    <CreatedDate>19/03/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>571</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I am using the tap to place script when the app started to let the user move a cube around the room for choosing a location to place holograms.

When I move my cube around and place it again it seems like only some of the holograms are move to the location of the cube and some are still in the old location. I cannot find a difference in these game objects.

The cube with the Tap to Place script is inside a game object called "holograms". The place parent on tap is checked and the Parent game object is set to the Holograms object. The holograms object has a bunch of other objects that will appear by script.
</Description>
  </Issue>
  <Issue>
    <IssueID>570</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[UNET-Sharing] Invoked function does not exist</Title>
    <CreatedDate>17/03/2017</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
    <IssueLabels />
    <Description>In the HoloToolkit example "SharingWithUNET", in the GenericNetworkTransmitter class, line 201:
Invoke("RequestAndGetAnchor", timeToDeferFailedConnections);

Problem is RequestAndGetAnchor function does not exist (probably got renamed but the Invoke part has not been updated accordingly).</Description>
  </Issue>
  <Issue>
    <IssueID>569</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Making SpatialMappingObserver more flexible</Title>
    <CreatedDate>15/03/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>569</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I am using both SpatialMappingManager and SpatialMappingObserver in a project, but discovered that SpatialMappingObserver doesn't really do everything I want it to do with the cooked data.  I decided to look into finding a way to modify SpatialMappingObserver.  I wanted to do it in a way that didn't modify the Holotoolkit itself since I want the code to be exportable to other projects, and not break projects that also used SpatialMappingManager and SpatialMappingObserver.  

After looking at SpatialMappingManager, I found that it specifically looked for a SpatialMappingObserver object during the Awake() function. and it has a RequiredComponent directive for the SpatialMappingObserver.  This made replacing the SpatialMappingObserver with one of my own constructs hard, because I didn't want to modify the SpatialMappingManager.  

The other problem is that SpatialMappingObserver uses private functions, not protected virtual ones, so I could not derive a class from it to contain my modifications.  

What I would like to propose for the HoloToolKit is three things:

1)  Remove the required component from the SpatialMappingManager.  This would allow anyone to include their own SpatialMappingObserver-type component as long as it was derived from SpatialMappingObserver (which would allow it to be found by the gameObject.GetComponent&lt;SpatialMappingObserver&gt;() in Awake())

2)  Modify the code in SpatialMappingManager's Awake() method to create a SpatialMappingObserver component if one is not found.  

3)  Change all private functions in SpatialMappingObserver to protected virtual to allow derived classes.

What do you folks think?  Is this a good idea, or am I way off base?

-Alex

</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>567</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Instantiating a Clone w/ TapToPlace as a Component</Title>
    <CreatedDate>15/03/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>567</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I am not sure if this is "by design", but if you have an object that has TapToPlace.cs added as a component, with a saved friendly anchor name specified and then go to instantiate a clone, the clones position and anchor matches that of the original object.  Even if you try to instantiate the object with a new pos and rot.  I assume because the position is saved by anchor.

I fixed this on my end by instantiating the object, changing the anchor name, attaching the anchor to the WorldAnchorManager, then changing the position and rotation.

I feel like the script should have done this for me though.  Maybe check to see if the world anchor store already has that key anchor name?  Then at on destroy remove the anchor that was cloned?

I guess it is just my opinion, but anyone else have any thoughts?  Or maybe I am missing something?  Thanks!</Description>
  </Issue>
  <Issue>
    <IssueID>565</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Issue porting code from Academy to latest HoloToolkit.</Title>
    <CreatedDate>14/03/2017</CreatedDate>
    <ClosedDate>15/03/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>565</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>csharp
using Academy.HoloToolkit.Unity;
using UnityEngine;

public class GestureAction : MonoBehaviour
{
    [Tooltip("Rotation max speed controls amount of rotation.")]
    public float RotationSensitivity = 10.0f;

    private Vector3 manipulationPreviousPosition;

    private float rotationFactor;

    void Update()
    {
        PerformRotation();
    }

    private void PerformRotation()
    {
        if (GestureManager.Instance.IsNavigating &amp;&amp;
            (!ExpandModel.Instance.IsModelExpanded ||
            (ExpandModel.Instance.IsModelExpanded &amp;&amp; HandsManager.Instance.FocusedGameObject == gameObject)))
        {
            
            rotationFactor = GestureManager.Instance.NavigationPosition.x * RotationSensitivity;

            transform.Rotate(new Vector3(0, -1 * rotationFactor, 0));
        }
    }

    void PerformManipulationStart(Vector3 position)
    {
        manipulationPreviousPosition = position;
    }

    void PerformManipulationUpdate(Vector3 position)
    {
        if (GestureManager.Instance.IsManipulating)
        {

            Vector3 moveVector = Vector3.zero;
            moveVector = position - manipulationPreviousPosition;
            
            manipulationPreviousPosition = position;
            
            transform.position += moveVector;
        }
    }
}
`</Code>
    <Description>Hello there,

I played with Hololens lately, it's really nice :) I watched the tutorials from the [Academy]( however since HoloToolkit evolved I've some troubles to port old examples.

This code, from the academy, is just making a rotation on a object. How could I do the same with the latest HololensToolkit version?

``

Thanks for the help.</Description>
  </Issue>
  <Issue>
    <IssueID>564</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Switch shader on runtime: Compile directive in cginclude file appears to be ignored</Title>
    <CreatedDate>14/03/2017</CreatedDate>
    <ClosedDate>30/05/2017</ClosedDate>
    <IssueLabels />
    <Description>When switching between the HoloToolkit shaders on runtime, for some shaders the materials "lose" their color, i.e. they are rendered in white, the default.
This apparently happens when using a shader that has the shader feature _USECOLOR_ON. (e.g. BlinnPhongConfigurable.shader)

Neither does `material.SetFloat("_UseColor", 1);` help, nor adjusting the shader to have the feature enabled by default.

So I commented out the according compile directives in the .cginc files:
``

which helped me achieve what I wanted.

Still, there appears to be a problem when trying to access the _USECOLOR_ON keyword</Description>
  </Issue>
  <Issue>
    <IssueID>563</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>WorldAnchor.isLocated not updated properly </Title>
    <CreatedDate>14/03/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels />
    <Description>Problem: When running the Sharing with UNET example, the anchor debug text (Unity TextMesh object) does not appear at the same location on the clients. Both are in the same room, and the anchor get exported/serialized/imported correctly.

Guessing: From my understanding, WorldAnchor locks an object in the physical world, thus auto-adjusting the unity object's tansform to position it correctly. When exporting it via WorldAnchorTransferBatch, we extract the location information (relative to the real world). By sending this information to clients via a network protocol, clients can see the anchor at the same physical location than the sender does.

If I did not understand this correctly, what is the point of exporting/serializing over network the WorldAnchor ?</Description>
  </Issue>
  <Issue>
    <IssueID>562</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SharingService.exe running on Azure IaaS</Title>
    <CreatedDate>13/03/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>562</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi,

I'm trying to get the SharingService to run on an Azure IaaS.  I've tried the following:

- Created the IaaS in the new Azure portal

- Opened up Firewall rules for ports 20601 and 20602

- copied the executable from the Unity Folder and ran it like this "SharingService -local"

This works for me when I run it on my local wireless network (tried with 2 HoloLens with demo code from  but, I want a more stable place in the cloud to continue my testing and demoing of a shared holographic experience.

Thanks!

Joe</Description>
  </Issue>
  <Issue>
    <IssueID>559</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>559</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>HoloLensCamera.prefab Gaze Controls: Joystick Axis Controllers' Input Axis not setup</Title>
    <CreatedDate>12/03/2017</CreatedDate>
    <ClosedDate>03/10/2017</ClosedDate>
    <IssueLabels />
    <Description>Joystick Gaze Controllers on the `HoloLensCamera.prefab` have not had their Input Axis' set up in the Input Settings.</Description>
  </Issue>
  <Issue>
    <IssueID>558</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoloToolkit Branding</Title>
    <CreatedDate>11/03/2017</CreatedDate>
    <ClosedDate>18/10/2017</ClosedDate>
    <IssueLabels />
    <Description>Hi everyone,

I wanted to open this issue to discuss branding for the HoloToolkit.
I'm mainly interested in getting concepts for iconography and images for use in the Unity Asset store, on HTK specific assets in the Unity Editor Inspector windows, and for invisible objects in the scene.

![image](

[![IMAGE ALT TEXT HERE](</Description>
  </Issue>
  <Issue>
    <IssueID>556</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Mic Stream Demo: NaN buffer values during OnAudioFilterRead</Title>
    <CreatedDate>08/03/2017</CreatedDate>
    <ClosedDate>11/06/2017</ClosedDate>
    <IssueLabels />
    <Description>``

OnAudioFilterRead buffer values from DLL occasionally return as NaNs.

Also noticed that buffer data is not clamped between -1 &amp; 1.
[Unity Documentation](
&gt;The audio data is an array of floats ranging from [-1.0f;1.0f]</Description>
  </Issue>
  <Issue>
    <IssueID>555</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Mic Stream Demo throws Null Ref w/cube selected and entering playmode</Title>
    <CreatedDate>08/03/2017</CreatedDate>
    <ClosedDate>11/06/2017</ClosedDate>
    <IssueLabels />
    <Description>``
Mic Stream Demo throws Null Ref when cube is selected when entering play mode.

[Source of problem](
&gt; - If OnAudioFilterRead is implemented a VU meter will show up in the inspector showing the outgoing samples level.
&gt; - OnAudioFilterRead is called on a different thread from the main thread.

The Editor is trying to render the VU meter before we initialize the `MicStream` in `Awake`.

Fix: Simply move initialization logic from `Awake` to `Start`.</Description>
  </Issue>
  <Issue>
    <IssueID>551</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Stereo Instancing broken on 3DTextShader</Title>
    <CreatedDate>07/03/2017</CreatedDate>
    <ClosedDate>04/09/2017</ClosedDate>
    <IssueLabels />
    <Description>Currently it only renders in the one eye... It looks like this was likely broken with this commit: </Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>550</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Sharing Transformations?</Title>
    <CreatedDate>07/03/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>550</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Is it possible to manipulate objects in a shared scene? Maybe use `HandDraggable` to transform different objects and update the anchors?</Description>
  </Issue>
  <Issue>
    <IssueID>548</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>What would be the best way to network HandDraggable?</Title>
    <CreatedDate>03/03/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>548</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'm currently working on a multi-user application and being able to use HandDraggable would save me a lot of work; however, I don't know what'd be the best way to make the script network-aware while keeping the changes from upstream minimal.

To do that, I'd have to inherit from NetworkBehaviour instead of MonoBehaviour and check if e.g. the current player has authority over the object, but that would require components which might be unneeded for people building a single player app/game. I think the best solution would be to make a separate script, e.g. NetworkedHandDraggable that inherits from NetworkBehaviour and only applies input when e.g. the server allows it. A problem however would be, that changes to  HandDraggable would need to be manually copied over to the new class, which would suck for maintenance.

What's your take on this?</Description>
  </Issue>
  <Issue>
    <IssueID>546</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>3D Keyboard</Title>
    <CreatedDate>02/03/2017</CreatedDate>
    <ClosedDate>06/08/2017</ClosedDate>
    <IssueLabels />
    <Description>Something that’s come up in several conversations with developers is the challenges with virtual keyboard support in 3D. Looking in the forums, this is a [common]( [problem]( [there]( [too]( 

The suggested workaround is covered in the article [Keyboard input in Unity]( but that guidance requires that the user leave the 3D application and requires that the app be built for Xaml instead of D3D.

This is driving many developers to create their own Unity keyboard or purchase one from the Asset Store. I propose that a solid, basic, skinnable keyboard should be included in the Holo Toolkit.
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>544</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Access violation running sharing prefab on emulator</Title>
    <CreatedDate>02/03/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>544</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi,
After adding the sharing prefab to my project

I keep getting this error, when trying to run it on emulator:
maybe someone have an idea?


SharingService: Local Machine Name: hololens-5h8ea
 
(Filename: C:/buildslave/unity/build/artifacts/generated/Metro/runtime/DebugBindings.gen.cpp Line: 51)


SharingService: Connecting to Server at 10.110.72.73:20602
 
(Filename: C:/buildslave/unity/build/artifacts/generated/Metro/runtime/DebugBindings.gen.cpp Line: 51)


Setting up 1 worker threads for Enlighten.

  Thread -&gt; id: b98 -&gt; priority: 1 

The program '[416] VCC.exe' has exited with code -1073741819 (0xc0000005) 'Access violation'.

</Description>
  </Issue>
  <Issue>
    <IssueID>540</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>On switching to a different session, created Objects do not show up</Title>
    <CreatedDate>27/02/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>540</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>On switching sessions after connected to a session already with objects, objects from switched to Session do not show up. Using AutoJoinSession to switch sessions. After a session is entered with objects, no objects works, but if you are in a session with created objects and then you switch to another session the objects in the switched to session do not show up.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>538</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Is there a way to "Suspend" a World Anchor?</Title>
    <CreatedDate>26/02/2017</CreatedDate>
    <ClosedDate>08/06/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>538</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>My app uses Vuforia AR . Vuforia AR has it's own camera and spatial coordinate system.  Objects apparently move back and forth between the Vuforia AR coordinate system and Hololens coordinate system.
So I have a  Vuforia image target (or tag) for reliable physical positioning of holograms.  However I want the user to be able to re-position the holograms for tweaking exact placement relative to the image target.  When the user clicks a "modify" button, I simply un-parent the objects from the image target and attach the World Anchor.  This moves the holograms fully into the Hololens coordinate system.  And attaching the world anchor is what is critical to having the position persist between app cycles.

When the user clicks the "stop modify" button, I set the object parentage back to the image target, moving it back into the Vuforia AR coordinate system, and unfortunately I have to remove the world anchor.  Leaving the world anchor attached causes havoc with the Vuforia AR positioning so the hologram does not stick to the image target any longer.

Everything is working great while the app is running.  I can re-position the holograms and then that stays changed and will stick to the image target for the life of the app.  But I want it to stay changed between app cycles.

I did not see any method for disabling the world anchor.
I'm trying to use OnApplicationQuit to simply un-parent and attach the world anchor right before app closes, but so far that doesn't seem to be working.  Perhaps I need to look into Vuforia API's to see if they have something comparable to the persistent world anchor that Windows Holographic has.

Otherwise, I wanted to check with you guys to see if you had any ideas.  I was thinking of perhaps a suspend method for the world anchor so that I could turn it off without removing it from the anchor store.</Description>
  </Issue>
  <Issue>
    <IssueID>537</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Contribution License Agreement</Title>
    <CreatedDate>24/02/2017</CreatedDate>
    <ClosedDate>28/02/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>537</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>If a contributor changes employers do they need to sign a new Contribution License Agreement?</Description>
  </Issue>
  <Issue>
    <IssueID>536</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoloToolkit-Unity 2017 release plans</Title>
    <CreatedDate>23/02/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels />
    <Description>Hello,

To make the release cadence more predictable and defined, we will mark a release of the code base in the first week of every month.

1. This gives us set timelines to plan our apps and when to move forward.
2. Makes it easier to keep track of what changes are going into every release.
3. You can update to latest more often rather than one big unity package which changed a lot.
4. Folks should also avoid breaking changes as much as possible unless there is huge value in doing so.

Thank you for all the awesome work and feedback!</Description>
  </Issue>
  <Issue>
    <IssueID>535</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>TapToPlace sets anchor on start --&gt; cannot move by setting IsBeingPlaced manually</Title>
    <CreatedDate>23/02/2017</CreatedDate>
    <ClosedDate>30/04/2017</ClosedDate>
    <IssueLabels />
    <Description>Hi,

I have a game object with the TapToPlace component attached to it. Also there's a SpatialMappingManager and a WorldAnchorManager in my scene. When the application starts, the TapToPlace component attaches an anchor for the object.

Now when I want to start placing the object manually by setting IsBeingPlaced = true; (not by clicking it --&gt; OnInputClicked is not called, hence the anchor is not removed!) the object won't move since the anchor does not allow it.

Is this an issue or am I missing something?

Best regards,
Dino</Description>
  </Issue>
  <Issue>
    <IssueID>534</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InputManager: update member signatures to be static</Title>
    <CreatedDate>23/02/2017</CreatedDate>
    <ClosedDate>11/06/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>BREAKING CHANGE</Name>
        <IssueID>534</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Seeing as the `InputManager` is a singleton it makes sense that the members could/should be static.

Pros:
- `InputManager.Method();` VS `InputManager.Instance.Method();`

Cons:
- Light refactoring. People would need to remove the `Instance` part of their code.

What do you guys think? Is there any other pros/cons I may have looked over?
This change should not affect behavior in any way.</Description>
  </Issue>
  <Issue>
    <IssueID>531</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Mark KeywordManager as Obsolete (duplicate functionality)</Title>
    <CreatedDate>21/02/2017</CreatedDate>
    <ClosedDate>11/06/2017</ClosedDate>
    <IssueLabels />
    <Description>New `SpeechInputSource` should be the defacto keyword handler.
It's better integrated into the `InputManager`, and facilitates all the same functionality.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>530</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Export Remote Spatial Mesh from Device to Unity Editor?</Title>
    <CreatedDate>21/02/2017</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>530</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>530</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>When I save WorldAnchors using the WorldAnchorManager, is there a way to export the saved WorldAnchors to the UnityEditor? (So I can view the Anchors in the Editor, not in runtime) Or can I get the positional data relative to the SpatialMapping? I'm already using the Remote Mapping Manager, but can't figure out how to send the WorldAnchors as well. </Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>529</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Voice VOIP garbled &amp; slow on WAN when using MicrophoneTransmitter &amp; MicrophoneReceiver </Title>
    <CreatedDate>21/02/2017</CreatedDate>
    <ClosedDate>03/03/2017</ClosedDate>
    <IssueLabels />
    <Description>Voice VOIP garbled &amp; slow on WAN when using MicrophoneTransmitter &amp; MicrophoneReceiver </Description>
  </Issue>
  <Issue>
    <IssueID>527</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Speech Input Source Test scene is broken</Title>
    <CreatedDate>20/02/2017</CreatedDate>
    <ClosedDate>11/06/2017</ClosedDate>
    <IssueLabels />
    <Description>``

Also it seems Spheres Speech Input Handler is missing a reference in the response callback.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>526</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Material 3DTextSelawik doesn't have _Stencil property</Title>
    <CreatedDate>20/02/2017</CreatedDate>
    <ClosedDate>24/02/2017</ClosedDate>
    <IssueLabels />
    <Description>When using uGUI and assigning the 3DTextSelawik material, and using a canvas Mask component, the material requires a _Stencil property for proper masking.</Description>
  </Issue>
  <Issue>
    <IssueID>525</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hand draggable changes object's rotation when it shouldn't</Title>
    <CreatedDate>20/02/2017</CreatedDate>
    <ClosedDate>21/02/2017</ClosedDate>
    <IssueLabels />
    <Description>Let's say I use Hand Draggable script to move some cylinder which it lies on a plane (Z rotation 90°). Is Keep Upright and Is Orient towards user are unchecked. 

When I click on it in Game mode to move it, it changes rotatation to upwards (Z rotation 0°).

Shouldn't the lines 199 and 200 in Hand Draggable script simply be:

`draggingRotation = HostTransform.rotation;`</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>524</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Fix compatibility issues with Vuforia: GazeTransform initialization.</Title>
    <CreatedDate>20/02/2017</CreatedDate>
    <ClosedDate>23/02/2017</ClosedDate>
    <IssueLabels />
    <Description>**What I'm doing**
- I'm using Vuforia framework in combination with Hololens Toolkit and for some reason the DefaultCursor.prefab that I'm using (or any other cursors) the position is set somewhere else.

**How did I found/investigated**
- At first I thought that Cursor.cs would be the main cause of setting the position different but after further investigations I found out that in the GazeManager.cs  the` GazeTransform` receives `Camera.MainTransform` at  `protected override void Awake()` and this sets the position a bit different (moves from center)

**The fix**
- The fix is easy, I've moved `GazeTransform` from `Awake` to `Start` method and everything is working correctly right now.

I would like to know if i can make a pull request regarding to issue.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>523</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Running an External batch (.bat) file</Title>
    <CreatedDate>20/02/2017</CreatedDate>
    <ClosedDate>20/02/2017</ClosedDate>
    <IssueLabels />
    <Description>Hi,

I want to run an external .bat file by clicking on a UI Button in Unity 3D. Can I do this using HoloToolkit. If so, how? 

Thank you</Description>
  </Issue>
  <Issue>
    <IssueID>522</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Adding NETFX_CORE compiler flag</Title>
    <CreatedDate>17/02/2017</CreatedDate>
    <ClosedDate>20/10/2017</ClosedDate>
    <IssueLabels />
    <Description>Hello guys,

i have a app for multiple platforms which I also want to release for Hololens.
To be able to share assets and prefabs I want to use the same project, but I get compiler errors as soon as the Toolkit is included because it's uwp code. I used the #if NETFX_CORE flag a few times and asked myself if you think it would make sense to add this to every c# script in the sources.
What do you think?

Best regards 
Dominic </Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>521</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Changing cursor according to hovered object (Custom Cursor)</Title>
    <CreatedDate>16/02/2017</CreatedDate>
    <ClosedDate>20/02/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>521</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>**What I am trying to do:**
If my gaze hits a target (TargetedObject in Cursor.cs) I wanna show a custom cursor like in the hologram app where the cursor becomes two arrows for rotating the object. 

Is there any simple way to achieve this?
As far as I know there is a "contextual" state in the Cursor.cs which is meant for something like this, but it isn't used anywhere...

**I already made a simple approach (if u like it I will be glad to make a PR):**
In the CursorModifier.cs I add public objects for the cursors when the targeted object is observed/interact hovered or not.
In the ObjectCursor.cs I override the "OnFocusedObjectChanged" function to also check if the targeted object has a CursorModifier component and also if the component has prefabs for the current state. If it has, I instantiate the according prefab, set the custom cursor alongside the "CursorOnHolograms" and "CursorOffHolograms" and set a flag that a custom cursor should be used.

what do you think about my approach? since it is still under development I won't post code before I beautified and tested it a bit more ;)</Description>
  </Issue>
  <Issue>
    <IssueID>520</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>ForrestTrepte</FixedById>
        <IssueID>520</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>can't capture photos at 1280x720 resolution after using SpatialUnderstanding</Title>
    <CreatedDate>15/02/2017</CreatedDate>
    <ClosedDate>05/05/2017</ClosedDate>
    <IssueLabels />
    <Description>I am having a problem when I include SpatialUnderstanding in my application. This problem occurs whenever SpatialUnderstanding_Init is called, even if I am not actually using any SpatialUnderstanding features.

When I later call PhotoCapture.StartPhotoModeAsync, the following error is printed to debug output:
Failed to set capture resolution (hr = 0xC00D36B4)
(Filename: C:/buildslave/unity/build/Runtime/VR/HoloLens/WebCam/PhotoCapture.cpp Line: 1180)

I'll see if I can create a repro case and update this issue with more info, but I thought first I'd post the basic symptoms. Please let me know if this is a known issue or if there is a reason that SpatialUnderstanding and PhotoCapture are incompatible.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>518</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Request: Better camera display</Title>
    <CreatedDate>15/02/2017</CreatedDate>
    <ClosedDate>24/02/2017</ClosedDate>
    <IssueLabels />
    <Description>The low FOV of the default camera makes it difficult to have context around what is in the room.  My suggestion is:

* Increase the FOV back to `60` (camera default)
* Show a box representing the "viewport" of the hololens (which is essentially at 14 degrees FOV)
* Decouple the input icons from the camera FOV

The result would be similar to the Web Portal's 3D View (in first person mode) - the green box is what's in the Hololens viewport.

![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>517</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Sharing Service: How to remove sync objects</Title>
    <CreatedDate>13/02/2017</CreatedDate>
    <ClosedDate>09/03/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>517</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I was not yet able to figure out how a spawned object could be removed.

I tried this (but it's only deleted locally):

``</Description>
  </Issue>
  <Issue>
    <IssueID>516</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Sharing Service: Many components do not handle server disconnects properly.</Title>
    <CreatedDate>12/02/2017</CreatedDate>
    <ClosedDate>18/10/2017</ClosedDate>
    <IssueLabels />
    <Description>I've noticed a lot of the Sharing Service components do not handle disconnect &amp; reconnect scenarios.</Description>
  </Issue>
  <Issue>
    <IssueID>515</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Existing materials should be converted to use FastConfigurable</Title>
    <CreatedDate>10/02/2017</CreatedDate>
    <ClosedDate>08/09/2017</ClosedDate>
    <IssueLabels />
    <Description>This would result in a very large performance improvement and show best practices.</Description>
  </Issue>
  <Issue>
    <IssueID>514</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How do you exclude objects from gaze input?</Title>
    <CreatedDate>09/02/2017</CreatedDate>
    <ClosedDate>09/02/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>514</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I am looking for a way to let the Hololens ignore certain objects that would not be affected by gaze input. When a gameobject is inside another gameobject (for example a glass orb) they cannot be tapped.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>512</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hololens LiveView does not work with remoting</Title>
    <CreatedDate>09/02/2017</CreatedDate>
    <ClosedDate>10/02/2017</ClosedDate>
    <IssueLabels />
    <Description>Hey Folks,
I've noticed today that if you enable live while using an application in "remote to device" mode the holograms on the right eye scale up (a lot) and move around with the user's head. If I run the same application directly on the HoloLens the issue does not occur.

I am not sure if this is an limitation of the remoting or a bug. It is also hard to record this but it should be easy to replicate.

Cheers
</Description>
  </Issue>
  <Issue>
    <IssueID>511</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can't notify user of manipulation event </Title>
    <CreatedDate>08/02/2017</CreatedDate>
    <ClosedDate>21/02/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Input System</Name>
        <IssueID>511</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'm getting an error where manipulation drops but the OnManipulationCanceled event never gets called. The object gets stuck in this state and cannot be selected or manipulated again.

The error reported is: 

    Can't notify user of manipulation event - error code says we successfully retrieved the delta, but it's null!
    
    (Filename: C:/buildslave/unity/build/Runtime/VR/HoloLens/Gestures/GestureRecognizer.cpp Line: 950)</Description>
  </Issue>
  <Issue>
    <IssueID>509</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>NeerajW</FixedById>
        <IssueID>509</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>InputManager: Add OverrideFocusedObject functionality</Title>
    <CreatedDate>07/02/2017</CreatedDate>
    <ClosedDate>09/02/2017</ClosedDate>
    <IssueLabels />
    <Description>Much like we did previously, add a property so users can override the gesture input and route input to specific gameobjects without having the need to have a collider on that object.
Currently input module forces us to have a focusedObject always.

This is useful in placement scenarios where we could be focus locked or simply started scenarios which don't have renderer or colliders say for anchor placement etc.

For example: Our old GestureManager.cs.</Description>
  </Issue>
  <Issue>
    <IssueID>508</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>davidkline-ms</FixedById>
        <IssueID>508</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Refactor redundant Interpolation Scripts</Title>
    <CreatedDate>06/02/2017</CreatedDate>
    <ClosedDate>09/11/2018</ClosedDate>
    <IssueLabels />
    <Description>[QuaternionInterpolated.cs]( and [Vector3Interpolated.cs]( seems to be very similar to
 [InterpolatedQuaternion.cs]( and [InterpolatedVector3.cs](</Description>
  </Issue>
  <Issue>
    <IssueID>507</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Sharing Service: Unable to get clients to connect to server</Title>
    <CreatedDate>06/02/2017</CreatedDate>
    <ClosedDate>06/02/2017</ClosedDate>
    <IssueLabels />
    <Description>Currently unable to build the SharingTest scene get HoloLens devices to connect to the sharing server over a wireless local area network.

Repro Steps:

1. Open `SharingTest.scene`
2. Start Sharing Service.
3. Copy Sharing Service IP address from server log and paste into Sharing Stage: Server Address field on your `SharingStage` scene object.
4. Build Settings -&gt; Add current scene. 
5. Build and deploy to HoloLens via Remote Machine debugger.
6. Output shows it never connects, and server log never registers device connects.

&gt; Note: I tried both local and external IP and made sure all the devices were connected to the same wireless network. I'm also able to connect to the server via the editor using localhost, and specified IPs.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>506</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Sharing Service: Unity Editor crashes when setting client role to Unspecified or Secondary</Title>
    <CreatedDate>06/02/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>506</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Sharing / Networking</Name>
        <IssueID>506</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Repro Steps:

1. Open `SharingTest.scene`
2. Set `Sharing.prefab` Client Role to Unspecified or Secondary
3. Start Sharing Service
4. Play in editor
5. Observe crash report.</Description>
  </Issue>
  <Issue>
    <IssueID>505</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Autodiscovery (sharingmanager) isn't working </Title>
    <CreatedDate>06/02/2017</CreatedDate>
    <ClosedDate>12/07/2017</ClosedDate>
    <IssueLabels />
    <Description>Again:
The Sharing test scene: Setting AutoDiscoverServer = true **and** leaving the Server-Address empty there is no server found (not locally, nor remote - even in the same subnet).

This worked with schema 15 ... !
See #491 </Description>
  </Issue>
  <Issue>
    <IssueID>504</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ManualCameraControl in Docs and Documenting Changes</Title>
    <CreatedDate>05/02/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>ManualCameraControl is still referenced at these locations:

[ColorPicker Readme](

[MDFiles Readme](

[Input Readme](


Also, any thoughts on how we can better document changes? It took me several minutes to find out that **ManualCameraControl** had been renamed to **ManualGazeControl**. It also appears that this script has changed so much that we should probably bring in the **HoloLensCamera** prefab instead. But neither of these changes appear to be documented anywhere. The only way I figured this out was through web search that landed me on an issue where someone mentioned the rename. How can we better document changes to key components in the toolkit? Especially to the names of core behaviors.</Description>
  </Issue>
  <Issue>
    <IssueID>503</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Sharing Service: is WAN network for multi-user supported?</Title>
    <CreatedDate>04/02/2017</CreatedDate>
    <ClosedDate>16/02/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>503</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Can someone point me in the right direction for laymen usage of SharingService.exe and the SessionManager?

Objective:  Replicate and replace the HoloAcademy 240 example with my own assets using this latest toolkit across the Internet.  I know the Unity matchmaking service does not support Hololens, Soooo I'm assuming it needs to be built.  The HoloToolkit seems to have solved this problem with the sharing and session manager.  I can't seem to get these to work across the Internet.  I'll also caveat that I'm NOT a developer, so more robust explanation is needed to expain to me how to manipulate c# scripting code.  I was able to get 2 people to connect to the same space in the holoacademy on a LAN,  but not able to do it across the internet.  I'm using the sharing service from this toolkit to do the same, but a sharingservice on a public IP does not seem to be able to answer to a client from the internet, whereas internally to a LAN it can.  Am I missing a main point, like "it just doesn't work on the Internet"?  If someone has successfully achieved this with this toolkit and would like to share it, I would be eternally grateful.  And yes..I opened up the firewall to allow for comms.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>502</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>add Cursor,Directional indicator,Navigation and Manipulation Input</Title>
    <CreatedDate>04/02/2017</CreatedDate>
    <ClosedDate>14/02/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>502</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hello,
I'm very new in unity, I just got the HoloLens. It’s amazing!! I already impoted holotoolkit(1.5.5.0) to assets folder. And I’m following the academy tutorial. Everything is alright and I can get the same effect like in the tutorial with the files that provided in the beginning of the tutorial. But when I created my new project, I got confused. As follow the tutorial as before, I cannot find a lot of assets inside the holotoolkit, like”Cursor Manager”script,”Directional Indicator”asset “Gesture Manager”,”Gesture Action”,etc. And when I try to import the missing staff from the files of academy tutorial, there’s always some error. So what is my problem and how to add Cursor,Directional indicator,Navigation and Manipulation Input to a new project? 
Thanks a lot!!!</Description>
  </Issue>
  <Issue>
    <IssueID>501</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>In sharing, how to update the position of the spawnObject?</Title>
    <CreatedDate>04/02/2017</CreatedDate>
    <ClosedDate>07/02/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>501</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi, 

Once I spawned a cube, I moved a new position when I clicked as shown below. But, the new position was not synchronized with other HLs. 

public void OnInputClicked(InputClickedEventData eventData)
{
DefaultSyncModelAccessor spawnedObject =        GameObject.Find("Cube").GetComponent&lt;DefaultSyncModelAccessor&gt;();
SyncSpawnedObject cube = (SyncSpawnedObject ) spawnedObject.SyncModel; (I am not sure ??)
Vector3 position = Random.onUnitSphere * 2;
cube.Transform.Position = position;
 }

Please help me to fix my problem,
Thanks,
Woon </Description>
  </Issue>
  <Issue>
    <IssueID>499</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>AirTap and Manipulations and Shaking</Title>
    <CreatedDate>02/02/2017</CreatedDate>
    <ClosedDate>06/03/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>499</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hello 

I want to use this Toolkit for my Unity project, but just today i upgraded my stuff to version 5.5. I see some changes in the code collide with my previous experience. 
1) How do i do AirTap? Before i could add listener for GestureRecognizer and just add listener to it. Right now i can only attach some triggers only on GameObject. As a result, i cannot tap "nothing".
2) How do i make "Manipulations"? For example: In Kinect i could zoom in and out using both hands (not tapping, just recognizing pose and move with hands). Is it possible to do something similar with current Toolkit?
3) New Question: What about huge FPS drop when we are looking from very close distance (20cm or less). I receive similar results as here ( I was able to improve shaking a little using Mobile textures (Except Standard), but its still not fix shaking problem.

Thanks for answer</Description>
  </Issue>
  <Issue>
    <IssueID>497</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>⚠️ HoloToolkit no longer supports Unity 5.4.0f1-HTP</Title>
    <CreatedDate>02/02/2017</CreatedDate>
    <ClosedDate>02/02/2017</ClosedDate>
    <IssueLabels />
    <Code>
-----CompilerOutput:-stderr----------
Assets/HoloToolkit/Sharing/Scripts/Spawning/PrefabSpawnManager.cs(219,24):
error CS0266: Cannot implicitly convert type `UnityEngine.Object' to `UnityEngine.GameObject'.
An explicit conversion exists (are you missing a cast?)
-----EndCompilerOutput---------------
`</Code>
    <Description>I maintain  and was running builds on Unity 5.4.0f1-HTP. Just a heads up that a recent change ( broke compatibility. It's not clear if this project is attempting to maintain Unity back compat. so no patch submitted at this time.

I plan on upgrading Unity on the server.

``</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>495</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Simple sharing example of gameObjects</Title>
    <CreatedDate>01/02/2017</CreatedDate>
    <ClosedDate>14/02/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>495</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hello,

in the Spawn sharing example i saw that it's possible to sharespawned objects.
Now i want to be able to share GameObjects which i added to the scene in Unity without the SpawnManager but i am still looking for a easy solution. I know that it should be possible by changing CustomMessage but i hoped there is something which is more simple like adding a component to the GameObject.

Some documentation about that would be very helpful. Thanks a lot.

Dominic
</Description>
  </Issue>
  <Issue>
    <IssueID>483</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Sharing.prefab contains component that does not derive from MonoBehaviour</Title>
    <CreatedDate>29/01/2017</CreatedDate>
    <ClosedDate>01/02/2017</ClosedDate>
    <IssueLabels />
    <Description>The `Sharing.prefab` no longer works like it did before 

See  and  for more details.

`SessionUsersTracker` does not derive from MonoBehavior.  [The original file was renamed and overwritten]( but used the same GUID in the meta file causing the problem.

**Work around:**
Just remove the offending script and get the `SessionUsersTracker` instance from the `SharingStage`.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>482</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unit Testing</Title>
    <CreatedDate>29/01/2017</CreatedDate>
    <ClosedDate>28/11/2017</ClosedDate>
    <IssueLabels />
    <Description>@aalmada had a wonderful idea to start writing [unit tests for vector extensions]( and I thought it'd be a great idea to write a new test for each of the major feature areas of the HTK.

Unity Documentation: [Editor Test Runner](
HTK Documentation: [Unit Testing Readme](
An old blog entry from Unity: [Unit Testing at the speed of Light](

I'd like to propose a new Project that will create unit tests that cover each key area of the HTK:

- [x] Input
- [ ] Sharing
- [ ] SpatialMapping
- [ ] SpatialSound
- [ ] SpatialUnderstanding
- [ ] Utilities

The main purpose of this change is to ensure proper testing before any changes are merged into the master branch.  Recently we've been getting a little relaxed about merging without proper testing (myself included).  I'd just like to ensure we're doing our best to support the community without causing any unnecessary work or headaches. 


I propose that any of the members who have the ability to merge Pull Requests should make sure to run the tests before approving/merging.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>481</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spatial Mapping Meshes not aligned with Unity UP vector</Title>
    <CreatedDate>27/01/2017</CreatedDate>
    <ClosedDate>24/02/2017</ClosedDate>
    <IssueLabels />
    <Description>Hello,

I am using Unity to develop a Hololens app.

Most of the time the room mesh that I receive from the Lens is aligned with the UP direction in Unity's world (0,1,0).

However, it sometimes occurs that the room meshes suddenly losses its alignment with Unity UP vector, which results in a tilted mesh (about 40 degree off Unity's UP direction).

(Please note that the room mesh looks perfectly fine inside the lens, its just that its UP vector is off compared to Unity's UP so it looks tilted in the editor)

(Please also note that once the tilt happens the room meshes will be tilted both on the editor with remote debug, and when running the app directly on the lens itself).

Now I understand that the origin of the room is different from Unity but 40 degrees seems a bit off, that would also mean that many game properties would have to be changed accordingly (gravity direction for instance).

The strange thing is that the room is normally aligned with Unity's UP for a while, and then it changes for no obvious reason and cannot be reverted back to normal alignment and remains off 40 degrees, unless I create an entirely new scene (some obscure residual cache value might cause the problem ???)

Could anybody confirm that this behavior is not to be expected, and that a room mesh should always more or less be aligned with Unity's UP vector?</Description>
  </Issue>
  <Issue>
    <IssueID>480</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can I know when new User joined to my Session?</Title>
    <CreatedDate>27/01/2017</CreatedDate>
    <ClosedDate>01/02/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>480</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hello All,

I have used a SharingService and successfully implemented my application. Sharing Service is installed in a live server, I have used the live IP and we have connected more than one devices successfully.

Now the issue is when some one joined to current Session then on Server (if we have run service with cmd &gt; SharingService.exe -local) we can see "User UnknownUser at address 192.168.4.15 joined session Default". But we can't keep a watch on Server every time.
So I have put one text object and shown whether is Server Connected successfully or not. I got success in that also.

Now I want to show **Which Users are already connected to the current Session**? and also notification **if new User join the session**. How can I achieve this?

Please Help me.

Thanks.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>475</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unity 5.5.1f1 Released</Title>
    <CreatedDate>26/01/2017</CreatedDate>
    <ClosedDate>31/01/2017</ClosedDate>
    <IssueLabels />
    <Description>Unity compiler errors with overriden Awake and OnDestroy noticely for the Singleton class.
And with Holotoolkit.Sharing.SharingClientPINVOKE : unknown definitions</Description>
  </Issue>
  <Issue>
    <IssueID>474</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Using multiple materials in the toolkit does not help with dynamic batching</Title>
    <CreatedDate>25/01/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels />
    <Description>There is a very interesting forum thread going on about performance and Dynamic Batching:



It appears that accessing .material instead of .sharedmaterial causes shared materials to become instanced and breaks dynamic batching. It also appears that some of the toolkit behaviors (e.g. gaze responder) access materials in this way.

My knowledge of the Unity rendering pipeline doesn't go deep enough to validate this, but I think it's worth having someone with more knowledge take a look and see if these behaviors could be improved. By changing toolkit behavior code, this user was able to get another 12 FPS out of their app. Though it's wort noting that these changes seemed to cause other issues (like with the cursor).</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>473</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Manipulation Update when Head moves.</Title>
    <CreatedDate>25/01/2017</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels />
    <Description>IManipulationHandler works well when my hand is the only thing that is moving; but I've experienced that the OnManipulationUpdate event will trigger when I rotate my head. 
It also keeps happening when the hand is not visible and the Manipulated object will keep moving until you refocus on your hand to trigger the end event.

An easy way to replicate this is get a GameObject that you can Manipulate. Move it with your hand upwards. Then move your head to look up at the GameObject. You should see that the GameObject still moves upward even though your hand is in the same position. </Description>
  </Issue>
  <Issue>
    <IssueID>470</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>3DTextPrefab and samples report missing font</Title>
    <CreatedDate>23/01/2017</CreatedDate>
    <ClosedDate>23/01/2017</ClosedDate>
    <IssueLabels />
    <Description>3DTextPrefab and samples report missing font and don't shows texts, just outlines. Which is kind of confusing. Why is the font described  not included? Copyright reasons?</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>469</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Sharing with UNET scene runtime error in log, devices never connect</Title>
    <CreatedDate>22/01/2017</CreatedDate>
    <ClosedDate>25/01/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>469</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'm trying to run the SharingWithUNET test scene on my devices but they can't connect to each other or the editor. The server is broadcasting, but the client never gets the broadcast. I see this error on the HoloLens from VS' output:

"host id out of bound id {-1} max id should be greater 0 and less than {1}"

Anyone else see this?</Description>
  </Issue>
  <Issue>
    <IssueID>467</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Any Readme file or guidelines to follow for the new HTK - Unity 5.5?</Title>
    <CreatedDate>20/01/2017</CreatedDate>
    <ClosedDate>04/09/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>467</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hey, I've been using the previous version of HTK for a while and found my way across it quite well. I see that there have been major changes in 5.5 and my older projects dont work with the new HTK anymore. Is there any readme file/guidelines for migrating to use the new functionalities of 5.5?</Description>
  </Issue>
  <Issue>
    <IssueID>465</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>[vNext] Replace Windows Networking UWP code in GenericNetworkTransmitter with UNET compliant code</Title>
    <CreatedDate>18/01/2017</CreatedDate>
    <ClosedDate>09/11/2018</ClosedDate>
    <IssueLabels />
    <Description>I'm digging through the SharingWithUNET example and one thing that makes it tricky to work with is that GenericNetworkTransmitter contains a bunch of UWP code that can't be executed in the editor. It makes it a pain to debug, for one thing.

As far as I can tell, it's using this code to send bytestreams to the other client for anchors.  I think it would be much easier to use if this code was converted to use UNET's (albeit somewhat cumbersome) method of sending binary data between clients. You can see some examples on how to send large bytearrays via UNET here:



I'm eventually going to have to replace this code myself, but I was wondering if anyone else was already thinking about this issue or if this code is absolutely necessary to remain UWP code for some reason. (Maybe some Windows UWP security issue or something?)</Description>
  </Issue>
  <Issue>
    <IssueID>464</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Windows Insider: Unity editor hangs in play mode when using UnityEngine.VR.WSA.Input.GestureRecognizer</Title>
    <CreatedDate>18/01/2017</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
    <IssueLabels />
    <Description>Latest build version of InputManager.prefab causes Unity to hang.

Unity 5.50f3
Windows 10 

Cheers,
Mark</Description>
  </Issue>
  <Issue>
    <IssueID>463</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Release notes for v1.5.5.0 has incorrect Unity package</Title>
    <CreatedDate>17/01/2017</CreatedDate>
    <ClosedDate>18/01/2017</ClosedDate>
    <IssueLabels />
    <Description>The unity package in the [release notes]( is buggy.
Best to use one good source truth which is checked in under External\UnityPackages.</Description>
  </Issue>
  <Issue>
    <IssueID>462</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tap without focused object is not responded</Title>
    <CreatedDate>17/01/2017</CreatedDate>
    <ClosedDate>17/01/2017</ClosedDate>
    <IssueLabels />
    <Description>Hi,
I noticed that in the latest release of HoloToolkit-Unity, there is no interface for responding to tapping event, if there is no focused object. It seems that "OnInputUp", "OnInputDown", "OnInputClick" are sent to the focused object only. Is there access point to the "background" tapping event?
In the old version, the GestureManager can do something like this:
`recognizer = new GestureRecognizer();
recognizer.TappedEvent += (source, tapCount, ray) =&gt; {
    MyParseTapEvent();
};
recognizer.StartCapturingGestures();`
I can still add this to the my c# script, but it will be a little bit redundant and weird in the Event-Interface design pattern.</Description>
  </Issue>
  <Issue>
    <IssueID>461</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Movement with IManipulationHandler</Title>
    <CreatedDate>13/01/2017</CreatedDate>
    <ClosedDate>25/01/2017</ClosedDate>
    <IssueLabels />
    <Description>Hey Guys, 
I've been working with the updated version of HoloToolKit for Unity 5.5 and have been running into a lot up changes in how input is handled. Chief among these is the new IManipulationHandler and INavigationHandler interfaces.

I have IManipulationHandler implemented but am getting some weird movement from it.  Theres stutters(even with Time.deltaTime), jumps, movement on weird angles and movement when you move your head.

Did I wrongly assume this is the only line I needed to get an object to move?

public void OnManipulationUpdated(ManipulationEventData eventData)
{
     transform.position += (eventData.CumulativeDelta * Time.deltaTime);
}
(Note this a simplified version of the code but it is all I'm doing to move the object.)

I've taken a look at HandDraggable.cs but that class also has the same stutter and weird movement. Also theres weird rotation stuff going on in it that Doesn't seem to turn off even with the Boolean flags that are there. 

Any help is appreciated.

P.S. I'm also using IManipulationHandler to rotate a different object and this works just like the tutorials from microsoft. 
</Description>
  </Issue>
  <Issue>
    <IssueID>460</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to Handle URI activation and access URI in Unity Script</Title>
    <CreatedDate>10/01/2017</CreatedDate>
    <ClosedDate>12/01/2017</ClosedDate>
    <IssueLabels />
    <Description>How to access the URI in a GameObject Script, see: </Description>
  </Issue>
  <Issue>
    <IssueID>458</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Consume new HoloToolkit sharing components, merge other Microsoft changes from shipping products back into HoloToolkit</Title>
    <CreatedDate>09/01/2017</CreatedDate>
    <ClosedDate>18/01/2017</ClosedDate>
    <IssueLabels />
    <Description>[PR #69]( in the HoloToolkit project changes the native Sharing library to remove the usage of unsafe code in the managed Sharing scripts.  This requires corresponding changes to HoloToolkit-Unity to match changes in the native library.

Additionally, there are a large number of other changes made in Microsoft-internal projects to the HoloToolkit that can be merged back.  Changes include:
* Moving all examples into namespaces
* Adding new sync primitives to the sync system in the Sharing component
* Updated C# headers for consistency across the project
* New documentation for the Sharing system
</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>457</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Investigate CI solutions</Title>
    <CreatedDate>09/01/2017</CreatedDate>
    <ClosedDate>17/05/2018</ClosedDate>
    <IssueLabels />
    <Description>Hi Everyone,
I'm interested in setting up an continuous integration server to automatically test and make releases.

Does anyone have any suggestions?
I was looking at free to use solutions like [Travis-CI]( or [Appveyor](

The main features I think we should look for is:

- GitHub Releases
- Build Testing on Pull Request Merge

Does anyone have experience doing this?

(related to </Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>456</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Should we remove the unused ExtensibleInputModule branch?</Title>
    <CreatedDate>07/01/2017</CreatedDate>
    <ClosedDate>18/01/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>456</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Work for the ExtensibleInputModule has been merged into the Master branch.

Does it make since to keep this branch?</Description>
  </Issue>
  <Issue>
    <IssueID>453</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spatial Understanding Example: Menu does not function properly with new Input System</Title>
    <CreatedDate>05/01/2017</CreatedDate>
    <ClosedDate>14/02/2017</ClosedDate>
    <IssueLabels />
    <Description>Users are unable to click on the uGUI elements and buttons with ease.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>452</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ManualGazeControl.cs NullReferenceException</Title>
    <CreatedDate>04/01/2017</CreatedDate>
    <ClosedDate>05/01/2017</ClosedDate>
    <IssueLabels />
    <Description>I'm having some trouble getting Manual Gaze Control working with my project. After adding the component to the main camera and playing, I am getting:

`NullReferenceException: Object reference not set to an instance of an object
HoloToolkit.Unity.InputModule.ManualGazeControl.Awake () (at Assets/HoloToolkit/Input/Scripts/Utilities/ManualGazeControl.cs:46)`

Am I missing something?
Thanks</Description>
  </Issue>
  <Issue>
    <IssueID>451</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Build error after getting latest from IInputClickHandler in TapToPlace</Title>
    <CreatedDate>04/01/2017</CreatedDate>
    <ClosedDate>04/01/2017</ClosedDate>
    <IssueLabels />
    <Description>I just synced to latest and project no longer builds:

Error	
CS0737	
'TapToPlace' does not implement interface member 'IInputClickHandler.OnInputClicked(InputEventData)'. 'TapToPlace.OnInputClicked(InputEventData)' cannot implement an interface member because it is not public.

Also errors for:

Error	CS0621	'TapToPlace.Update()': virtual or abstract members cannot be private	HoloToolkit-Unity	D:\GeneDocs\Documents\GitHub\HoloToolkit-Unity\Assets\HoloToolkit\SpatialMapping\Scripts\TapToPlace.cs	86	Active

Error	CS0621	'TapToPlace.Start()': virtual or abstract members cannot be private	HoloToolkit-Unity	D:\GeneDocs\Documents\GitHub\HoloToolkit-Unity\Assets\HoloToolkit\SpatialMapping\Scripts\TapToPlace.cs	50	Active

</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>450</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Suggestion: Future PRs to incorporate at least 2 approvals by reviewers</Title>
    <CreatedDate>04/01/2017</CreatedDate>
    <ClosedDate>14/01/2017</ClosedDate>
    <IssueLabels />
    <Description>I've noticed sometimes we merge pull requests in too soon without proper time to get reviews.

I'd like to suggest that PRs require at least 3 reviews before we're able to merge into main.

There may be some CI solutions that can automatically check the build status of an incoming PR and flag it ahead of time if changes break the build.</Description>
  </Issue>
  <Issue>
    <IssueID>449</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HandDraggable component is throwing NullReferenceException</Title>
    <CreatedDate>04/01/2017</CreatedDate>
    <ClosedDate>04/01/2017</ClosedDate>
    <IssueLabels />
    <Description>I hava a gameobject with the HandDraggable component on. When I start dragging a series of exceptions are thrown.

I use Unity 5.5.0p1 and I have tested using HTK code from both december 16 and today, january 4.


The stack trace looks like this:
First exception:
   at UnityEngine.EventSystems.HoloLensInput.GestureHandler_NavigationStarted(InteractionSourceKind source, Vector3 normalizedOffset, Ray headRay)
   at UnityEngine.VR.WSA.Input.GestureRecognizer.InvokeNavigationEvent(GestureEventType eventType, InteractionSourceKind source, Vector3 relativePosition, Ray headRay)
   at UnityEngine.VR.WSA.Input.GestureRecognizer.$Invoke30InvokeNavigationEvent(Int64 instance, Int64* args)
   at UnityEngine.Internal.$MethodUtility.InvokeMethod(Int64 instance, Int64* args, IntPtr method)

Second and all other exceptions:
   at UnityEngine.EventSystems.HoloLensInput.GestureHandler_NavigationUpdated(InteractionSourceKind source, Vector3 normalizedOffset, Ray headRay)
   at UnityEngine.VR.WSA.Input.GestureRecognizer.InvokeNavigationEvent(GestureEventType eventType, InteractionSourceKind source, Vector3 relativePosition, Ray headRay)
   at UnityEngine.VR.WSA.Input.GestureRecognizer.$Invoke30InvokeNavigationEvent(Int64 instance, Int64* args)
   at UnityEngine.Internal.$MethodUtility.InvokeMethod(Int64 instance, Int64* args, IntPtr method)
</Description>
  </Issue>
  <Issue>
    <IssueID>448</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>IManipulationHandler to rotate object and use in Unity Editor</Title>
    <CreatedDate>04/01/2017</CreatedDate>
    <ClosedDate>13/03/2017</ClosedDate>
    <IssueLabels />
    <Description>I am trying to use the IManipulationHandler to rotate a Sphere. I'd like to test this in Unity Editor, but I cannot seem to get this working by holding the click and move. Am I missing something or is this not implemented? The methods are called correctly when running on the HoloLens.

Also, did anyone already implement rotation of objects by using the IManipulationHandler?</Description>
  </Issue>
  <Issue>
    <IssueID>445</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cursor disappears when a navigation/manipulation gesture is cancelled</Title>
    <CreatedDate>03/01/2017</CreatedDate>
    <ClosedDate>24/01/2017</ClosedDate>
    <IssueLabels />
    <Description>I am using the new HoloToolkit Input Module.  I created an object to respond to navigation gestures - added a script to implement the INavigationHandler interface.

Things work well excepting for the fact that the cursor disappears when a navigation is cancelled( hand disappears from view). I am using the cursor prefabs (BasicCursor or CursorWithFeedback) provided by HoloToolkit.

Am I missing something in my implementation?

I get the same effect with the manipulation interfafce.</Description>
  </Issue>
  <Issue>
    <IssueID>444</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Prefab Cursors don't appear to work.</Title>
    <CreatedDate>03/01/2017</CreatedDate>
    <ClosedDate>05/01/2017</ClosedDate>
    <IssueLabels />
    <Description>I created a new project today. I thought it was me at first.

1. Imported the toolkit
2. Create a new scene
3. fixed the "vr setting in unity
4. Added a cursor (tried them all to my scene)
5. Load my app in Holo. - The cursor doesn't display anywhere in the scene when I run it.</Description>
  </Issue>
  <Issue>
    <IssueID>439</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>GestureManager removed from holotoolkit for Unity 5.5?</Title>
    <CreatedDate>29/12/2016</CreatedDate>
    <ClosedDate>05/01/2017</ClosedDate>
    <IssueLabels />
    <Description>I was using the Unity 5.4 beta for hololens and using holotoolkit with GestureManager in it. Now when I updated the toolkit for Unity 5.5 I don't see the GestureManager anymore. Is there any direction on how to capture Tap event and other Gestures?</Description>
  </Issue>
  <Issue>
    <IssueID>437</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Build Error.</Title>
    <CreatedDate>29/12/2016</CreatedDate>
    <ClosedDate>05/01/2017</ClosedDate>
    <IssueLabels />
    <Description>HoloToolkit-&gt;Bulild Window-&gt; Build Visual Studio SLN 
![image](
</Description>
  </Issue>
  <Issue>
    <IssueID>436</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How can I Anchor the position on load scene?</Title>
    <CreatedDate>27/12/2016</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>436</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>The position when I load the next scene ,the position is changed, After mapping the room ,I find some position to place GameObjects, I use an empty GameObject with WorldAnchor and DonDestoryOnLoad Script On it to save the position,but when load to the next scene and get the position ,some Info has changed,Can you help me ? How to keep the virtual Object position in the real world,even I load scene  </Description>
  </Issue>
  <Issue>
    <IssueID>435</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpatialMapping and SpatialUnderstanding document clarification</Title>
    <CreatedDate>27/12/2016</CreatedDate>
    <ClosedDate>31/01/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>435</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hi,I'm new to Hololens,I'm making a dancer demo.
now,my dancer works good in Hololens,then I want my dancer standing on the floor ,just like RoboRaid on the wall .
I have read the documents about SpatialMapping and Holograms 230,but still confusing,please help me,thanks.
and I'm working on translate HTK doucments into Chinese,when I finished,will you guys include the Chinese version docs here?because Hololens will come to china in 2017!
</Description>
  </Issue>
  <Issue>
    <IssueID>434</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Holograms 210 Error! Can't display Billbard &amp; Tag-Along</Title>
    <CreatedDate>27/12/2016</CreatedDate>
    <ClosedDate>07/01/2017</ClosedDate>
    <IssueLabels />
    <Description>
Tutorial 210, i have done the tutorial 210
.But I am debugging on device,can't display billboard and Tag-Along.
 I can see the AstroMan in the sense.
VS debug throw the error:
``</Description>
  </Issue>
  <Issue>
    <IssueID>431</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Readme.md need to be updated</Title>
    <CreatedDate>24/12/2016</CreatedDate>
    <ClosedDate>14/01/2017</ClosedDate>
    <IssueLabels />
    <Description>some scripts or prefabs have already changed in HoloToolkit, but readme.md is still old.
such as GestureManipulator.cs and Main Camera.prefab etc..</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>423</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Suggestion: used [obsolete] when you rename stuff</Title>
    <CreatedDate>21/12/2016</CreatedDate>
    <ClosedDate>07/01/2017</ClosedDate>
    <IssueLabels />
    <Description>Dear people,

I am trying to update a project that I made in September to the new version of the HoloToolkit. This is a painful process. For instance:

- In GazeManager all StableHeadXXX members are renamed to StableXXX

- Various classes have moved name spaces and some I have not been able to find back at all yet.

- I even lost my bloody CAMERA prefab. WHY?

As Unity works, my whole project is broken now - no classes compile till all compile. How about at least using [obsolete] on members, or giving other hints when things have moved namespaces? And try to prevent moving namespaces at all - a 5.4 to 5.5 bump does not suggest breaking code.

Just my $0.05</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>421</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>TapToPlace hotfixes</Title>
    <CreatedDate>21/12/2016</CreatedDate>
    <ClosedDate>04/01/2017</ClosedDate>
    <IssueLabels />
    <Description>@madvlad, we should probably make the private fields in TapToPlace protected instead of private as well.</Description>
  </Issue>
  <Issue>
    <IssueID>411</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Minor text update request on "Getting Started" page</Title>
    <CreatedDate>20/12/2016</CreatedDate>
    <ClosedDate>14/01/2017</ClosedDate>
    <IssueLabels />
    <Description>Hello, 

I noticed "ManualCameraControl.cs" changed into "ManualGazeControl.cs"
but the description did not change in the "Getting Started" page.


![oldtext](

</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>409</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Create a EditorConfig with project code style</Title>
    <CreatedDate>19/12/2016</CreatedDate>
    <ClosedDate>11/04/2019</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Investigate</Name>
        <IssueID>409</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>This would save a lot of reviewer's time. Right @HodgsonSDAS? ;)

</Description>
  </Issue>
  <Issue>
    <IssueID>408</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Plane Finding Test is currently not working.</Title>
    <CreatedDate>19/12/2016</CreatedDate>
    <ClosedDate>19/12/2016</ClosedDate>
    <IssueLabels />
    <Description>SpatialMapping/Tests/PlaneFinding.unity is currently not working.

(This was the case even before my Spatial Mapping Refactor PR)</Description>
  </Issue>
  <Issue>
    <IssueID>407</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tagslong.cs</Title>
    <CreatedDate>19/12/2016</CreatedDate>
    <ClosedDate>03/02/2017</ClosedDate>
    <IssueLabels />
    <Description>My BoxCollider Size = (1,1,1)
when MinimumHorizontalOverlap and MinimumVerticalOverlap both set 1f, My UI always shake.</Description>
  </Issue>
  <Issue>
    <IssueID>406</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>RemoteMapping no longer working</Title>
    <CreatedDate>19/12/2016</CreatedDate>
    <ClosedDate>19/12/2016</ClosedDate>
    <IssueLabels />
    <Description>Hello,  I was trying out RemoteMapping test scene from the latest version (2016-12-18) of HoloToolkit, but after pressing "N" and speaking "send meshes", nothing shows up in Unity Editor. Would anyone know why or how to fix this? 

FYI: I also put in my PC's local IP address in Unity before building the app, checked boxes of InternetClientServer, PrivateNetworkClientServer, and Microphone under Publishing settings as instructed. </Description>
  </Issue>
  <Issue>
    <IssueID>404</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Refactor TapToPlace.cs to be more generic</Title>
    <CreatedDate>16/12/2016</CreatedDate>
    <ClosedDate>20/12/2016</ClosedDate>
    <IssueLabels />
    <Description>Should probably be a base class that others can extend in their own projects.

Someone should be able to put their own logic into `Start`, `OnInputClicked`, and `Update` by extending this base class.

Also being able to specify a parent transform to move, but keeping the script and collider on the object you wish to tap would be helpful as well.</Description>
  </Issue>
  <Issue>
    <IssueID>402</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Bluetooth iBeacon in Unity</Title>
    <CreatedDate>16/12/2016</CreatedDate>
    <ClosedDate>28/10/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>402</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>402</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Now I'm working with an indoor localization project, which involves iBeacon. How can I access all the Bluetooth devices paired to HoloLens? And then, get the information that the iBeacon sends.</Description>
  </Issue>
  <Issue>
    <IssueID>400</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Rendered Font does not face in the forward vector</Title>
    <CreatedDate>14/12/2016</CreatedDate>
    <ClosedDate>24/02/2017</ClosedDate>
    <IssueLabels />
    <Description>Font is rendered backwards in regard to its transform forward vector direction.

Might be how it's implemented in the shader?</Description>
  </Issue>
  <Issue>
    <IssueID>397</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ERROR_ALREADY_EXISTS: Path</Title>
    <CreatedDate>14/12/2016</CreatedDate>
    <ClosedDate>20/12/2016</ClosedDate>
    <IssueLabels />
    <Description>Hi,

when using build window to build the VS solution and then open it, I usually get following (attached) error message several times. It only works again after I closed Visual Studio. This is kind of an inefficient workflow  to always restart VS once I built the solution.

Any suggestions?


![error_win32_path](
</Description>
  </Issue>
  <Issue>
    <IssueID>396</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>KeywordManager:  NullReferenceException in Update() when initialization fails.</Title>
    <CreatedDate>14/12/2016</CreatedDate>
    <ClosedDate>15/12/2016</ClosedDate>
    <IssueLabels />
    <Description>KeywordManager doesn't check if keywordRecognizer is null in Update(), resulting in an exception thrown on every loop cycle. Initialization can fail in two cases; an empty KeywordsAndResponses or it contains duplicate keywords.

Actually I don't think Update() needs to check if keywordRecognizer.IsRunning. The recognizer should be always running if this behavior is enabled (#359). Update() is not called when this behavior is disabled. One less 'if' in Update() is good for performance.

Still, duplicate keywords should not throw an exception but log an error message.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>395</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Adding new fast configurable shader</Title>
    <CreatedDate>13/12/2016</CreatedDate>
    <ClosedDate>19/01/2017</ClosedDate>
    <IssueLabels />
    <Description>I'd like to start a discussion around the possible removal of the standard fast shader (~50 ALU ops per pixel is still too much for the device), and the adding of a new fast configurable shader designed to replace most of the existing shaders.

Currently, it supports main texture, main color, vertex color, occlusion/detail texture, normal map, ambient lighting via unity's spherical harmonics, diffuse/lambertian lighting, specular/blinn-phong lighting, additional diffuse lighting for lights with a fadeoff such as point and spot, emission color, emission texture.  Near plane fade would continue to be supported.

Culling mode, etc. would continue to be configurable, I'm adding blendop configuration, and since unity now has support for changing the queue on a per-material basis from the UI, the need for the transparent variant shaders should go away.

Is there any odd uses of the standard fast shader that I'm not considering, or any features we feel would be appropriate?

</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>391</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>NearPlaneFade Script no longer works on device</Title>
    <CreatedDate>13/12/2016</CreatedDate>
    <ClosedDate>05/01/2017</ClosedDate>
    <IssueLabels />
    <Description>I'm not sure if this is something new to Unity 5.5 or if it has been around for longer than that. I am currently running Unity 5.5.0p1. When running in the editor, the script behaves as expected and holograms rendered with a with supported shader fade out within the correct distance. When running on the device, however, the NearPlaneFade script appears to have no effect and the holograms no longer fade as you approach them.

As a side observation, it looks like the StandardFast shader doesn't support near plane fading at all. I imagine this is because the StandardFast shader mostly just leverages the existing UnityStandardCoreForward implementation</Description>
  </Issue>
  <Issue>
    <IssueID>390</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Shaders don't support singlepass stereo instancing</Title>
    <CreatedDate>12/12/2016</CreatedDate>
    <ClosedDate>05/01/2017</ClosedDate>
    <IssueLabels />
    <Description>For a bunch of the holotoolkit shaders, single-pass stereo instancing in Unity 5.5 isn't supported, and as a result, the holograms only render in the left eye.  

For reference, this is the setting I am referring to:  
![image](

So far my testing has reveiled the following:   

Shader Name | Status
------------ | -------------
StandardFast | ✅ 
BlinnPhong | ✅
Lambertian | ✅ 
Cursor | :x:
EditorHands | :x:
Occlusion | :x:
SpatialMapping\SpatialMappingTap | :x:
SpatialUnderstanding\Mapping | :x:
SpatialUnderstanding\Understanding | :x:
UnlitConfigurable | :x:
VertexLit | :x:
WindowOcclusion| :x:
Wireframe | :x:
</Description>
  </Issue>
  <Issue>
    <IssueID>388</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cursor design</Title>
    <CreatedDate>12/12/2016</CreatedDate>
    <ClosedDate>13/12/2016</ClosedDate>
    <IssueLabels />
    <Description>The native cursor in the HoloLens looks quite nice, I am talking about the white donut that turns into a filled white circle when airtapping. The cursor in the HoloTookit however looks not so great. Is there a reason for this? I have been searching for some alternatives, but was not able to find one. Anyone else facing this or created an improved cursor?</Description>
  </Issue>
  <Issue>
    <IssueID>387</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Please wrap toolkit code in #if UNITY_WSA</Title>
    <CreatedDate>10/12/2016</CreatedDate>
    <ClosedDate>07/07/2017</ClosedDate>
    <IssueLabels />
    <Description>Unity is used to build multi-platform applications. Simply adding the HoloToolkit-Unity code to a unity project should not break other build targets, but it does. 

The HoloToolkit-Unity scripts and the HoloToolkit example scripts generate large numbers of compile errors preventing builds for Windows *.exe, Mac OSX, iOS, Android, and other targets. The root cause of these compile errors is HoloLens and UWP Unity builds use a different .NET framework than other more general Unity build targets.

Please as a policy wrap all HoloToolkit-Unity and HoloToolkit Example scripts in #if UNITY_WSA/#endif pairs so adding the toolkit to a project doesn't break all other build targets of the project.
</Description>
  </Issue>
  <Issue>
    <IssueID>384</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Editor Hand Control breaks when transitioning to a new scene</Title>
    <CreatedDate>09/12/2016</CreatedDate>
    <ClosedDate>01/09/2017</ClosedDate>
    <IssueLabels />
    <Description>When using Editor Hand Controls and loading a new scene the hand positions stop updating correctly in the scene, although the input from mouse and keyboard still work correctly.</Description>
  </Issue>
  <Issue>
    <IssueID>383</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>keveleigh</FixedById>
        <IssueID>383</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Billboard.cs doesn't have X as a pivot axis</Title>
    <CreatedDate>09/12/2016</CreatedDate>
    <ClosedDate>18/04/2018</ClosedDate>
    <IssueLabels />
    <Description>It was removed because it wasn't working properly.

References:

</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>381</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Deployed Apps Crash - HoloLensWorldManager error</Title>
    <CreatedDate>09/12/2016</CreatedDate>
    <ClosedDate>09/12/2016</ClosedDate>
    <IssueLabels />
    <Code>
Begin showing splash screen.

The following GlobalManagers were stripped from the build (Either because they're not used or not supported on this platform):
  NetworkManager
  MasterServerInterface
  UnityAdsManager
  ClusterInputManager
  UnityAnalyticsManager
  CrashReportManager

UnloadTime: 2.947000 ms

HoloLensWorldManager failed to return a world coordinate system!
 
(Filename: C:/buildslave/unity/build/Runtime/VR/HoloLens/SpatialMapping/SurfaceObserver.cpp Line: 466)


`</Code>
    <Description>Tested both in emulator and remote device.

``</Description>
  </Issue>
  <Issue>
    <IssueID>380</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Main Camera prefab missing</Title>
    <CreatedDate>09/12/2016</CreatedDate>
    <ClosedDate>14/01/2017</ClosedDate>
    <IssueLabels />
    <Description>Not a huge deal.  But the first step in the README.md says to delete the main camera and add the prefab.  This prefab does not exist in HoloToolkit/Utilities/Prefabs.

The README.md under HoloToolkit/Utilities also says the prefab exists.  Thankfully it details what the prefab sets (except for the clipping plane .. 0.85)</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>379</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Make HoloToolkit-Unity available in Unity Asset Store</Title>
    <CreatedDate>09/12/2016</CreatedDate>
    <ClosedDate>09/12/2016</ClosedDate>
    <IssueLabels />
    <Description>The Asset Store is the equivalent to NuGet in the Unity ecosystem. Having it the official releases available there make it much easier to install. Users are warned of updates.</Description>
  </Issue>
  <Issue>
    <IssueID>377</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>TextPrefabSamplesTest missing Segoe Font &amp; prefabs</Title>
    <CreatedDate>08/12/2016</CreatedDate>
    <ClosedDate>14/02/2017</ClosedDate>
    <IssueLabels />
    <Description>HoloToolkit/UI/Materials/3DTextSegoeUI.material missing Font Texture.

@cre8ivepark</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>375</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>ProjectSettings folder contains many unneeded files overwriting user values</Title>
    <CreatedDate>07/12/2016</CreatedDate>
    <ClosedDate>15/12/2016</ClosedDate>
    <IssueLabels />
    <Description>There are a ton of settings files in checked into the repo that have nothing to do with enabling Holographic functionality and which will overwrite the user's existing files of the same name.

My guess is you just need the ProjectSettings and possibly AudioManager files, but it would be WAY nicer if instead of even including those files there was just a menu item that set the small number of required settings the way they need to be for Holographic projects to work properly (I spent almost 4 hours last night repeatedly building and rebuilding my project trying to figure out what combination of build and project settings was required vs. recommended vs. not supported). Then you wouldn't need to include any of these settings files.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>374</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>License file placement and top level folder structure are incompatible</Title>
    <CreatedDate>07/12/2016</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
    <IssueLabels />
    <Description>ex-msft here, always had good experiences dealing with LCA on licensing when I was there and I'm optimistic this is easy to resolve...

The repo is designed to look like a Unity project, which is great, but you've placed the License.txt file at the root of the Unity project. That placement means any dev who downloads the project is faced with a Catch-22 of unacceptable situations in which they either leave the license file where it is (respecting your wishes) at the cost of unintentionally declaring that their entire project MIT licenses because there's an MIT license block at the top of their project OR deleting the license block so their project's non-MIT status is correctly reflected at the cost of not having a copy of the license terms for your MIT licensed code inside their project (and hence being out of compliance with your license). Obviously neither scenario is OK.

Suggestion: 
(1) Move the current contents of the HoloToolkit-Unity folder into a subdirectory. 
(2) Place a License.txt file at the top of the repo (above the subdirectory) demonstrating that everything below is MIT licensed and making it easy for visitors to find the license
(3) (Optional) Move the files currently in Assets/ to Assets/HoloToolkit-Unity (or similar) so all the HoloToolkit files are in one place once they get imported into a user's project (this isn't a legal issue, it's just a polite best practice to avoid polluting the top of your user's Asset folder with tons of files)
(4) Copy the License.txt file into the new Assets/HoloToolkit-Unity folder (or whatever you call it) to make sure there is a properly-located copy of the license file on the user's machine after they import your code into their project
(5) Repeat steps (3) and (4) for the External/ folder
(6) please don't repeat steps (3) and (4) for the ProjectSettings/ folder, as that folder contains tons of stock Unity files that are user-generated and that would break if you grouped the contents into a sub folder.</Description>
  </Issue>
  <Issue>
    <IssueID>370</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>CLA Bot seems broken</Title>
    <CreatedDate>06/12/2016</CreatedDate>
    <ClosedDate>20/12/2016</ClosedDate>
    <IssueLabels />
    <Description>The bot that updates the CLA labels seems to be broken and doesn't update labels correctly on pull requests.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>367</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InputManager - Make some methods virtual / protected</Title>
    <CreatedDate>03/12/2016</CreatedDate>
    <ClosedDate>03/12/2016</ClosedDate>
    <IssueLabels />
    <Description>Is there a reason the InputManager class was written to not be easily inheritable? The issue is I would like to extend InputManager and add input sources in a separate class while making as little changes as possible to the HoloToolkit files to make merges with the latest Github releases and tracking of project specific code easier.

The following methods I propose should be virtual in `InputManager.cs` at a minimum: 
`HandleEvent, Start, OnEnable, OnDisable`

The following methods in `InputManager.cs` marked protected: 
`Start, OnEnable, OnDisable, HandleEvent`</Description>
  </Issue>
  <Issue>
    <IssueID>366</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>InputManager OnFocusEnter, OnFocusExit Events Reversed</Title>
    <CreatedDate>03/12/2016</CreatedDate>
    <ClosedDate>06/12/2016</ClosedDate>
    <IssueLabels />
    <Description>In InputManager.cs, lines 355 and 364 reverse references to `OnFocusExitEventHandler` and `OnFocusEnterEventHadler`. As a result `OnFocusEnter` and `OnFocusExit` fire in the wrong order.

Also, `OnFocusEnterEventHadler` contains a typo.

To test, run `ColorPickerExample`. It's currently broken. Reverse the refs in InputManager.cs to fix.

Thanks.</Description>
  </Issue>
  <Issue>
    <IssueID>365</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoloToolkit Apply HoloLens Project Settings not setting virtual reality enabled</Title>
    <CreatedDate>03/12/2016</CreatedDate>
    <ClosedDate>07/01/2017</ClosedDate>
    <IssueLabels />
    <Description>When using the Apply HoloLens Project Settings HoloToolkit menu item, the Boolean for Virtual Reality Enabled is not getting marked as it's supposed to be.</Description>
  </Issue>
  <Issue>
    <IssueID>362</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Gamepad Controller Example and scripts need to be updated</Title>
    <CreatedDate>02/12/2016</CreatedDate>
    <ClosedDate>17/09/2017</ClosedDate>
    <IssueLabels />
    <Description>New Input Architecture changes have broken Gamepad controller example and scripts.

`InputSettings.asset` also needs to be updated.</Description>
  </Issue>
  <Issue>
    <IssueID>359</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>KeywordManager keeps listening when inactive</Title>
    <CreatedDate>02/12/2016</CreatedDate>
    <ClosedDate>20/12/2016</ClosedDate>
    <IssueLabels />
    <Description>The current implementation of `KeywordManager` starts listening for voice commands when the script's `Start` function is called. However, the underlying `KeywordRecognizer` object is only stopped when the script is being destroyed - if the script (or any parent in the hierarchy) is deactivated, it keeps responding to voice commands (key bindings work correctly though, since these are processed in the `Update` method).

`KeywordManager` should check when it is deactivated and stop responding to voice commands until it is activated again.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>358</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Question: Is anyone else getting Timestamps and assets out of sync with 5.5.0f3?</Title>
    <CreatedDate>02/12/2016</CreatedDate>
    <ClosedDate>07/12/2016</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>358</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I already submitted a ticket with Unity, but I'd like to make sure I'm not the only one.

Seems to happen in any project I've ported from the HTK editors and seems to always involves the same 3 guids:
``</Description>
  </Issue>
  <Issue>
    <IssueID>357</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Shader Warning for Custom/Unlit_glass_button</Title>
    <CreatedDate>02/12/2016</CreatedDate>
    <ClosedDate>24/02/2017</ClosedDate>
    <IssueLabels />
    <Description>``</Description>
  </Issue>
  <Issue>
    <IssueID>310</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Visual Studio Build fails in Unity 5.5 beta</Title>
    <CreatedDate>28/10/2016</CreatedDate>
    <ClosedDate>02/11/2016</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>310</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Visual Studio builds are successful on the 5.4 but seem to be failing if the solution is being built from 5.5 beta version of Unity via WiFi deploy. It doesn't throw any error but says "remote device is taking too long to respond" and fails eventually. I migrated the 5.5 project to the stable Unity version(5.4) and built the VS solution and it deploys successfully like they used to originally. It's kind of annoying to switch between the versions because Holographic Remoting makes life so much easier and the scenes from 5.5 can't be opened in 5.4 coz of different versions. I'm assuming this is a Unity issue since it's in Beta,  Is this a known issue or am I doing something wrong?</Description>
  </Issue>
  <Issue>
    <IssueID>308</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spatial mapping stopped working</Title>
    <CreatedDate>26/10/2016</CreatedDate>
    <ClosedDate>27/10/2016</ClosedDate>
    <IssueLabels />
    <Description>I'm using the latest version of holotoolkit, the spatial mapping worked for some days but suddenly it stoped. Now when I go to the device portal it says 'Failed to get surfaces' and everything works fine in unity. Any ideas?</Description>
  </Issue>
  <Issue>
    <IssueID>304</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Poll: Move HoloToolkit-Unity to Unity 5.5 beta releases</Title>
    <CreatedDate>21/10/2016</CreatedDate>
    <ClosedDate>09/11/2016</ClosedDate>
    <IssueLabels />
    <Description>Please feel free to either express your sentiments here or on [this poll](1. We will mark a release version for the master branch for Unity 5.4. So you can still use that code.2. Then we can move master onto Unity 5.5.3. We want to ensure you get enough time to make this move.We will make this move on **November 7th**. This gives everyone a 2 week breaking change notice.[Reference project](</Description>
  </Issue>
  <Issue>
    <IssueID>302</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>GameControllerManipulator needs HandsManager.cs to avoid null ref</Title>
    <CreatedDate>21/10/2016</CreatedDate>
    <ClosedDate>07/12/2016</ClosedDate>
    <IssueLabels />
    <Description> Uses a cursor which responds to Hands feedback but is missing attaching HandsManager.cs to the Managers gameobject.Was this scene created using Unity 5.5? Something seems not backwards compatible with Unity 5.4?</Description>
  </Issue>
  <Issue>
    <IssueID>300</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Failed to build appx from solution. Error code: 1</Title>
    <CreatedDate>20/10/2016</CreatedDate>
    <ClosedDate>26/10/2016</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>300</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>When using the build window and running in Parallels I am unable to build appx from solution. I've tried changing the target to x86 and the app builds and deploys fine from VS. I'm convinced this has something to do with the build directory.1. No spaces in targets or names2. Latest builds. 3. 5.4 0f34. Project resides on c:/ (not using mapped drive)</Description>
  </Issue>
  <Issue>
    <IssueID>298</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>298</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Request for Sync System Example</Title>
    <CreatedDate>20/10/2016</CreatedDate>
    <ClosedDate>29/11/2016</ClosedDate>
    <IssueLabels />
    <Description>I've been having issues getting the [Sync System]( set up properly.I was wondering if anyone had any examples they'd like to share?</Description>
  </Issue>
  <Issue>
    <IssueID>295</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>BuildTools fails when "Unity C# Projects" option checked in Unity "Build Settings" menu.</Title>
    <CreatedDate>18/10/2016</CreatedDate>
    <ClosedDate>03/02/2017</ClosedDate>
    <IssueLabels />
    <Description>## IssueHoloToolKit BuildTool fails to build when "Unity C# Projects" option checked in Unity "Build Settings" menu.## Steps to reproduceCreate new projectImport HoloToolKitOpen "SpatialUnderstanding" in the HoloToolkit-ExamplesSet up build settings as below.![capture](Use BuildTool to buildSample build errors&gt; D:\Documents\Hololens Test Projects\SpatialProject\WindowsStoreApp\SpatialProject\SpatialProject.csproj(289,9): error M&gt; SB3030: Could not copy the file "D:\Documents\Hololens Test Projects\SpatialProject\WindowsStoreApp\GeneratedProjects\&gt; UWP\Assembly-CSharp\bin\x86\Debug\Assembly-CSharp.dll" because it was not found.&gt; &gt; D:\Documents\Hololens Test Projects\SpatialProject\Assets\HoloToolkit\Sharing\Scripts\SDK\SharingClientPINVOKE.cs(1432,&gt; 51): error CS0234: The type or namespace name 'MarshalAs' does not exist in the namespace 'System.Runtime.InteropServic&gt; es' (are you missing an assembly reference?) [D:\Documents\Hololens Test Projects\SpatialProject\WindowsStoreApp\Genera&gt; tedProjects\UWP\Assembly-CSharp\Assembly-CSharp.csproj]## PlatformUnity 5.5.0b7, latest HoloToolKit</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>293</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpatialMappingSource: UpdateID is always zero</Title>
    <CreatedDate>18/10/2016</CreatedDate>
    <ClosedDate>18/10/2016</ClosedDate>
    <IssueLabels />
    <Description>This prevents apps from calculating delta between meshID updates. They cannot tell if the mesh has been updated or not. Or how many updates have happened.meshID/ID = gets updated when a new mesh gets added.UpdateID = will be updated to count the number of updates to that mesh.**Fix**: Increment UpdateID in protected void UpdateSurfaceObject(GameObject gameObject, int meshID)protected void UpdateSurfaceObject(GameObject gameObject, int meshID)        {            // If it's in the list, update it            for (int i = 0; i &lt; SurfaceObjects.Count; ++i)            {                if (SurfaceObjects[i].Object == gameObject)                {                    SurfaceObject thisSurfaceObject = SurfaceObjects[i];                    thisSurfaceObject.ID = meshID;                    SurfaceObjects[i] = thisSurfaceObject;                    return;                }            }</Description>
  </Issue>
  <Issue>
    <IssueID>292</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Sharing sample -&gt; User joins session but never joins room</Title>
    <CreatedDate>18/10/2016</CreatedDate>
    <ClosedDate>04/11/2016</ClosedDate>
    <IssueLabels />
    <Description>I've noticed a strange bug which seems like a race condition: sometimes, when looking at the debug output of the Sharing sample you get a "User joining session" debug print but after that it seems to be stuck forever in the AnchorStore_Initialized state because the sharing service never gets marked as ready.This happens because `SharingSessionTracker.SendJoinEvent()` is called before `ImportExportAnchorManager` gets to subscribe to this event.The problem went away after moving `SharingSessionTracker.Instance.SessionJoined += Instance_SessionJoined;` from `SharingManagerConnected()` to `Start()` , so I'd propose that as a solution.Can anyone else reproduce this issue and give me some more insight?</Description>
  </Issue>
  <Issue>
    <IssueID>291</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spatial Mapping is crashing in HoloLens device</Title>
    <CreatedDate>18/10/2016</CreatedDate>
    <ClosedDate>25/10/2016</ClosedDate>
    <IssueLabels />
    <Description>Usage of "Spatial Mapping" prefab under HoloToolkit/SpatialMapping/Prefabs/SpatialMapping.prefab is making the app crash in HoloLens device. Without the Spatial Mapping prefab app works fine. </Description>
  </Issue>
  <Issue>
    <IssueID>290</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unable to use Spatial Understanding and Hololens Remoting</Title>
    <CreatedDate>18/10/2016</CreatedDate>
    <ClosedDate>14/02/2017</ClosedDate>
    <IssueLabels />
    <Description>## IssueUnable to use Spatial Understanding with Hololens Remoting## Steps to reproduceFor spatial understanding, I found numerous references to #IF UNITY_EDITOR within the scripts.After commenting those lines out, I get a new error of  `Failed to load 'Assets/HoloToolkit/SpatialUnderstanding/Plugins/WSA/x64/SpatialUnderstanding.dll' with error 'This operation is only valid in the context of an app container.`It seems that you can't load the DLL's within the unity editor.</Description>
  </Issue>
  <Issue>
    <IssueID>287</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoloToolKit Build Window - Able to build APPX, Unable to deploy</Title>
    <CreatedDate>17/10/2016</CreatedDate>
    <ClosedDate>18/10/2016</ClosedDate>
    <IssueLabels />
    <Code>
System.ArgumentException: JSON parse error: Missing a comma or ']' after an array element.
  at (wrapper managed-to-native) UnityEngine.JsonUtility:FromJson (string,System.Type)
  at UnityEngine.JsonUtility.FromJson[AppList] (System.String json) [0x0000c] in C:\buildslave\unity\build\artifacts\generated\Metro\modules\JSONSerialize\JsonUtilityBindings.gen.cs:24 
  at HoloToolkit.Unity.BuildDeployPortal.QueryAppDetails (System.String packageFamilyName, ConnectInfo connectInfo) [0x0003c] in D:\Documents\Hololens Test Projects\SpatialTest\Assets\HoloToolkit\Build\Editor\BuildDeployPortal.cs:170 
  at HoloToolkit.Unity.BuildDeployPortal.IsAppInstalled (System.String packageFamilyName, ConnectInfo connectInfo) [0x00003] in D:\Documents\Hololens Test Projects\SpatialTest\Assets\HoloToolkit\Build\Editor\BuildDeployPortal.cs:116 
  at HoloToolkit.Unity.BuildDeployWindow.InstallAppOnDevicesList (System.String buildPath, Boolean uninstallBeforeInstall, System.String[] targetList) [0x00048] in D:\Documents\Hololens Test Projects\SpatialTest\Assets\HoloToolkit\Build\Editor\BuildDeployWindow.cs:508 
UnityEngine.Debug:LogError(Object)
HoloToolkit.Unity.BuildDeployWindow:InstallAppOnDevicesList(String, Boolean, String[]) (at Assets/HoloToolkit/Build/Editor/BuildDeployWindow.cs:523)
HoloToolkit.Unity.&lt;OnGUI&gt;c__AnonStorey1:&lt;&gt;m__0() (at Assets/HoloToolkit/Build/Editor/BuildDeployWindow.cs:333)
UnityEditor.EditorApplication:Internal_CallDelayFunctions()
`</Code>
    <Description>**Issue**When building the SpatialUnderstandingExampleScene using the HoloToolKit build tool, unable to deploy on device.**Expected Result:**Deploys correctly**Actual Result:**``**Current Workaround:**Use device portal to manually install app and dependencies.**Platform**Unity 5.5.0b7Win10 Pro V 1607 B 14393.321</Description>
  </Issue>
  <Issue>
    <IssueID>284</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>RemoveSurfaceVertices.RemoveSurfaceVerticesWithinBounds null reference exception</Title>
    <CreatedDate>16/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
    <IssueLabels />
    <Description>Since this executes a coroutine it is possible for meshes to get removed from the spatial mesh while this is executing.  If this happens an exception is thrown in the coroutine and the methods never completes.  This is due to a missing null check.  I will do a PR to fix this issue.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>282</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>darax</FixedById>
        <IssueID>282</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Gaze Stabalizer uses calculation of delta between current sample and current sample while processing</Title>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
    <IssueLabels />
    <Description>If we consider this block:``(note that mostRecentSample is stabilitySamples.last)We should see that positionDeltaMin and directionDeltaMin will always be 0, as the last calculation will be a comparison with itself.  I think it is unlikely that this behavior is intended.  If this is the intended behavior then we should be able to just calculate max.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>281</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>darax</FixedById>
        <IssueID>281</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>ColorPicker example scene cursor seems 'sticky' </Title>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>19/10/2016</ClosedDate>
    <IssueLabels />
    <Description>The cursor in the ColorPicker example scene seems to frequently stick and can't be moved smoothly with small head movements.  This makes precisely picking the color you want difficult.</Description>
  </Issue>
  <Issue>
    <IssueID>280</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>darax</FixedById>
        <IssueID>280</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>About RemoveSurfaceVertices question....</Title>
    <CreatedDate>13/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
    <IssueLabels />
    <Description>Sorry for my english....I want to use RemoveSurfaceVertices class, but i'm very puzzled at " !mesh.bounds.Intersects(bounds)",because mesh.bounds is local space, but bounds(Collider.bounds) is world space ! so ,mesh.bounds.Intersects(bounds) ,how it works?</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>279</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>No standard script to absorb updates from HoloToolkit</Title>
    <CreatedDate>12/10/2016</CreatedDate>
    <ClosedDate>23/08/2017</ClosedDate>
    <IssueLabels />
    <Description>It'd be nice to have a script that builds everything in a specified HoloToolkit directory and then copies all updated files to the repo. Currently seems like we're moving everything by hand and that's a bit of a recipe for disaster.</Description>
  </Issue>
  <Issue>
    <IssueID>277</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>maxouellet</FixedById>
        <IssueID>277</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>HoloToolkit Input Module: design discussion</Title>
    <CreatedDate>12/10/2016</CreatedDate>
    <ClosedDate>19/12/2016</ClosedDate>
    <IssueLabels />
    <Description>This is the initial suggested design for the new input module. Feel free to ask questions / request changes.I already have a version of this implemented, to which I will make improvements as needed. Goal is to add it to HoloToolkit so that new features can be added by the community as needed. It has been designed to be as extensible as possible.## Why design a new Input Module?A lot of applications have a need for an efficient way to handle input. In an ideal world, game objects can handle the input events they are interested in without having to write the same code in multiple components. The current solution in HoloToolkit isn't very performant and relies on Unity's messaging system, which is not very performant and doesn't make it obvious that behaviours are handling input events. It also doesn't extend well to support multiple different input mechanisms.Unity provides an [event system ]( that it currently leverages to send out inputs to game objects. It contains a **HoloLensInputModule** that interprets HoloLens input and sends out the standard [Unity events]( The solution I propose does not use this input module, for the following reasons:- It does not easily support gaze stabilization: instead, it always assumes that you are targeting the center point of your camera, using a raycaster attached to your camera.- It only supports sending out the standard Unity events, which are 2D events. This lacks some of the key information that is needed to manipulate 3D objects with input devices that have more than 2 degrees of freedom.The proposed design leverages Unity's event system, but implements its own version of an input module (called _InputManager_ in this case). This currently gives us more flexibility in exploring various interaction mechanisms, which is very helpful when working with novel inputs devices such as what HoloLens provides.## Class diagramOverall view of the main classes and interfaces that make up the initial version of this input module. Minor changes could still be done before submission (for example, HandsInput will likely be merged with GesturesInput, as their functionalities are very similar).![inputmodule](## Input Module DesignThe input module is designed to be extensible: it could support various input mechanisms and various types of gazers.Each input source (hands, gestures, others) implement a **IInputSource** interface. The interface defines various events that the input sources can trigger. The input sources register themselves with the InputManager, whose role it is to forward input to the appropriate game objects. Input sources can be dynamically enabled / disabled as necessary, and new input sources can be created to support different input devices.Game objects that want to consume input events can implement one or many **input interfaces**, such as:- **IFocusable** for focus enter and exit. The focus can be triggered by the user's gaze or any other gaze source.- **IHoldHandle** for the Windows hold gesture.- **IInputHandler** for source up, down and clicked. The source can be a hand that tapped, a clicker that was pressed, etc.- **IManipulationHandler** for the Windows manipulation gesture.- **ISourceStateHandler** to handle when an input source is detected or lost. This can be triggered when a hand comes into view of the HoloLens, for example.The **input manager** listens to the various events coming from the input sources, and also takes into account the gaze. Currently, that gaze is always coming from the GazeManager class, but this could be extended to support multiple gaze sources if the need arises.By default, input events are sent to the currently focused game object, if that object implements the appropriate interface. Modals input handlers can also be added to the input manager: these modal handlers will take priority over the currently focused object Fallback handlers can also be defined, so that the application can react to global inputs that aren't targeting a specific element. Any event sent by the input manager always bubbles up from the object to its ancestors. In recap, the input manager forwards the various input sources events to the appropriate game object, using the following order:1. The registered modal input handlers, in LIFO order of registration2. The currently focused object3. The fallback input handlers, in LIFO order of registrationThe input manager also has a pointer to the currently active **Cursor**, allowing it to be accessed from there. The cursor currently also depends on the gaze coming from the GazeManager class.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>274</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Access Denied using Sharing Service + Holographic Remoting</Title>
    <CreatedDate>12/10/2016</CreatedDate>
    <ClosedDate>26/10/2016</ClosedDate>
    <IssueLabels />
    <Description>I am getting an access denied for the WorldAnchorTransferBatch ExportAsync.This only happens in Holographic Remoting.  It works fine if remoting is not active (both device and editor).The world anchor has been saved... just fails to export.   `// Save the anchor to our local anchor store.        if (anchorStore.Save(exportingAnchorName, anchor))        {            sharedAnchorInterface = new WorldAnchorTransferBatch();            sharedAnchorInterface.AddWorldAnchor(guidString, anchor);            WorldAnchorTransferBatch.ExportAsync(sharedAnchorInterface, WriteBuffer, ExportComplete);        }        else        {            Debug.Log("This anchor didn't work, trying again");            currentState = ImportExportState.InitialAnchorRequired;        }`Here is the stack trace on the error:`SpatialAnchorTransferManager denied access to WorldAnchor serialization0x00000001414DD7FB (Unity) StackWalker::GetCurrentCallstack0x00000001414DF4AE (Unity) StackWalker::ShowCallstack0x00000001414AE583 (Unity) GetStacktrace0x00000001411B7A7B (Unity) DebugStringToFile0x00000001411B7EEC (Unity) DebugStringToFile`Which sound similar to this post  but I am saving successfully prior to the export call.  I also tried enabling every capability to ensure it was not a permissions issue though I think those may only trigger on deployment (not sure).</Description>
  </Issue>
  <Issue>
    <IssueID>273</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Redundant/duplicated code to set OverrideFocusedObject/FocusedObject</Title>
    <CreatedDate>12/10/2016</CreatedDate>
    <ClosedDate>13/10/2016</ClosedDate>
    <IssueLabels />
    <Description>[Assignment of _OverrideFocusedObject_ in _GestureManager_]( duplicates [assignment of _FocusedObject_ in _GazeManager_](Given _GestureManager_ explicitly requires _GazeManager_, shouldn't the _GestureManager_ simply use the _FocusedObject_ property on the _GazeManager_ to update _OverrideFocusedObject_?</Description>
  </Issue>
  <Issue>
    <IssueID>272</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spatial Mapping Disabled for Holographic Remoting</Title>
    <CreatedDate>11/10/2016</CreatedDate>
    <ClosedDate>14/11/2016</ClosedDate>
    <IssueLabels />
    <Description>Within SpatialMappingManager there is an #if UNITY_ENGINE check within the StartObserver and StopObserver methods.This check prevents SpatialMapping from occurring during a Holographic Remoting session.This may be a bigger issue/ticket as there may be other areas of the code base using similar macros that did not anticipate the addition of Holographic Remoting platform.   </Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>271</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cursor and Gaze losing sync</Title>
    <CreatedDate>11/10/2016</CreatedDate>
    <ClosedDate>11/10/2016</ClosedDate>
    <IssueLabels />
    <Description>Updated the HTK from a late-September build and suddenly the Cursor lags behind the users gaze. I am going to go back to an older build and see if that fixes it. Will report back</Description>
  </Issue>
  <Issue>
    <IssueID>270</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Example and Test Scenes should be renamed to be more descriptive.</Title>
    <CreatedDate>11/10/2016</CreatedDate>
    <ClosedDate>12/10/2016</ClosedDate>
    <IssueLabels />
    <Description>Following scenes should be renamed to better describe their function.- Gaze Ruler: main.unity- Spatial Understanding: Main.unity- Color Picker: Example.unity- Spatial Mapping Static Playspace: Example.unity- Gase Ruler: test.unity</Description>
  </Issue>
  <Issue>
    <IssueID>268</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>StephenHodgson</FixedById>
        <IssueID>268</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>GestureManipulator Test Scene is broken.</Title>
    <CreatedDate>10/10/2016</CreatedDate>
    <ClosedDate>21/10/2016</ClosedDate>
    <IssueLabels />
    <Description>Neither hand nor clicker will trigger the gesture manipulator.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>267</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>OnSelect without parameters</Title>
    <CreatedDate>07/10/2016</CreatedDate>
    <ClosedDate>12/10/2016</ClosedDate>
    <IssueLabels />
    <Description>GestureManager:
Calling OnSelect of the UnityEngine.UI.Button class without parameters will cause an error.

You can reproduce this by adding a GestureManager and UnityEngine.UI.Button to a scene. When the Button has a collider it will receive the OnSelect Message from the GestureManager but it expects an OnSelect message from the Unity EventSystem, which requires a EventData argument: 
</Description>
  </Issue>
  <Issue>
    <IssueID>265</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>IL2CPP support?</Title>
    <CreatedDate>06/10/2016</CreatedDate>
    <ClosedDate>13/09/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>265</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Code>
Assets\Plugins\HoloToolkit\SpatialMapping\Scripts\RemoteMapping\MeshSaver.cs(10,24): error CS0234: The type or namespace name 'Tasks' does not exist in the namespace 'System.Threading' (are you missing an assembly reference?)
Assets\Plugins\HoloToolkit\SpatialMapping\Scripts\SpatialProcessing\SurfaceMeshesToPlanes.cs(11,24): error CS0234: The type or namespace name 'Tasks' does not exist in the namespace 'System.Threading' (are you missing an assembly reference?)
Assets\Plugins\HoloToolkit\CrossPlatform\Scripts\Reflection\ReflectionExtensions.cs(90,59): error CS0246: The type or namespace name 'TypeInfo' could not be found (are you missing a using directive or an assembly reference?)
`</Code>
    <Description>Does this package support being compiled with IL2CPP?  I just tried doing that but got a bunch of errors like this:``</Description>
  </Issue>
  <Issue>
    <IssueID>264</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>darax</FixedById>
        <IssueID>264</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>New spatial mapping drops frames every update period</Title>
    <CreatedDate>06/10/2016</CreatedDate>
    <ClosedDate>14/10/2016</ClosedDate>
    <IssueLabels />
    <Description>The new spatial mapping mesh code is dropping several frames every update period.  This makes the mesh blink on and off in an unsettling manner.   I have tracked it down to the fact that 'yields' are being called between the mesh 'Cleanup()' and the completion of the 'AddSurfaceObject' calls.   During this time, the meshes are in an inconsistent state.From line 252 of SpatialUnderstandingCustomMesh.cs: I tried changing it from:``This change gets rid of the frame drop outs at the price of a slight frame-rate reduction on the update beat.   What it is doing is chopping the code up a little bit and ensuring that no yields happen after the call to CleanUp();I also should note that the finalized mesh (in the original checked in code) was still only getting 29fps even when I am only looking at a small piece of the mesh.   ~~I suspect this can be addressed in the shader by not using a geometry shader~~(EDIT: i tried this, still at 29fps), although it leaves me questioning the effectiveness of this new approach in terms of frame rate improvement.However, this code does seem to address bug #200 in practice, however this code still does not actually explicitly guarantee one of the meshes wont be too large.</Description>
  </Issue>
  <Issue>
    <IssueID>262</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>FPSDisplay documentation missing in Utilities README</Title>
    <CreatedDate>05/10/2016</CreatedDate>
    <ClosedDate>17/10/2016</ClosedDate>
    <IssueLabels />
    <Description>
    </Description>
  </Issue>
  <Issue>
    <IssueID>261</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spatial Understanding Missing README</Title>
    <CreatedDate>05/10/2016</CreatedDate>
    <ClosedDate>31/01/2017</ClosedDate>
    <IssueLabels />
    <Description>
    </Description>
  </Issue>
  <Issue>
    <IssueID>259</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Remove IP from sharing service test scene</Title>
    <CreatedDate>04/10/2016</CreatedDate>
    <ClosedDate>12/10/2016</ClosedDate>
    <IssueLabels />
    <Description>Besides this being a security concern, this should be localhost</Description>
  </Issue>
  <Issue>
    <IssueID>256</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Create a Simple Direction Indicator that Stays in the User's View</Title>
    <CreatedDate>03/10/2016</CreatedDate>
    <ClosedDate>22/11/2016</ClosedDate>
    <IssueLabels />
    <Description>During a recent prototype, we discovered we had to do a lot work to make the included direction indicator stay in the user's fov and track a target as expected.We should create a direction indicator that is easy to drop in and will stay in the user's fov, directing the user's attention to interesting things out of their view.The indicator should be easy to add and reskin.</Description>
  </Issue>
  <Issue>
    <IssueID>255</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>HoloToolkitCommands.BuildSLN will return error code 0 even on failure</Title>
    <CreatedDate>03/10/2016</CreatedDate>
    <ClosedDate>10/07/2017</ClosedDate>
    <IssueLabels />
    <Description>I've got automated processes depending on this build tooling. This is very annoying. See here for how to enforce the proper return code:&gt; To return an error from the command line process, either throw an exception which causes Unity to exit with return code 1, or call EditorApplication.Exit with a non-zero return code. To pass parameters, add them to the command line and retrieve them inside the function using System.Environment.GetCommandLineArgs. To use -executeMethod, you need to place the enclosing script in an Editor folder. The method to be executed must be defined as static.</Description>
  </Issue>
  <Issue>
    <IssueID>253</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Sync Feature-SendMessageRemoval branch with master</Title>
    <CreatedDate>03/10/2016</CreatedDate>
    <ClosedDate>14/10/2016</ClosedDate>
    <IssueLabels />
    <Description>Seeing as there are not any commits to this branch yet, it should be easy to just merge any changes from master into Feature-SendMessageRemoval branch.</Description>
  </Issue>
  <Issue>
    <IssueID>195</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>NeerajW</FixedById>
        <IssueID>195</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Spatial Understanding: MainCamera is missing some script references</Title>
    <CreatedDate>30/08/2016</CreatedDate>
    <ClosedDate>01/12/2016</ClosedDate>
    <IssueLabels />
    <Description>![image](HoloToolkit-Examples\SpatialUnderstanding\SpatialUnderstanding-FeatureOverview\Scenes\Main</Description>
  </Issue>
  <Issue>
    <IssueID>194</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>darax</FixedById>
        <IssueID>194</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Spatial Understanding Performance</Title>
    <CreatedDate>30/08/2016</CreatedDate>
    <ClosedDate>04/09/2017</ClosedDate>
    <IssueLabels />
    <Description>Thanks for this great contribution! :)I did some quick tests. During scan the framerate looks good at 60 fps but CPU is maxing out. No real surprise and totally fine considering the processing it runs.Post scan I get 30-40 fps when looking at certain parts. The SpatialUnderstandingSurfaceShader does quite some stuff and even use geom surface shader instructions. I'd recommend making the shader a bit more lightweight or maybe use a much simpler one as default to avoid framerate drops.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>193</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spatial Understanding Room Size Limitations</Title>
    <CreatedDate>30/08/2016</CreatedDate>
    <ClosedDate>14/02/2017</ClosedDate>
    <IssueLabels />
    <Description>I noticed that I could not scan my entire basement. I am assuming this has to do with the vertex limit per mesh. Will there be any support in the future for making multiple meshes, and making them "watertight"?</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>190</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Apply HoloLens Scene Settings</Title>
    <CreatedDate>29/08/2016</CreatedDate>
    <ClosedDate>29/08/2016</ClosedDate>
    <IssueLabels />
    <Description>Is the change from a 60 degree FOV to 16 degree FOV intentional? </Description>
  </Issue>
  <Issue>
    <IssueID>189</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Build Window - Add field for WSATestCertificate.pfx password</Title>
    <CreatedDate>28/08/2016</CreatedDate>
    <ClosedDate>10/07/2017</ClosedDate>
    <IssueLabels />
    <Description>If one changes the WSATestCertificate.pfx via the 'Create' button in Project Settings &gt; Player &gt; Setting for Windows Store &gt; Publishing Settings &gt; Certificate then 'Build APPX from SLN' will fail if the certificate is secured with a password.If the password is removed via the same 'Create button' procedure mentioned above the Build Window correctly builds the SLN, APPX &amp; Installs using the newly created pfx.Suggested solution is to add a field in the APPX section for the 'WSATestCertificate.pfx' password and to pass the password to MSBuild.The error message is: C:\Program Files (x86)\MSBuild\Microsoft\VisualStudio\v14.0\AppxPackage\Microsoft.AppXPackage.Targets(1930,5): warning APPX0105: Cannot import the key file 'WSATestCertificate.pfx'. The key file may be password protected. To correct this, try to import the certificate manually into the current user's personal certificate store...Additional Info: I did add the certificate to my personal certificate store. It was only then that I was able to build the APPX and deploy from Visual Studio.</Description>
  </Issue>
  <Issue>
    <IssueID>188</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>How to Save Understanding Mesh</Title>
    <CreatedDate>28/08/2016</CreatedDate>
    <ClosedDate>06/08/2018</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>HoloLens</Name>
        <IssueID>188</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Legacy (HoloToolkit)</Name>
        <IssueID>188</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>188</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I'd like to understand how to save the custom mesh built by the new Spatial Understanding contributed by @jevertt. A sample was supplied by @JeffPack inside the pull request but hopefully we can get it moved here.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>184</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Create surface object with special tag when using Spatial Mapping </Title>
    <CreatedDate>22/08/2016</CreatedDate>
    <ClosedDate>20/09/2016</ClosedDate>
    <IssueLabels />
    <Description>As we all know, there are losts of surface objects which will be ctreated after we use Spatial Mapping. Maybe it will be better if Spatial Mapping create those surface objects with a special tag? Because we always use gestures or gaze, a special tag will help us select the right object</Description>
  </Issue>
  <Issue>
    <IssueID>178</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Create a sharing connection status indicator</Title>
    <CreatedDate>17/08/2016</CreatedDate>
    <ClosedDate>10/10/2017</ClosedDate>
    <IssueLabels />
    <Description>In order to more easily debug connectivity when developing a shared experience, create a way for a developer to see if the instance is connected to a server or not when running.</Description>
  </Issue>
  <Issue>
    <IssueID>176</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Default camera FOV is not set correctly</Title>
    <CreatedDate>17/08/2016</CreatedDate>
    <ClosedDate>19/08/2016</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>176</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>HoloToolkit doesn't seem to touch the vFOV setting in Unity, which defaults at 60. This number is incorrect and results in a very frustrating Unity to Device/Emulator experience.Right now, I set the device resolution (in Unity's game window) to 1280x720 and use a camera vFOV of 21 to get it close. But official numbers would be appreciated.</Description>
  </Issue>
  <Issue>
    <IssueID>174</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Move Samples out of Assets</Title>
    <CreatedDate>15/08/2016</CreatedDate>
    <ClosedDate>16/08/2016</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>174</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Should the HoloToolkit-Examples folder really be under Assets? I used to tell everyone that they need to include everything from the Assets folder and below to make sure the got the RSPs (a common mistake). But now that would include all of the samples too.I feel the samples should exist off the root somewhere, like the Sharing stuff does in:External/HoloToolkit/SharingBut I could be missing something. Any thoughts?</Description>
  </Issue>
  <Issue>
    <IssueID>172</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Implement AutoDiscovery for Sharing </Title>
    <CreatedDate>15/08/2016</CreatedDate>
    <ClosedDate>15/09/2016</ClosedDate>
    <IssueLabels />
    <Description>Create a new script that is able to auto discover the server in a shared experience using the autodiscovery feature in the SharingClient.dll.</Description>
  </Issue>
  <Issue>
    <IssueID>171</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Is it possible to prepare a unity-package of this toolkit?</Title>
    <CreatedDate>13/08/2016</CreatedDate>
    <ClosedDate>18/08/2016</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>171</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Great toolkit!But I hope to import this toolkit to my project more easily.Is it possible to prepare a unity-package of this toolkit?Double-clicking a unity-package file, UnityEditor import this package automatically.Unity Manual - Exporting Packages</Description>
  </Issue>
  <Issue>
    <IssueID>168</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>OutOfMemoryException when exporting anchors</Title>
    <CreatedDate>12/08/2016</CreatedDate>
    <ClosedDate>15/09/2016</ClosedDate>
    <IssueLabels />
    <Description>When using the Sharing components, `OutOfMemoryException` is thrown by `ImportExportAnchorManager`. I just simply modified the Holograms 240 example to include my own content. Are there any workarounds to this?The logs are below.``</Description>
  </Issue>
  <Issue>
    <IssueID>163</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Large NetworkOutMessages leak?</Title>
    <CreatedDate>08/08/2016</CreatedDate>
    <ClosedDate>06/09/2016</ClosedDate>
    <IssueLabels />
    <Description>Hi all,   If I create large NetworkOutMessage objects and then run the script in Unity, Unity quickly eats all of my available RAM and ultimately crashes. For example:``If I comment out msg.Write(depthData[x]); it resolves the issue. If I replace it with msg.Write(999); the issue persists. I know large messages are suboptimal but this is preventing me from optimizing things. Also of note, adding msg.Destroy(); after broadcasting has no effect.Any thoughts?</Description>
  </Issue>
  <Issue>
    <IssueID>162</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>SpatialMappingManager: change "drawVisualMeshes" to "drawSurface"</Title>
    <CreatedDate>08/08/2016</CreatedDate>
    <ClosedDate>14/09/2016</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>162</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I think it makes more sense to have surfaceMaterial/**drawSurface** property pairing rather than surfaceMaterial/drawVisualMeshes.</Description>
  </Issue>
  <Issue>
    <IssueID>157</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>"Couldn't decompress package" error when importing</Title>
    <CreatedDate>04/08/2016</CreatedDate>
    <ClosedDate>09/08/2016</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>157</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I have cloned and successfully built HoloToolkit-Unity.  However, when I try to do Assets -&gt; Import Package -&gt; Custom Package… I get the following error:  `Failed to import package with error: Couldn't decompress package`I've rebuilt it twice.  I've also tried moving it to various places on my hard disk with no luck.  Any ideas whats up?  Here's a [link to the package file]( it produced.  </Description>
  </Issue>
  <Issue>
    <IssueID>155</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>ChangweiZhang</FixedById>
        <IssueID>155</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>GazeRuler: Another unused variable warning</Title>
    <CreatedDate>04/08/2016</CreatedDate>
    <ClosedDate>10/08/2016</ClosedDate>
    <IssueLabels />
    <Description>Assets/HoloToolkit-Examples/GazeRuler/Scripts/Test/LineTest.cs(21,13): warning CS0168: The variable `cameraDir' is declared but never used</Description>
  </Issue>
  <Issue>
    <IssueID>153</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>ChangweiZhang</FixedById>
        <IssueID>153</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>GazeRuler: Unused variable warning</Title>
    <CreatedDate>03/08/2016</CreatedDate>
    <ClosedDate>04/08/2016</ClosedDate>
    <IssueLabels />
    <Description>Assets/HoloToolkit-Examples/GazeRuler/Scripts/Test/LineTest.cs(15,18): warning CS0414: The private field `LineTest.created' is assigned but its value is never usedPlease fix this issue by deleting the unused variable.</Description>
  </Issue>
  <Issue>
    <IssueID>152</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>ChangweiZhang</FixedById>
        <IssueID>152</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Rename "ploygon" to "polygon"</Title>
    <CreatedDate>03/08/2016</CreatedDate>
    <ClosedDate>10/08/2016</ClosedDate>
    <IssueLabels />
    <Description>Typo in [IPloygonClosable ](</Description>
  </Issue>
  <Issue>
    <IssueID>149</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Currently no way to push builds to the HoloLens Emulator from Unity.</Title>
    <CreatedDate>03/08/2016</CreatedDate>
    <ClosedDate>12/08/2016</ClosedDate>
    <IssueLabels />
    <Description>Having the Build Window is really great for testing on device, but for living with the emulator the process is still lacking. I'm envisioning the ability to install to the emulator from the Build Window, but I'm not sure if that's possible outside of Visual Studio.</Description>
  </Issue>
  <Issue>
    <IssueID>146</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>angelaHillier</FixedById>
        <IssueID>146</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Remove SpatialMappingComponents</Title>
    <CreatedDate>01/08/2016</CreatedDate>
    <ClosedDate>01/08/2016</ClosedDate>
    <IssueLabels />
    <Description>SpatialMappingComponents, which includes the SpatialMappingRenderer and SpatialMappingCollider are no longer necessary, as these components are now built into Unity.The proposed plan is to remove the components from the HoloToolkit, but keep and update the test scene to use the built-in Unity components.</Description>
  </Issue>
  <Issue>
    <IssueID>144</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>angelaHillier</FixedById>
        <IssueID>144</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Inconsistencies Between Hologram 230 and This Repo</Title>
    <CreatedDate>30/07/2016</CreatedDate>
    <ClosedDate>04/08/2016</ClosedDate>
    <IssueLabels />
    <Description>Specifically...HoloToolkit\SpatialMapping\Scripts\SpatialMappingObserver.csSpatialMappingManager.csI compared the two and found vast differences.  Being as Hologram 230 works well, I tried to pull just those scripts from the 230 tutorial into the Holotoolkit.  No luck though.  Even though no errors were found in the scripts, Unity's Inspector claims that the scripts "can not be loaded. Please fix any compile errors and assign a valid script."As soon as I copied/pasted the entire set of scripts from the 230 tutorials HoloToolkit\SpatialMapping\Scripts folder, all was well.This has me to believe that the Hologram 230 tutorial one or more of these:a) has a better implementationb) has a specific implementation that is incompatible with the newest toolkitc) has a completely different repo of its toolkitI believe the community would benefit from a single repo rather than picking and choosing.  In other words, I believe the community would much like to go to the tutorials with the _understanding_ that the toolkit utilized is consistent with the toolkit on GitHub.Lastly, I did a search on this repo and commits for ObjectSurfaceObserver (which exists in the 230 tutorial).  Not found.  Therefore I do believe two or more toolkit repos are in play here.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>143</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>angelaHillier</FixedById>
        <IssueID>143</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Add ObjectSurfaceObserver from Holograms 230 Tutorial</Title>
    <CreatedDate>30/07/2016</CreatedDate>
    <ClosedDate>04/08/2016</ClosedDate>
    <IssueLabels />
    <Description>I found this observer much easier to work with than the existing FileSurfaceObserver currently in the toolkit.  It is demonstrated in the first chapter of Holograms 230:I prefer it because I can drag an obj to it regardless of location.  Whereas the FileSurfaceObserver, you need to know exactly where to place it.  (Or my ignorance can't figure out how to give it different locations.)I can create a PR for this.  But since the code is from Microsoft, need permission first.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>139</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>jwittner</FixedById>
        <IssueID>139</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Billboard class doesn't function correctly.</Title>
    <CreatedDate>28/07/2016</CreatedDate>
    <ClosedDate>03/08/2016</ClosedDate>
    <IssueLabels />
    <Description>BuildBoards on device will rotate around the z-axis instead of staying level. The pivot axes are calculated incorrectly.I have a fix forthcoming.</Description>
  </Issue>
  <Issue>
    <IssueID>135</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>clicking Launch Sharing service does nothing</Title>
    <CreatedDate>24/07/2016</CreatedDate>
    <ClosedDate>09/08/2016</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>135</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>clicking the menu button for launching the shared service doesn't do anything,</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>133</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>ChimeraScorn</FixedById>
        <IssueID>133</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Clarify community contribution guidelines, licensing</Title>
    <CreatedDate>21/07/2016</CreatedDate>
    <ClosedDate>23/08/2017</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>133</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Spun off from a discussion in #130, we need to solidify some rules around community contributions as the project becomes more popular. (Probably need to route through Microsoft LCA.)The [Microsoft CLA]( specifically calls out that contributors maintain submission rights.Some questions:- What do externals put in the code file header? e.g. Copyright (c) &lt;author&gt;- What do internals put in the code file header?- What do moonlighting internals put in the code file header?- Do we also need to maintain a CONTRIBUTORS.md?- [Your question here]</Description>
    <PullRequests>
      <PullRequest>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
        <IssueID>133</IssueID>
        <PullRequestID>7248</PullRequestID>
        <Title>Document known issue / workaround for msbuildforunity #133</Title>
        <Description>This change documents an issue with MSBuild for Unity 0.9.1 that impacts MRTK and the workaround.</Description>
        <CreatedDate>06/02/2020</CreatedDate>
        <ClosedDate>06/02/2020</ClosedDate>
        <PullRequestLabels>
          <PullRequestLabel>
            <Name>Documentation</Name>
            <IssueID>133</IssueID>
            <PullRequestID>7248</PullRequestID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestLabel>
        </PullRequestLabels>
        <PullRequestAssignees>
          <PullRequestAssignee>
            <FixedById>davidkline-ms</FixedById>
            <PullRequestID>7248</PullRequestID>
            <IssueID>133</IssueID>
            <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
          </PullRequestAssignee>
        </PullRequestAssignees>
      </PullRequest>
    </PullRequests>
  </Issue>
  <Issue>
    <IssueID>132</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>URL in comment is out of date</Title>
    <CreatedDate>21/07/2016</CreatedDate>
    <ClosedDate>28/07/2016</ClosedDate>
    <IssueLabels />
    <Description>The url at  no longer is valid. You can still access an archive version here:  I'm not sure if there's a better archive version or not; the link I just gave has missing pictures.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>131</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>BuildWindow doesn't work for me</Title>
    <CreatedDate>21/07/2016</CreatedDate>
    <ClosedDate>01/08/2016</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>131</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I don't know if the BuildWindow is stable yet but I haven't been able to get it to work.I'm using Unity HoloLens 5.4.0b24-HTP (64-bit), Visual Studio 2015 Professional with Update 3 that came out a few weeks ago, and the latest HoloTooklkit as of the time of writing (commit 117f8c5d344ddaf2314012ddb7602a2078b9ce0d, 2 days ago).I've exported the HoloToolkit as a Unity package, then re-imported it into my new HoloLens project. When I manually build my VS2015 solution, then build and deploy, my app works fine. When I use the HoloToolkit 'Build Window' to try and build the SLN, APPX and deploy, msbuild will run in the console that pops up for a few minutes, then I get errors in the Unity status bar down the bottom of the Unity editor. E.g. in the screenshot you can see a "System.NUllReferenceException: Object reference not set to an instance of an object", although sometimes I see other errors.![Screenshot of error](Does anyone know if the HoloToolkit build window is functional at this point in time? If it is, can I help write some documentation about how to use it correctly? I haven't been able to figure it out yet.This is a re-post of [this Unity HoloLens forum topic]( This bug post is possibly related: </Description>
  </Issue>
  <Issue>
    <IssueID>129</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add persistence WorldAnchor component to objects when placing them in the world</Title>
    <CreatedDate>20/07/2016</CreatedDate>
    <ClosedDate>14/09/2016</ClosedDate>
    <IssueLabels />
    <Description>HoloToolkit has TapToPlace which helps in placing objects on real world surfaces.We should be world anchoring them when they are placed so persistence works.</Description>
  </Issue>
  <Issue>
    <IssueID>124</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>"Unsafe code requires the `unsafe' command line option to be specified"</Title>
    <CreatedDate>19/07/2016</CreatedDate>
    <ClosedDate>19/07/2016</ClosedDate>
    <IssueLabels />
    <Description>Getting a bunch of errors with the message in the title when importing this package into a new project.My steps (which I think matches what the docs suggest):1. I just grabbed the lated Unity HTP (beta 24) and the latest from this repo.  2. Opened the contents of this repo in Unity and did Assets-&gt;Export Package3. Created a brand new project in Unity and did Assets-&gt;Import Package-&gt;Custom and chose the thing I just exportedThe import completes but the HoloToolkit menu does not appear.  Instead, I see 7 messages in the error list like: "Assets/HoloToolkit/Sharing/Scripts/SDK/AnchorDownloadRequest.cs(58,22): error CS0227: Unsafe code requires the `unsafe' command line option to be specified".  All 7 messages have the same error, just different files.</Description>
  </Issue>
  <Issue>
    <IssueID>123</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>mikthom</FixedById>
        <IssueID>123</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Feature: Add Maniupulation gesture support to move holograms smoothly</Title>
    <CreatedDate>18/07/2016</CreatedDate>
    <ClosedDate>13/09/2016</ClosedDate>
    <IssueLabels />
    <Description>**Scenario:** The Holograms 211 course provides a basic implementation of the manipulation events. This update will help add a more smooth and sophisticated approach to moving holograms where the user wants then to be. Developers should be simply able to add this to the hologram in their app which they want to move.**Proposed change:**1. Update GestureManager.cs to support manipulation gestures2. Add another script that consumes the manipulation data to help move holograms.</Description>
  </Issue>
  <Issue>
    <IssueID>122</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Bluetooth keyboard in Unity</Title>
    <CreatedDate>18/07/2016</CreatedDate>
    <ClosedDate>18/07/2016</ClosedDate>
    <IssueLabels />
    <Description>I have a BT keyboard that works great with my Hololens. Doesn't work at all in Unity. I have enabled the `bluetooth` option in Project Settings. What else do I need to do? Nothing much came up for a Google search of "UWP Unity bluetooth" - just Android or iOS stuff.</Description>
  </Issue>
  <Issue>
    <IssueID>121</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Can't get stencil buffers to behave</Title>
    <CreatedDate>17/07/2016</CreatedDate>
    <ClosedDate>18/07/2016</ClosedDate>
    <IssueLabels />
    <Description>I'm trying to make a "portal" in my application. I'm using two shaders - one that is for hidden objects visible only through the portal, and one is for the portal itself.Hidden shader:``This works perfectly in the Unity editor but I can't get it to work in the Hololens. I've tried a mish-mash of solutions to no avail - even tried it on a bare Unity app with just the Holotoolkit assets. What am I missing? When running this on the device, everything just renders normally.</Description>
  </Issue>
  <Issue>
    <IssueID>120</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>TextToSpeechManager.cs why Monobehavior instead of Singleton?</Title>
    <CreatedDate>14/07/2016</CreatedDate>
    <ClosedDate>18/07/2016</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>120</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>I didn't want to have to drop a TextToSpeechManager script throughout my project, so I converted it to a Singleton instead of a MonoBehavior. This seems far more intuitive to me, being able to bring up an instance of TextToSpeechManager throughout any script and just call SpeakText(). What was the reasoning behind Monobehavior instead?</Description>
  </Issue>
  <Issue>
    <IssueID>116</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>UAudioManager needs events</Title>
    <CreatedDate>13/07/2016</CreatedDate>
    <ClosedDate>19/08/2016</ClosedDate>
    <IssueLabels />
    <Description>Currently there is no way to know the exact moment a sound completes playing, so there is no way to trigger something else once a sound effect is completed.UAudioManager could send a custom message when the sound is ended or interrupted.  What I'm imagining might look something like this:UAudioManager.Instance.PlayEvent("OpenWoodChest", gameObject, "OnChestOpened");</Description>
  </Issue>
  <Issue>
    <IssueID>114</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Gazeable Color Picker</Title>
    <CreatedDate>13/07/2016</CreatedDate>
    <ClosedDate>10/08/2016</ClosedDate>
    <IssueLabels>
      <IssueLabel>
        <Name>Question</Name>
        <IssueID>114</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueLabel>
    </IssueLabels>
    <Description>Hey againAnother thing I would be keen to share..I’ve implemented a Color picker that is HL friendly:-   You can do “something“ with the currently gazed color-   You can do “ something” with the current selected color (after you air tap)  The “something” is a UnityEvent so very flexible and you set it up straight from the inspector (no need to code anything).  Of course the color palette image itself can be changed.Anyway let me know if you want me to put another PR for that.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>113</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Gazeable Canvas Button</Title>
    <CreatedDate>13/07/2016</CreatedDate>
    <ClosedDate>13/07/2016</ClosedDate>
    <IssueLabels />
    <Description>Hi guysI've created a quite simple component that you can add to an existing Canvas Button (from Unity UI) and that makes it works nicely with gaze (similarly to how it works with mouse).Was wondering if I could keep it in my local repo or make it available here.Anyone interested ?Happy to upload a PR so you can give it a try.</Description>
  </Issue>
  <Issue>
    <IssueID>111</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tagalong.cs does not tag along very well.</Title>
    <CreatedDate>13/07/2016</CreatedDate>
    <ClosedDate>23/08/2017</ClosedDate>
    <IssueLabels />
    <Description>With a simple sphere I associated the "SimpleTagAlong" component. It worked perfectly.I then substituted the "SimpleTagAlong" component with the slightly more advanced "TagAlong" component. This worked fine but only for 180° of horizontal movement. Some math issues here I suspect.Also, I would recommend that the "MaintainFixedSize" property is false by default. It took me quite some time to discover what was enlarging my game object.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>110</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>GazeManager.FocusedObject as static variable</Title>
    <CreatedDate>12/07/2016</CreatedDate>
    <ClosedDate>12/07/2016</ClosedDate>
    <IssueLabels />
    <Description>is there a case where GazeManager.FocusedObject might vary - i.e., would there be multiple gaze cursors in a single scene? namely, why isn't FocusedObject a static variable - when would it need to be accessed as an instance (and multiple instances)? </Description>
  </Issue>
  <Issue>
    <IssueID>107</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add UnityEvent support</Title>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>13/07/2016</ClosedDate>
    <IssueLabels />
    <Description>Hi guysI think it would be really useful to make the HoloToolKit work nicely with Unity's Event system.Basically invoking an event for when we gaze (OnGazeEnter / OnGazeLeave), when we select (OnSelectObject / OnClearSelection) etc..I've prototyped it already, happy to put a PR if you also think that would be useful !</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>105</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Ability to configure HoloLens IP address in the Build Window</Title>
    <CreatedDate>08/07/2016</CreatedDate>
    <ClosedDate>08/07/2016</ClosedDate>
    <IssueLabels />
    <Description>The utilities in the Build Window seem to have a hardcoded 127.0.0.1 IP address that they use.  Need a way to specify the actual IP of my device.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>104</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>If AutoConfigure needs to reopen the project, then a project named ".." will live in the Unity Start window.</Title>
    <CreatedDate>07/07/2016</CreatedDate>
    <ClosedDate>11/07/2016</ClosedDate>
    <IssueLabels />
    <Description>I suspect reopening with an absolute path to the project will solve the problem.</Description>
  </Issue>
  <Issue>
    <IssueID>101</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>BuildDeployWindow: warning CS0162: Unreachable code detected </Title>
    <CreatedDate>07/07/2016</CreatedDate>
    <ClosedDate>07/07/2016</ClosedDate>
    <IssueLabels />
    <Description>Assets/HoloToolkit/Build/Editor/BuildDeployWindow.cs(88,13): warning CS0162: Unreachable code detected</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>98</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Build window to support HTTPS communication</Title>
    <CreatedDate>06/07/2016</CreatedDate>
    <ClosedDate>25/01/2018</ClosedDate>
    <IssueLabels />
    <Description>We currently only support local IP (IPOverUSB) due to lack of HTTPS support. We would like to add secure communication to the REST calls used by this window (the Portal class) so that remote IPs can be exposed out.</Description>
  </Issue>
  <Issue>
    <IssueID>97</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Hololens needs Game Controller Support in Unity</Title>
    <CreatedDate>05/07/2016</CreatedDate>
    <ClosedDate>29/07/2016</ClosedDate>
    <IssueLabels />
    <Description>There does not seem to be any support for game controllers as of yet. Bluetooth controllers will pair with the Hololens but do not function inside of Unity apps. The same controller will work paired to the computer inside the editor or standalone version of the game, which leads me here for solutions. </Description>
  </Issue>
  <Issue>
    <IssueID>94</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Missing documentation on embedding HoloToolkit-Unity into new projects</Title>
    <CreatedDate>04/07/2016</CreatedDate>
    <ClosedDate>05/07/2016</ClosedDate>
    <IssueLabels />
    <Description>This problem came up for me and has now resulted in others reaching out with questions, e.g. This seems like something that could be laid out in the README.</Description>
  </Issue>
  <Issue>
    <IssueID>90</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Conflicting architecture build</Title>
    <CreatedDate>03/07/2016</CreatedDate>
    <ClosedDate>03/07/2016</ClosedDate>
    <IssueLabels />
    <Description>The following directories containe some binary objects that are imported from the HoloToolkit project. They are provided for both x64 and x86. This causes Unity to throw an error as the editor can only support a single architecture. In order to fix this I needed to remove the x64 binaries.Would it be better to include this content as a git submodule rather than a binary build?If a binary build is needed then what is the proper way to prevent these errors?Directories containing x64 binaries...External/HoloToolkit/Sharing/Tools/Profiler/External\HoloToolkit\Sharing\Tools\SessionManagerAssets/HoloToolkit/Sharing/Plugins</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>89</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>`-unsafe` compiler option required</Title>
    <CreatedDate>03/07/2016</CreatedDate>
    <ClosedDate>03/07/2016</ClosedDate>
    <IssueLabels />
    <Description>To use HoloToolkit it is necessary to set the `-unsafe` compiler option. I'm new to C# so I'm not sure what this means, but I did find the following text on the Unity forums:"Again, using unsafe doesn't give you much advantages, it just opens up for a huge variety of errors, mistakes and unexpected behaviour. Unless you know exactly what you do and you use pointers sparsely you shouldn't go for an unsafe context. " (Is it wise to require unsafe? If this needs to remain then this should be documented in the readme (see link above for documentation)</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>88</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Separate background thread for PlaneFinding</Title>
    <CreatedDate>02/07/2016</CreatedDate>
    <ClosedDate>02/07/2016</ClosedDate>
    <IssueLabels />
    <Description>Clarification on blurb from readme:&gt; NOTE: In the interest of simplicity, this test script calls the PlaneFinding APIs directly from the main Unity thread in Update(). In a real application, the PlaneFinding APIs MUST be called from a background thread in order to avoid stalling the rendering thread and causing a drop in frame rate.Separate background thread - using something like Loom? Further clarification on background thread, please.. </Description>
  </Issue>
  <Issue>
    <IssueID>86</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>andymule</FixedById>
        <IssueID>86</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Expose MicStreamSelector  to Unity</Title>
    <CreatedDate>30/06/2016</CreatedDate>
    <ClosedDate>01/09/2016</ClosedDate>
    <IssueLabels />
    <Description>Hi guysJust wondering if someone has been working on making the HoloToolKit MicStreamSelector available from Unity ?Something we would need here soonish so I thought I should ask in case there's already something available privately.Thanks in advance-s</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>85</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>jwittner</FixedById>
        <IssueID>85</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>BuildCommands.BuildForHololens is undiscoverable from the command line.</Title>
    <CreatedDate>29/06/2016</CreatedDate>
    <ClosedDate>19/07/2016</ClosedDate>
    <IssueLabels />
    <Description>Need to move the class out of the HoloToolkit namespace unfortunately. Is that a big concern for anyone?</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>84</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>jwittner</FixedById>
        <IssueID>84</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>There's no way to configure where builds from the Build menu are output to.</Title>
    <CreatedDate>29/06/2016</CreatedDate>
    <ClosedDate>07/07/2016</ClosedDate>
    <IssueLabels />
    <Description>I've already run into issues where I've wanted the output build folder from BuildsCommands.BuildForHololens to differ from the hardcoded value. I'm thinking I'll add a new section to the preferences for the HoloToolkit and then we'll have a nice place to configure this and any other data that should be configurable.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>82</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>jwittner</FixedById>
        <IssueID>82</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Documentation is hard to navigate and collaborate on.</Title>
    <CreatedDate>29/06/2016</CreatedDate>
    <ClosedDate>11/08/2016</ClosedDate>
    <IssueLabels />
    <Description>Right now we've got documentation spread throughout the README and the Wiki. This causes a few problems:- The front page of our GitHub is polluted with in-depth scripting documentation.- The wiki documentation is hard to collaborate on.- Documentation is hard to navigate and doesn't connect well.After investigating using pages ( see comment below ) I'm recommending we simply reorganize the wiki to look something like this:- Manual  - Logical descriptions of systems, like the sections of the wiki we have now  - Descriptions of prefabs and the exposed editor data, should include screenshots from the editor  - Tutorials  - Should contain links to relevant Scripting API sections.- Scripting API  - API descriptions of script types and their API  - All the descriptions that currently live in the README  - Should contain links to relevant Manual sections.It'd be nice to auto-generate the Scripting API section someday, which should be possible given some VS XML documentation to Markdown Open Source projects out there.</Description>
  </Issue>
  <Issue>
    <IssueID>81</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>GestureManager to call OnSelect on focused object from Unity</Title>
    <CreatedDate>28/06/2016</CreatedDate>
    <ClosedDate>07/07/2016</ClosedDate>
    <IssueLabels />
    <Description>Hi allAnother small change that would make it easier to work straight from the editor.It would be great to call the "OnSelect" message when in the editor we either right mouse click or press a specific key (enter or space) like in the emulator.Any thoughts?-s</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>80</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add new control mode to ManualCameraControl </Title>
    <CreatedDate>27/06/2016</CreatedDate>
    <ClosedDate>08/07/2016</ClosedDate>
    <IssueLabels />
    <Description>Right now the ManualCameraControl script provides a fly mode control which can make it hard to simulate how you would move if you were in a HL experience.This looks like an interesting and useful change that should make it easier to design HL app straight from Unity.I propose to add a new control option so it only allow you move on a X/Z plane and on the Y axis (to simulate squat)An enum would be added so it’s possible to use the current fly mode control (will be the default option) or use the new walk mode control.Any thoughts?</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>79</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Consider using Time.unscaledDeltaTime </Title>
    <CreatedDate>27/06/2016</CreatedDate>
    <ClosedDate>14/09/2016</ClosedDate>
    <IssueLabels />
    <Description>Just a minor observation: I would recommend considering the use of Time.unscaledDeltaTime in scripts instead of Time.deltaTime. especially input related scripts.One of the simpler ways for Unity games to pause stuff is to set Time.timeScale = 0. Which stops the calling of FixedUpdate and sets Time.deltaTime = 0. Even when we pause game we still want the HoloLens scripts to work properly specifically input scripts.One could also put an inspector variable in such scripts so the developer can choose deltaTime or unscaledDeltaTime.So far for inputs, I only see GazeManager using Time.deltaTime; but I also see UAudioManagerBase and Interpolator script using it as well. Not sure about the Audio stuff, but Interpolator will get effected if I need to pause game and want my pause menu UI to tag along.</Description>
  </Issue>
  <Issue>
    <IssueID>75</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Custom UI/Default shader causing confusing with Unity's UI/Default shader</Title>
    <CreatedDate>24/06/2016</CreatedDate>
    <ClosedDate>24/06/2016</ClosedDate>
    <IssueLabels />
    <Description>HoloToolkit has a cursor asset that uses a shader called UI-default.shader in Assets\HoloToolkit\Input\Models\Cursor\UI-Default.shader".  As a result, Unity confuses using its own UI\Default shader and using HoloToolkit's custom UI\Default shader.To fix this, the custom shader should be renamed and appropriately placed in HoloToolkit\Utilities\Shaders folder.  </Description>
  </Issue>
  <Issue>
    <IssueID>74</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>jwittner</FixedById>
        <IssueID>74</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Build sub menu is not documented</Title>
    <CreatedDate>24/06/2016</CreatedDate>
    <ClosedDate>07/07/2016</ClosedDate>
    <IssueLabels />
    <Description>Document the sub menu in the wiki.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>73</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees>
      <IssueAssignee>
        <FixedById>jwittner</FixedById>
        <IssueID>73</IssueID>
        <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
      </IssueAssignee>
    </IssueAssignees>
    <Title>Configuration sub menu is not documented</Title>
    <CreatedDate>24/06/2016</CreatedDate>
    <ClosedDate>06/07/2016</ClosedDate>
    <IssueLabels />
    <Description>Document the menu in the Wiki.</Description>
  </Issue>
  <Issue>
    <IssueID>71</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Cannot send KeywordManager events to dynamically credated prefab instances</Title>
    <CreatedDate>24/06/2016</CreatedDate>
    <ClosedDate>30/06/2016</ClosedDate>
    <IssueLabels />
    <Description>The problem is that KeywordManager allows sending keyword-triggered events only to static objects that are already in the scene. Sending events to dynamically instantiated prefabs requires additional custom code, so the proposal is for HoloToolkit to provide this functionality out of the box.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>66</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>TextToSpeechManager Unity scene should be a text asset</Title>
    <CreatedDate>22/06/2016</CreatedDate>
    <ClosedDate>22/06/2016</ClosedDate>
    <IssueLabels />
    <Description>Right now it's a binary asset, not sure how that happened. We should just pull in the conversion to a text asset.@jbienz - any idea how you got a binary asset here? Curious so we can try to avoid this in the future, though I should have caught it when reviewing the PR.</Description>
  </Issue>
  <Issue>
    <IssueID>65</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Default keybinding for ManualCameraControl MouseLookButton causes editor save spam if the scene is unsaved.</Title>
    <CreatedDate>22/06/2016</CreatedDate>
    <ClosedDate>22/06/2016</ClosedDate>
    <IssueLabels />
    <Description>Currently defaults to Control, but recommend we default to Shift.The issue occurs when trying to mouse look and move with WASD. Particularly the S causes this issue.</Description>
  </Issue>
  <Issue>
    <IssueID>63</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Tagalongs need to face camera</Title>
    <CreatedDate>17/06/2016</CreatedDate>
    <ClosedDate>23/06/2016</ClosedDate>
    <IssueLabels />
    <Description>Isn't it kind of weird how the tagalongs don't orient towards the camera? If you turn about 90 degrees off, the tagalong will be facing so far away from you it's impossible to access. I tried putting a simple lookat in the Tagalong's update (and restricted rotation to just Y) but I think it's messing up the visibility check with the bounding box so it floats out of view more often...but I'm not totally sure.Any best practices for keeping a tagalong facing the player--or is this something we need to fix in the tagalong scripts?</Description>
  </Issue>
  <Issue>
    <IssueID>62</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Crash when disabling spatialmappingmanager's visual meshes</Title>
    <CreatedDate>17/06/2016</CreatedDate>
    <ClosedDate>24/06/2016</ClosedDate>
    <IssueLabels />
    <Description>In my project, setting DrawVisualMeshes to false gives me an exception. In this case, I'm triggering it from a voice command where I stop the observer and stop the drawing of the meshes like so:_spatialMM.StopObserver();_spatialMM.DrawVisualMeshes = false;And I get this exception:Exception thrown: 'System.NullReferenceException' in WinRTBridge.winmdNullReferenceException: Exception of type 'System.NullReferenceException' was thrown.   at WinRTBridge.Utils.ThrowNewNullReferenceException(String message)   at UnityEngineProxy.InternalCalls.PInvokeCalls.Renderer_Set_Custom_PropEnabled(IntPtr param_0, Boolean param_1)   at UnityEngineProxy.InternalCalls.Renderer_Set_Custom_PropEnabled(Object self, Boolean paramValue)   at HoloToolkit.Unity.SpatialMappingManager.UpdateRendering(Boolean Enable)   at GameManager.ToggleObserver(Boolean on)   at GameManager.StartPlacement()   at GUIManager.OnPlayCommnand()   at UnityEngine.Events.InvokableCall.Invoke(Object[] args)   at UnityEngine.Events.InvokableCallList.Invoke(Object[] parameters)   at HoloToolkit.Unity.KeywordManager.KeywordRecognizer_OnPhraseRecognized(PhraseRecognizedEventArgs args)   at UnityEngine.Windows.Speech.PhraseRecognizer.InvokePhraseRecognizedEvent(String text, ConfidenceLevel confidence, SemanticMeaning[] semanticMeanings, Int64 phraseStartFileTime, Int64 phraseDurationTicks)   at UnityEngine.Windows.Speech.PhraseRecognizer.$Invoke6(Int64 instance, Int64\* args)   at UnityEngine.Internal.$MethodUtility.InvokeMethod(Int64 instance, Int64\* args, IntPtr method) (Filename: &lt;Unknown&gt; Line: 0)The program '[4280] HoloToolkit-Unity.exe' has exited with code -1 (0xffffffff).</Description>
  </Issue>
  <Issue>
    <IssueID>61</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>KeywordManager breaks if disabled and re-enabled</Title>
    <CreatedDate>14/06/2016</CreatedDate>
    <ClosedDate>14/06/2016</ClosedDate>
    <IssueLabels />
    <Description>The KeywordManager is set to be set up and potentially started on Start, and stopped and destroyed on destroy. However, Start occurs any time the object is enabled, so it can cause the keyword recognizer to throw errors if the game object is disabled and re-enabled.The KeywordRecognizer should either be set up and started in Awake (which happens once in object lifetime), destroyed and disabled in OnDisable, or have a check to not create a new KeywordRecognizer if one is already set up.</Description>
  </Issue>
  <Issue>
    <IssueID>60</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Unable to Build Error in Unity HoloTookkit/ </Title>
    <CreatedDate>13/06/2016</CreatedDate>
    <ClosedDate>13/06/2016</ClosedDate>
    <IssueLabels />
    <Description>Assets/HoloToolkit/SpatialMapping/Scripts/SpatialMappingComponent/Support/SMBaseAbstract.cs(332,88): error CS1501: No overload for method `Update' takes`1' argumentsAssets/HoloToolkit/SpatialMapping/Scripts/SpatialMappingComponent/Support/SMBaseAbstract.cs(481,33): error CS1501: No overload for method `RequestMeshAsync' takes`2' arguments</Description>
  </Issue>
  <Issue>
    <IssueID>58</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Spatial Mapping Renderer =  Hot Pink</Title>
    <CreatedDate>09/06/2016</CreatedDate>
    <ClosedDate>24/06/2016</ClosedDate>
    <IssueLabels />
    <Description>After adding the HoloToolkit to a new Unity project and assigning it to collection of holograms, the inside of my office is rendered in spectacular hot pink. By default, my holograms should be occluded by my office walls. I suspect that the renderer is not locating the _occlusion_ material.My fix:1. Set the **Renderer Mode** to **Material**, and2. Drag and drop HoloToolkit/SpatialMapping/Materials/**Occlusion** on to **Render Material**.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>55</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Null coalescing operator does not work on Mono 3.5</Title>
    <CreatedDate>03/06/2016</CreatedDate>
    <ClosedDate>06/06/2016</ClosedDate>
    <IssueLabels />
    <Description>We should instead use a ternary to ensure proper Mono 3.5 support</Description>
  </Issue>
  <Issue>
    <IssueID>22</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>The VertexLit shaders fail to Build in Unity for the UWP Win 10 HoloLens with light baking</Title>
    <CreatedDate>29/04/2016</CreatedDate>
    <ClosedDate>01/08/2017</ClosedDate>
    <IssueLabels />
    <Description>The HoloToolKit VertexLit shaders fail to Build in Unity for the UWP Win 10 HoloLens target when light baking is turned on: Error building Player: Shader error in 'HoloToolkit/Vertex Lit Configurable': invalid subscript 'texcoord1' at Assets/HoloToolkit/Shaders/VertexLitConfigurable.cginc(67) (on d3d11)Compiling Vertex program with DIRECTIONAL SHADOWS_OFF LIGHTMAP_ON DIRLIGHTMAP_COMBINED DYNAMICLIGHTMAP_OFFPlatform defines: UNITY_NO_SCREENSPACE_SHADOWS UNITY_ENABLE_REFLECTION_BUFFERS UNITY_PBS_USE_BRDF3 UNITY_HARDWARE_TIER1</Description>
  </Issue>
  <Issue>
    <IssueID>18</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add SetFocusPointForFrame stability place to GazeManager</Title>
    <CreatedDate>25/04/2016</CreatedDate>
    <ClosedDate>25/04/2016</ClosedDate>
    <IssueLabels />
    <Description>**Scenario:**By adding the SetFocusPointForFrame to the GazeManager, we will help stabilize the hologram the user is currently gazing at.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>17</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Consider adding TapToPlaceParent like functionality</Title>
    <CreatedDate>25/04/2016</CreatedDate>
    <ClosedDate>12/05/2016</ClosedDate>
    <IssueLabels />
    <Description>**Scenario:**Adam is a developer who wants an easy way to move his objects around. Place them where they matter to him.He wants a quick way to tap on an object, gaze at a different location and then tap again to place the object at that location.**Proposed Solution:**Add a new script called TapToPlaceParent or something similar to either the Input or Utilities folder.</Description>
  </Issue>
  <Issue>
    <IssueID>14</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>GazeManager logs error messages for objects lacking OnGazeEnter / OnGazeLeave</Title>
    <CreatedDate>21/04/2016</CreatedDate>
    <ClosedDate>22/04/2016</ClosedDate>
    <IssueLabels />
    <Description>Unity will spam the console error log with the text "SendMessage OnGazeEnter has no receiver!" if no method for OnGazeEnter or OnGazeLeave has been created for the object. This can be mitigated by using the SendMessageOptions.DontRequireReceiver option as the second parameter to the SendMessage method on the GameObject.</Description>
  </Issue>
  <Issue>
    <IssueID>11</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Send messages to objects when the gaze manager hits them</Title>
    <CreatedDate>15/04/2016</CreatedDate>
    <ClosedDate>18/04/2016</ClosedDate>
    <IssueLabels />
    <Description>To allow highlighting objects you look at, let the gaze manager send OnGazeEnter/OnGazeLeave message on the objects the user looks at.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>9</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Add 'FocusedObject' property to GestureManager</Title>
    <CreatedDate>15/04/2016</CreatedDate>
    <ClosedDate>18/04/2016</ClosedDate>
    <IssueLabels />
    <Description>I suggest adding the following property to `GestureManager.cs`:``This allows you to get the currently focused object. In fact the Origami academy tutorial even added this.</Description>
  </Issue>
  <Issue>
    <IssueID>7</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Make classes more extendable</Title>
    <CreatedDate>13/04/2016</CreatedDate>
    <ClosedDate>25/04/2016</ClosedDate>
    <IssueLabels />
    <Code>
40         private Vector3 gazeOrigin; 
41         private Vector3 gazeDirection; 
40         public Vector3 AheadOfGaze{ get { return gazeOrigin+gazeDirection; } }


Problem: 
1. By changing the GazeManager Gina needs to propagate this change to all customers using her scripts. 
2. Changing parts of the HoloToolkit itself locks Gina out from future updates and requires clients to change their HoloToolkit too (removing the 'drop-in-and-run' factor)

**Proposed solution:**
Make classes _partial_. Partial classes allow Gina to extend them using her own scripts and export her packages as a drop in component working on top of the base toolkit.
In _GinaGazeManager.cs_:


public partial class GazeManager{
 public Vector3 AheadOfGaze{ get { return gazeOrigin+gazeDirection; } }
}
`</Code>
    <Description>**Scenarios:**Gina is a developer. She wants to extend the GazeManager to provide a property for a field directly in front of the users gaze.Desired code``</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>6</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Make HoloToolkit feature folders more modular</Title>
    <CreatedDate>12/04/2016</CreatedDate>
    <ClosedDate>21/04/2016</ClosedDate>
    <IssueLabels />
    <Description>**Scenarios:**1. Gina is a developer. She wants to add a script related to Cursors.    She should be able to add the script file, prefabs, tests, related materials etc. all into the Assets\HoloToolkit\Input folder aka feature folder. This makes the folder more compartmentalized while contributing.2. David is a designer and he only wants to keep specific feature folders from the HoloToolkit.    The folder structure should be modular enough so users can delete not needed ones easily.**Proposed folder structure:**Assets\HoloToolkit-------------------------&gt; Input----------------------------------&gt; Input \ Scripts----------------------------------&gt; Input \ Materials----------------------------------&gt; Input \ Prefabs----------------------------------&gt; Input \ Tests-------------------------&gt; Sharing----------------------------------&gt; Sharing \ Scripts----------------------------------&gt; Sharing \ Editor----------------------------------&gt; Sharing \ Prefabs----------------------------------&gt; Sharing \ Plugins----------------------------------&gt; Sharing \ TestsOther folders will match a similar layout.Dependencies between folders will be documented.</Description>
    <PullRequests />
  </Issue>
  <Issue>
    <IssueID>4</IssueID>
    <RepoID>MixedRealityToolkit-UnityWebScrap</RepoID>
    <IssueAssignees />
    <Title>Create unified Spatial Mapping Components</Title>
    <CreatedDate>29/03/2016</CreatedDate>
    <ClosedDate>06/04/2016</ClosedDate>
    <IssueLabels />
    <Description>We should have components to handle rendering and creating colliders for spatial mapping.These components should be usable by default but customizable to what most people need. Additionally, we should have heuristics to handle Tracking Lost and moving far away from a placed observer intelligently instead of just removing the meshes.</Description>
    <PullRequests />
  </Issue>
</Issues>